cscope 15 $HOME/6.828/lab -q 0000005928 0000673630
	@boot/main.c

1 
	~<öc/x86.h
>

2 
	~<öc/ñf.h
>

32 
	#SECTSIZE
 512

	)

33 
	#ELFHDR
 ((
Elf
 *) 0x10000)

34 

	)

35 
ªad£˘
(*, 
uöt32_t
);

36 
ªad£g
(
uöt32_t
, uint32_t, uint32_t);

39 
	$boŸmaö
()

41 
Proghdr
 *
ph
, *
ïh
;

44 
	`ªad£g
((
uöt32_t
Ë
ELFHDR
, 
SECTSIZE
*8, 0);

47 i‡(
ELFHDR
->
e_magic
 !
ELF_MAGIC
)

48 
bad
;

51 
ph
 = (
Proghdr
 *Ë((
uöt8_t
 *Ë
ELFHDR
 + ELFHDR->
e_phoff
);

52 
ïh
 = 
ph
 + 
ELFHDR
->
e_phnum
;

53 ; 
ph
 < 
ïh
;Öh++)

56 
	`ªad£g
(
ph
->
p_∑
,Öh->
p_memsz
,Öh->
p_off£t
);

60 (((*)()Ë(
ELFHDR
->
e_íåy
))();

62 
bad
:

63 
	`outw
(0x8A00, 0x8A00);

64 
	`outw
(0x8A00, 0x8E00);

67 
	}
}

72 
	$ªad£g
(
uöt32_t
 
∑
, uöt32_à
cou¡
, uöt32_à
off£t
)

74 
uöt32_t
 
íd_∑
;

76 
íd_∑
 = 
∑
 + 
cou¡
;

79 
∑
 &~(
SECTSIZE
 - 1);

82 
off£t
 = (off£à/ 
SECTSIZE
) + 1;

87 
∑
 < 
íd_∑
) {

92 
	`ªad£˘
((
uöt8_t
*Ë
∑
, 
off£t
);

93 
∑
 +
SECTSIZE
;

94 
off£t
++;

96 
	}
}

99 
	$waôdisk
()

102 (
	`öb
(0x1F7) & 0xC0) != 0x40)

104 
	}
}

107 
	$ªad£˘
(*
d°
, 
uöt32_t
 
off£t
)

110 
	`waôdisk
();

112 
	`outb
(0x1F2, 1);

113 
	`outb
(0x1F3, 
off£t
);

114 
	`outb
(0x1F4, 
off£t
 >> 8);

115 
	`outb
(0x1F5, 
off£t
 >> 16);

116 
	`outb
(0x1F6, (
off£t
 >> 24) | 0xE0);

117 
	`outb
(0x1F7, 0x20);

120 
	`waôdisk
();

123 
	`ö¶
(0x1F0, 
d°
, 
SECTSIZE
/4);

124 
	}
}

	@fs/bc.c

2 
	~"fs.h
"

6 
	$diskaddr
(
uöt32_t
 
blockno
)

8 i‡(
blockno
 =0 || (
su≥r
 && blocknÿ>su≥r->
s_nblocks
))

9 
	`∑nic
("bad blockÇumbî %08x i¿diskaddr", 
blockno
);

10  (*Ë(
DISKMAP
 + 
blockno
 * 
BLKSIZE
);

11 
	}
}

16 
	$bc_pgÁu…
(
UTøp‰ame
 *
utf
)

18 *
addr
 = (*Ë
utf
->
utf_Áu…_va
;

19 
uöt32_t
 
blockno
 = ((uöt32_t)
addr
 - 
DISKMAP
Ë/ 
BLKSIZE
;

20 
r
;

23 i‡(
addr
 < (*)
DISKMAP
 ||ádd∏>(*)(DISKMAP + 
DISKSIZE
))

24 
	`∑nic
("page fault in FS:Éip %08x, va %08x,Érr %04x",

25 
utf
->
utf_eù
, 
addr
, utf->
utf_îr
);

28 i‡(
su≥r
 && 
blockno
 >su≥r->
s_nblocks
)

29 
	`∑nic
("ªadögÇ⁄-exi°íàblock %08x\n", 
blockno
);

37 
	}
}

41 
	$bc_öô
()

43 
Su≥r
 
su≥r
;

44 
	`£t_pgÁu…_h™dÀr
(
bc_pgÁu…
);

47 
	`memmove
(&
su≥r
, 
	`diskaddr
(1),  super);

48 
	}
}

	@fs/fs.c

1 
	~<öc/°rög.h
>

3 
	~"fs.h
"

11 
	$check_su≥r
()

13 i‡(
su≥r
->
s_magic
 !
FS_MAGIC
)

14 
	`∑nic
("bad file system magicÇumber");

16 i‡(
su≥r
->
s_nblocks
 > 
DISKSIZE
/
BLKSIZE
)

17 
	`∑nic
("file system isÅooÜarge");

19 
	`˝rötf
("superblock is good\n");

20 
	}
}

29 
	$fs_öô
()

31 
	`°©ic_as£π
((
Fûe
) == 256);

34 i‡(
	`ide_¥obe_disk1
())

35 
	`ide_£t_disk
(1);

37 
	`ide_£t_disk
(0);

39 
	`bc_öô
();

42 
su≥r
 = 
	`diskaddr
(1);

43 
	`check_su≥r
();

44 
	}
}

63 
	$fûe_block_wÆk
(
Fûe
 *
f
, 
uöt32_t
 
fûebno
, uöt32_à**
µdiskbno
, 
boﬁ
 
Æloc
)

65 
r
;

66 
uöt32_t
 *
±r
;

67 *
blk
;

69 i‡(
fûebno
 < 
NDIRECT
)

70 
±r
 = &
f
->
f_dúe˘
[
fûebno
];

71 i‡(
fûebno
 < 
NDIRECT
 + 
NINDIRECT
) {

72 i‡(
f
->
f_ödúe˘
 == 0) {

73  -
E_NOT_FOUND
;

75 
±r
 = (
uöt32_t
*)
	`diskaddr
(
f
->
f_ödúe˘
Ë+ 
fûebno
 - 
NDIRECT
;

77  -
E_INVAL
;

79 *
µdiskbno
 = 
±r
;

81 
	}
}

91 
	$fûe_gë_block
(
Fûe
 *
f
, 
uöt32_t
 
fûebno
, **
blk
)

93 
r
;

94 
uöt32_t
 *
±r
;

96 i‡((
r
 = 
	`fûe_block_wÆk
(
f
, 
fûebno
, &
±r
, 1)) < 0)

97  
r
;

98 i‡(*
±r
 == 0) {

99  -
E_NOT_FOUND
;

101 *
blk
 = 
	`diskaddr
(*
±r
);

103 
	}
}

110 
	$dú_lookup
(
Fûe
 *
dú
, c⁄° *
«me
, Fûê**
fûe
)

112 
r
;

113 
uöt32_t
 
i
, 
j
, 
nblock
;

114 *
blk
;

115 
Fûe
 *
f
;

120 
	`as£π
((
dú
->
f_size
 % 
BLKSIZE
) == 0);

121 
nblock
 = 
dú
->
f_size
 / 
BLKSIZE
;

122 
i
 = 0; i < 
nblock
; i++) {

123 i‡((
r
 = 
	`fûe_gë_block
(
dú
, 
i
, &
blk
)) < 0)

124  
r
;

125 
f
 = (
Fûe
*Ë
blk
;

126 
j
 = 0; j < 
BLKFILES
; j++)

127 i‡(
	`°rcmp
(
f
[
j
].
f_«me
, 
«me
) == 0) {

128 *
fûe
 = &
f
[
j
];

132  -
E_NOT_FOUND
;

133 
	}
}

138 
	$skù_¶ash
(c⁄° *
p
)

140 *
p
 == '/')

141 
p
++;

142  
p
;

143 
	}
}

152 
	$wÆk_∑th
(c⁄° *
∑th
, 
Fûe
 **
pdú
, Fûê**
pf
, *
œ°ñem
)

154 c⁄° *
p
;

155 
«me
[
MAXNAMELEN
];

156 
Fûe
 *
dú
, *
f
;

157 
r
;

161 
∑th
 = 
	`skù_¶ash
(path);

162 
f
 = &
su≥r
->
s_roŸ
;

163 
dú
 = 0;

164 
«me
[0] = 0;

166 i‡(
pdú
)

167 *
pdú
 = 0;

168 *
pf
 = 0;

169 *
∑th
 != '\0') {

170 
dú
 = 
f
;

171 
p
 = 
∑th
;

172 *
∑th
 != '/' && *path != '\0')

173 
∑th
++;

174 i‡(
∑th
 - 
p
 >
MAXNAMELEN
)

175  -
E_BAD_PATH
;

176 
	`memmove
(
«me
, 
p
, 
∑th
 -Ö);

177 
«me
[
∑th
 - 
p
] = '\0';

178 
∑th
 = 
	`skù_¶ash
(path);

180 i‡(
dú
->
f_ty≥
 !
FTYPE_DIR
)

181  -
E_NOT_FOUND
;

183 i‡((
r
 = 
	`dú_lookup
(
dú
, 
«me
, &
f
)) < 0) {

184 i‡(
r
 =-
E_NOT_FOUND
 && *
∑th
 == '\0') {

185 i‡(
pdú
)

186 *
pdú
 = 
dú
;

187 i‡(
œ°ñem
)

188 
	`°r˝y
(
œ°ñem
, 
«me
);

189 *
pf
 = 0;

191  
r
;

195 i‡(
pdú
)

196 *
pdú
 = 
dú
;

197 *
pf
 = 
f
;

199 
	}
}

209 
	$fûe_›í
(c⁄° *
∑th
, 
Fûe
 **
pf
)

211  
	`wÆk_∑th
(
∑th
, 0, 
pf
, 0);

212 
	}
}

217 
ssize_t


218 
	$fûe_ªad
(
Fûe
 *
f
, *
buf
, 
size_t
 
cou¡
, 
off_t
 
off£t
)

220 
r
, 
bn
;

221 
off_t
 
pos
;

222 *
blk
;

224 i‡(
off£t
 >
f
->
f_size
)

227 
cou¡
 = 
	`MIN
(cou¡, 
f
->
f_size
 - 
off£t
);

229 
pos
 = 
off£t
;Öo†< off£à+ 
cou¡
; ) {

230 i‡((
r
 = 
	`fûe_gë_block
(
f
, 
pos
 / 
BLKSIZE
, &
blk
)) < 0)

231  
r
;

232 
bn
 = 
	`MIN
(
BLKSIZE
 - 
pos
 % BLKSIZE, 
off£t
 + 
cou¡
 -Öos);

233 
	`memmove
(
buf
, 
blk
 + 
pos
 % 
BLKSIZE
, 
bn
);

234 
pos
 +
bn
;

235 
buf
 +
bn
;

238  
cou¡
;

239 
	}
}

	@fs/fs.h

1 
	~<öc/fs.h
>

2 
	~<öc/lib.h
>

4 
	#SECTSIZE
 512

5 
	#BLKSECTS
 (
BLKSIZE
 / 
SECTSIZE
)

6 

	)

9 
	#DISKMAP
 0x10000000

	)

12 
	#DISKSIZE
 0xC0000000

	)

14 
Su≥r
 *
	gsu≥r
;

15 
uöt32_t
 *
	gbôm≠
;

18 
boﬁ
 
ide_¥obe_disk1
();

19 
ide_£t_disk
(
diskno
);

20 
ide_ªad
(
uöt32_t
 
£˙o
, *
d°
, 
size_t
 
n£cs
);

21 
ide_wrôe
(
uöt32_t
 
£˙o
, c⁄° *
§c
, 
size_t
 
n£cs
);

24 * 
diskaddr
(
uöt32_t
 
blockno
);

25 
boﬁ
 
va_is_m≠≥d
(*
va
);

26 
boﬁ
 
va_is_dúty
(*
va
);

27 
Êush_block
(*
addr
);

28 
bc_öô
();

31 
fs_öô
();

32 
fûe_gë_block
(
Fûe
 *
f
, 
uöt32_t
 
fûe_blockno
, **
pblk
);

33 
fûe_¸óã
(c⁄° *
∑th
, 
Fûe
 **
f
);

34 
fûe_›í
(c⁄° *
∑th
, 
Fûe
 **
f
);

35 
ssize_t
 
fûe_ªad
(
Fûe
 *
f
, *
buf
, 
size_t
 
cou¡
, 
off_t
 
off£t
);

36 
fûe_wrôe
(
Fûe
 *
f
, c⁄° *
buf
, 
size_t
 
cou¡
, 
off_t
 
off£t
);

37 
fûe_£t_size
(
Fûe
 *
f
, 
off_t
 
√wsize
);

38 
fûe_Êush
(
Fûe
 *
f
);

39 
fûe_ªmove
(c⁄° *
∑th
);

40 
fs_sync
();

43 
boﬁ
 
block_is_‰ì
(
uöt32_t
 
blockno
);

44 
Æloc_block
();

47 
fs_ã°
();

	@fs/fsformat.c

6 
	#off_t
 
xxx_off_t


	)

7 
	#boﬁ
 
xxx_boﬁ


	)

8 
	~<as£π.h
>

9 
	~<î∫o.h
>

10 
	~<f˙é.h
>

11 
	~<öây≥s.h
>

12 
	~<°d¨g.h
>

13 
	~<°dio.h
>

14 
	~<°dlib.h
>

15 
	~<°rög.h
>

16 
	~<uni°d.h
>

17 
	~<sys/mm™.h
>

18 
	~<sys/°©.h
>

19 
	~<sys/ty≥s.h
>

20 #unde‡
off_t


21 #unde‡
boﬁ


25 
	#JOS_INC_TYPES_H


	)

27 
uöt32_t
 
	tphyßddr_t
;

28 
uöt32_t
 
	toff_t
;

29 
	tboﬁ
;

31 
	~<öc/mmu.h
>

32 
	~<öc/fs.h
>

34 
	#ROUNDUP
(
n
, 
v
Ë(“Ë- 1 + (vË- (“Ë- 1Ë% (v))

	)

35 
	#MAX_DIR_ENTS
 128

	)

37 
	sDú


39 
Fûe
 *
	mf
;

40 
Fûe
 *
	míts
;

41 
	mn
;

44 
uöt32_t
 
	gnblocks
;

45 *
	gdiskm≠
, *
	gdiskpos
;

46 
Su≥r
 *
	gsu≥r
;

47 
uöt32_t
 *
	gbôm≠
;

50 
	$∑nic
(c⁄° *
fmt
, ...)

52 
va_li°
 
≠
;

54 
	`va_°¨t
(
≠
, 
fmt
);

55 
	`vÂrötf
(
°dîr
, 
fmt
, 
≠
);

56 
	`va_íd
(
≠
);

57 
	`Âutc
('\n', 
°dîr
);

58 
	`ab‹t
();

59 
	}
}

62 
	$ªadn
(
f
, *
out
, 
size_t
 
n
)

64 
size_t
 
p
 = 0;

65 
p
 < 
n
) {

66 
size_t
 
m
 = 
	`ªad
(
f
, 
out
 + 
p
, 
n
 -Ö);

67 i‡(
m
 < 0)

68 
	`∑nic
("ªad: %s", 
	`°ªº‹
(
î∫o
));

69 i‡(
m
 == 0)

70 
	`∑nic
("read: Unexpected EOF");

71 
p
 +
m
;

73 
	}
}

75 
uöt32_t


76 
	$blockof
(*
pos
)

78  ((*)
pos
 - 
diskm≠
Ë/ 
BLKSIZE
;

79 
	}
}

82 
	$Æloc
(
uöt32_t
 
byãs
)

84 *
°¨t
 = 
diskpos
;

85 
diskpos
 +
	`ROUNDUP
(
byãs
, 
BLKSIZE
);

86 i‡(
	`blockof
(
diskpos
Ë>
nblocks
)

87 
	`∑nic
("out of disk blocks");

88  
°¨t
;

89 
	}
}

92 
	$›ídisk
(c⁄° *
«me
)

94 
r
, 
diskfd
, 
nbôblocks
;

96 i‡((
diskfd
 = 
	`›í
(
«me
, 
O_RDWR
 | 
O_CREAT
, 0666)) < 0)

97 
	`∑nic
("›í %s: %s", 
«me
, 
	`°ªº‹
(
î∫o
));

99 i‡((
r
 = 
	`·runˇã
(
diskfd
, 0)) < 0

100 || (
r
 = 
	`·runˇã
(
diskfd
, 
nblocks
 * 
BLKSIZE
)) < 0)

101 
	`∑nic
("åunˇã %s: %s", 
«me
, 
	`°ªº‹
(
î∫o
));

103 i‡((
diskm≠
 = 
	`mm≠
(
NULL
, 
nblocks
 * 
BLKSIZE
, 
PROT_READ
|
PROT_WRITE
,

104 
MAP_SHARED
, 
diskfd
, 0)Ë=
MAP_FAILED
)

105 
	`∑nic
("mm≠ %s: %s", 
«me
, 
	`°ªº‹
(
î∫o
));

107 
	`˛o£
(
diskfd
);

109 
diskpos
 = 
diskm≠
;

110 
	`Æloc
(
BLKSIZE
);

111 
su≥r
 = 
	`Æloc
(
BLKSIZE
);

112 
su≥r
->
s_magic
 = 
FS_MAGIC
;

113 
su≥r
->
s_nblocks
 = 
nblocks
;

114 
su≥r
->
s_roŸ
.
f_ty≥
 = 
FTYPE_DIR
;

115 
	`°r˝y
(
su≥r
->
s_roŸ
.
f_«me
, "/");

117 
nbôblocks
 = (
nblocks
 + 
BLKBITSIZE
 - 1) / BLKBITSIZE;

118 
bôm≠
 = 
	`Æloc
(
nbôblocks
 * 
BLKSIZE
);

119 
	`mem£t
(
bôm≠
, 0xFF, 
nbôblocks
 * 
BLKSIZE
);

120 
	}
}

123 
	$föishdisk
()

125 
r
, 
i
;

127 
i
 = 0; i < 
	`blockof
(
diskpos
); ++i)

128 
bôm≠
[
i
/32] &= ~(1<<(i%32));

130 i‡((
r
 = 
	`msync
(
diskm≠
, 
nblocks
 * 
BLKSIZE
, 
MS_SYNC
)) < 0)

131 
	`∑nic
("msync: %s", 
	`°ªº‹
(
î∫o
));

132 
	}
}

135 
	$föishfûe
(
Fûe
 *
f
, 
uöt32_t
 
°¨t
, uöt32_à
Àn
)

137 
i
;

138 
f
->
f_size
 = 
Àn
;

139 
Àn
 = 
	`ROUNDUP
÷í, 
BLKSIZE
);

140 
i
 = 0; i < 
Àn
 / 
BLKSIZE
 && i < 
NDIRECT
; ++i)

141 
f
->
f_dúe˘
[
i
] = 
°¨t
 + i;

142 i‡(
i
 =
NDIRECT
) {

143 
uöt32_t
 *
öd
 = 
	`Æloc
(
BLKSIZE
);

144 
f
->
f_ödúe˘
 = 
	`blockof
(
öd
);

145 ; 
i
 < 
Àn
 / 
BLKSIZE
; ++i)

146 
öd
[
i
 - 
NDIRECT
] = 
°¨t
 + i;

148 
	}
}

151 
	$°¨tdú
(
Fûe
 *
f
, 
Dú
 *
dout
)

153 
dout
->
f
 = f;

154 
dout
->
íts
 = 
	`mÆloc
(
MAX_DIR_ENTS
 *  *dout->ents);

155 
dout
->
n
 = 0;

156 
	}
}

158 
Fûe
 *

159 
	$dúadd
(
Dú
 *
d
, 
uöt32_t
 
ty≥
, c⁄° *
«me
)

161 
Fûe
 *
out
 = &
d
->
íts
[d->
n
++];

162 i‡(
d
->
n
 > 
MAX_DIR_ENTS
)

163 
	`∑nic
("too many directoryÉntries");

164 
	`°r˝y
(
out
->
f_«me
, 
«me
);

165 
out
->
f_ty≥
 = 
ty≥
;

166  
out
;

167 
	}
}

170 
	$föishdú
(
Dú
 *
d
)

172 
size
 = 
d
->
n
 * (
Fûe
);

173 
Fûe
 *
°¨t
 = 
	`Æloc
(
size
);

174 
	`memmove
(
°¨t
, 
d
->
íts
, 
size
);

175 
	`föishfûe
(
d
->
f
, 
	`blockof
(
°¨t
), 
	`ROUNDUP
(
size
, 
BLKSIZE
));

176 
	`‰ì
(
d
->
íts
);

177 
d
->
íts
 = 
NULL
;

178 
	}
}

181 
	$wrôefûe
(
Dú
 *
dú
, c⁄° *
«me
)

183 
r
, 
fd
;

184 
Fûe
 *
f
;

185 
°©
 
°
;

186 c⁄° *
œ°
;

187 *
°¨t
;

189 i‡((
fd
 = 
	`›í
(
«me
, 
O_RDONLY
)) < 0)

190 
	`∑nic
("›í %s: %s", 
«me
, 
	`°ªº‹
(
î∫o
));

191 i‡((
r
 = 
	`f°©
(
fd
, &
°
)) < 0)

192 
	`∑nic
("°© %s: %s", 
«me
, 
	`°ªº‹
(
î∫o
));

193 i‡(!
	`S_ISREG
(
°
.
°_mode
))

194 
	`∑nic
("%†i†nŸáÑeguœ∏fûe", 
«me
);

195 i‡(
°
.
°_size
 >
MAXFILESIZE
)

196 
	`∑nic
("%†toÿœrge", 
«me
);

198 
œ°
 = 
	`°ºchr
(
«me
, '/');

199 i‡(
œ°
)

200 
œ°
++;

202 
œ°
 = 
«me
;

204 
f
 = 
	`dúadd
(
dú
, 
FTYPE_REG
, 
œ°
);

205 
°¨t
 = 
	`Æloc
(
°
.
°_size
);

206 
	`ªadn
(
fd
, 
°¨t
, 
°
.
°_size
);

207 
	`föishfûe
(
f
, 
	`blockof
(
°¨t
), 
°
.
°_size
);

208 
	`˛o£
(
fd
);

209 
	}
}

212 
	$ußge
()

214 
	`Ârötf
(
°dîr
, "Usage: fsformat fs.img NBLOCKS files...\n");

215 
	`exô
(2);

216 
	}
}

219 
	$maö
(
¨gc
, **
¨gv
)

221 
i
;

222 *
s
;

223 
Dú
 
roŸ
;

225 
	`as£π
(
BLKSIZE
 % (
Fûe
) == 0);

227 i‡(
¨gc
 < 3)

228 
	`ußge
();

230 
nblocks
 = 
	`°πﬁ
(
¨gv
[2], &
s
, 0);

231 i‡(*
s
 || s =
¨gv
[2] || 
nblocks
 < 2 ||Çblocks > 1024)

232 
	`ußge
();

234 
	`›ídisk
(
¨gv
[1]);

236 
	`°¨tdú
(&
su≥r
->
s_roŸ
, &
roŸ
);

237 
i
 = 3; i < 
¨gc
; i++)

238 
	`wrôefûe
(&
roŸ
, 
¨gv
[
i
]);

239 
	`föishdú
(&
roŸ
);

241 
	`föishdisk
();

243 
	}
}

	@fs/ide.c

7 
	~"fs.h
"

8 
	~<öc/x86.h
>

10 
	#IDE_BSY
 0x80

	)

11 
	#IDE_DRDY
 0x40

	)

12 
	#IDE_DF
 0x20

	)

13 
	#IDE_ERR
 0x01

	)

15 
	gdiskno
 = 1;

18 
	$ide_waô_ªady
(
boﬁ
 
check_îr‹
)

20 
r
;

22 ((
r
 = 
	`öb
(0x1F7)Ë& (
IDE_BSY
|
IDE_DRDY
)) != IDE_DRDY)

25 i‡(
check_îr‹
 && (
r
 & (
IDE_DF
|
IDE_ERR
)) != 0)

28 
	}
}

30 
boﬁ


31 
	$ide_¥obe_disk1
()

33 
r
, 
x
;

36 
	`ide_waô_ªady
(0);

39 
	`outb
(0x1F6, 0xE0 | (1<<4));

42 
x
 = 0;

43 
x
 < 1000 && ((
r
 = 
	`öb
(0x1F7)Ë& (
IDE_BSY
|
IDE_DF
|
IDE_ERR
)) != 0;

44 
x
++)

48 
	`outb
(0x1F6, 0xE0 | (0<<4));

50 
	`˝rötf
("Devi˚ 1Öª£n˚: %d\n", (
x
 < 1000));

51  (
x
 < 1000);

52 
	}
}

55 
	$ide_£t_disk
(
d
)

57 i‡(
d
 != 0 && d != 1)

58 
	`∑nic
("bad diskÇumber");

59 
diskno
 = 
d
;

60 
	}
}

63 
	$ide_ªad
(
uöt32_t
 
£˙o
, *
d°
, 
size_t
 
n£cs
)

65 
r
;

67 
	`as£π
(
n£cs
 <= 256);

69 
	`ide_waô_ªady
(0);

71 
	`outb
(0x1F2, 
n£cs
);

72 
	`outb
(0x1F3, 
£˙o
 & 0xFF);

73 
	`outb
(0x1F4, (
£˙o
 >> 8) & 0xFF);

74 
	`outb
(0x1F5, (
£˙o
 >> 16) & 0xFF);

75 
	`outb
(0x1F6, 0xE0 | ((
diskno
&1)<<4Ë| ((
£˙o
>>24)&0x0F));

76 
	`outb
(0x1F7, 0x20);

78 ; 
n£cs
 > 0;Ç£cs--, 
d°
 +
SECTSIZE
) {

79 i‡((
r
 = 
	`ide_waô_ªady
(1)) < 0)

80  
r
;

81 
	`ö¶
(0x1F0, 
d°
, 
SECTSIZE
/4);

85 
	}
}

88 
	$ide_wrôe
(
uöt32_t
 
£˙o
, c⁄° *
§c
, 
size_t
 
n£cs
)

90 
r
;

92 
	`as£π
(
n£cs
 <= 256);

94 
	`ide_waô_ªady
(0);

96 
	`outb
(0x1F2, 
n£cs
);

97 
	`outb
(0x1F3, 
£˙o
 & 0xFF);

98 
	`outb
(0x1F4, (
£˙o
 >> 8) & 0xFF);

99 
	`outb
(0x1F5, (
£˙o
 >> 16) & 0xFF);

100 
	`outb
(0x1F6, 0xE0 | ((
diskno
&1)<<4Ë| ((
£˙o
>>24)&0x0F));

101 
	`outb
(0x1F7, 0x30);

103 ; 
n£cs
 > 0;Ç£cs--, 
§c
 +
SECTSIZE
) {

104 i‡((
r
 = 
	`ide_waô_ªady
(1)) < 0)

105  
r
;

106 
	`out¶
(0x1F0, 
§c
, 
SECTSIZE
/4);

110 
	}
}

	@fs/serv.c

6 
	~<öc/x86.h
>

7 
	~<öc/°rög.h
>

9 
	~"fs.h
"

12 
	#debug
 0

	)

32 
	sO≥nFûe
 {

33 
uöt32_t
 
	mo_fûeid
;

34 
Fûe
 *
	mo_fûe
;

35 
	mo_mode
;

36 
Fd
 *
	mo_fd
;

40 
	#MAXOPEN
 1024

	)

41 
	#FILEVA
 0xD0000000

	)

44 
O≥nFûe
 
	g›íèb
[
MAXOPEN
] = {

49 
Fsùc
 *
	gf§eq
 = (Fsipc *)0x0ffff000;

52 
	$£rve_öô
()

54 
i
;

55 
uöçå_t
 
va
 = 
FILEVA
;

56 
i
 = 0; i < 
MAXOPEN
; i++) {

57 
›íèb
[
i
].
o_fûeid
 = i;

58 
›íèb
[
i
].
o_fd
 = (
Fd
*Ë
va
;

59 
va
 +
PGSIZE
;

61 
	}
}

65 
	$›ífûe_Æloc
(
O≥nFûe
 **
o
)

67 
i
, 
r
;

70 
i
 = 0; i < 
MAXOPEN
; i++) {

71 
	`∑gîef
(
›íèb
[
i
].
o_fd
)) {

73 i‡((
r
 = 
	`sys_∑ge_Æloc
(0, 
›íèb
[
i
].
o_fd
, 
PTE_P
|
PTE_U
|
PTE_W
)) < 0)

74  
r
;

77 
›íèb
[
i
].
o_fûeid
 +
MAXOPEN
;

78 *
o
 = &
›íèb
[
i
];

79 
	`mem£t
(
›íèb
[
i
].
o_fd
, 0, 
PGSIZE
);

80  (*
o
)->
o_fûeid
;

83  -
E_MAX_OPEN
;

84 
	}
}

88 
	$›ífûe_lookup
(
ívid_t
 
ívid
, 
uöt32_t
 
fûeid
, 
O≥nFûe
 **
po
)

90 
O≥nFûe
 *
o
;

92 
o
 = &
›íèb
[
fûeid
 % 
MAXOPEN
];

93 i‡(
	`∑gîef
(
o
->
o_fd
Ë=1 || o->
o_fûeid
 !
fûeid
)

94  -
E_INVAL
;

95 *
po
 = 
o
;

97 
	}
}

103 
	$£rve_›í
(
ívid_t
 
ívid
, 
F§eq_›í
 *
ªq
,

104 **
pg_°‹e
, *
≥rm_°‹e
)

106 
∑th
[
MAXPATHLEN
];

107 
Fûe
 *
f
;

108 
fûeid
;

109 
r
;

110 
O≥nFûe
 *
o
;

112 i‡(
debug
)

113 
	`˝rötf
("£rve_›í %08x %†0x%x\n", 
ívid
, 
ªq
->
ªq_∑th
,Ñeq->
ªq_omode
);

116 
	`memmove
(
∑th
, 
ªq
->
ªq_∑th
, 
MAXPATHLEN
);

117 
∑th
[
MAXPATHLEN
-1] = 0;

120 i‡((
r
 = 
	`›ífûe_Æloc
(&
o
)) < 0) {

121 i‡(
debug
)

122 
	`˝rötf
("›ífûe_Ælo¯Áûed: %e", 
r
);

123  
r
;

125 
fûeid
 = 
r
;

127 i‡(
ªq
->
ªq_omode
 != 0) {

128 i‡(
debug
)

129 
	`˝rötf
("fûe_›í omodê0x%x unsuµ‹ãd", 
ªq
->
ªq_omode
);

130  -
E_INVAL
;

133 i‡((
r
 = 
	`fûe_›í
(
∑th
, &
f
)) < 0) {

134 i‡(
debug
)

135 
	`˝rötf
("fûe_›í faûed: %e", 
r
);

136  
r
;

140 
o
->
o_fûe
 = 
f
;

143 
o
->
o_fd
->
fd_fûe
.
id
 = o->
o_fûeid
;

144 
o
->
o_fd
->
fd_omode
 = 
ªq
->
ªq_omode
 & 
O_ACCMODE
;

145 
o
->
o_fd
->
fd_dev_id
 = 
devfûe
.
dev_id
;

146 
o
->
o_mode
 = 
ªq
->
ªq_omode
;

148 i‡(
debug
)

149 
	`˝rötf
("£ndög suc˚ss,Öagê%08x\n", (
uöçå_t
Ë
o
->
o_fd
);

153 *
pg_°‹e
 = 
o
->
o_fd
;

154 *
≥rm_°‹e
 = 
PTE_P
|
PTE_U
|
PTE_W
|
PTE_SHARE
;

157 
	}
}

165 
	$£rve_ªad
(
ívid_t
 
ívid
, 
Fsùc
 *
ùc
)

167 
F§eq_ªad
 *
ªq
 = &
ùc
->
ªad
;

168 
F§ë_ªad
 *
ªt
 = &
ùc
->
ªadRë
;

170 i‡(
debug
)

171 
	`˝rötf
("£rve_ªad %08x %08x %08x\n", 
ívid
, 
ªq
->
ªq_fûeid
,Ñeq->
ªq_n
);

179 
O≥nFûe
 *
o
;

180 
r
;

182 i‡((
r
 = 
	`›ífûe_lookup
(
ívid
, 
ªq
->
ªq_fûeid
, &
o
)) < 0)

183  
r
;

185 i‡((
r
 = 
	`fûe_ªad
(
o
->
o_fûe
, 
ªt
->
ªt_buf
,

186 
	`MIN
(
ªq
->
ªq_n
,  
ªt
->
ªt_buf
),

187 
o
->
o_fd
->
fd_off£t
)) < 0)

188  
r
;

190 
o
->
o_fd
->
fd_off£t
 +
r
;

191  
r
;

192 
	}
}

199 
	$£rve_°©
(
ívid_t
 
ívid
, 
Fsùc
 *
ùc
)

201 
F§eq_°©
 *
ªq
 = &
ùc
->
°©
;

202 
F§ë_°©
 *
ªt
 = &
ùc
->
°©Rë
;

203 
O≥nFûe
 *
o
;

204 
r
;

206 i‡(
debug
)

207 
	`˝rötf
("£rve_°© %08x %08x\n", 
ívid
, 
ªq
->
ªq_fûeid
);

209 i‡((
r
 = 
	`›ífûe_lookup
(
ívid
, 
ªq
->
ªq_fûeid
, &
o
)) < 0)

210  
r
;

212 
	`°r˝y
(
ªt
->
ªt_«me
, 
o
->
o_fûe
->
f_«me
);

213 
ªt
->
ªt_size
 = 
o
->
o_fûe
->
f_size
;

214 
ªt
->
ªt_isdú
 = (
o
->
o_fûe
->
f_ty≥
 =
FTYPE_DIR
);

216 
	}
}

221 
	$£rve_Êush
(
ívid_t
 
ívid
, 
F§eq_Êush
 *
ªq
)

224 
	}
}

226 (*
	tfsh™dÀr
)(
	tívid_t
 
	tívid
, 
	tFsùc
 *
	tªq
);

228 
fsh™dÀr
 
h™dÀrs
[] = {

231 [
FSREQ_READ
] = 
£rve_ªad
,

232 [
FSREQ_STAT
] = 
£rve_°©
,

233 [
FSREQ_FLUSH
] = (
fsh™dÀr
)
£rve_Êush
,

234 
	}
};

235 
	#NHANDLERS
 ((
h™dÀrs
)/(h™dÀrs[0]))

	)

238 
	$£rve
()

240 
uöt32_t
 
ªq
, 
whom
;

241 
≥rm
, 
r
;

242 *
pg
;

245 
≥rm
 = 0;

246 
ªq
 = 
	`ùc_ªcv
((
öt32_t
 *Ë&
whom
, 
f§eq
, &
≥rm
);

247 i‡(
debug
)

248 
	`˝rötf
("fsÑeq %d from %08x [page %08x: %s]\n",

249 
ªq
, 
whom
, 
uv±
[
	`PGNUM
(
f§eq
)], fsreq);

252 i‡(!(
≥rm
 & 
PTE_P
)) {

253 
	`˝rötf
("InvalidÑequest from %08x:ÇoárgumentÖage\n",

254 
whom
);

258 
pg
 = 
NULL
;

259 i‡(
ªq
 =
FSREQ_OPEN
) {

260 
r
 = 
	`£rve_›í
(
whom
, (
F§eq_›í
*)
f§eq
, &
pg
, &
≥rm
);

261 } i‡(
ªq
 < 
NHANDLERS
 && 
h™dÀrs
[req]) {

262 
r
 = 
h™dÀrs
[
ªq
](
whom
, 
f§eq
);

264 
	`˝rötf
("InvÆidÑeque° codê%d from %08x\n", 
ªq
, 
whom
);

265 
r
 = -
E_INVAL
;

267 
	`ùc_£nd
(
whom
, 
r
, 
pg
, 
≥rm
);

268 
	`sys_∑ge_unm≠
(0, 
f§eq
);

270 
	}
}

273 
	$umaö
(
¨gc
, **
¨gv
)

275 
	`°©ic_as£π
((
Fûe
) == 256);

276 
bö¨y«me
 = "fs";

277 
	`˝rötf
("FS isÑunning\n");

280 
	`outw
(0x8A00, 0x8A00);

281 
	`˝rötf
("FS can do I/O\n");

283 
	`£rve_öô
();

284 
	`fs_öô
();

285 
	`£rve
();

286 
	}
}

	@inc/args.h

1 #i‚de‡
JOS_INC_ARGS_H


2 
	#JOS_INC_ARGS_H


	)

4 
	gArg°©e
;

10 
¨g°¨t
(*
¨gc
, **
¨gv
, 
Arg°©e
 *
¨gs
);

24 
¨g√xt
(
Arg°©e
 *);

31 *
¨g√xtvÆue
(
Arg°©e
 *);

36 *
¨gvÆue
(
Arg°©e
 *);

75 
	sArg°©e
 {

76 *
	m¨gc
;

77 c⁄° **
	m¨gv
;

78 c⁄° *
	mcuørg
;

79 c⁄° *
	m¨gvÆue
;

	@inc/assert.h

3 #i‚de‡
JOS_INC_ASSERT_H


4 
	#JOS_INC_ASSERT_H


	)

6 
	~<öc/°dio.h
>

8 
_w¨n
(const *, , const *, ...);

9 
	$_∑nic
(c⁄° *, , c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

11 
	#w¨n
(...Ë
	`_w¨n
(
__FILE__
, 
__LINE__
, 
__VA_ARGS__
)

	)

12 
	#∑nic
(...Ë
	`_∑nic
(
__FILE__
, 
__LINE__
, 
__VA_ARGS__
)

	)

14 
	#as£π
(
x
) \

15 dÿ{ i‡(!(
x
)Ë
	`∑nic
("as£πi⁄ faûed: %s", #x); 
	}
} 0)

	)

18 
	#°©ic_as£π
(
x
ËxË0: (x):

	)

	@inc/elf.h

1 #i‚de‡
JOS_INC_ELF_H


2 
	#JOS_INC_ELF_H


	)

4 
	#ELF_MAGIC
 0x464C457FU

	)

6 
	sElf
 {

7 
uöt32_t
 
	me_magic
;

8 
uöt8_t
 
	me_ñf
[12];

9 
uöt16_t
 
	me_ty≥
;

10 
uöt16_t
 
	me_machöe
;

11 
uöt32_t
 
	me_vîsi⁄
;

12 
uöt32_t
 
	me_íåy
;

13 
uöt32_t
 
	me_phoff
;

14 
uöt32_t
 
	me_shoff
;

15 
uöt32_t
 
	me_Êags
;

16 
uöt16_t
 
	me_ehsize
;

17 
uöt16_t
 
	me_phítsize
;

18 
uöt16_t
 
	me_phnum
;

19 
uöt16_t
 
	me_shítsize
;

20 
uöt16_t
 
	me_shnum
;

21 
uöt16_t
 
	me_sh°∫dx
;

24 
	sProghdr
 {

25 
uöt32_t
 
	mp_ty≥
;

26 
uöt32_t
 
	mp_off£t
;

27 
uöt32_t
 
	mp_va
;

28 
uöt32_t
 
	mp_∑
;

29 
uöt32_t
 
	mp_fûesz
;

30 
uöt32_t
 
	mp_memsz
;

31 
uöt32_t
 
	mp_Êags
;

32 
uöt32_t
 
	mp_Æign
;

35 
	sSe˘hdr
 {

36 
uöt32_t
 
	msh_«me
;

37 
uöt32_t
 
	msh_ty≥
;

38 
uöt32_t
 
	msh_Êags
;

39 
uöt32_t
 
	msh_addr
;

40 
uöt32_t
 
	msh_off£t
;

41 
uöt32_t
 
	msh_size
;

42 
uöt32_t
 
	msh_lök
;

43 
uöt32_t
 
	msh_öfo
;

44 
uöt32_t
 
	msh_addølign
;

45 
uöt32_t
 
	msh_ítsize
;

49 
	#ELF_PROG_LOAD
 1

	)

52 
	#ELF_PROG_FLAG_EXEC
 1

	)

53 
	#ELF_PROG_FLAG_WRITE
 2

	)

54 
	#ELF_PROG_FLAG_READ
 4

	)

57 
	#ELF_SHT_NULL
 0

	)

58 
	#ELF_SHT_PROGBITS
 1

	)

59 
	#ELF_SHT_SYMTAB
 2

	)

60 
	#ELF_SHT_STRTAB
 3

	)

63 
	#ELF_SHN_UNDEF
 0

	)

	@inc/env.h

3 #i‚de‡
JOS_INC_ENV_H


4 
	#JOS_INC_ENV_H


	)

6 
	~<öc/ty≥s.h
>

7 
	~<öc/å≠.h
>

8 
	~<öc/memœyout.h
>

10 
öt32_t
 
	tívid_t
;

28 
	#LOG2NENV
 10

	)

29 
	#NENV
 (1 << 
LOG2NENV
)

	)

30 
	#ENVX
(
ívid
Ë(”nvidË& (
NENV
 - 1))

	)

33 
	#PRIORITY_HIGH
 0x10000

	)

34 
	#PRIORITY_DEFAULT
 0x1000

	)

35 
	#PRIORITY_MIDDLE
 0x100

	)

36 
	#PRIORITY_LOW
 0x10

	)

40 
	mENV_FREE
 = 0,

41 
	mENV_DYING
,

42 
	mENV_RUNNABLE
,

43 
	mENV_RUNNING
,

44 
	mENV_NOT_RUNNABLE


48 
	eEnvTy≥
 {

49 
	mENV_TYPE_USER
 = 0,

50 
	mENV_TYPE_FS
,

53 
	sEnv
 {

54 
Tøp‰ame
 
	mív_tf
;

55 
Env
 *
	mív_lök
;

56 
ívid_t
 
	mív_id
;

57 
ívid_t
 
	mív_∑ª¡_id
;

58 
EnvTy≥
 
	mív_ty≥
;

59 
	mív_°©us
;

60 
uöt32_t
 
	mív_runs
;

61 
	mív_˝unum
;

64 
pde_t
 *
	mív_pgdú
;

67 *
	mív_pgÁu…_upˇŒ
;

70 
boﬁ
 
	mív_ùc_ªcvög
;

71 *
	mív_ùc_d°va
;

72 
uöt32_t
 
	mív_ùc_vÆue
;

73 
ívid_t
 
	mív_ùc_‰om
;

74 
	mív_ùc_≥rm
;

76 
uöt32_t
 
	mív_¥i‹ôy
;

	@inc/error.h

3 #i‚de‡
JOS_INC_ERROR_H


4 
	#JOS_INC_ERROR_H


	)

8 
	mE_UNSPECIFIED
 = 1,

9 
	mE_BAD_ENV
 = 2,

11 
	mE_INVAL
 = 3,

12 
	mE_NO_MEM
 = 4,

13 
	mE_NO_FREE_ENV
 = 5,

15 
	mE_FAULT
 = 6,

17 
	mE_IPC_NOT_RECV
 = 7,

18 
	mE_EOF
 = 8,

21 
	mE_NO_DISK
 = 9,

22 
	mE_MAX_OPEN
 = 10,

23 
	mE_NOT_FOUND
 = 11,

24 
	mE_BAD_PATH
 = 12,

25 
	mE_FILE_EXISTS
 = 13,

26 
	mE_NOT_EXEC
 = 14,

27 
	mE_NOT_SUPP
 = 15,

29 
	mMAXERROR


	@inc/fd.h

5 #i‚de‡
JOS_INC_FD_H


6 
	#JOS_INC_FD_H


	)

8 
	~<öc/ty≥s.h
>

9 
	~<öc/fs.h
>

11 
	gFd
;

12 
	gSèt
;

13 
	gDev
;

16 
	sDev
 {

17 
	mdev_id
;

18 c⁄° *
	mdev_«me
;

19 
ssize_t
 (*
dev_ªad
)(
Fd
 *
	mfd
, *
	mbuf
, 
size_t
 
	mÀn
);

20 
ssize_t
 (*
dev_wrôe
)(
Fd
 *
	mfd
, c⁄° *
	mbuf
, 
size_t
 
	mÀn
);

21 (*
	mdev_˛o£
)(
Fd
 *
	mfd
);

22 (*
	mdev_°©
)(
Fd
 *
	mfd
, 
Sèt
 *
	m°©
);

23 (*
	mdev_åunc
)(
Fd
 *
	mfd
, 
off_t
 
	mÀngth
);

26 
	sFdFûe
 {

27 
	mid
;

30 
	sFd
 {

31 
	mfd_dev_id
;

32 
off_t
 
	mfd_off£t
;

33 
	mfd_omode
;

36 
FdFûe
 
	mfd_fûe
;

40 
	sSèt
 {

41 
	m°_«me
[
MAXNAMELEN
];

42 
off_t
 
	m°_size
;

43 
	m°_isdú
;

44 
Dev
 *
	m°_dev
;

47 * 
fd2d©a
(
Fd
 *
fd
);

48 
fd2num
(
Fd
 *
fd
);

49 
fd_Æloc
(
Fd
 **
fd_°‹e
);

50 
fd_˛o£
(
Fd
 *
fd
, 
boﬁ
 
mu°_exi°
);

51 
fd_lookup
(
fdnum
, 
Fd
 **
fd_°‹e
);

52 
dev_lookup
(
devid
, 
Dev
 **
dev_°‹e
);

54 
Dev
 
devfûe
;

55 
Dev
 
devc⁄s
;

56 
Dev
 
devpùe
;

	@inc/fs.h

3 #i‚de‡
JOS_INC_FS_H


4 
	#JOS_INC_FS_H


	)

6 
	~<öc/ty≥s.h
>

7 
	~<öc/mmu.h
>

12 
	#BLKSIZE
 
PGSIZE


	)

13 
	#BLKBITSIZE
 (
BLKSIZE
 * 8)

	)

17 
	#MAXNAMELEN
 128

	)

20 
	#MAXPATHLEN
 1024

	)

23 
	#NDIRECT
 10

	)

25 
	#NINDIRECT
 (
BLKSIZE
 / 4)

	)

27 
	#MAXFILESIZE
 ((
NDIRECT
 + 
NINDIRECT
Ë* 
BLKSIZE
)

	)

29 
	sFûe
 {

30 
	mf_«me
[
MAXNAMELEN
];

31 
off_t
 
	mf_size
;

32 
uöt32_t
 
	mf_ty≥
;

36 
uöt32_t
 
	mf_dúe˘
[
NDIRECT
];

37 
uöt32_t
 
	mf_ödúe˘
;

41 
uöt8_t
 
	mf_∑d
[256 - 
MAXNAMELEN
 - 8 - 4*
NDIRECT
 - 4];

42 } 
__©åibuã__
((
∑cked
));

45 
	#BLKFILES
 (
BLKSIZE
 / (
Fûe
))

	)

48 
	#FTYPE_REG
 0

49 
	#FTYPE_DIR
 1

50 

	)

54 
	#FS_MAGIC
 0x4A0530AE

55 

	)

56 
	sSu≥r
 {

57 
uöt32_t
 
	ms_magic
;

58 
uöt32_t
 
	ms_nblocks
;

59 
Fûe
 
	ms_roŸ
;

64 
	mFSREQ_OPEN
 = 1,

65 
	mFSREQ_SET_SIZE
,

67 
	mFSREQ_READ
,

68 
	mFSREQ_WRITE
,

70 
	mFSREQ_STAT
,

71 
	mFSREQ_FLUSH
,

72 
	mFSREQ_REMOVE
,

73 
	mFSREQ_SYNC


76 
	uFsùc
 {

77 
	sF§eq_›í
 {

78 
	mªq_∑th
[
MAXPATHLEN
];

79 
	mªq_omode
;

80 } 
	m›í
;

81 
	sF§eq_£t_size
 {

82 
	mªq_fûeid
;

83 
off_t
 
	mªq_size
;

84 } 
	m£t_size
;

85 
	sF§eq_ªad
 {

86 
	mªq_fûeid
;

87 
size_t
 
	mªq_n
;

88 } 
	mªad
;

89 
	sF§ë_ªad
 {

90 
	mªt_buf
[
PGSIZE
];

91 } 
	mªadRë
;

92 
	sF§eq_wrôe
 {

93 
	mªq_fûeid
;

94 
size_t
 
	mªq_n
;

95 
	mªq_buf
[
PGSIZE
 - ((Ë+ (
size_t
))];

96 } 
	mwrôe
;

97 
	sF§eq_°©
 {

98 
	mªq_fûeid
;

99 } 
	m°©
;

100 
	sF§ë_°©
 {

101 
	mªt_«me
[
MAXNAMELEN
];

102 
off_t
 
	mªt_size
;

103 
	mªt_isdú
;

104 } 
	m°©Rë
;

105 
	sF§eq_Êush
 {

106 
	mªq_fûeid
;

107 } 
	mÊush
;

108 
	sF§eq_ªmove
 {

109 
	mªq_∑th
[
MAXPATHLEN
];

110 } 
	mªmove
;

113 
	m_∑d
[
PGSIZE
];

	@inc/kbdreg.h

1 #i‚de‡
JOS_KBDREG_H


2 
	#JOS_KBDREG_H


	)

5 
	#KEY_HOME
 0xE0

	)

6 
	#KEY_END
 0xE1

	)

7 
	#KEY_UP
 0xE2

	)

8 
	#KEY_DN
 0xE3

	)

9 
	#KEY_LF
 0xE4

	)

10 
	#KEY_RT
 0xE5

	)

11 
	#KEY_PGUP
 0xE6

	)

12 
	#KEY_PGDN
 0xE7

	)

13 
	#KEY_INS
 0xE8

	)

14 
	#KEY_DEL
 0xE9

	)

19 
	#KBSTATP
 0x64

	)

20 
	#KBS_DIB
 0x01

	)

21 
	#KBS_IBF
 0x02

	)

22 
	#KBS_WARM
 0x04

	)

23 
	#KBS_OCMD
 0x08

	)

24 
	#KBS_NOSEC
 0x10

	)

25 
	#KBS_TERR
 0x20

	)

26 
	#KBS_RERR
 0x40

	)

27 
	#KBS_PERR
 0x80

	)

29 
	#KBCMDP
 0x64

	)

30 
	#KBC_RAMREAD
 0x20

	)

31 
	#KBC_RAMWRITE
 0x60

	)

32 
	#KBC_AUXDISABLE
 0xa7

	)

33 
	#KBC_AUXENABLE
 0xa8

	)

34 
	#KBC_AUXTEST
 0xa9

	)

35 
	#KBC_KBDECHO
 0xd2

	)

36 
	#KBC_AUXECHO
 0xd3

	)

37 
	#KBC_AUXWRITE
 0xd4

	)

38 
	#KBC_SELFTEST
 0xØ

	)

39 
	#KBC_KBDTEST
 0xab

	)

40 
	#KBC_KBDDISABLE
 0xad

	)

41 
	#KBC_KBDENABLE
 0x´

	)

42 
	#KBC_PULSE0
 0x„

	)

43 
	#KBC_PULSE1
 0xfd

	)

44 
	#KBC_PULSE2
 0xfb

	)

45 
	#KBC_PULSE3
 0xf7

	)

47 
	#KBDATAP
 0x60

	)

48 
	#KBOUTP
 0x60

	)

50 
	#K_RDCMDBYTE
 0x20

	)

51 
	#K_LDCMDBYTE
 0x60

	)

53 
	#KC8_TRANS
 0x40

	)

54 
	#KC8_MDISABLE
 0x20

	)

55 
	#KC8_KDISABLE
 0x10

	)

56 
	#KC8_IGNSEC
 0x08

	)

57 
	#KC8_CPU
 0x04

	)

58 
	#KC8_MENABLE
 0x02

	)

59 
	#KC8_KENABLE
 0x01

	)

60 
	#CMDBYTE
 (
KC8_TRANS
|
KC8_CPU
|
KC8_MENABLE
|
KC8_KENABLE
)

	)

63 
	#KBC_RESET
 0xFF

	)

64 
	#KBC_RESEND
 0xFE

	)

65 
	#KBC_SETDEFAULT
 0xF6

	)

66 
	#KBC_DISABLE
 0xF5

	)

67 
	#KBC_ENABLE
 0xF4

	)

68 
	#KBC_TYPEMATIC
 0xF3

	)

69 
	#KBC_SETTABLE
 0xF0

	)

70 
	#KBC_MODEIND
 0xED

	)

71 
	#KBC_ECHO
 0xEE

	)

74 
	#KBR_EXTENDED
 0xE0

	)

75 
	#KBR_RESEND
 0xFE

	)

76 
	#KBR_ACK
 0xFA

	)

77 
	#KBR_OVERRUN
 0x00

	)

78 
	#KBR_FAILURE
 0xFD

	)

79 
	#KBR_BREAK
 0xF0

	)

80 
	#KBR_RSTDONE
 0xAA

	)

81 
	#KBR_ECHO
 0xEE

	)

	@inc/lib.h

7 #i‚de‡
JOS_INC_LIB_H


8 
	#JOS_INC_LIB_H
 1

	)

10 
	~<öc/ty≥s.h
>

11 
	~<öc/°dio.h
>

12 
	~<öc/°d¨g.h
>

13 
	~<öc/°rög.h
>

14 
	~<öc/îr‹.h
>

15 
	~<öc/as£π.h
>

16 
	~<öc/ív.h
>

17 
	~<öc/memœyout.h
>

18 
	~<öc/sysˇŒ.h
>

19 
	~<öc/å≠.h
>

20 
	~<öc/fs.h
>

21 
	~<öc/fd.h
>

22 
	~<öc/¨gs.h
>

24 
	#USED
(
x
Ë()(x)

	)

27 
umaö
(
¨gc
, **
¨gv
);

30 c⁄° *
bö¨y«me
;

31 c⁄° vﬁ©ûê
Env
 *
thi£nv
;

32 c⁄° vﬁ©ûê
Env
 
ívs
[
NENV
];

33 c⁄° vﬁ©ûê
PageInfo
 
∑ges
[];

36 
exô
();

39 
£t_pgÁu…_h™dÀr
((*
h™dÀr
)(
UTøp‰ame
 *
utf
));

42 * 
	`ªadlöe
(c⁄° *
buf
);

45 
	`sys_˝uts
(c⁄° *
°rög
, 
size_t
 
Àn
);

46 
	`sys_cgëc
();

47 
ívid_t
 
	`sys_gëívid
();

48 
	`sys_ív_de°roy
(
ívid_t
);

49 
	`sys_yõld
();

50 
ívid_t
 
	`sys_exof‹k
();

51 
	`sys_ív_£t_°©us
(
ívid_t
 
ív
, 
°©us
);

52 
	`sys_ív_£t_å≠‰ame
(
ívid_t
 
ív
, 
Tøp‰ame
 *
tf
);

53 
	`sys_ív_£t_pgÁu…_upˇŒ
(
ívid_t
 
ív
, *
upˇŒ
);

54 
	`sys_∑ge_Æloc
(
ívid_t
 
ív
, *
pg
, 
≥rm
);

55 
	`sys_∑ge_m≠
(
ívid_t
 
§c_ív
, *
§c_pg
,

56 
ívid_t
 
d°_ív
, *
d°_pg
, 
≥rm
);

57 
	`sys_∑ge_unm≠
(
ívid_t
 
ív
, *
pg
);

58 
	`sys_ùc_åy_£nd
(
ívid_t
 
to_ív
, 
uöt32_t
 
vÆue
, *
pg
, 
≥rm
);

59 
	`sys_ùc_ªcv
(*
rcv_pg
);

62 
	`sys_ív_£t_¥i‹ôy
(
ívid_t
 
ívid
,
¥i‹ôy
);

65 
__ölöe
 
ívid_t
 
	`__©åibuã__
((
Æways_ölöe
))

66 
	$sys_exof‹k
()

68 
ívid_t
 
ªt
;

69 
__asm
 
	`__vﬁ©ûe
("int %2"

70 : "˜" (
ªt
)

71 : "a" (
SYS_exof‹k
),

72 "i" (
T_SYSCALL
)

74  
ªt
;

75 
	}
}

78 
ùc_£nd
(
ívid_t
 
to_ív
, 
uöt32_t
 
vÆue
, *
pg
, 
≥rm
);

79 
öt32_t
 
ùc_ªcv
(
ívid_t
 *
‰om_ív_°‹e
, *
pg
, *
≥rm_°‹e
);

80 
ívid_t
 
ùc_föd_ív
(
EnvTy≥
 
ty≥
);

83 
	#PTE_SHARE
 0x400

	)

84 
ívid_t
 
f‹k
();

85 
ívid_t
 
sf‹k
();

88 
˛o£
(
fd
);

89 
ssize_t
 
ªad
(
fd
, *
buf
, 
size_t
 
nbyãs
);

90 
ssize_t
 
wrôe
(
fd
, c⁄° *
buf
, 
size_t
 
nbyãs
);

91 
£ek
(
fd
, 
off_t
 
off£t
);

92 
˛o£_Æl
();

93 
ssize_t
 
ªadn
(
fd
, *
buf
, 
size_t
 
nbyãs
);

94 
dup
(
ﬁdfd
, 
√wfd
);

95 
f°©
(
fd
, 
Sèt
 *
°©buf
);

96 
°©
(c⁄° *
∑th
, 
Sèt
 *
°©buf
);

99 
›í
(c⁄° *
∑th
, 
mode
);

100 
·runˇã
(
fd
, 
off_t
 
size
);

101 
ªmove
(c⁄° *
∑th
);

102 
sync
();

105 
∑gîef
(*
addr
);

109 
ívid_t
 
•awn
(c⁄° *
¥ogøm
, c⁄° **
¨gv
);

110 
ívid_t
 
•aw∆
(c⁄° *
¥ogøm
, c⁄° *
¨g0
, ...);

113 
˝utch¨
(
c
);

114 
gëch¨
();

115 
isc⁄s
(
fd
);

116 
›íc⁄s
();

119 
pùe
(
pùefds
[2]);

120 
pùeis˛o£d
(
pùefd
);

123 
waô
(
ívid_t
 
ív
);

126 
	#O_RDONLY
 0x0000

	)

127 
	#O_WRONLY
 0x0001

	)

128 
	#O_RDWR
 0x0002

	)

129 
	#O_ACCMODE
 0x0003

	)

131 
	#O_CREAT
 0x0100

	)

132 
	#O_TRUNC
 0x0200

	)

133 
	#O_EXCL
 0x0400

	)

134 
	#O_MKDIR
 0x0800

	)

	@inc/memlayout.h

1 #i‚de‡
JOS_INC_MEMLAYOUT_H


2 
	#JOS_INC_MEMLAYOUT_H


	)

4 #i‚de‡
__ASSEMBLER__


5 
	~<öc/ty≥s.h
>

6 
	~<öc/mmu.h
>

15 
	#GD_KT
 0x08

16 
	#GD_KD
 0x10

17 
	#GD_UT
 0x18

18 
	#GD_UD
 0x20

19 
	#GD_TSS0
 0x28

20 

	)

87 
	#KERNBASE
 0xF0000000

	)

92 
	#IOPHYSMEM
 0x0A0000

	)

93 
	#EXTPHYSMEM
 0x100000

	)

96 
	#KSTACKTOP
 
KERNBASE


	)

97 
	#KSTKSIZE
 (8*
PGSIZE
)

98 
	#KSTKGAP
 (8*
PGSIZE
)

99 

	)

101 
	#MMIOLIM
 (
KSTACKTOP
 - 
PTSIZE
)

	)

102 
	#MMIOBASE
 (
MMIOLIM
 - 
PTSIZE
)

	)

104 
	#ULIM
 (
MMIOBASE
)

	)

112 
	#UVPT
 (
ULIM
 - 
PTSIZE
)

	)

114 
	#UPAGES
 (
UVPT
 - 
PTSIZE
)

	)

116 
	#UENVS
 (
UPAGES
 - 
PTSIZE
)

	)

123 
	#UTOP
 
UENVS


	)

125 
	#UXSTACKTOP
 
UTOP


	)

128 
	#USTACKTOP
 (
UTOP
 - 2*
PGSIZE
)

	)

131 
	#UTEXT
 (2*
PTSIZE
)

	)

134 
	#UTEMP
 ((*Ë
PTSIZE
)

	)

137 
	#PFTEMP
 (
UTEMP
 + 
PTSIZE
 - 
PGSIZE
)

	)

139 
	#USTABDATA
 (
PTSIZE
 / 2)

	)

142 
	#MPENTRY_PADDR
 0x7000

	)

144 #i‚de‡
__ASSEMBLER__


146 
uöt32_t
 
	t±e_t
;

147 
uöt32_t
 
	tpde_t
;

149 #i‡
JOS_USER


164 vﬁ©ûê
±e_t
 
uv±
[];

165 vﬁ©ûê
pde_t
 
uvpd
[];

178 
	sPageInfo
 {

180 
PageInfo
 *
	mµ_lök
;

187 
uöt16_t
 
	mµ_ªf
;

	@inc/mmu.h

1 #i‚de‡
JOS_INC_MMU_H


2 
	#JOS_INC_MMU_H


	)

30 
	#PGNUM
(
œ
Ë(((
uöçå_t
Ë÷a)Ë>> 
PTXSHIFT
)

	)

33 
	#PDX
(
œ
Ë((((
uöçå_t
Ë÷a)Ë>> 
PDXSHIFT
Ë& 0x3FF)

	)

36 
	#PTX
(
œ
Ë((((
uöçå_t
Ë÷a)Ë>> 
PTXSHIFT
Ë& 0x3FF)

	)

39 
	#PGOFF
(
œ
Ë(((
uöçå_t
Ë÷a)Ë& 0xFFF)

	)

42 
	#PGADDR
(
d
, 
t
, 
o
Ë((*Ë((dË<< 
PDXSHIFT
 | (tË<< 
PTXSHIFT
 | (o)))

	)

45 
	#NPDENTRIES
 1024

46 
	#NPTENTRIES
 1024

47 

	)

48 
	#PGSIZE
 4096

49 
	#PGSHIFT
 12

50 

	)

51 
	#PTSIZE
 (
PGSIZE
*
NPTENTRIES
)

52 
	#PTSHIFT
 22

53 

	)

54 
	#PTXSHIFT
 12

55 
	#PDXSHIFT
 22

56 

	)

58 
	#PTE_P
 0x001

59 
	#PTE_W
 0x002

60 
	#PTE_U
 0x004

61 
	#PTE_PWT
 0x008

62 
	#PTE_PCD
 0x010

63 
	#PTE_A
 0x020

64 
	#PTE_D
 0x040

65 
	#PTE_PS
 0x080

66 
	#PTE_G
 0x100

67 

	)

70 
	#PTE_AVAIL
 0xE00

71 

	)

73 
	#PTE_SYSCALL
 (
PTE_AVAIL
 | 
PTE_P
 | 
PTE_W
 | 
PTE_U
)

	)

76 
	#PTE_ADDR
(
±e
Ë((
phyßddr_t
Ë’ãË& ~0xFFF)

	)

79 
	#CR0_PE
 0x00000001

80 
	#CR0_MP
 0x00000002

81 
	#CR0_EM
 0x00000004

82 
	#CR0_TS
 0x00000008

83 
	#CR0_ET
 0x00000010

84 
	#CR0_NE
 0x00000020

85 
	#CR0_WP
 0x00010000

86 
	#CR0_AM
 0x00040000

87 
	#CR0_NW
 0x20000000

88 
	#CR0_CD
 0x40000000

89 
	#CR0_PG
 0x80000000

90 

	)

91 
	#CR4_PCE
 0x00000100

92 
	#CR4_MCE
 0x00000040

93 
	#CR4_PSE
 0x00000010

94 
	#CR4_DE
 0x00000008

95 
	#CR4_TSD
 0x00000004

96 
	#CR4_PVI
 0x00000002

97 
	#CR4_VME
 0x00000001

98 

	)

100 
	#FL_CF
 0x00000001

101 
	#FL_PF
 0x00000004

102 
	#FL_AF
 0x00000010

103 
	#FL_ZF
 0x00000040

104 
	#FL_SF
 0x00000080

105 
	#FL_TF
 0x00000100

106 
	#FL_IF
 0x00000200

107 
	#FL_DF
 0x00000400

108 
	#FL_OF
 0x00000800

109 
	#FL_IOPL_MASK
 0x00003000

110 
	#FL_IOPL_0
 0x00000000

111 
	#FL_IOPL_1
 0x00001000

112 
	#FL_IOPL_2
 0x00002000

113 
	#FL_IOPL_3
 0x00003000

114 
	#FL_NT
 0x00004000

115 
	#FL_RF
 0x00010000

116 
	#FL_VM
 0x00020000

117 
	#FL_AC
 0x00040000

118 
	#FL_VIF
 0x00080000

119 
	#FL_VIP
 0x00100000

120 
	#FL_ID
 0x00200000

121 

	)

123 
	#FEC_PR
 0x1

124 
	#FEC_WR
 0x2

125 
	#FEC_U
 0x4

126 

	)

134 #ifde‡
__ASSEMBLER__


139 
	#SEG_NULL
 \

140 .
w‹d
 0, 0; \

141 .
byã
 0, 0, 0, 0

	)

142 
	#SEG
(
ty≥
,
ba£
,
lim
) \

143 .
	`w‹d
 (((
lim
Ë>> 12Ë& 0xffff), ((
ba£
) & 0xffff); \

144 .
	`byã
 (((
ba£
Ë>> 16Ë& 0xff), (0x90 | (
ty≥
)), \

145 (0xC0 | (((
lim
Ë>> 28Ë& 0xf)), (((
ba£
Ë>> 24Ë& 0xff)

	)

149 
	~<öc/ty≥s.h
>

152 
	sSegdesc
 {

153 
	msd_lim_15_0
 : 16;

154 
	msd_ba£_15_0
 : 16;

155 
	msd_ba£_23_16
 : 8;

156 
	msd_ty≥
 : 4;

157 
	msd_s
 : 1;

158 
	msd_d∂
 : 2;

159 
	msd_p
 : 1;

160 
	msd_lim_19_16
 : 4;

161 
	msd_avl
 : 1;

162 
	msd_rsv1
 : 1;

163 
	msd_db
 : 1;

164 
	msd_g
 : 1;

165 
	msd_ba£_31_24
 : 8;

168 
	#SEG_NULL
 (
Segdesc
){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }

	)

170 
	#SEG_FAULT
 (
Segdesc
){ 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0 }

	)

172 
	#SEG
(
ty≥
, 
ba£
, 
lim
, 
d∂
Ë(
Segdesc
) \

173 { ((
lim
Ë>> 12Ë& 0xffff, (
ba£
) & 0xffff, ((base) >> 16) & 0xff, \

174 
ty≥
, 1, 
d∂
, 1, (Ë(
lim
) >> 28, 0, 0, 1, 1, \

175 (Ë(
ba£
Ë>> 24 }

	)

176 
	#SEG16
(
ty≥
, 
ba£
, 
lim
, 
d∂
Ë(
Segdesc
) \

177 { (
lim
Ë& 0xffff, (
ba£
) & 0xffff, ((base) >> 16) & 0xff, \

178 
ty≥
, 1, 
d∂
, 1, (Ë(
lim
) >> 16, 0, 0, 1, 0, \

179 (Ë(
ba£
Ë>> 24 }

	)

184 
	#STA_X
 0x8

185 
	#STA_E
 0x4

186 
	#STA_C
 0x4

187 
	#STA_W
 0x2

188 
	#STA_R
 0x2

189 
	#STA_A
 0x1

190 

	)

192 
	#STS_T16A
 0x1

193 
	#STS_LDT
 0x2

194 
	#STS_T16B
 0x3

195 
	#STS_CG16
 0x4

196 
	#STS_TG
 0x5

197 
	#STS_IG16
 0x6

198 
	#STS_TG16
 0x7

199 
	#STS_T32A
 0x9

200 
	#STS_T32B
 0xB

201 
	#STS_CG32
 0xC

202 
	#STS_IG32
 0xE

203 
	#STS_TG32
 0xF

204 

	)

212 #i‚de‡
__ASSEMBLER__


215 
	sTask°©e
 {

216 
uöt32_t
 
	mts_lök
;

217 
uöçå_t
 
	mts_e•0
;

218 
uöt16_t
 
	mts_ss0
;

219 
uöt16_t
 
	mts_∑ddög1
;

220 
uöçå_t
 
	mts_e•1
;

221 
uöt16_t
 
	mts_ss1
;

222 
uöt16_t
 
	mts_∑ddög2
;

223 
uöçå_t
 
	mts_e•2
;

224 
uöt16_t
 
	mts_ss2
;

225 
uöt16_t
 
	mts_∑ddög3
;

226 
phyßddr_t
 
	mts_¸3
;

227 
uöçå_t
 
	mts_eù
;

228 
uöt32_t
 
	mts_eÊags
;

229 
uöt32_t
 
	mts_óx
;

230 
uöt32_t
 
	mts_ecx
;

231 
uöt32_t
 
	mts_edx
;

232 
uöt32_t
 
	mts_ebx
;

233 
uöçå_t
 
	mts_e•
;

234 
uöçå_t
 
	mts_ebp
;

235 
uöt32_t
 
	mts_esi
;

236 
uöt32_t
 
	mts_edi
;

237 
uöt16_t
 
	mts_es
;

238 
uöt16_t
 
	mts_∑ddög4
;

239 
uöt16_t
 
	mts_cs
;

240 
uöt16_t
 
	mts_∑ddög5
;

241 
uöt16_t
 
	mts_ss
;

242 
uöt16_t
 
	mts_∑ddög6
;

243 
uöt16_t
 
	mts_ds
;

244 
uöt16_t
 
	mts_∑ddög7
;

245 
uöt16_t
 
	mts_fs
;

246 
uöt16_t
 
	mts_∑ddög8
;

247 
uöt16_t
 
	mts_gs
;

248 
uöt16_t
 
	mts_∑ddög9
;

249 
uöt16_t
 
	mts_ldt
;

250 
uöt16_t
 
	mts_∑ddög10
;

251 
uöt16_t
 
	mts_t
;

252 
uöt16_t
 
	mts_iomb
;

256 
	sG©edesc
 {

257 
	mgd_off_15_0
 : 16;

258 
	mgd_£l
 : 16;

259 
	mgd_¨gs
 : 5;

260 
	mgd_rsv1
 : 3;

261 
	mgd_ty≥
 : 4;

262 
	mgd_s
 : 1;

263 
	mgd_d∂
 : 2;

264 
	mgd_p
 : 1;

265 
	mgd_off_31_16
 : 16;

282 
	#SETGATE
(
g©e
, 
i°øp
, 
£l
, 
off
, 
d∂
) \

284 (
g©e
).
gd_off_15_0
 = (
uöt32_t
Ë(
off
) & 0xffff; \

285 (
g©e
).
gd_£l
 = (
£l
); \

286 (
g©e
).
gd_¨gs
 = 0; \

287 (
g©e
).
gd_rsv1
 = 0; \

288 (
g©e
).
gd_ty≥
 = (
i°øp
Ë? 
STS_TG32
 : 
STS_IG32
; \

289 (
g©e
).
gd_s
 = 0; \

290 (
g©e
).
gd_d∂
 = (
d∂
); \

291 (
g©e
).
gd_p
 = 1; \

292 (
g©e
).
gd_off_31_16
 = (
uöt32_t
Ë(
off
) >> 16; \

293 }

	)

296 
	#SETCALLGATE
(
g©e
, 
£l
, 
off
, 
d∂
) \

298 (
g©e
).
gd_off_15_0
 = (
uöt32_t
Ë(
off
) & 0xffff; \

299 (
g©e
).
gd_£l
 = (
£l
); \

300 (
g©e
).
gd_¨gs
 = 0; \

301 (
g©e
).
gd_rsv1
 = 0; \

302 (
g©e
).
gd_ty≥
 = 
STS_CG32
; \

303 (
g©e
).
gd_s
 = 0; \

304 (
g©e
).
gd_d∂
 = (
d∂
); \

305 (
g©e
).
gd_p
 = 1; \

306 (
g©e
).
gd_off_31_16
 = (
uöt32_t
Ë(
off
) >> 16; \

307 }

	)

310 
	sP£udodesc
 {

311 
uöt16_t
 
	mpd_lim
;

312 
uöt32_t
 
	mpd_ba£
;

313 } 
__©åibuã__
 ((
∑cked
));

	@inc/stab.h

1 #i‚de‡
JOS_STAB_H


2 
	#JOS_STAB_H


	)

3 
	~<öc/ty≥s.h
>

15 
	#N_GSYM
 0x20

16 
	#N_FNAME
 0x22

17 
	#N_FUN
 0x24

18 
	#N_STSYM
 0x26

19 
	#N_LCSYM
 0x28

20 
	#N_MAIN
 0x2a

21 
	#N_PC
 0x30

22 
	#N_RSYM
 0x40

23 
	#N_SLINE
 0x44

24 
	#N_DSLINE
 0x46

25 
	#N_BSLINE
 0x48

26 
	#N_SSYM
 0x60

27 
	#N_SO
 0x64

28 
	#N_LSYM
 0x80

29 
	#N_BINCL
 0x82

30 
	#N_SOL
 0x84

31 
	#N_PSYM
 0xa0

32 
	#N_EINCL
 0xa2

33 
	#N_ENTRY
 0xa4

34 
	#N_LBRAC
 0xc0

35 
	#N_EXCL
 0xc2

36 
	#N_RBRAC
 0xe0

37 
	#N_BCOMM
 0xe2

38 
	#N_ECOMM
 0xe4

39 
	#N_ECOML
 0xe8

40 
	#N_LENG
 0xfe

41 

	)

43 
	sSèb
 {

44 
uöt32_t
 
	mn_°rx
;

45 
uöt8_t
 
	mn_ty≥
;

46 
uöt8_t
 
	mn_Ÿhî
;

47 
uöt16_t
 
	mn_desc
;

48 
uöçå_t
 
	mn_vÆue
;

	@inc/stdarg.h

3 #i‚de‡
JOS_INC_STDARG_H


4 
	#JOS_INC_STDARG_H


	)

6 
__buûtö_va_li°
 
	tva_li°
;

8 
	#va_°¨t
(
≠
, 
œ°
Ë
	`__buûtö_va_°¨t
◊p,Üa°)

	)

10 
	#va_¨g
(
≠
, 
ty≥
Ë
	`__buûtö_va_¨g
◊p,Åy≥)

	)

12 
	#va_íd
(
≠
Ë
	`__buûtö_va_íd
◊p)

	)

	@inc/stdio.h

1 #i‚de‡
JOS_INC_STDIO_H


2 
	#JOS_INC_STDIO_H


	)

4 
	~<öc/°d¨g.h
>

6 #i‚de‡
NULL


7 
	#NULL
 ((*Ë0)

	)

11 
˝utch¨
(
c
);

12 
gëch¨
();

13 
isc⁄s
(
fd
);

16 
¥ötfmt
((*
putch
)(, *), *
putd©
, c⁄° *
fmt
, ...);

17 
	`v¥ötfmt
((*
putch
)(, *), *
putd©
, c⁄° *
fmt
, 
va_li°
);

18 
	`¢¥ötf
(*
°r
, 
size
, c⁄° *
fmt
, ...);

19 
	`v¢¥ötf
(*
°r
, 
size
, c⁄° *
fmt
, 
va_li°
);

22 
	`˝rötf
(c⁄° *
fmt
, ...);

23 
	`v˝rötf
(c⁄° *
fmt
, 
va_li°
);

26 
	`¥ötf
(c⁄° *
fmt
, ...);

27 
	`Ârötf
(
fd
, c⁄° *
fmt
, ...);

28 
	`vÂrötf
(
fd
, c⁄° *
fmt
, 
va_li°
);

31 * 
	`ªadlöe
(c⁄° *
¥om±
);

	@inc/string.h

1 #i‚de‡
JOS_INC_STRING_H


2 
	#JOS_INC_STRING_H


	)

4 
	~<öc/ty≥s.h
>

6 
°æí
(c⁄° *
s
);

7 
°∫Àn
(c⁄° *
s
, 
size_t
 
size
);

8 * 
°r˝y
(*
d°
, c⁄° *
§c
);

9 * 
°∫˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
size
);

10 * 
°rˇt
(*
d°
, c⁄° *
§c
);

11 
size_t
 
°æ˝y
(*
d°
, c⁄° *
§c
, size_à
size
);

12 
°rcmp
(c⁄° *
s1
, c⁄° *
s2
);

13 
°∫cmp
(c⁄° *
s1
, c⁄° *
s2
, 
size_t
 
size
);

14 * 
°rchr
(c⁄° *
s
, 
c
);

15 * 
°rföd
(c⁄° *
s
, 
c
);

17 * 
mem£t
(*
d°
, 
c
, 
size_t
 
Àn
);

18 * 
mem˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
Àn
);

19 * 
memmove
(*
d°
, c⁄° *
§c
, 
size_t
 
Àn
);

20 
memcmp
(c⁄° *
s1
, c⁄° *
s2
, 
size_t
 
Àn
);

21 * 
memföd
(c⁄° *
s
, 
c
, 
size_t
 
Àn
);

23 
°πﬁ
(c⁄° *
s
, **
íd±r
, 
ba£
);

	@inc/syscall.h

1 #i‚de‡
JOS_INC_SYSCALL_H


2 
	#JOS_INC_SYSCALL_H


	)

6 
	mSYS_˝uts
 = 0,

7 
	mSYS_cgëc
,

8 
	mSYS_gëívid
,

9 
	mSYS_ív_de°roy
,

10 
	mSYS_∑ge_Æloc
,

11 
	mSYS_∑ge_m≠
,

12 
	mSYS_∑ge_unm≠
,

13 
	mSYS_exof‹k
,

14 
	mSYS_ív_£t_°©us
,

15 
	mSYS_ív_£t_å≠‰ame
,

16 
	mSYS_ív_£t_¥i‹ôy
,

18 
	mSYS_ív_£t_pgÁu…_upˇŒ
,

19 
	mSYS_yõld
,

20 
	mSYS_ùc_åy_£nd
,

21 
	mSYS_ùc_ªcv
,

22 
	mNSYSCALLS


	@inc/trap.h

1 #i‚de‡
JOS_INC_TRAP_H


2 
	#JOS_INC_TRAP_H


	)

6 
	#T_DIVIDE
 0

7 
	#T_DEBUG
 1

8 
	#T_NMI
 2

9 
	#T_BRKPT
 3

10 
	#T_OFLOW
 4

11 
	#T_BOUND
 5

12 
	#T_ILLOP
 6

13 
	#T_DEVICE
 7

14 
	#T_DBLFLT
 8

16 
	#T_TSS
 10

17 
	#T_SEGNP
 11

18 
	#T_STACK
 12

19 
	#T_GPFLT
 13

20 
	#T_PGFLT
 14

22 
	#T_FPERR
 16

23 
	#T_ALIGN
 17

24 
	#T_MCHK
 18

25 
	#T_SIMDERR
 19

26 

	)

29 
	#T_SYSCALL
 48

30 
	#T_DEFAULT
 500

31 

	)

32 
	#IRQ_OFFSET
 32

33 

	)

35 
	#IRQ_TIMER
 0

	)

36 
	#IRQ_KBD
 1

	)

37 
	#IRQ_SERIAL
 4

	)

38 
	#IRQ_SPURIOUS
 7

	)

39 
	#IRQ_IDE
 14

	)

40 
	#IRQ_ERROR
 19

	)

42 #i‚de‡
__ASSEMBLER__


44 
	~<öc/ty≥s.h
>

46 
	sPushRegs
 {

48 
uöt32_t
 
	mªg_edi
;

49 
uöt32_t
 
	mªg_esi
;

50 
uöt32_t
 
	mªg_ebp
;

51 
uöt32_t
 
	mªg_€•
;

52 
uöt32_t
 
	mªg_ebx
;

53 
uöt32_t
 
	mªg_edx
;

54 
uöt32_t
 
	mªg_ecx
;

55 
uöt32_t
 
	mªg_óx
;

56 } 
__©åibuã__
((
∑cked
));

58 
	sTøp‰ame
 {

59 
PushRegs
 
	mtf_ªgs
;

60 
uöt16_t
 
	mtf_es
;

61 
uöt16_t
 
	mtf_∑ddög1
;

62 
uöt16_t
 
	mtf_ds
;

63 
uöt16_t
 
	mtf_∑ddög2
;

64 
uöt32_t
 
	mtf_å≠no
;

66 
uöt32_t
 
	mtf_îr
;

67 
uöçå_t
 
	mtf_eù
;

68 
uöt16_t
 
	mtf_cs
;

69 
uöt16_t
 
	mtf_∑ddög3
;

70 
uöt32_t
 
	mtf_eÊags
;

72 
uöçå_t
 
	mtf_e•
;

73 
uöt16_t
 
	mtf_ss
;

74 
uöt16_t
 
	mtf_∑ddög4
;

75 } 
__©åibuã__
((
∑cked
));

77 
	sUTøp‰ame
 {

79 
uöt32_t
 
	mutf_Áu…_va
;

80 
uöt32_t
 
	mutf_îr
;

82 
PushRegs
 
	mutf_ªgs
;

83 
uöçå_t
 
	mutf_eù
;

84 
uöt32_t
 
	mutf_eÊags
;

86 
uöçå_t
 
	mutf_e•
;

87 } 
__©åibuã__
((
∑cked
));

	@inc/types.h

1 #i‚de‡
JOS_INC_TYPES_H


2 
	#JOS_INC_TYPES_H


	)

4 #i‚de‡
NULL


5 
	#NULL
 ((*Ë0)

	)

9 
_Boﬁ
 
	tboﬁ
;

10 íum { 
	mÁl£
, 
	måue
 };

13 
__sig√d
 
	töt8_t
;

14 
	tuöt8_t
;

15 
	töt16_t
;

16 
	tuöt16_t
;

17 
	töt32_t
;

18 
	tuöt32_t
;

19 
	töt64_t
;

20 
	tuöt64_t
;

26 
öt32_t
 
	töçå_t
;

27 
uöt32_t
 
	tuöçå_t
;

28 
uöt32_t
 
	tphyßddr_t
;

31 
uöt32_t
 
	tµn_t
;

34 
uöt32_t
 
	tsize_t
;

37 
öt32_t
 
	tssize_t
;

40 
öt32_t
 
	toff_t
;

43 
	#MIN
(
_a
, 
_b
) \

45 
	`ty≥of
(
_a
Ë
__a
 = (_a); \

46 
	`ty≥of
(
_b
Ë
__b
 = (_b); \

47 
__a
 <
__b
 ? __a : __b; \

48 })

	)

49 
	#MAX
(
_a
, 
_b
) \

51 
	`ty≥of
(
_a
Ë
__a
 = (_a); \

52 
	`ty≥of
(
_b
Ë
__b
 = (_b); \

53 
__a
 >
__b
 ? __a : __b; \

54 })

	)

58 
	#ROUNDDOWN
(
a
, 
n
) \

60 
uöt32_t
 
__a
 = (uöt32_tË(
a
); \

61 (
	`ty≥of
(
a
)Ë(
__a
 - __®% (
n
)); \

62 })

	)

64 
	#ROUNDUP
(
a
, 
n
) \

66 
uöt32_t
 
__n
 = (uöt32_tË(
n
); \

67 (
	`ty≥of
(
a
)Ë(
	`ROUNDDOWN
((
uöt32_t
Ë◊Ë+ 
__n
 - 1, __n)); \

68 })

	)

71 
	#off£tof
(
ty≥
, 
membî
Ë((
size_t
Ë(&(—y≥*)0)->membî))

	)

	@inc/x86.h

1 #i‚de‡
JOS_INC_X86_H


2 
	#JOS_INC_X86_H


	)

4 
	~<öc/ty≥s.h
>

6 
__ölöe
 
	$bªakpoöt
(Ë
	`__©åibuã__
((
Æways_ölöe
));

7 
__ölöe
 
uöt8_t
 
	$öb
(
p‹t
Ë
	`__©åibuã__
((
Æways_ölöe
));

8 
__ölöe
 
	$ösb
(
p‹t
, *
addr
, 
˙t
Ë
	`__©åibuã__
((
Æways_ölöe
));

9 
__ölöe
 
uöt16_t
 
	$öw
(
p‹t
Ë
	`__©åibuã__
((
Æways_ölöe
));

10 
__ölöe
 
	$ösw
(
p‹t
, *
addr
, 
˙t
Ë
	`__©åibuã__
((
Æways_ölöe
));

11 
__ölöe
 
uöt32_t
 
	$öl
(
p‹t
Ë
	`__©åibuã__
((
Æways_ölöe
));

12 
__ölöe
 
	$ö¶
(
p‹t
, *
addr
, 
˙t
Ë
	`__©åibuã__
((
Æways_ölöe
));

13 
__ölöe
 
	$outb
(
p‹t
, 
uöt8_t
 
d©a
Ë
	`__©åibuã__
((
Æways_ölöe
));

14 
__ölöe
 
	$outsb
(
p‹t
, c⁄° *
addr
, 
˙t
Ë
	`__©åibuã__
((
Æways_ölöe
));

15 
__ölöe
 
	$outw
(
p‹t
, 
uöt16_t
 
d©a
Ë
	`__©åibuã__
((
Æways_ölöe
));

16 
__ölöe
 
	$outsw
(
p‹t
, c⁄° *
addr
, 
˙t
Ë
	`__©åibuã__
((
Æways_ölöe
));

17 
__ölöe
 
	$out¶
(
p‹t
, c⁄° *
addr
, 
˙t
Ë
	`__©åibuã__
((
Æways_ölöe
));

18 
__ölöe
 
	$oué
(
p‹t
, 
uöt32_t
 
d©a
Ë
	`__©åibuã__
((
Æways_ölöe
));

19 
__ölöe
 
	$övÕg
(*
addr
Ë
	`__©åibuã__
((
Æways_ölöe
));

20 
__ölöe
 
	$lidt
(*
p
Ë
	`__©åibuã__
((
Æways_ölöe
));

21 
__ölöe
 
	$Œdt
(
uöt16_t
 
£l
Ë
	`__©åibuã__
((
Æways_ölöe
));

22 
__ölöe
 
	$…r
(
uöt16_t
 
£l
Ë
	`__©åibuã__
((
Æways_ölöe
));

23 
__ölöe
 
	$l¸0
(
uöt32_t
 
vÆ
Ë
	`__©åibuã__
((
Æways_ölöe
));

24 
__ölöe
 
uöt32_t
 
	$r¸0
(Ë
	`__©åibuã__
((
Æways_ölöe
));

25 
__ölöe
 
uöt32_t
 
	$r¸2
(Ë
	`__©åibuã__
((
Æways_ölöe
));

26 
__ölöe
 
	$l¸3
(
uöt32_t
 
vÆ
Ë
	`__©åibuã__
((
Æways_ölöe
));

27 
__ölöe
 
uöt32_t
 
	$r¸3
(Ë
	`__©åibuã__
((
Æways_ölöe
));

28 
__ölöe
 
	$l¸4
(
uöt32_t
 
vÆ
Ë
	`__©åibuã__
((
Æways_ölöe
));

29 
__ölöe
 
uöt32_t
 
	$r¸4
(Ë
	`__©åibuã__
((
Æways_ölöe
));

30 
__ölöe
 
	$ébÊush
(Ë
	`__©åibuã__
((
Æways_ölöe
));

31 
__ölöe
 
uöt32_t
 
	$ªad_eÊags
(Ë
	`__©åibuã__
((
Æways_ölöe
));

32 
__ölöe
 
	$wrôe_eÊags
(
uöt32_t
 
eÊags
Ë
	`__©åibuã__
((
Æways_ölöe
));

33 
__ölöe
 
uöt32_t
 
	$ªad_ebp
(Ë
	`__©åibuã__
((
Æways_ölöe
));

34 
__ölöe
 
uöt32_t
 
	$ªad_e•
(Ë
	`__©åibuã__
((
Æways_ölöe
));

35 
__ölöe
 
	`˝uid
(
uöt32_t
 
öfo
, uöt32_à*
óxp
, uöt32_à*
ebxp
, uöt32_à*
ecxp
, uöt32_à*
edxp
);

36 
__ölöe
 
uöt64_t
 
	$ªad_tsc
(Ë
	`__©åibuã__
((
Æways_ölöe
));

38 
__ölöe
 

39 
	$bªakpoöt
()

41 
__asm
 
	`__vﬁ©ûe
("int3");

42 
	}
}

44 
__ölöe
 
uöt8_t


45 
	$öb
(
p‹t
)

47 
uöt8_t
 
d©a
;

48 
__asm
 
	`__vﬁ©ûe
("öb %w1,%0" : "˜" (
d©a
Ë: "d" (
p‹t
));

49  
d©a
;

50 
	}
}

52 
__ölöe
 

53 
	$ösb
(
p‹t
, *
addr
, 
˙t
)

55 
__asm
 
	`__vﬁ©ûe
("cld\n\trepne\n\tinsb" :

56 "=D" (
addr
), "=c" (
˙t
) :

57 "d" (
p‹t
), "0" (
addr
), "1" (
˙t
) :

59 
	}
}

61 
__ölöe
 
uöt16_t


62 
	$öw
(
p‹t
)

64 
uöt16_t
 
d©a
;

65 
__asm
 
	`__vﬁ©ûe
("öw %w1,%0" : "˜" (
d©a
Ë: "d" (
p‹t
));

66  
d©a
;

67 
	}
}

69 
__ölöe
 

70 
	$ösw
(
p‹t
, *
addr
, 
˙t
)

72 
__asm
 
	`__vﬁ©ûe
("cld\n\trepne\n\tinsw" :

73 "=D" (
addr
), "=c" (
˙t
) :

74 "d" (
p‹t
), "0" (
addr
), "1" (
˙t
) :

76 
	}
}

78 
__ölöe
 
uöt32_t


79 
	$öl
(
p‹t
)

81 
uöt32_t
 
d©a
;

82 
__asm
 
	`__vﬁ©ûe
("ö»%w1,%0" : "˜" (
d©a
Ë: "d" (
p‹t
));

83  
d©a
;

84 
	}
}

86 
__ölöe
 

87 
	$ö¶
(
p‹t
, *
addr
, 
˙t
)

89 
__asm
 
	`__vﬁ©ûe
("cld\n\trepne\n\tinsl" :

90 "=D" (
addr
), "=c" (
˙t
) :

91 "d" (
p‹t
), "0" (
addr
), "1" (
˙t
) :

93 
	}
}

95 
__ölöe
 

96 
	$outb
(
p‹t
, 
uöt8_t
 
d©a
)

98 
__asm
 
	`__vﬁ©ûe
("outb %0,%w1" : : "a" (
d©a
), "d" (
p‹t
));

99 
	}
}

101 
__ölöe
 

102 
	$outsb
(
p‹t
, c⁄° *
addr
, 
˙t
)

104 
__asm
 
	`__vﬁ©ûe
("cld\n\trepne\n\toutsb" :

105 "=S" (
addr
), "=c" (
˙t
) :

106 "d" (
p‹t
), "0" (
addr
), "1" (
˙t
) :

108 
	}
}

110 
__ölöe
 

111 
	$outw
(
p‹t
, 
uöt16_t
 
d©a
)

113 
__asm
 
	`__vﬁ©ûe
("outw %0,%w1" : : "a" (
d©a
), "d" (
p‹t
));

114 
	}
}

116 
__ölöe
 

117 
	$outsw
(
p‹t
, c⁄° *
addr
, 
˙t
)

119 
__asm
 
	`__vﬁ©ûe
("cld\n\trepne\n\toutsw" :

120 "=S" (
addr
), "=c" (
˙t
) :

121 "d" (
p‹t
), "0" (
addr
), "1" (
˙t
) :

123 
	}
}

125 
__ölöe
 

126 
	$out¶
(
p‹t
, c⁄° *
addr
, 
˙t
)

128 
__asm
 
	`__vﬁ©ûe
("cld\n\trepne\n\toutsl" :

129 "=S" (
addr
), "=c" (
˙t
) :

130 "d" (
p‹t
), "0" (
addr
), "1" (
˙t
) :

132 
	}
}

134 
__ölöe
 

135 
	$oué
(
p‹t
, 
uöt32_t
 
d©a
)

137 
__asm
 
	`__vﬁ©ûe
("oué %0,%w1" : : "a" (
d©a
), "d" (
p‹t
));

138 
	}
}

140 
__ölöe
 

141 
	$övÕg
(*
addr
)

143 
__asm
 
	`__vﬁ©ûe
("övÕg (%0)" : : "r" (
addr
) : "memory");

144 
	}
}

146 
__ölöe
 

147 
	$lidt
(*
p
)

149 
__asm
 
	`__vﬁ©ûe
("lidà(%0)" : : "r" (
p
));

150 
	}
}

152 
__ölöe
 

153 
	$lgdt
(*
p
)

155 
__asm
 
	`__vﬁ©ûe
("lgdà(%0)" : : "r" (
p
));

156 
	}
}

158 
__ölöe
 

159 
	$Œdt
(
uöt16_t
 
£l
)

161 
__asm
 
	`__vﬁ©ûe
("Œdà%0" : : "r" (
£l
));

162 
	}
}

164 
__ölöe
 

165 
	$…r
(
uöt16_t
 
£l
)

167 
__asm
 
	`__vﬁ©ûe
("…∏%0" : : "r" (
£l
));

168 
	}
}

170 
__ölöe
 

171 
	$l¸0
(
uöt32_t
 
vÆ
)

173 
__asm
 
	`__vﬁ©ûe
("mov»%0,%%¸0" : : "r" (
vÆ
));

174 
	}
}

176 
__ölöe
 
uöt32_t


177 
	$r¸0
()

179 
uöt32_t
 
vÆ
;

180 
__asm
 
	`__vﬁ©ûe
("mov»%%¸0,%0" : "Ù" (
vÆ
));

181  
vÆ
;

182 
	}
}

184 
__ölöe
 
uöt32_t


185 
	$r¸2
()

187 
uöt32_t
 
vÆ
;

188 
__asm
 
	`__vﬁ©ûe
("mov»%%¸2,%0" : "Ù" (
vÆ
));

189  
vÆ
;

190 
	}
}

192 
__ölöe
 

193 
	$l¸3
(
uöt32_t
 
vÆ
)

195 
__asm
 
	`__vﬁ©ûe
("mov»%0,%%¸3" : : "r" (
vÆ
));

196 
	}
}

198 
__ölöe
 
uöt32_t


199 
	$r¸3
()

201 
uöt32_t
 
vÆ
;

202 
__asm
 
	`__vﬁ©ûe
("mov»%%¸3,%0" : "Ù" (
vÆ
));

203  
vÆ
;

204 
	}
}

206 
__ölöe
 

207 
	$l¸4
(
uöt32_t
 
vÆ
)

209 
__asm
 
	`__vﬁ©ûe
("mov»%0,%%¸4" : : "r" (
vÆ
));

210 
	}
}

212 
__ölöe
 
uöt32_t


213 
	$r¸4
()

215 
uöt32_t
 
¸4
;

216 
__asm
 
	`__vﬁ©ûe
("mov»%%¸4,%0" : "Ù" (
¸4
));

217  
¸4
;

218 
	}
}

220 
__ölöe
 

221 
	$ébÊush
()

223 
uöt32_t
 
¸3
;

224 
__asm
 
	`__vﬁ©ûe
("mov»%%¸3,%0" : "Ù" (
¸3
));

225 
__asm
 
	`__vﬁ©ûe
("mov»%0,%%¸3" : : "r" (
¸3
));

226 
	}
}

228 
__ölöe
 
uöt32_t


229 
	$ªad_eÊags
()

231 
uöt32_t
 
eÊags
;

232 
__asm
 
	`__vﬁ©ûe
("pushÊ;Ö›»%0" : "Ù" (
eÊags
));

233  
eÊags
;

234 
	}
}

236 
__ölöe
 

237 
	$wrôe_eÊags
(
uöt32_t
 
eÊags
)

239 
__asm
 
	`__vﬁ©ûe
("push»%0;Ö›Ê" : : "r" (
eÊags
));

240 
	}
}

242 
__ölöe
 
uöt32_t


243 
	$ªad_ebp
()

245 
uöt32_t
 
ebp
;

246 
__asm
 
	`__vﬁ©ûe
("mov»%%ebp,%0" : "Ù" (
ebp
));

247  
ebp
;

248 
	}
}

250 
__ölöe
 
uöt32_t


251 
	$ªad_e•
()

253 
uöt32_t
 
e•
;

254 
__asm
 
	`__vﬁ©ûe
("mov»%%e•,%0" : "Ù" (
e•
));

255  
e•
;

256 
	}
}

258 
__ölöe
 

259 
	$˝uid
(
uöt32_t
 
öfo
, uöt32_à*
óxp
, uöt32_à*
ebxp
, uöt32_à*
ecxp
, uöt32_à*
edxp
)

261 
uöt32_t
 
óx
, 
ebx
, 
ecx
, 
edx
;

262 
asm
 volatile("cpuid"

263 : "˜" (
óx
), "=b" (
ebx
), "=c" (
ecx
), "=d" (
edx
)

264 : "a" (
öfo
));

265 i‡(
óxp
)

266 *
óxp
 = 
óx
;

267 i‡(
ebxp
)

268 *
ebxp
 = 
ebx
;

269 i‡(
ecxp
)

270 *
ecxp
 = 
ecx
;

271 i‡(
edxp
)

272 *
edxp
 = 
edx
;

273 
	}
}

275 
__ölöe
 
uöt64_t


276 
	$ªad_tsc
()

278 
uöt64_t
 
tsc
;

279 
__asm
 
	`__vﬁ©ûe
("rdtsc" : "=A" (
tsc
));

280  
tsc
;

281 
	}
}

283 
ölöe
 
uöt32_t


284 
	$xchg
(vﬁ©ûê
uöt32_t
 *
addr
, uöt32_à
√wvÆ
)

286 
uöt32_t
 
ªsu…
;

289 
asm
 volatile("lock; xchgl %0, %1" :

290 "+m" (*
addr
), "˜" (
ªsu…
) :

291 "1" (
√wvÆ
) :

293  
ªsu…
;

294 
	}
}

	@kern/console.c

3 
	~<öc/x86.h
>

4 
	~<öc/memœyout.h
>

5 
	~<öc/kbdªg.h
>

6 
	~<öc/°rög.h
>

7 
	~<öc/as£π.h
>

9 
	~<kîn/c⁄sﬁe.h
>

10 
	~<kîn/picúq.h
>

12 
c⁄s_öå
((*
¥oc
)());

13 
	`c⁄s_putc
(
c
);

17 
	$dñay
()

19 
	`öb
(0x84);

20 
	`öb
(0x84);

21 
	`öb
(0x84);

22 
	`öb
(0x84);

23 
	}
}

27 
	#COM1
 0x3F8

	)

29 
	#COM_RX
 0

30 
	#COM_TX
 0

31 
	#COM_DLL
 0

32 
	#COM_DLM
 1

33 
	#COM_IER
 1

34 
	#COM_IER_RDI
 0x01

35 
	#COM_IIR
 2

36 
	#COM_FCR
 2

37 
	#COM_LCR
 3

38 
	#COM_LCR_DLAB
 0x80

39 
	#COM_LCR_WLEN8
 0x03

40 
	#COM_MCR
 4

41 
	#COM_MCR_RTS
 0x02

42 
	#COM_MCR_DTR
 0x01

43 
	#COM_MCR_OUT2
 0x08

44 
	#COM_LSR
 5

45 
	#COM_LSR_DATA
 0x01

46 
	#COM_LSR_TXRDY
 0x20

47 
	#COM_LSR_TSRE
 0x40

48 

	)

49 
boﬁ
 
	g£rül_exi°s
;

52 
	$£rül_¥oc_d©a
()

54 i‡(!(
	`öb
(
COM1
+
COM_LSR
Ë& 
COM_LSR_DATA
))

56  
	`öb
(
COM1
+
COM_RX
);

57 
	}
}

60 
	$£rül_öå
()

62 i‡(
£rül_exi°s
)

63 
	`c⁄s_öå
(
£rül_¥oc_d©a
);

64 
	}
}

67 
	$£rül_putc
(
c
)

69 
i
;

71 
i
 = 0;

72 !(
	`öb
(
COM1
 + 
COM_LSR
Ë& 
COM_LSR_TXRDY
Ë&& 
i
 < 12800;

73 
i
++)

74 
	`dñay
();

76 
	`outb
(
COM1
 + 
COM_TX
, 
c
);

77 
	}
}

80 
	$£rül_öô
()

83 
	`outb
(
COM1
+
COM_FCR
, 0);

86 
	`outb
(
COM1
+
COM_LCR
, 
COM_LCR_DLAB
);

87 
	`outb
(
COM1
+
COM_DLL
, (
uöt8_t
) (115200 / 9600));

88 
	`outb
(
COM1
+
COM_DLM
, 0);

91 
	`outb
(
COM1
+
COM_LCR
, 
COM_LCR_WLEN8
 & ~
COM_LCR_DLAB
);

94 
	`outb
(
COM1
+
COM_MCR
, 0);

96 
	`outb
(
COM1
+
COM_IER
, 
COM_IER_RDI
);

100 
£rül_exi°s
 = (
	`öb
(
COM1
+
COM_LSR
) != 0xFF);

101 (Ë
	`öb
(
COM1
+
COM_IIR
);

102 (Ë
	`öb
(
COM1
+
COM_RX
);

105 i‡(
£rül_exi°s
)

106 
	`úq_£tmask_8259A
(
úq_mask_8259A
 & ~(1<<4));

107 
	}
}

116 
	$Õt_putc
(
c
)

118 
i
;

120 
i
 = 0; !(
	`öb
(0x378+1) & 0x80) && i < 12800; i++)

121 
	`dñay
();

122 
	`outb
(0x378+0, 
c
);

123 
	`outb
(0x378+2, 0x08|0x04|0x01);

124 
	`outb
(0x378+2, 0x08);

125 
	}
}

132 
	gaddr_6845
;

133 
uöt16_t
 *
	g¸t_buf
;

134 
uöt16_t
 
	g¸t_pos
;

137 
	$cga_öô
()

139 vﬁ©ûê
uöt16_t
 *
˝
;

140 
uöt16_t
 
was
;

141 
pos
;

143 
˝
 = (
uöt16_t
*Ë(
KERNBASE
 + 
CGA_BUF
);

144 
was
 = *
˝
;

145 *
˝
 = (
uöt16_t
) 0xA55A;

146 i‡(*
˝
 != 0xA55A) {

147 
˝
 = (
uöt16_t
*Ë(
KERNBASE
 + 
MONO_BUF
);

148 
addr_6845
 = 
MONO_BASE
;

150 *
˝
 = 
was
;

151 
addr_6845
 = 
CGA_BASE
;

155 
	`outb
(
addr_6845
, 14);

156 
pos
 = 
	`öb
(
addr_6845
 + 1) << 8;

157 
	`outb
(
addr_6845
, 15);

158 
pos
 |
	`öb
(
addr_6845
 + 1);

160 
¸t_buf
 = (
uöt16_t
*Ë
˝
;

161 
¸t_pos
 = 
pos
;

162 
	}
}

167 
	$cga_putc
(
c
)

170 i‡(!(
c
 & ~0xFF))

171 
c
 |= 0x0700;

173 
c
 & 0xff) {

175 i‡(
¸t_pos
 > 0) {

176 
¸t_pos
--;

177 
¸t_buf
[
¸t_pos
] = (
c
 & ~0xff) | ' ';

181 
¸t_pos
 +
CRT_COLS
;

184 
¸t_pos
 -(¸t_po†% 
CRT_COLS
);

187 
	`c⁄s_putc
(' ');

188 
	`c⁄s_putc
(' ');

189 
	`c⁄s_putc
(' ');

190 
	`c⁄s_putc
(' ');

191 
	`c⁄s_putc
(' ');

194 
¸t_buf
[
¸t_pos
++] = 
c
;

199 i‡(
¸t_pos
 >
CRT_SIZE
) {

200 
i
;

202 
	`memmove
(
¸t_buf
, cπ_bu‡+ 
CRT_COLS
, (
CRT_SIZE
 - CRT_COLSË* (
uöt16_t
));

203 
i
 = 
CRT_SIZE
 - 
CRT_COLS
; i < CRT_SIZE; i++)

204 
¸t_buf
[
i
] = 0x0700 | ' ';

205 
¸t_pos
 -
CRT_COLS
;

209 
	`outb
(
addr_6845
, 14);

210 
	`outb
(
addr_6845
 + 1, 
¸t_pos
 >> 8);

211 
	`outb
(
addr_6845
, 15);

212 
	`outb
(
addr_6845
 + 1, 
¸t_pos
);

213 
	}
}

218 
	#NO
 0

	)

220 
	#SHIFT
 (1<<0)

	)

221 
	#CTL
 (1<<1)

	)

222 
	#ALT
 (1<<2)

	)

224 
	#CAPSLOCK
 (1<<3)

	)

225 
	#NUMLOCK
 (1<<4)

	)

226 
	#SCROLLLOCK
 (1<<5)

	)

228 
	#E0ESC
 (1<<6)

	)

230 
uöt8_t
 
	gshi·code
[256] =

232 [0x1D] = 
CTL
,

233 [0x2A] = 
SHIFT
,

234 [0x36] = 
SHIFT
,

235 [0x38] = 
ALT
,

236 [0x9D] = 
CTL
,

237 [0xB8] = 
ALT


240 
uöt8_t
 
	gtoggÀcode
[256] =

242 [0x3A] = 
CAPSLOCK
,

243 [0x45] = 
NUMLOCK
,

244 [0x46] = 
SCROLLLOCK


247 
uöt8_t
 
	gn‹mÆm≠
[256] =

249 
NO
, 0x1B, '1', '2', '3', '4', '5', '6',

252 'o', 'p', '[', ']', '\n', 
NO
, 'a', 's',

254 '\'', '`', 
NO
, '\\', 'z', 'x', 'c', 'v',

255 'b', 'n', 'm', ',', '.', '/', 
NO
, '*',

256 
NO
, ' ', NO, NO, NO, NO, NO, NO,

257 
NO
, NO, NO, NO, NO, NO, NO, '7',

259 '2', '3', '0', '.', 
NO
, NO, NO, NO,

260 [0xC7] = 
KEY_HOME
, [0x9C] = '\n' ,

261 [0xB5] = '/' , [0xC8] = 
KEY_UP
,

262 [0xC9] = 
KEY_PGUP
, [0xCB] = 
KEY_LF
,

263 [0xCD] = 
KEY_RT
, [0xCF] = 
KEY_END
,

264 [0xD0] = 
KEY_DN
, [0xD1] = 
KEY_PGDN
,

265 [0xD2] = 
KEY_INS
, [0xD3] = 
KEY_DEL


268 
uöt8_t
 
	gshi·m≠
[256] =

270 
NO
, 033, '!', '@', '#', '$', '%', '^',

273 'O', 'P', '{', '}', '\n', 
NO
, 'A', 'S',

275 '"', '~', 
NO
, '|', 'Z', 'X', 'C', 'V',

276 'B', 'N', 'M', '<', '>', '?', 
NO
, '*',

277 
NO
, ' ', NO, NO, NO, NO, NO, NO,

278 
NO
, NO, NO, NO, NO, NO, NO, '7',

280 '2', '3', '0', '.', 
NO
, NO, NO, NO,

281 [0xC7] = 
KEY_HOME
, [0x9C] = '\n' ,

282 [0xB5] = '/' , [0xC8] = 
KEY_UP
,

283 [0xC9] = 
KEY_PGUP
, [0xCB] = 
KEY_LF
,

284 [0xCD] = 
KEY_RT
, [0xCF] = 
KEY_END
,

285 [0xD0] = 
KEY_DN
, [0xD1] = 
KEY_PGDN
,

286 [0xD2] = 
KEY_INS
, [0xD3] = 
KEY_DEL


289 
	#C
(
x
Ë(x - '@')

	)

291 
uöt8_t
 
	g˘lm≠
[256] =

293 
NO
, NO, NO, NO, NO, NO, NO, NO,

294 
NO
, NO, NO, NO, NO, NO, NO, NO,

295 
C
('Q'), C('W'), C('E'), C('R'), C('T'), C('Y'), C('U'), C('I'),

296 
C
('O'), C('P'), 
NO
, NO, '\r', NO, C('A'), C('S'),

297 
C
('D'), C('F'), C('G'), C('H'), C('J'), C('K'), C('L'), 
NO
,

298 
NO
, NO, NO, 
C
('\\'), C('Z'), C('X'), C('C'), C('V'),

299 
C
('B'), C('N'), C('M'), 
NO
, NO, C('/'), NO, NO,

300 [0x97] = 
KEY_HOME
,

301 [0xB5] = 
C
('/'), [0xC8] = 
KEY_UP
,

302 [0xC9] = 
KEY_PGUP
, [0xCB] = 
KEY_LF
,

303 [0xCD] = 
KEY_RT
, [0xCF] = 
KEY_END
,

304 [0xD0] = 
KEY_DN
, [0xD1] = 
KEY_PGDN
,

305 [0xD2] = 
KEY_INS
, [0xD3] = 
KEY_DEL


308 
uöt8_t
 *
	gch¨code
[4] = {

309 
n‹mÆm≠
,

310 
shi·m≠
,

311 
˘lm≠
,

312 
˘lm≠


320 
	$kbd_¥oc_d©a
()

322 
c
;

323 
uöt8_t
 
d©a
;

324 
uöt32_t
 
shi·
;

326 i‡((
	`öb
(
KBSTATP
Ë& 
KBS_DIB
) == 0)

329 
d©a
 = 
	`öb
(
KBDATAP
);

331 i‡(
d©a
 == 0xE0) {

333 
shi·
 |
E0ESC
;

335 } i‡(
d©a
 & 0x80) {

337 
d©a
 = (
shi·
 & 
E0ESC
 ? data : data & 0x7F);

338 
shi·
 &~(
shi·code
[
d©a
] | 
E0ESC
);

340 } i‡(
shi·
 & 
E0ESC
) {

342 
d©a
 |= 0x80;

343 
shi·
 &~
E0ESC
;

346 
shi·
 |
shi·code
[
d©a
];

347 
shi·
 ^
toggÀcode
[
d©a
];

349 
c
 = 
ch¨code
[
shi·
 & (
CTL
 | 
SHIFT
)][
d©a
];

350 i‡(
shi·
 & 
CAPSLOCK
) {

351 i‡('a' <
c
 && c <= 'z')

352 
c
 += 'A' - 'a';

353 i‡('A' <
c
 && c <= 'Z')

354 
c
 += 'a' - 'A';

359 i‡(!(~
shi·
 & (
CTL
 | 
ALT
)Ë&& 
c
 =
KEY_DEL
) {

360 
	`˝rötf
("Rebooting!\n");

361 
	`outb
(0x92, 0x3);

364  
c
;

365 
	}
}

368 
	$kbd_öå
()

370 
	`c⁄s_öå
(
kbd_¥oc_d©a
);

371 
	}
}

374 
	$kbd_öô
()

377 
	`kbd_öå
();

378 
	`úq_£tmask_8259A
(
úq_mask_8259A
 & ~(1<<1));

379 
	}
}

388 
	#CONSBUFSIZE
 512

	)

391 
uöt8_t
 
	mbuf
[
CONSBUFSIZE
];

392 
uöt32_t
 
	mΩos
;

393 
uöt32_t
 
	mwpos
;

394 } 
	gc⁄s
;

399 
c⁄s_öå
((*
¥oc
)())

401 
c
;

403 (
c
 = (*
¥oc
)()) != -1) {

404 i‡(
c
 == 0)

406 
c⁄s
.
buf
[c⁄s.
wpos
++] = 
c
;

407 i‡(
c⁄s
.
wpos
 =
CONSBUFSIZE
)

408 
c⁄s
.
wpos
 = 0;

410 
	}
}

414 
	$c⁄s_gëc
()

416 
c
;

421 
	`£rül_öå
();

422 
	`kbd_öå
();

425 i‡(
c⁄s
.
Ωos
 !c⁄s.
wpos
) {

426 
c
 = 
c⁄s
.
buf
[c⁄s.
Ωos
++];

427 i‡(
c⁄s
.
Ωos
 =
CONSBUFSIZE
)

428 
c⁄s
.
Ωos
 = 0;

429  
c
;

432 
	}
}

436 
	$c⁄s_putc
(
c
)

438 
	`£rül_putc
(
c
);

439 
	`Õt_putc
(
c
);

440 
	`cga_putc
(
c
);

441 
	}
}

445 
	$c⁄s_öô
()

447 
	`cga_öô
();

448 
	`kbd_öô
();

449 
	`£rül_öô
();

451 i‡(!
£rül_exi°s
)

452 
	`˝rötf
("SerialÖort doesÇotÉxist!\n");

453 
	}
}

459 
	$˝utch¨
(
c
)

461 
	`c⁄s_putc
(
c
);

462 
	}
}

465 
	$gëch¨
()

467 
c
;

469 (
c
 = 
	`c⁄s_gëc
()) == 0)

471  
c
;

472 
	}
}

475 
	$isc⁄s
(
fdnum
)

479 
	}
}

	@kern/console.h

3 #i‚de‡
_CONSOLE_H_


4 
	#_CONSOLE_H_


	)

5 #i‚de‡
JOS_KERNEL


9 
	~<öc/ty≥s.h
>

11 
	#MONO_BASE
 0x3B4

	)

12 
	#MONO_BUF
 0xB0000

	)

13 
	#CGA_BASE
 0x3D4

	)

14 
	#CGA_BUF
 0xB8000

	)

16 
	#CRT_ROWS
 25

	)

17 
	#CRT_COLS
 80

	)

18 
	#CRT_SIZE
 (
CRT_ROWS
 * 
CRT_COLS
)

	)

20 
c⁄s_öô
();

21 
c⁄s_gëc
();

23 
kbd_öå
();

24 
£rül_öå
();

	@kern/cpu.h

2 #i‚de‡
JOS_INC_CPU_H


3 
	#JOS_INC_CPU_H


	)

5 
	~<öc/ty≥s.h
>

6 
	~<öc/memœyout.h
>

7 
	~<öc/mmu.h
>

8 
	~<öc/ív.h
>

11 
	#NCPU
 8

	)

15 
	mCPU_UNUSED
 = 0,

16 
	mCPU_STARTED
,

17 
	mCPU_HALTED
,

21 
	sCpuInfo
 {

22 
uöt8_t
 
	m˝u_id
;

23 vﬁ©ûê
	m˝u_°©us
;

24 
Env
 *
	m˝u_ív
;

25 
Task°©e
 
	m˝u_ts
;

29 
CpuInfo
 
˝us
[
NCPU
];

30 
n˝u
;

31 
CpuInfo
 *
boŸ˝u
;

32 
phyßddr_t
 
œpiˇddr
;

35 
≥r˝u_k°acks
[
NCPU
][
KSTKSIZE
];

37 
˝unum
();

38 
	#this˝u
 (&
˝us
[
	`˝unum
()])

	)

40 
mp_öô
();

41 
œpic_öô
();

42 
œpic_°¨èp
(
uöt8_t
 
≠icid
, 
uöt32_t
 
addr
);

43 
œpic_eoi
();

44 
œpic_ùi
(
ve˘‹
);

	@kern/entrypgdir.c

1 
	~<öc/mmu.h
>

2 
	~<öc/memœyout.h
>

4 
±e_t
 
	gíåy_pgèbÀ
[
NPTENTRIES
];

20 
__©åibuã__
((
	$__Æig√d__
(
PGSIZE
)))

21 
pde_t
 
íåy_pgdú
[
NPDENTRIES
] = {

24 ((
uöçå_t
)
íåy_pgèbÀ
 - 
KERNBASE
Ë+ 
PTE_P
,

26 [
KERNBASE
>>
PDXSHIFT
]

27 ((
uöçå_t
)
íåy_pgèbÀ
 - 
KERNBASE
Ë+ 
PTE_P
 + 
PTE_W


28 
	}
};

32 
__©åibuã__
((
	$__Æig√d__
(
PGSIZE
)))

33 
±e_t
 
íåy_pgèbÀ
[
NPTENTRIES
] = {

34 0x000000 | 
PTE_P
 | 
PTE_W
,

35 0x001000 | 
PTE_P
 | 
PTE_W
,

36 0x002000 | 
PTE_P
 | 
PTE_W
,

37 0x003000 | 
PTE_P
 | 
PTE_W
,

38 0x004000 | 
PTE_P
 | 
PTE_W
,

39 0x005000 | 
PTE_P
 | 
PTE_W
,

40 0x006000 | 
PTE_P
 | 
PTE_W
,

41 0x007000 | 
PTE_P
 | 
PTE_W
,

42 0x008000 | 
PTE_P
 | 
PTE_W
,

43 0x009000 | 
PTE_P
 | 
PTE_W
,

44 0x00a000 | 
PTE_P
 | 
PTE_W
,

45 0x00b000 | 
PTE_P
 | 
PTE_W
,

46 0x00c000 | 
PTE_P
 | 
PTE_W
,

47 0x00d000 | 
PTE_P
 | 
PTE_W
,

48 0x00e000 | 
PTE_P
 | 
PTE_W
,

49 0x00f000 | 
PTE_P
 | 
PTE_W
,

50 0x010000 | 
PTE_P
 | 
PTE_W
,

51 0x011000 | 
PTE_P
 | 
PTE_W
,

52 0x012000 | 
PTE_P
 | 
PTE_W
,

53 0x013000 | 
PTE_P
 | 
PTE_W
,

54 0x014000 | 
PTE_P
 | 
PTE_W
,

55 0x015000 | 
PTE_P
 | 
PTE_W
,

56 0x016000 | 
PTE_P
 | 
PTE_W
,

57 0x017000 | 
PTE_P
 | 
PTE_W
,

58 0x018000 | 
PTE_P
 | 
PTE_W
,

59 0x019000 | 
PTE_P
 | 
PTE_W
,

60 0x01a000 | 
PTE_P
 | 
PTE_W
,

61 0x01b000 | 
PTE_P
 | 
PTE_W
,

62 0x01c000 | 
PTE_P
 | 
PTE_W
,

63 0x01d000 | 
PTE_P
 | 
PTE_W
,

64 0x01e000 | 
PTE_P
 | 
PTE_W
,

65 0x01f000 | 
PTE_P
 | 
PTE_W
,

66 0x020000 | 
PTE_P
 | 
PTE_W
,

67 0x021000 | 
PTE_P
 | 
PTE_W
,

68 0x022000 | 
PTE_P
 | 
PTE_W
,

69 0x023000 | 
PTE_P
 | 
PTE_W
,

70 0x024000 | 
PTE_P
 | 
PTE_W
,

71 0x025000 | 
PTE_P
 | 
PTE_W
,

72 0x026000 | 
PTE_P
 | 
PTE_W
,

73 0x027000 | 
PTE_P
 | 
PTE_W
,

74 0x028000 | 
PTE_P
 | 
PTE_W
,

75 0x029000 | 
PTE_P
 | 
PTE_W
,

76 0x02a000 | 
PTE_P
 | 
PTE_W
,

77 0x02b000 | 
PTE_P
 | 
PTE_W
,

78 0x02c000 | 
PTE_P
 | 
PTE_W
,

79 0x02d000 | 
PTE_P
 | 
PTE_W
,

80 0x02e000 | 
PTE_P
 | 
PTE_W
,

81 0x02f000 | 
PTE_P
 | 
PTE_W
,

82 0x030000 | 
PTE_P
 | 
PTE_W
,

83 0x031000 | 
PTE_P
 | 
PTE_W
,

84 0x032000 | 
PTE_P
 | 
PTE_W
,

85 0x033000 | 
PTE_P
 | 
PTE_W
,

86 0x034000 | 
PTE_P
 | 
PTE_W
,

87 0x035000 | 
PTE_P
 | 
PTE_W
,

88 0x036000 | 
PTE_P
 | 
PTE_W
,

89 0x037000 | 
PTE_P
 | 
PTE_W
,

90 0x038000 | 
PTE_P
 | 
PTE_W
,

91 0x039000 | 
PTE_P
 | 
PTE_W
,

92 0x03a000 | 
PTE_P
 | 
PTE_W
,

93 0x03b000 | 
PTE_P
 | 
PTE_W
,

94 0x03c000 | 
PTE_P
 | 
PTE_W
,

95 0x03d000 | 
PTE_P
 | 
PTE_W
,

96 0x03e000 | 
PTE_P
 | 
PTE_W
,

97 0x03f000 | 
PTE_P
 | 
PTE_W
,

98 0x040000 | 
PTE_P
 | 
PTE_W
,

99 0x041000 | 
PTE_P
 | 
PTE_W
,

100 0x042000 | 
PTE_P
 | 
PTE_W
,

101 0x043000 | 
PTE_P
 | 
PTE_W
,

102 0x044000 | 
PTE_P
 | 
PTE_W
,

103 0x045000 | 
PTE_P
 | 
PTE_W
,

104 0x046000 | 
PTE_P
 | 
PTE_W
,

105 0x047000 | 
PTE_P
 | 
PTE_W
,

106 0x048000 | 
PTE_P
 | 
PTE_W
,

107 0x049000 | 
PTE_P
 | 
PTE_W
,

108 0x04a000 | 
PTE_P
 | 
PTE_W
,

109 0x04b000 | 
PTE_P
 | 
PTE_W
,

110 0x04c000 | 
PTE_P
 | 
PTE_W
,

111 0x04d000 | 
PTE_P
 | 
PTE_W
,

112 0x04e000 | 
PTE_P
 | 
PTE_W
,

113 0x04f000 | 
PTE_P
 | 
PTE_W
,

114 0x050000 | 
PTE_P
 | 
PTE_W
,

115 0x051000 | 
PTE_P
 | 
PTE_W
,

116 0x052000 | 
PTE_P
 | 
PTE_W
,

117 0x053000 | 
PTE_P
 | 
PTE_W
,

118 0x054000 | 
PTE_P
 | 
PTE_W
,

119 0x055000 | 
PTE_P
 | 
PTE_W
,

120 0x056000 | 
PTE_P
 | 
PTE_W
,

121 0x057000 | 
PTE_P
 | 
PTE_W
,

122 0x058000 | 
PTE_P
 | 
PTE_W
,

123 0x059000 | 
PTE_P
 | 
PTE_W
,

124 0x05a000 | 
PTE_P
 | 
PTE_W
,

125 0x05b000 | 
PTE_P
 | 
PTE_W
,

126 0x05c000 | 
PTE_P
 | 
PTE_W
,

127 0x05d000 | 
PTE_P
 | 
PTE_W
,

128 0x05e000 | 
PTE_P
 | 
PTE_W
,

129 0x05f000 | 
PTE_P
 | 
PTE_W
,

130 0x060000 | 
PTE_P
 | 
PTE_W
,

131 0x061000 | 
PTE_P
 | 
PTE_W
,

132 0x062000 | 
PTE_P
 | 
PTE_W
,

133 0x063000 | 
PTE_P
 | 
PTE_W
,

134 0x064000 | 
PTE_P
 | 
PTE_W
,

135 0x065000 | 
PTE_P
 | 
PTE_W
,

136 0x066000 | 
PTE_P
 | 
PTE_W
,

137 0x067000 | 
PTE_P
 | 
PTE_W
,

138 0x068000 | 
PTE_P
 | 
PTE_W
,

139 0x069000 | 
PTE_P
 | 
PTE_W
,

140 0x06a000 | 
PTE_P
 | 
PTE_W
,

141 0x06b000 | 
PTE_P
 | 
PTE_W
,

142 0x06c000 | 
PTE_P
 | 
PTE_W
,

143 0x06d000 | 
PTE_P
 | 
PTE_W
,

144 0x06e000 | 
PTE_P
 | 
PTE_W
,

145 0x06f000 | 
PTE_P
 | 
PTE_W
,

146 0x070000 | 
PTE_P
 | 
PTE_W
,

147 0x071000 | 
PTE_P
 | 
PTE_W
,

148 0x072000 | 
PTE_P
 | 
PTE_W
,

149 0x073000 | 
PTE_P
 | 
PTE_W
,

150 0x074000 | 
PTE_P
 | 
PTE_W
,

151 0x075000 | 
PTE_P
 | 
PTE_W
,

152 0x076000 | 
PTE_P
 | 
PTE_W
,

153 0x077000 | 
PTE_P
 | 
PTE_W
,

154 0x078000 | 
PTE_P
 | 
PTE_W
,

155 0x079000 | 
PTE_P
 | 
PTE_W
,

156 0x07a000 | 
PTE_P
 | 
PTE_W
,

157 0x07b000 | 
PTE_P
 | 
PTE_W
,

158 0x07c000 | 
PTE_P
 | 
PTE_W
,

159 0x07d000 | 
PTE_P
 | 
PTE_W
,

160 0x07e000 | 
PTE_P
 | 
PTE_W
,

161 0x07f000 | 
PTE_P
 | 
PTE_W
,

162 0x080000 | 
PTE_P
 | 
PTE_W
,

163 0x081000 | 
PTE_P
 | 
PTE_W
,

164 0x082000 | 
PTE_P
 | 
PTE_W
,

165 0x083000 | 
PTE_P
 | 
PTE_W
,

166 0x084000 | 
PTE_P
 | 
PTE_W
,

167 0x085000 | 
PTE_P
 | 
PTE_W
,

168 0x086000 | 
PTE_P
 | 
PTE_W
,

169 0x087000 | 
PTE_P
 | 
PTE_W
,

170 0x088000 | 
PTE_P
 | 
PTE_W
,

171 0x089000 | 
PTE_P
 | 
PTE_W
,

172 0x08a000 | 
PTE_P
 | 
PTE_W
,

173 0x08b000 | 
PTE_P
 | 
PTE_W
,

174 0x08c000 | 
PTE_P
 | 
PTE_W
,

175 0x08d000 | 
PTE_P
 | 
PTE_W
,

176 0x08e000 | 
PTE_P
 | 
PTE_W
,

177 0x08f000 | 
PTE_P
 | 
PTE_W
,

178 0x090000 | 
PTE_P
 | 
PTE_W
,

179 0x091000 | 
PTE_P
 | 
PTE_W
,

180 0x092000 | 
PTE_P
 | 
PTE_W
,

181 0x093000 | 
PTE_P
 | 
PTE_W
,

182 0x094000 | 
PTE_P
 | 
PTE_W
,

183 0x095000 | 
PTE_P
 | 
PTE_W
,

184 0x096000 | 
PTE_P
 | 
PTE_W
,

185 0x097000 | 
PTE_P
 | 
PTE_W
,

186 0x098000 | 
PTE_P
 | 
PTE_W
,

187 0x099000 | 
PTE_P
 | 
PTE_W
,

188 0x09a000 | 
PTE_P
 | 
PTE_W
,

189 0x09b000 | 
PTE_P
 | 
PTE_W
,

190 0x09c000 | 
PTE_P
 | 
PTE_W
,

191 0x09d000 | 
PTE_P
 | 
PTE_W
,

192 0x09e000 | 
PTE_P
 | 
PTE_W
,

193 0x09f000 | 
PTE_P
 | 
PTE_W
,

194 0x0a0000 | 
PTE_P
 | 
PTE_W
,

195 0x0a1000 | 
PTE_P
 | 
PTE_W
,

196 0x0a2000 | 
PTE_P
 | 
PTE_W
,

197 0x0a3000 | 
PTE_P
 | 
PTE_W
,

198 0x0a4000 | 
PTE_P
 | 
PTE_W
,

199 0x0a5000 | 
PTE_P
 | 
PTE_W
,

200 0x0a6000 | 
PTE_P
 | 
PTE_W
,

201 0x0a7000 | 
PTE_P
 | 
PTE_W
,

202 0x0a8000 | 
PTE_P
 | 
PTE_W
,

203 0x0a9000 | 
PTE_P
 | 
PTE_W
,

204 0x0Ø000 | 
PTE_P
 | 
PTE_W
,

205 0x0ab000 | 
PTE_P
 | 
PTE_W
,

206 0x0ac000 | 
PTE_P
 | 
PTE_W
,

207 0x0ad000 | 
PTE_P
 | 
PTE_W
,

208 0x0´000 | 
PTE_P
 | 
PTE_W
,

209 0x0af000 | 
PTE_P
 | 
PTE_W
,

210 0x0b0000 | 
PTE_P
 | 
PTE_W
,

211 0x0b1000 | 
PTE_P
 | 
PTE_W
,

212 0x0b2000 | 
PTE_P
 | 
PTE_W
,

213 0x0b3000 | 
PTE_P
 | 
PTE_W
,

214 0x0b4000 | 
PTE_P
 | 
PTE_W
,

215 0x0b5000 | 
PTE_P
 | 
PTE_W
,

216 0x0b6000 | 
PTE_P
 | 
PTE_W
,

217 0x0b7000 | 
PTE_P
 | 
PTE_W
,

218 0x0b8000 | 
PTE_P
 | 
PTE_W
,

219 0x0b9000 | 
PTE_P
 | 
PTE_W
,

220 0x0ba000 | 
PTE_P
 | 
PTE_W
,

221 0x0bb000 | 
PTE_P
 | 
PTE_W
,

222 0x0bc000 | 
PTE_P
 | 
PTE_W
,

223 0x0bd000 | 
PTE_P
 | 
PTE_W
,

224 0x0be000 | 
PTE_P
 | 
PTE_W
,

225 0x0bf000 | 
PTE_P
 | 
PTE_W
,

226 0x0c0000 | 
PTE_P
 | 
PTE_W
,

227 0x0c1000 | 
PTE_P
 | 
PTE_W
,

228 0x0c2000 | 
PTE_P
 | 
PTE_W
,

229 0x0c3000 | 
PTE_P
 | 
PTE_W
,

230 0x0c4000 | 
PTE_P
 | 
PTE_W
,

231 0x0c5000 | 
PTE_P
 | 
PTE_W
,

232 0x0c6000 | 
PTE_P
 | 
PTE_W
,

233 0x0c7000 | 
PTE_P
 | 
PTE_W
,

234 0x0c8000 | 
PTE_P
 | 
PTE_W
,

235 0x0c9000 | 
PTE_P
 | 
PTE_W
,

236 0x0ˇ000 | 
PTE_P
 | 
PTE_W
,

237 0x0cb000 | 
PTE_P
 | 
PTE_W
,

238 0x0cc000 | 
PTE_P
 | 
PTE_W
,

239 0x0cd000 | 
PTE_P
 | 
PTE_W
,

240 0x0˚000 | 
PTE_P
 | 
PTE_W
,

241 0x0cf000 | 
PTE_P
 | 
PTE_W
,

242 0x0d0000 | 
PTE_P
 | 
PTE_W
,

243 0x0d1000 | 
PTE_P
 | 
PTE_W
,

244 0x0d2000 | 
PTE_P
 | 
PTE_W
,

245 0x0d3000 | 
PTE_P
 | 
PTE_W
,

246 0x0d4000 | 
PTE_P
 | 
PTE_W
,

247 0x0d5000 | 
PTE_P
 | 
PTE_W
,

248 0x0d6000 | 
PTE_P
 | 
PTE_W
,

249 0x0d7000 | 
PTE_P
 | 
PTE_W
,

250 0x0d8000 | 
PTE_P
 | 
PTE_W
,

251 0x0d9000 | 
PTE_P
 | 
PTE_W
,

252 0x0da000 | 
PTE_P
 | 
PTE_W
,

253 0x0db000 | 
PTE_P
 | 
PTE_W
,

254 0x0dc000 | 
PTE_P
 | 
PTE_W
,

255 0x0dd000 | 
PTE_P
 | 
PTE_W
,

256 0x0de000 | 
PTE_P
 | 
PTE_W
,

257 0x0df000 | 
PTE_P
 | 
PTE_W
,

258 0x0e0000 | 
PTE_P
 | 
PTE_W
,

259 0x0e1000 | 
PTE_P
 | 
PTE_W
,

260 0x0e2000 | 
PTE_P
 | 
PTE_W
,

261 0x0e3000 | 
PTE_P
 | 
PTE_W
,

262 0x0e4000 | 
PTE_P
 | 
PTE_W
,

263 0x0e5000 | 
PTE_P
 | 
PTE_W
,

264 0x0e6000 | 
PTE_P
 | 
PTE_W
,

265 0x0e7000 | 
PTE_P
 | 
PTE_W
,

266 0x0e8000 | 
PTE_P
 | 
PTE_W
,

267 0x0e9000 | 
PTE_P
 | 
PTE_W
,

268 0x0ó000 | 
PTE_P
 | 
PTE_W
,

269 0x0eb000 | 
PTE_P
 | 
PTE_W
,

270 0x0ec000 | 
PTE_P
 | 
PTE_W
,

271 0x0ed000 | 
PTE_P
 | 
PTE_W
,

272 0x0ì000 | 
PTE_P
 | 
PTE_W
,

273 0x0ef000 | 
PTE_P
 | 
PTE_W
,

274 0x0f0000 | 
PTE_P
 | 
PTE_W
,

275 0x0f1000 | 
PTE_P
 | 
PTE_W
,

276 0x0f2000 | 
PTE_P
 | 
PTE_W
,

277 0x0f3000 | 
PTE_P
 | 
PTE_W
,

278 0x0f4000 | 
PTE_P
 | 
PTE_W
,

279 0x0f5000 | 
PTE_P
 | 
PTE_W
,

280 0x0f6000 | 
PTE_P
 | 
PTE_W
,

281 0x0f7000 | 
PTE_P
 | 
PTE_W
,

282 0x0f8000 | 
PTE_P
 | 
PTE_W
,

283 0x0f9000 | 
PTE_P
 | 
PTE_W
,

284 0x0Á000 | 
PTE_P
 | 
PTE_W
,

285 0x0fb000 | 
PTE_P
 | 
PTE_W
,

286 0x0fc000 | 
PTE_P
 | 
PTE_W
,

287 0x0fd000 | 
PTE_P
 | 
PTE_W
,

288 0x0„000 | 
PTE_P
 | 
PTE_W
,

289 0x0ff000 | 
PTE_P
 | 
PTE_W
,

290 0x100000 | 
PTE_P
 | 
PTE_W
,

291 0x101000 | 
PTE_P
 | 
PTE_W
,

292 0x102000 | 
PTE_P
 | 
PTE_W
,

293 0x103000 | 
PTE_P
 | 
PTE_W
,

294 0x104000 | 
PTE_P
 | 
PTE_W
,

295 0x105000 | 
PTE_P
 | 
PTE_W
,

296 0x106000 | 
PTE_P
 | 
PTE_W
,

297 0x107000 | 
PTE_P
 | 
PTE_W
,

298 0x108000 | 
PTE_P
 | 
PTE_W
,

299 0x109000 | 
PTE_P
 | 
PTE_W
,

300 0x10a000 | 
PTE_P
 | 
PTE_W
,

301 0x10b000 | 
PTE_P
 | 
PTE_W
,

302 0x10c000 | 
PTE_P
 | 
PTE_W
,

303 0x10d000 | 
PTE_P
 | 
PTE_W
,

304 0x10e000 | 
PTE_P
 | 
PTE_W
,

305 0x10f000 | 
PTE_P
 | 
PTE_W
,

306 0x110000 | 
PTE_P
 | 
PTE_W
,

307 0x111000 | 
PTE_P
 | 
PTE_W
,

308 0x112000 | 
PTE_P
 | 
PTE_W
,

309 0x113000 | 
PTE_P
 | 
PTE_W
,

310 0x114000 | 
PTE_P
 | 
PTE_W
,

311 0x115000 | 
PTE_P
 | 
PTE_W
,

312 0x116000 | 
PTE_P
 | 
PTE_W
,

313 0x117000 | 
PTE_P
 | 
PTE_W
,

314 0x118000 | 
PTE_P
 | 
PTE_W
,

315 0x119000 | 
PTE_P
 | 
PTE_W
,

316 0x11a000 | 
PTE_P
 | 
PTE_W
,

317 0x11b000 | 
PTE_P
 | 
PTE_W
,

318 0x11c000 | 
PTE_P
 | 
PTE_W
,

319 0x11d000 | 
PTE_P
 | 
PTE_W
,

320 0x11e000 | 
PTE_P
 | 
PTE_W
,

321 0x11f000 | 
PTE_P
 | 
PTE_W
,

322 0x120000 | 
PTE_P
 | 
PTE_W
,

323 0x121000 | 
PTE_P
 | 
PTE_W
,

324 0x122000 | 
PTE_P
 | 
PTE_W
,

325 0x123000 | 
PTE_P
 | 
PTE_W
,

326 0x124000 | 
PTE_P
 | 
PTE_W
,

327 0x125000 | 
PTE_P
 | 
PTE_W
,

328 0x126000 | 
PTE_P
 | 
PTE_W
,

329 0x127000 | 
PTE_P
 | 
PTE_W
,

330 0x128000 | 
PTE_P
 | 
PTE_W
,

331 0x129000 | 
PTE_P
 | 
PTE_W
,

332 0x12a000 | 
PTE_P
 | 
PTE_W
,

333 0x12b000 | 
PTE_P
 | 
PTE_W
,

334 0x12c000 | 
PTE_P
 | 
PTE_W
,

335 0x12d000 | 
PTE_P
 | 
PTE_W
,

336 0x12e000 | 
PTE_P
 | 
PTE_W
,

337 0x12f000 | 
PTE_P
 | 
PTE_W
,

338 0x130000 | 
PTE_P
 | 
PTE_W
,

339 0x131000 | 
PTE_P
 | 
PTE_W
,

340 0x132000 | 
PTE_P
 | 
PTE_W
,

341 0x133000 | 
PTE_P
 | 
PTE_W
,

342 0x134000 | 
PTE_P
 | 
PTE_W
,

343 0x135000 | 
PTE_P
 | 
PTE_W
,

344 0x136000 | 
PTE_P
 | 
PTE_W
,

345 0x137000 | 
PTE_P
 | 
PTE_W
,

346 0x138000 | 
PTE_P
 | 
PTE_W
,

347 0x139000 | 
PTE_P
 | 
PTE_W
,

348 0x13a000 | 
PTE_P
 | 
PTE_W
,

349 0x13b000 | 
PTE_P
 | 
PTE_W
,

350 0x13c000 | 
PTE_P
 | 
PTE_W
,

351 0x13d000 | 
PTE_P
 | 
PTE_W
,

352 0x13e000 | 
PTE_P
 | 
PTE_W
,

353 0x13f000 | 
PTE_P
 | 
PTE_W
,

354 0x140000 | 
PTE_P
 | 
PTE_W
,

355 0x141000 | 
PTE_P
 | 
PTE_W
,

356 0x142000 | 
PTE_P
 | 
PTE_W
,

357 0x143000 | 
PTE_P
 | 
PTE_W
,

358 0x144000 | 
PTE_P
 | 
PTE_W
,

359 0x145000 | 
PTE_P
 | 
PTE_W
,

360 0x146000 | 
PTE_P
 | 
PTE_W
,

361 0x147000 | 
PTE_P
 | 
PTE_W
,

362 0x148000 | 
PTE_P
 | 
PTE_W
,

363 0x149000 | 
PTE_P
 | 
PTE_W
,

364 0x14a000 | 
PTE_P
 | 
PTE_W
,

365 0x14b000 | 
PTE_P
 | 
PTE_W
,

366 0x14c000 | 
PTE_P
 | 
PTE_W
,

367 0x14d000 | 
PTE_P
 | 
PTE_W
,

368 0x14e000 | 
PTE_P
 | 
PTE_W
,

369 0x14f000 | 
PTE_P
 | 
PTE_W
,

370 0x150000 | 
PTE_P
 | 
PTE_W
,

371 0x151000 | 
PTE_P
 | 
PTE_W
,

372 0x152000 | 
PTE_P
 | 
PTE_W
,

373 0x153000 | 
PTE_P
 | 
PTE_W
,

374 0x154000 | 
PTE_P
 | 
PTE_W
,

375 0x155000 | 
PTE_P
 | 
PTE_W
,

376 0x156000 | 
PTE_P
 | 
PTE_W
,

377 0x157000 | 
PTE_P
 | 
PTE_W
,

378 0x158000 | 
PTE_P
 | 
PTE_W
,

379 0x159000 | 
PTE_P
 | 
PTE_W
,

380 0x15a000 | 
PTE_P
 | 
PTE_W
,

381 0x15b000 | 
PTE_P
 | 
PTE_W
,

382 0x15c000 | 
PTE_P
 | 
PTE_W
,

383 0x15d000 | 
PTE_P
 | 
PTE_W
,

384 0x15e000 | 
PTE_P
 | 
PTE_W
,

385 0x15f000 | 
PTE_P
 | 
PTE_W
,

386 0x160000 | 
PTE_P
 | 
PTE_W
,

387 0x161000 | 
PTE_P
 | 
PTE_W
,

388 0x162000 | 
PTE_P
 | 
PTE_W
,

389 0x163000 | 
PTE_P
 | 
PTE_W
,

390 0x164000 | 
PTE_P
 | 
PTE_W
,

391 0x165000 | 
PTE_P
 | 
PTE_W
,

392 0x166000 | 
PTE_P
 | 
PTE_W
,

393 0x167000 | 
PTE_P
 | 
PTE_W
,

394 0x168000 | 
PTE_P
 | 
PTE_W
,

395 0x169000 | 
PTE_P
 | 
PTE_W
,

396 0x16a000 | 
PTE_P
 | 
PTE_W
,

397 0x16b000 | 
PTE_P
 | 
PTE_W
,

398 0x16c000 | 
PTE_P
 | 
PTE_W
,

399 0x16d000 | 
PTE_P
 | 
PTE_W
,

400 0x16e000 | 
PTE_P
 | 
PTE_W
,

401 0x16f000 | 
PTE_P
 | 
PTE_W
,

402 0x170000 | 
PTE_P
 | 
PTE_W
,

403 0x171000 | 
PTE_P
 | 
PTE_W
,

404 0x172000 | 
PTE_P
 | 
PTE_W
,

405 0x173000 | 
PTE_P
 | 
PTE_W
,

406 0x174000 | 
PTE_P
 | 
PTE_W
,

407 0x175000 | 
PTE_P
 | 
PTE_W
,

408 0x176000 | 
PTE_P
 | 
PTE_W
,

409 0x177000 | 
PTE_P
 | 
PTE_W
,

410 0x178000 | 
PTE_P
 | 
PTE_W
,

411 0x179000 | 
PTE_P
 | 
PTE_W
,

412 0x17a000 | 
PTE_P
 | 
PTE_W
,

413 0x17b000 | 
PTE_P
 | 
PTE_W
,

414 0x17c000 | 
PTE_P
 | 
PTE_W
,

415 0x17d000 | 
PTE_P
 | 
PTE_W
,

416 0x17e000 | 
PTE_P
 | 
PTE_W
,

417 0x17f000 | 
PTE_P
 | 
PTE_W
,

418 0x180000 | 
PTE_P
 | 
PTE_W
,

419 0x181000 | 
PTE_P
 | 
PTE_W
,

420 0x182000 | 
PTE_P
 | 
PTE_W
,

421 0x183000 | 
PTE_P
 | 
PTE_W
,

422 0x184000 | 
PTE_P
 | 
PTE_W
,

423 0x185000 | 
PTE_P
 | 
PTE_W
,

424 0x186000 | 
PTE_P
 | 
PTE_W
,

425 0x187000 | 
PTE_P
 | 
PTE_W
,

426 0x188000 | 
PTE_P
 | 
PTE_W
,

427 0x189000 | 
PTE_P
 | 
PTE_W
,

428 0x18a000 | 
PTE_P
 | 
PTE_W
,

429 0x18b000 | 
PTE_P
 | 
PTE_W
,

430 0x18c000 | 
PTE_P
 | 
PTE_W
,

431 0x18d000 | 
PTE_P
 | 
PTE_W
,

432 0x18e000 | 
PTE_P
 | 
PTE_W
,

433 0x18f000 | 
PTE_P
 | 
PTE_W
,

434 0x190000 | 
PTE_P
 | 
PTE_W
,

435 0x191000 | 
PTE_P
 | 
PTE_W
,

436 0x192000 | 
PTE_P
 | 
PTE_W
,

437 0x193000 | 
PTE_P
 | 
PTE_W
,

438 0x194000 | 
PTE_P
 | 
PTE_W
,

439 0x195000 | 
PTE_P
 | 
PTE_W
,

440 0x196000 | 
PTE_P
 | 
PTE_W
,

441 0x197000 | 
PTE_P
 | 
PTE_W
,

442 0x198000 | 
PTE_P
 | 
PTE_W
,

443 0x199000 | 
PTE_P
 | 
PTE_W
,

444 0x19a000 | 
PTE_P
 | 
PTE_W
,

445 0x19b000 | 
PTE_P
 | 
PTE_W
,

446 0x19c000 | 
PTE_P
 | 
PTE_W
,

447 0x19d000 | 
PTE_P
 | 
PTE_W
,

448 0x19e000 | 
PTE_P
 | 
PTE_W
,

449 0x19f000 | 
PTE_P
 | 
PTE_W
,

450 0x1a0000 | 
PTE_P
 | 
PTE_W
,

451 0x1a1000 | 
PTE_P
 | 
PTE_W
,

452 0x1a2000 | 
PTE_P
 | 
PTE_W
,

453 0x1a3000 | 
PTE_P
 | 
PTE_W
,

454 0x1a4000 | 
PTE_P
 | 
PTE_W
,

455 0x1a5000 | 
PTE_P
 | 
PTE_W
,

456 0x1a6000 | 
PTE_P
 | 
PTE_W
,

457 0x1a7000 | 
PTE_P
 | 
PTE_W
,

458 0x1a8000 | 
PTE_P
 | 
PTE_W
,

459 0x1a9000 | 
PTE_P
 | 
PTE_W
,

460 0x1Ø000 | 
PTE_P
 | 
PTE_W
,

461 0x1ab000 | 
PTE_P
 | 
PTE_W
,

462 0x1ac000 | 
PTE_P
 | 
PTE_W
,

463 0x1ad000 | 
PTE_P
 | 
PTE_W
,

464 0x1´000 | 
PTE_P
 | 
PTE_W
,

465 0x1af000 | 
PTE_P
 | 
PTE_W
,

466 0x1b0000 | 
PTE_P
 | 
PTE_W
,

467 0x1b1000 | 
PTE_P
 | 
PTE_W
,

468 0x1b2000 | 
PTE_P
 | 
PTE_W
,

469 0x1b3000 | 
PTE_P
 | 
PTE_W
,

470 0x1b4000 | 
PTE_P
 | 
PTE_W
,

471 0x1b5000 | 
PTE_P
 | 
PTE_W
,

472 0x1b6000 | 
PTE_P
 | 
PTE_W
,

473 0x1b7000 | 
PTE_P
 | 
PTE_W
,

474 0x1b8000 | 
PTE_P
 | 
PTE_W
,

475 0x1b9000 | 
PTE_P
 | 
PTE_W
,

476 0x1ba000 | 
PTE_P
 | 
PTE_W
,

477 0x1bb000 | 
PTE_P
 | 
PTE_W
,

478 0x1bc000 | 
PTE_P
 | 
PTE_W
,

479 0x1bd000 | 
PTE_P
 | 
PTE_W
,

480 0x1be000 | 
PTE_P
 | 
PTE_W
,

481 0x1bf000 | 
PTE_P
 | 
PTE_W
,

482 0x1c0000 | 
PTE_P
 | 
PTE_W
,

483 0x1c1000 | 
PTE_P
 | 
PTE_W
,

484 0x1c2000 | 
PTE_P
 | 
PTE_W
,

485 0x1c3000 | 
PTE_P
 | 
PTE_W
,

486 0x1c4000 | 
PTE_P
 | 
PTE_W
,

487 0x1c5000 | 
PTE_P
 | 
PTE_W
,

488 0x1c6000 | 
PTE_P
 | 
PTE_W
,

489 0x1c7000 | 
PTE_P
 | 
PTE_W
,

490 0x1c8000 | 
PTE_P
 | 
PTE_W
,

491 0x1c9000 | 
PTE_P
 | 
PTE_W
,

492 0x1ˇ000 | 
PTE_P
 | 
PTE_W
,

493 0x1cb000 | 
PTE_P
 | 
PTE_W
,

494 0x1cc000 | 
PTE_P
 | 
PTE_W
,

495 0x1cd000 | 
PTE_P
 | 
PTE_W
,

496 0x1˚000 | 
PTE_P
 | 
PTE_W
,

497 0x1cf000 | 
PTE_P
 | 
PTE_W
,

498 0x1d0000 | 
PTE_P
 | 
PTE_W
,

499 0x1d1000 | 
PTE_P
 | 
PTE_W
,

500 0x1d2000 | 
PTE_P
 | 
PTE_W
,

501 0x1d3000 | 
PTE_P
 | 
PTE_W
,

502 0x1d4000 | 
PTE_P
 | 
PTE_W
,

503 0x1d5000 | 
PTE_P
 | 
PTE_W
,

504 0x1d6000 | 
PTE_P
 | 
PTE_W
,

505 0x1d7000 | 
PTE_P
 | 
PTE_W
,

506 0x1d8000 | 
PTE_P
 | 
PTE_W
,

507 0x1d9000 | 
PTE_P
 | 
PTE_W
,

508 0x1da000 | 
PTE_P
 | 
PTE_W
,

509 0x1db000 | 
PTE_P
 | 
PTE_W
,

510 0x1dc000 | 
PTE_P
 | 
PTE_W
,

511 0x1dd000 | 
PTE_P
 | 
PTE_W
,

512 0x1de000 | 
PTE_P
 | 
PTE_W
,

513 0x1df000 | 
PTE_P
 | 
PTE_W
,

514 0x1e0000 | 
PTE_P
 | 
PTE_W
,

515 0x1e1000 | 
PTE_P
 | 
PTE_W
,

516 0x1e2000 | 
PTE_P
 | 
PTE_W
,

517 0x1e3000 | 
PTE_P
 | 
PTE_W
,

518 0x1e4000 | 
PTE_P
 | 
PTE_W
,

519 0x1e5000 | 
PTE_P
 | 
PTE_W
,

520 0x1e6000 | 
PTE_P
 | 
PTE_W
,

521 0x1e7000 | 
PTE_P
 | 
PTE_W
,

522 0x1e8000 | 
PTE_P
 | 
PTE_W
,

523 0x1e9000 | 
PTE_P
 | 
PTE_W
,

524 0x1ó000 | 
PTE_P
 | 
PTE_W
,

525 0x1eb000 | 
PTE_P
 | 
PTE_W
,

526 0x1ec000 | 
PTE_P
 | 
PTE_W
,

527 0x1ed000 | 
PTE_P
 | 
PTE_W
,

528 0x1ì000 | 
PTE_P
 | 
PTE_W
,

529 0x1ef000 | 
PTE_P
 | 
PTE_W
,

530 0x1f0000 | 
PTE_P
 | 
PTE_W
,

531 0x1f1000 | 
PTE_P
 | 
PTE_W
,

532 0x1f2000 | 
PTE_P
 | 
PTE_W
,

533 0x1f3000 | 
PTE_P
 | 
PTE_W
,

534 0x1f4000 | 
PTE_P
 | 
PTE_W
,

535 0x1f5000 | 
PTE_P
 | 
PTE_W
,

536 0x1f6000 | 
PTE_P
 | 
PTE_W
,

537 0x1f7000 | 
PTE_P
 | 
PTE_W
,

538 0x1f8000 | 
PTE_P
 | 
PTE_W
,

539 0x1f9000 | 
PTE_P
 | 
PTE_W
,

540 0x1Á000 | 
PTE_P
 | 
PTE_W
,

541 0x1fb000 | 
PTE_P
 | 
PTE_W
,

542 0x1fc000 | 
PTE_P
 | 
PTE_W
,

543 0x1fd000 | 
PTE_P
 | 
PTE_W
,

544 0x1„000 | 
PTE_P
 | 
PTE_W
,

545 0x1ff000 | 
PTE_P
 | 
PTE_W
,

546 0x200000 | 
PTE_P
 | 
PTE_W
,

547 0x201000 | 
PTE_P
 | 
PTE_W
,

548 0x202000 | 
PTE_P
 | 
PTE_W
,

549 0x203000 | 
PTE_P
 | 
PTE_W
,

550 0x204000 | 
PTE_P
 | 
PTE_W
,

551 0x205000 | 
PTE_P
 | 
PTE_W
,

552 0x206000 | 
PTE_P
 | 
PTE_W
,

553 0x207000 | 
PTE_P
 | 
PTE_W
,

554 0x208000 | 
PTE_P
 | 
PTE_W
,

555 0x209000 | 
PTE_P
 | 
PTE_W
,

556 0x20a000 | 
PTE_P
 | 
PTE_W
,

557 0x20b000 | 
PTE_P
 | 
PTE_W
,

558 0x20c000 | 
PTE_P
 | 
PTE_W
,

559 0x20d000 | 
PTE_P
 | 
PTE_W
,

560 0x20e000 | 
PTE_P
 | 
PTE_W
,

561 0x20f000 | 
PTE_P
 | 
PTE_W
,

562 0x210000 | 
PTE_P
 | 
PTE_W
,

563 0x211000 | 
PTE_P
 | 
PTE_W
,

564 0x212000 | 
PTE_P
 | 
PTE_W
,

565 0x213000 | 
PTE_P
 | 
PTE_W
,

566 0x214000 | 
PTE_P
 | 
PTE_W
,

567 0x215000 | 
PTE_P
 | 
PTE_W
,

568 0x216000 | 
PTE_P
 | 
PTE_W
,

569 0x217000 | 
PTE_P
 | 
PTE_W
,

570 0x218000 | 
PTE_P
 | 
PTE_W
,

571 0x219000 | 
PTE_P
 | 
PTE_W
,

572 0x21a000 | 
PTE_P
 | 
PTE_W
,

573 0x21b000 | 
PTE_P
 | 
PTE_W
,

574 0x21c000 | 
PTE_P
 | 
PTE_W
,

575 0x21d000 | 
PTE_P
 | 
PTE_W
,

576 0x21e000 | 
PTE_P
 | 
PTE_W
,

577 0x21f000 | 
PTE_P
 | 
PTE_W
,

578 0x220000 | 
PTE_P
 | 
PTE_W
,

579 0x221000 | 
PTE_P
 | 
PTE_W
,

580 0x222000 | 
PTE_P
 | 
PTE_W
,

581 0x223000 | 
PTE_P
 | 
PTE_W
,

582 0x224000 | 
PTE_P
 | 
PTE_W
,

583 0x225000 | 
PTE_P
 | 
PTE_W
,

584 0x226000 | 
PTE_P
 | 
PTE_W
,

585 0x227000 | 
PTE_P
 | 
PTE_W
,

586 0x228000 | 
PTE_P
 | 
PTE_W
,

587 0x229000 | 
PTE_P
 | 
PTE_W
,

588 0x22a000 | 
PTE_P
 | 
PTE_W
,

589 0x22b000 | 
PTE_P
 | 
PTE_W
,

590 0x22c000 | 
PTE_P
 | 
PTE_W
,

591 0x22d000 | 
PTE_P
 | 
PTE_W
,

592 0x22e000 | 
PTE_P
 | 
PTE_W
,

593 0x22f000 | 
PTE_P
 | 
PTE_W
,

594 0x230000 | 
PTE_P
 | 
PTE_W
,

595 0x231000 | 
PTE_P
 | 
PTE_W
,

596 0x232000 | 
PTE_P
 | 
PTE_W
,

597 0x233000 | 
PTE_P
 | 
PTE_W
,

598 0x234000 | 
PTE_P
 | 
PTE_W
,

599 0x235000 | 
PTE_P
 | 
PTE_W
,

600 0x236000 | 
PTE_P
 | 
PTE_W
,

601 0x237000 | 
PTE_P
 | 
PTE_W
,

602 0x238000 | 
PTE_P
 | 
PTE_W
,

603 0x239000 | 
PTE_P
 | 
PTE_W
,

604 0x23a000 | 
PTE_P
 | 
PTE_W
,

605 0x23b000 | 
PTE_P
 | 
PTE_W
,

606 0x23c000 | 
PTE_P
 | 
PTE_W
,

607 0x23d000 | 
PTE_P
 | 
PTE_W
,

608 0x23e000 | 
PTE_P
 | 
PTE_W
,

609 0x23f000 | 
PTE_P
 | 
PTE_W
,

610 0x240000 | 
PTE_P
 | 
PTE_W
,

611 0x241000 | 
PTE_P
 | 
PTE_W
,

612 0x242000 | 
PTE_P
 | 
PTE_W
,

613 0x243000 | 
PTE_P
 | 
PTE_W
,

614 0x244000 | 
PTE_P
 | 
PTE_W
,

615 0x245000 | 
PTE_P
 | 
PTE_W
,

616 0x246000 | 
PTE_P
 | 
PTE_W
,

617 0x247000 | 
PTE_P
 | 
PTE_W
,

618 0x248000 | 
PTE_P
 | 
PTE_W
,

619 0x249000 | 
PTE_P
 | 
PTE_W
,

620 0x24a000 | 
PTE_P
 | 
PTE_W
,

621 0x24b000 | 
PTE_P
 | 
PTE_W
,

622 0x24c000 | 
PTE_P
 | 
PTE_W
,

623 0x24d000 | 
PTE_P
 | 
PTE_W
,

624 0x24e000 | 
PTE_P
 | 
PTE_W
,

625 0x24f000 | 
PTE_P
 | 
PTE_W
,

626 0x250000 | 
PTE_P
 | 
PTE_W
,

627 0x251000 | 
PTE_P
 | 
PTE_W
,

628 0x252000 | 
PTE_P
 | 
PTE_W
,

629 0x253000 | 
PTE_P
 | 
PTE_W
,

630 0x254000 | 
PTE_P
 | 
PTE_W
,

631 0x255000 | 
PTE_P
 | 
PTE_W
,

632 0x256000 | 
PTE_P
 | 
PTE_W
,

633 0x257000 | 
PTE_P
 | 
PTE_W
,

634 0x258000 | 
PTE_P
 | 
PTE_W
,

635 0x259000 | 
PTE_P
 | 
PTE_W
,

636 0x25a000 | 
PTE_P
 | 
PTE_W
,

637 0x25b000 | 
PTE_P
 | 
PTE_W
,

638 0x25c000 | 
PTE_P
 | 
PTE_W
,

639 0x25d000 | 
PTE_P
 | 
PTE_W
,

640 0x25e000 | 
PTE_P
 | 
PTE_W
,

641 0x25f000 | 
PTE_P
 | 
PTE_W
,

642 0x260000 | 
PTE_P
 | 
PTE_W
,

643 0x261000 | 
PTE_P
 | 
PTE_W
,

644 0x262000 | 
PTE_P
 | 
PTE_W
,

645 0x263000 | 
PTE_P
 | 
PTE_W
,

646 0x264000 | 
PTE_P
 | 
PTE_W
,

647 0x265000 | 
PTE_P
 | 
PTE_W
,

648 0x266000 | 
PTE_P
 | 
PTE_W
,

649 0x267000 | 
PTE_P
 | 
PTE_W
,

650 0x268000 | 
PTE_P
 | 
PTE_W
,

651 0x269000 | 
PTE_P
 | 
PTE_W
,

652 0x26a000 | 
PTE_P
 | 
PTE_W
,

653 0x26b000 | 
PTE_P
 | 
PTE_W
,

654 0x26c000 | 
PTE_P
 | 
PTE_W
,

655 0x26d000 | 
PTE_P
 | 
PTE_W
,

656 0x26e000 | 
PTE_P
 | 
PTE_W
,

657 0x26f000 | 
PTE_P
 | 
PTE_W
,

658 0x270000 | 
PTE_P
 | 
PTE_W
,

659 0x271000 | 
PTE_P
 | 
PTE_W
,

660 0x272000 | 
PTE_P
 | 
PTE_W
,

661 0x273000 | 
PTE_P
 | 
PTE_W
,

662 0x274000 | 
PTE_P
 | 
PTE_W
,

663 0x275000 | 
PTE_P
 | 
PTE_W
,

664 0x276000 | 
PTE_P
 | 
PTE_W
,

665 0x277000 | 
PTE_P
 | 
PTE_W
,

666 0x278000 | 
PTE_P
 | 
PTE_W
,

667 0x279000 | 
PTE_P
 | 
PTE_W
,

668 0x27a000 | 
PTE_P
 | 
PTE_W
,

669 0x27b000 | 
PTE_P
 | 
PTE_W
,

670 0x27c000 | 
PTE_P
 | 
PTE_W
,

671 0x27d000 | 
PTE_P
 | 
PTE_W
,

672 0x27e000 | 
PTE_P
 | 
PTE_W
,

673 0x27f000 | 
PTE_P
 | 
PTE_W
,

674 0x280000 | 
PTE_P
 | 
PTE_W
,

675 0x281000 | 
PTE_P
 | 
PTE_W
,

676 0x282000 | 
PTE_P
 | 
PTE_W
,

677 0x283000 | 
PTE_P
 | 
PTE_W
,

678 0x284000 | 
PTE_P
 | 
PTE_W
,

679 0x285000 | 
PTE_P
 | 
PTE_W
,

680 0x286000 | 
PTE_P
 | 
PTE_W
,

681 0x287000 | 
PTE_P
 | 
PTE_W
,

682 0x288000 | 
PTE_P
 | 
PTE_W
,

683 0x289000 | 
PTE_P
 | 
PTE_W
,

684 0x28a000 | 
PTE_P
 | 
PTE_W
,

685 0x28b000 | 
PTE_P
 | 
PTE_W
,

686 0x28c000 | 
PTE_P
 | 
PTE_W
,

687 0x28d000 | 
PTE_P
 | 
PTE_W
,

688 0x28e000 | 
PTE_P
 | 
PTE_W
,

689 0x28f000 | 
PTE_P
 | 
PTE_W
,

690 0x290000 | 
PTE_P
 | 
PTE_W
,

691 0x291000 | 
PTE_P
 | 
PTE_W
,

692 0x292000 | 
PTE_P
 | 
PTE_W
,

693 0x293000 | 
PTE_P
 | 
PTE_W
,

694 0x294000 | 
PTE_P
 | 
PTE_W
,

695 0x295000 | 
PTE_P
 | 
PTE_W
,

696 0x296000 | 
PTE_P
 | 
PTE_W
,

697 0x297000 | 
PTE_P
 | 
PTE_W
,

698 0x298000 | 
PTE_P
 | 
PTE_W
,

699 0x299000 | 
PTE_P
 | 
PTE_W
,

700 0x29a000 | 
PTE_P
 | 
PTE_W
,

701 0x29b000 | 
PTE_P
 | 
PTE_W
,

702 0x29c000 | 
PTE_P
 | 
PTE_W
,

703 0x29d000 | 
PTE_P
 | 
PTE_W
,

704 0x29e000 | 
PTE_P
 | 
PTE_W
,

705 0x29f000 | 
PTE_P
 | 
PTE_W
,

706 0x2a0000 | 
PTE_P
 | 
PTE_W
,

707 0x2a1000 | 
PTE_P
 | 
PTE_W
,

708 0x2a2000 | 
PTE_P
 | 
PTE_W
,

709 0x2a3000 | 
PTE_P
 | 
PTE_W
,

710 0x2a4000 | 
PTE_P
 | 
PTE_W
,

711 0x2a5000 | 
PTE_P
 | 
PTE_W
,

712 0x2a6000 | 
PTE_P
 | 
PTE_W
,

713 0x2a7000 | 
PTE_P
 | 
PTE_W
,

714 0x2a8000 | 
PTE_P
 | 
PTE_W
,

715 0x2a9000 | 
PTE_P
 | 
PTE_W
,

716 0x2Ø000 | 
PTE_P
 | 
PTE_W
,

717 0x2ab000 | 
PTE_P
 | 
PTE_W
,

718 0x2ac000 | 
PTE_P
 | 
PTE_W
,

719 0x2ad000 | 
PTE_P
 | 
PTE_W
,

720 0x2´000 | 
PTE_P
 | 
PTE_W
,

721 0x2af000 | 
PTE_P
 | 
PTE_W
,

722 0x2b0000 | 
PTE_P
 | 
PTE_W
,

723 0x2b1000 | 
PTE_P
 | 
PTE_W
,

724 0x2b2000 | 
PTE_P
 | 
PTE_W
,

725 0x2b3000 | 
PTE_P
 | 
PTE_W
,

726 0x2b4000 | 
PTE_P
 | 
PTE_W
,

727 0x2b5000 | 
PTE_P
 | 
PTE_W
,

728 0x2b6000 | 
PTE_P
 | 
PTE_W
,

729 0x2b7000 | 
PTE_P
 | 
PTE_W
,

730 0x2b8000 | 
PTE_P
 | 
PTE_W
,

731 0x2b9000 | 
PTE_P
 | 
PTE_W
,

732 0x2ba000 | 
PTE_P
 | 
PTE_W
,

733 0x2bb000 | 
PTE_P
 | 
PTE_W
,

734 0x2bc000 | 
PTE_P
 | 
PTE_W
,

735 0x2bd000 | 
PTE_P
 | 
PTE_W
,

736 0x2be000 | 
PTE_P
 | 
PTE_W
,

737 0x2bf000 | 
PTE_P
 | 
PTE_W
,

738 0x2c0000 | 
PTE_P
 | 
PTE_W
,

739 0x2c1000 | 
PTE_P
 | 
PTE_W
,

740 0x2c2000 | 
PTE_P
 | 
PTE_W
,

741 0x2c3000 | 
PTE_P
 | 
PTE_W
,

742 0x2c4000 | 
PTE_P
 | 
PTE_W
,

743 0x2c5000 | 
PTE_P
 | 
PTE_W
,

744 0x2c6000 | 
PTE_P
 | 
PTE_W
,

745 0x2c7000 | 
PTE_P
 | 
PTE_W
,

746 0x2c8000 | 
PTE_P
 | 
PTE_W
,

747 0x2c9000 | 
PTE_P
 | 
PTE_W
,

748 0x2ˇ000 | 
PTE_P
 | 
PTE_W
,

749 0x2cb000 | 
PTE_P
 | 
PTE_W
,

750 0x2cc000 | 
PTE_P
 | 
PTE_W
,

751 0x2cd000 | 
PTE_P
 | 
PTE_W
,

752 0x2˚000 | 
PTE_P
 | 
PTE_W
,

753 0x2cf000 | 
PTE_P
 | 
PTE_W
,

754 0x2d0000 | 
PTE_P
 | 
PTE_W
,

755 0x2d1000 | 
PTE_P
 | 
PTE_W
,

756 0x2d2000 | 
PTE_P
 | 
PTE_W
,

757 0x2d3000 | 
PTE_P
 | 
PTE_W
,

758 0x2d4000 | 
PTE_P
 | 
PTE_W
,

759 0x2d5000 | 
PTE_P
 | 
PTE_W
,

760 0x2d6000 | 
PTE_P
 | 
PTE_W
,

761 0x2d7000 | 
PTE_P
 | 
PTE_W
,

762 0x2d8000 | 
PTE_P
 | 
PTE_W
,

763 0x2d9000 | 
PTE_P
 | 
PTE_W
,

764 0x2da000 | 
PTE_P
 | 
PTE_W
,

765 0x2db000 | 
PTE_P
 | 
PTE_W
,

766 0x2dc000 | 
PTE_P
 | 
PTE_W
,

767 0x2dd000 | 
PTE_P
 | 
PTE_W
,

768 0x2de000 | 
PTE_P
 | 
PTE_W
,

769 0x2df000 | 
PTE_P
 | 
PTE_W
,

770 0x2e0000 | 
PTE_P
 | 
PTE_W
,

771 0x2e1000 | 
PTE_P
 | 
PTE_W
,

772 0x2e2000 | 
PTE_P
 | 
PTE_W
,

773 0x2e3000 | 
PTE_P
 | 
PTE_W
,

774 0x2e4000 | 
PTE_P
 | 
PTE_W
,

775 0x2e5000 | 
PTE_P
 | 
PTE_W
,

776 0x2e6000 | 
PTE_P
 | 
PTE_W
,

777 0x2e7000 | 
PTE_P
 | 
PTE_W
,

778 0x2e8000 | 
PTE_P
 | 
PTE_W
,

779 0x2e9000 | 
PTE_P
 | 
PTE_W
,

780 0x2ó000 | 
PTE_P
 | 
PTE_W
,

781 0x2eb000 | 
PTE_P
 | 
PTE_W
,

782 0x2ec000 | 
PTE_P
 | 
PTE_W
,

783 0x2ed000 | 
PTE_P
 | 
PTE_W
,

784 0x2ì000 | 
PTE_P
 | 
PTE_W
,

785 0x2ef000 | 
PTE_P
 | 
PTE_W
,

786 0x2f0000 | 
PTE_P
 | 
PTE_W
,

787 0x2f1000 | 
PTE_P
 | 
PTE_W
,

788 0x2f2000 | 
PTE_P
 | 
PTE_W
,

789 0x2f3000 | 
PTE_P
 | 
PTE_W
,

790 0x2f4000 | 
PTE_P
 | 
PTE_W
,

791 0x2f5000 | 
PTE_P
 | 
PTE_W
,

792 0x2f6000 | 
PTE_P
 | 
PTE_W
,

793 0x2f7000 | 
PTE_P
 | 
PTE_W
,

794 0x2f8000 | 
PTE_P
 | 
PTE_W
,

795 0x2f9000 | 
PTE_P
 | 
PTE_W
,

796 0x2Á000 | 
PTE_P
 | 
PTE_W
,

797 0x2fb000 | 
PTE_P
 | 
PTE_W
,

798 0x2fc000 | 
PTE_P
 | 
PTE_W
,

799 0x2fd000 | 
PTE_P
 | 
PTE_W
,

800 0x2„000 | 
PTE_P
 | 
PTE_W
,

801 0x2ff000 | 
PTE_P
 | 
PTE_W
,

802 0x300000 | 
PTE_P
 | 
PTE_W
,

803 0x301000 | 
PTE_P
 | 
PTE_W
,

804 0x302000 | 
PTE_P
 | 
PTE_W
,

805 0x303000 | 
PTE_P
 | 
PTE_W
,

806 0x304000 | 
PTE_P
 | 
PTE_W
,

807 0x305000 | 
PTE_P
 | 
PTE_W
,

808 0x306000 | 
PTE_P
 | 
PTE_W
,

809 0x307000 | 
PTE_P
 | 
PTE_W
,

810 0x308000 | 
PTE_P
 | 
PTE_W
,

811 0x309000 | 
PTE_P
 | 
PTE_W
,

812 0x30a000 | 
PTE_P
 | 
PTE_W
,

813 0x30b000 | 
PTE_P
 | 
PTE_W
,

814 0x30c000 | 
PTE_P
 | 
PTE_W
,

815 0x30d000 | 
PTE_P
 | 
PTE_W
,

816 0x30e000 | 
PTE_P
 | 
PTE_W
,

817 0x30f000 | 
PTE_P
 | 
PTE_W
,

818 0x310000 | 
PTE_P
 | 
PTE_W
,

819 0x311000 | 
PTE_P
 | 
PTE_W
,

820 0x312000 | 
PTE_P
 | 
PTE_W
,

821 0x313000 | 
PTE_P
 | 
PTE_W
,

822 0x314000 | 
PTE_P
 | 
PTE_W
,

823 0x315000 | 
PTE_P
 | 
PTE_W
,

824 0x316000 | 
PTE_P
 | 
PTE_W
,

825 0x317000 | 
PTE_P
 | 
PTE_W
,

826 0x318000 | 
PTE_P
 | 
PTE_W
,

827 0x319000 | 
PTE_P
 | 
PTE_W
,

828 0x31a000 | 
PTE_P
 | 
PTE_W
,

829 0x31b000 | 
PTE_P
 | 
PTE_W
,

830 0x31c000 | 
PTE_P
 | 
PTE_W
,

831 0x31d000 | 
PTE_P
 | 
PTE_W
,

832 0x31e000 | 
PTE_P
 | 
PTE_W
,

833 0x31f000 | 
PTE_P
 | 
PTE_W
,

834 0x320000 | 
PTE_P
 | 
PTE_W
,

835 0x321000 | 
PTE_P
 | 
PTE_W
,

836 0x322000 | 
PTE_P
 | 
PTE_W
,

837 0x323000 | 
PTE_P
 | 
PTE_W
,

838 0x324000 | 
PTE_P
 | 
PTE_W
,

839 0x325000 | 
PTE_P
 | 
PTE_W
,

840 0x326000 | 
PTE_P
 | 
PTE_W
,

841 0x327000 | 
PTE_P
 | 
PTE_W
,

842 0x328000 | 
PTE_P
 | 
PTE_W
,

843 0x329000 | 
PTE_P
 | 
PTE_W
,

844 0x32a000 | 
PTE_P
 | 
PTE_W
,

845 0x32b000 | 
PTE_P
 | 
PTE_W
,

846 0x32c000 | 
PTE_P
 | 
PTE_W
,

847 0x32d000 | 
PTE_P
 | 
PTE_W
,

848 0x32e000 | 
PTE_P
 | 
PTE_W
,

849 0x32f000 | 
PTE_P
 | 
PTE_W
,

850 0x330000 | 
PTE_P
 | 
PTE_W
,

851 0x331000 | 
PTE_P
 | 
PTE_W
,

852 0x332000 | 
PTE_P
 | 
PTE_W
,

853 0x333000 | 
PTE_P
 | 
PTE_W
,

854 0x334000 | 
PTE_P
 | 
PTE_W
,

855 0x335000 | 
PTE_P
 | 
PTE_W
,

856 0x336000 | 
PTE_P
 | 
PTE_W
,

857 0x337000 | 
PTE_P
 | 
PTE_W
,

858 0x338000 | 
PTE_P
 | 
PTE_W
,

859 0x339000 | 
PTE_P
 | 
PTE_W
,

860 0x33a000 | 
PTE_P
 | 
PTE_W
,

861 0x33b000 | 
PTE_P
 | 
PTE_W
,

862 0x33c000 | 
PTE_P
 | 
PTE_W
,

863 0x33d000 | 
PTE_P
 | 
PTE_W
,

864 0x33e000 | 
PTE_P
 | 
PTE_W
,

865 0x33f000 | 
PTE_P
 | 
PTE_W
,

866 0x340000 | 
PTE_P
 | 
PTE_W
,

867 0x341000 | 
PTE_P
 | 
PTE_W
,

868 0x342000 | 
PTE_P
 | 
PTE_W
,

869 0x343000 | 
PTE_P
 | 
PTE_W
,

870 0x344000 | 
PTE_P
 | 
PTE_W
,

871 0x345000 | 
PTE_P
 | 
PTE_W
,

872 0x346000 | 
PTE_P
 | 
PTE_W
,

873 0x347000 | 
PTE_P
 | 
PTE_W
,

874 0x348000 | 
PTE_P
 | 
PTE_W
,

875 0x349000 | 
PTE_P
 | 
PTE_W
,

876 0x34a000 | 
PTE_P
 | 
PTE_W
,

877 0x34b000 | 
PTE_P
 | 
PTE_W
,

878 0x34c000 | 
PTE_P
 | 
PTE_W
,

879 0x34d000 | 
PTE_P
 | 
PTE_W
,

880 0x34e000 | 
PTE_P
 | 
PTE_W
,

881 0x34f000 | 
PTE_P
 | 
PTE_W
,

882 0x350000 | 
PTE_P
 | 
PTE_W
,

883 0x351000 | 
PTE_P
 | 
PTE_W
,

884 0x352000 | 
PTE_P
 | 
PTE_W
,

885 0x353000 | 
PTE_P
 | 
PTE_W
,

886 0x354000 | 
PTE_P
 | 
PTE_W
,

887 0x355000 | 
PTE_P
 | 
PTE_W
,

888 0x356000 | 
PTE_P
 | 
PTE_W
,

889 0x357000 | 
PTE_P
 | 
PTE_W
,

890 0x358000 | 
PTE_P
 | 
PTE_W
,

891 0x359000 | 
PTE_P
 | 
PTE_W
,

892 0x35a000 | 
PTE_P
 | 
PTE_W
,

893 0x35b000 | 
PTE_P
 | 
PTE_W
,

894 0x35c000 | 
PTE_P
 | 
PTE_W
,

895 0x35d000 | 
PTE_P
 | 
PTE_W
,

896 0x35e000 | 
PTE_P
 | 
PTE_W
,

897 0x35f000 | 
PTE_P
 | 
PTE_W
,

898 0x360000 | 
PTE_P
 | 
PTE_W
,

899 0x361000 | 
PTE_P
 | 
PTE_W
,

900 0x362000 | 
PTE_P
 | 
PTE_W
,

901 0x363000 | 
PTE_P
 | 
PTE_W
,

902 0x364000 | 
PTE_P
 | 
PTE_W
,

903 0x365000 | 
PTE_P
 | 
PTE_W
,

904 0x366000 | 
PTE_P
 | 
PTE_W
,

905 0x367000 | 
PTE_P
 | 
PTE_W
,

906 0x368000 | 
PTE_P
 | 
PTE_W
,

907 0x369000 | 
PTE_P
 | 
PTE_W
,

908 0x36a000 | 
PTE_P
 | 
PTE_W
,

909 0x36b000 | 
PTE_P
 | 
PTE_W
,

910 0x36c000 | 
PTE_P
 | 
PTE_W
,

911 0x36d000 | 
PTE_P
 | 
PTE_W
,

912 0x36e000 | 
PTE_P
 | 
PTE_W
,

913 0x36f000 | 
PTE_P
 | 
PTE_W
,

914 0x370000 | 
PTE_P
 | 
PTE_W
,

915 0x371000 | 
PTE_P
 | 
PTE_W
,

916 0x372000 | 
PTE_P
 | 
PTE_W
,

917 0x373000 | 
PTE_P
 | 
PTE_W
,

918 0x374000 | 
PTE_P
 | 
PTE_W
,

919 0x375000 | 
PTE_P
 | 
PTE_W
,

920 0x376000 | 
PTE_P
 | 
PTE_W
,

921 0x377000 | 
PTE_P
 | 
PTE_W
,

922 0x378000 | 
PTE_P
 | 
PTE_W
,

923 0x379000 | 
PTE_P
 | 
PTE_W
,

924 0x37a000 | 
PTE_P
 | 
PTE_W
,

925 0x37b000 | 
PTE_P
 | 
PTE_W
,

926 0x37c000 | 
PTE_P
 | 
PTE_W
,

927 0x37d000 | 
PTE_P
 | 
PTE_W
,

928 0x37e000 | 
PTE_P
 | 
PTE_W
,

929 0x37f000 | 
PTE_P
 | 
PTE_W
,

930 0x380000 | 
PTE_P
 | 
PTE_W
,

931 0x381000 | 
PTE_P
 | 
PTE_W
,

932 0x382000 | 
PTE_P
 | 
PTE_W
,

933 0x383000 | 
PTE_P
 | 
PTE_W
,

934 0x384000 | 
PTE_P
 | 
PTE_W
,

935 0x385000 | 
PTE_P
 | 
PTE_W
,

936 0x386000 | 
PTE_P
 | 
PTE_W
,

937 0x387000 | 
PTE_P
 | 
PTE_W
,

938 0x388000 | 
PTE_P
 | 
PTE_W
,

939 0x389000 | 
PTE_P
 | 
PTE_W
,

940 0x38a000 | 
PTE_P
 | 
PTE_W
,

941 0x38b000 | 
PTE_P
 | 
PTE_W
,

942 0x38c000 | 
PTE_P
 | 
PTE_W
,

943 0x38d000 | 
PTE_P
 | 
PTE_W
,

944 0x38e000 | 
PTE_P
 | 
PTE_W
,

945 0x38f000 | 
PTE_P
 | 
PTE_W
,

946 0x390000 | 
PTE_P
 | 
PTE_W
,

947 0x391000 | 
PTE_P
 | 
PTE_W
,

948 0x392000 | 
PTE_P
 | 
PTE_W
,

949 0x393000 | 
PTE_P
 | 
PTE_W
,

950 0x394000 | 
PTE_P
 | 
PTE_W
,

951 0x395000 | 
PTE_P
 | 
PTE_W
,

952 0x396000 | 
PTE_P
 | 
PTE_W
,

953 0x397000 | 
PTE_P
 | 
PTE_W
,

954 0x398000 | 
PTE_P
 | 
PTE_W
,

955 0x399000 | 
PTE_P
 | 
PTE_W
,

956 0x39a000 | 
PTE_P
 | 
PTE_W
,

957 0x39b000 | 
PTE_P
 | 
PTE_W
,

958 0x39c000 | 
PTE_P
 | 
PTE_W
,

959 0x39d000 | 
PTE_P
 | 
PTE_W
,

960 0x39e000 | 
PTE_P
 | 
PTE_W
,

961 0x39f000 | 
PTE_P
 | 
PTE_W
,

962 0x3a0000 | 
PTE_P
 | 
PTE_W
,

963 0x3a1000 | 
PTE_P
 | 
PTE_W
,

964 0x3a2000 | 
PTE_P
 | 
PTE_W
,

965 0x3a3000 | 
PTE_P
 | 
PTE_W
,

966 0x3a4000 | 
PTE_P
 | 
PTE_W
,

967 0x3a5000 | 
PTE_P
 | 
PTE_W
,

968 0x3a6000 | 
PTE_P
 | 
PTE_W
,

969 0x3a7000 | 
PTE_P
 | 
PTE_W
,

970 0x3a8000 | 
PTE_P
 | 
PTE_W
,

971 0x3a9000 | 
PTE_P
 | 
PTE_W
,

972 0x3Ø000 | 
PTE_P
 | 
PTE_W
,

973 0x3ab000 | 
PTE_P
 | 
PTE_W
,

974 0x3ac000 | 
PTE_P
 | 
PTE_W
,

975 0x3ad000 | 
PTE_P
 | 
PTE_W
,

976 0x3´000 | 
PTE_P
 | 
PTE_W
,

977 0x3af000 | 
PTE_P
 | 
PTE_W
,

978 0x3b0000 | 
PTE_P
 | 
PTE_W
,

979 0x3b1000 | 
PTE_P
 | 
PTE_W
,

980 0x3b2000 | 
PTE_P
 | 
PTE_W
,

981 0x3b3000 | 
PTE_P
 | 
PTE_W
,

982 0x3b4000 | 
PTE_P
 | 
PTE_W
,

983 0x3b5000 | 
PTE_P
 | 
PTE_W
,

984 0x3b6000 | 
PTE_P
 | 
PTE_W
,

985 0x3b7000 | 
PTE_P
 | 
PTE_W
,

986 0x3b8000 | 
PTE_P
 | 
PTE_W
,

987 0x3b9000 | 
PTE_P
 | 
PTE_W
,

988 0x3ba000 | 
PTE_P
 | 
PTE_W
,

989 0x3bb000 | 
PTE_P
 | 
PTE_W
,

990 0x3bc000 | 
PTE_P
 | 
PTE_W
,

991 0x3bd000 | 
PTE_P
 | 
PTE_W
,

992 0x3be000 | 
PTE_P
 | 
PTE_W
,

993 0x3bf000 | 
PTE_P
 | 
PTE_W
,

994 0x3c0000 | 
PTE_P
 | 
PTE_W
,

995 0x3c1000 | 
PTE_P
 | 
PTE_W
,

996 0x3c2000 | 
PTE_P
 | 
PTE_W
,

997 0x3c3000 | 
PTE_P
 | 
PTE_W
,

998 0x3c4000 | 
PTE_P
 | 
PTE_W
,

999 0x3c5000 | 
PTE_P
 | 
PTE_W
,

1000 0x3c6000 | 
PTE_P
 | 
PTE_W
,

1001 0x3c7000 | 
PTE_P
 | 
PTE_W
,

1002 0x3c8000 | 
PTE_P
 | 
PTE_W
,

1003 0x3c9000 | 
PTE_P
 | 
PTE_W
,

1004 0x3ˇ000 | 
PTE_P
 | 
PTE_W
,

1005 0x3cb000 | 
PTE_P
 | 
PTE_W
,

1006 0x3cc000 | 
PTE_P
 | 
PTE_W
,

1007 0x3cd000 | 
PTE_P
 | 
PTE_W
,

1008 0x3˚000 | 
PTE_P
 | 
PTE_W
,

1009 0x3cf000 | 
PTE_P
 | 
PTE_W
,

1010 0x3d0000 | 
PTE_P
 | 
PTE_W
,

1011 0x3d1000 | 
PTE_P
 | 
PTE_W
,

1012 0x3d2000 | 
PTE_P
 | 
PTE_W
,

1013 0x3d3000 | 
PTE_P
 | 
PTE_W
,

1014 0x3d4000 | 
PTE_P
 | 
PTE_W
,

1015 0x3d5000 | 
PTE_P
 | 
PTE_W
,

1016 0x3d6000 | 
PTE_P
 | 
PTE_W
,

1017 0x3d7000 | 
PTE_P
 | 
PTE_W
,

1018 0x3d8000 | 
PTE_P
 | 
PTE_W
,

1019 0x3d9000 | 
PTE_P
 | 
PTE_W
,

1020 0x3da000 | 
PTE_P
 | 
PTE_W
,

1021 0x3db000 | 
PTE_P
 | 
PTE_W
,

1022 0x3dc000 | 
PTE_P
 | 
PTE_W
,

1023 0x3dd000 | 
PTE_P
 | 
PTE_W
,

1024 0x3de000 | 
PTE_P
 | 
PTE_W
,

1025 0x3df000 | 
PTE_P
 | 
PTE_W
,

1026 0x3e0000 | 
PTE_P
 | 
PTE_W
,

1027 0x3e1000 | 
PTE_P
 | 
PTE_W
,

1028 0x3e2000 | 
PTE_P
 | 
PTE_W
,

1029 0x3e3000 | 
PTE_P
 | 
PTE_W
,

1030 0x3e4000 | 
PTE_P
 | 
PTE_W
,

1031 0x3e5000 | 
PTE_P
 | 
PTE_W
,

1032 0x3e6000 | 
PTE_P
 | 
PTE_W
,

1033 0x3e7000 | 
PTE_P
 | 
PTE_W
,

1034 0x3e8000 | 
PTE_P
 | 
PTE_W
,

1035 0x3e9000 | 
PTE_P
 | 
PTE_W
,

1036 0x3ó000 | 
PTE_P
 | 
PTE_W
,

1037 0x3eb000 | 
PTE_P
 | 
PTE_W
,

1038 0x3ec000 | 
PTE_P
 | 
PTE_W
,

1039 0x3ed000 | 
PTE_P
 | 
PTE_W
,

1040 0x3ì000 | 
PTE_P
 | 
PTE_W
,

1041 0x3ef000 | 
PTE_P
 | 
PTE_W
,

1042 0x3f0000 | 
PTE_P
 | 
PTE_W
,

1043 0x3f1000 | 
PTE_P
 | 
PTE_W
,

1044 0x3f2000 | 
PTE_P
 | 
PTE_W
,

1045 0x3f3000 | 
PTE_P
 | 
PTE_W
,

1046 0x3f4000 | 
PTE_P
 | 
PTE_W
,

1047 0x3f5000 | 
PTE_P
 | 
PTE_W
,

1048 0x3f6000 | 
PTE_P
 | 
PTE_W
,

1049 0x3f7000 | 
PTE_P
 | 
PTE_W
,

1050 0x3f8000 | 
PTE_P
 | 
PTE_W
,

1051 0x3f9000 | 
PTE_P
 | 
PTE_W
,

1052 0x3Á000 | 
PTE_P
 | 
PTE_W
,

1053 0x3fb000 | 
PTE_P
 | 
PTE_W
,

1054 0x3fc000 | 
PTE_P
 | 
PTE_W
,

1055 0x3fd000 | 
PTE_P
 | 
PTE_W
,

1056 0x3„000 | 
PTE_P
 | 
PTE_W
,

1057 0x3ff000 | 
PTE_P
 | 
PTE_W
,

1058 
	}
};

	@kern/env.c

3 
	~<öc/x86.h
>

4 
	~<öc/mmu.h
>

5 
	~<öc/îr‹.h
>

6 
	~<öc/°rög.h
>

7 
	~<öc/as£π.h
>

8 
	~<öc/ñf.h
>

10 
	~<kîn/ív.h
>

11 
	~<kîn/pm≠.h
>

12 
	~<kîn/å≠.h
>

13 
	~<kîn/m⁄ô‹.h
>

14 
	~<kîn/sched.h
>

15 
	~<kîn/˝u.h
>

16 
	~<kîn/•ölock.h
>

18 
Env
 *
	gívs
 = 
NULL
;

19 
Env
 *
	gív_‰ì_li°
;

22 
	#ENVGENSHIFT
 12

23 

	)

39 
Segdesc
 
	ggdt
[
NCPU
 + 5] =

42 
SEG_NULL
,

45 [
GD_KT
 >> 3] = 
SEG
(
STA_X
 | 
STA_R
, 0x0, 0xffffffff, 0),

48 [
GD_KD
 >> 3] = 
SEG
(
STA_W
, 0x0, 0xffffffff, 0),

51 [
GD_UT
 >> 3] = 
SEG
(
STA_X
 | 
STA_R
, 0x0, 0xffffffff, 3),

54 [
GD_UD
 >> 3] = 
SEG
(
STA_W
, 0x0, 0xffffffff, 3),

58 [
GD_TSS0
 >> 3] = 
SEG_NULL


61 
P£udodesc
 
	ggdt_pd
 = {

62 (
gdt
) - 1, () gdt

76 
	$ívid2ív
(
ívid_t
 
ívid
, 
Env
 **
ív_°‹e
, 
boﬁ
 
check≥rm
)

78 
Env
 *
e
;

81 i‡(
ívid
 == 0) {

82 *
ív_°‹e
 = 
cuªnv
;

91 
e
 = &
ívs
[
	`ENVX
(
ívid
)];

92 i‡(
e
->
ív_°©us
 =
ENV_FREE
 ||É->
ív_id
 !
ívid
) {

93 *
ív_°‹e
 = 0;

94  -
E_BAD_ENV
;

102 i‡(
check≥rm
 && 
e
 !
cuªnv
 &&É->
ív_∑ª¡_id
 !cuªnv->
ív_id
) {

103 *
ív_°‹e
 = 0;

104  -
E_BAD_ENV
;

107 *
ív_°‹e
 = 
e
;

109 
	}
}

118 
	$ív_öô
()

122 
size_t
 
i
;

123 
ív_‰ì_li°
 = &
ívs
[0];

124 
i
 = 0;i<
NENV
-1;i++)

126 
ívs
[
i
].
ív_id
 = 0;

127 
ívs
[
i
].
ív_lök
 = &envs[i+1];

129 
ívs
[
NENV
-1].
ív_id
 = 0;

130 
ívs
[
NENV
-1].
ív_lök
 = 
NULL
;

133 
	`ív_öô_≥r˝u
();

134 
	}
}

138 
	$ív_öô_≥r˝u
()

140 
	`lgdt
(&
gdt_pd
);

143 
asm
 vﬁ©ûe("movw %%ax,%%gs" :: "a" (
GD_UD
|3));

144 
asm
 vﬁ©ûe("movw %%ax,%%fs" :: "a" (
GD_UD
|3));

147 
asm
 vﬁ©ûe("movw %%ax,%%es" :: "a" (
GD_KD
));

148 
asm
 vﬁ©ûe("movw %%ax,%%ds" :: "a" (
GD_KD
));

149 
asm
 vﬁ©ûe("movw %%ax,%%ss" :: "a" (
GD_KD
));

151 
asm
 vﬁ©ûe("ljm∞%0,$1f\¿1:\n" :: "i" (
GD_KT
));

154 
	`Œdt
(0);

155 
	}
}

168 
	$ív_£tup_vm
(
Env
 *
e
)

170 
i
;

171 
PageInfo
 *
p
 = 
NULL
;

174 i‡(!(
p
 = 
	`∑ge_Æloc
(
ALLOC_ZERO
)))

175  -
E_NO_MEM
;

195 
e
->
ív_pgdú
 = (
pde_t
 *)
	`∑ge2kva
(
p
);

196 
p
->
µ_ªf
++ ;

198 
	`mem˝y
(
e
->
ív_pgdú
, 
kîn_pgdú
, 
PGSIZE
);

199 
	`mem£t
(
e
->
ív_pgdú
, 0, 
	`PDX
(
UTOP
Ë* (
pde_t
));

202 
e
->
ív_pgdú
[
	`PDX
(
UVPT
)] = 
	`PADDR
”->ív_pgdúË| 
PTE_P
 | 
PTE_U
;

205 
	}
}

216 
	$ív_Æloc
(
Env
 **
√wív_°‹e
, 
ívid_t
 
∑ª¡_id
)

218 
öt32_t
 
gíî©i⁄
;

219 
r
;

220 
Env
 *
e
;

222 i‡(!(
e
 = 
ív_‰ì_li°
))

223  -
E_NO_FREE_ENV
;

226 i‡((
r
 = 
	`ív_£tup_vm
(
e
)) < 0)

227  
r
;

230 
gíî©i⁄
 = (
e
->
ív_id
 + (1 << 
ENVGENSHIFT
)Ë& ~(
NENV
 - 1);

231 i‡(
gíî©i⁄
 <= 0)

232 
gíî©i⁄
 = 1 << 
ENVGENSHIFT
;

233 
e
->
ív_id
 = 
gíî©i⁄
 | (ê- 
ívs
);

236 
e
->
ív_∑ª¡_id
 = 
∑ª¡_id
;

237 
e
->
ív_ty≥
 = 
ENV_TYPE_USER
;

238 
e
->
ív_°©us
 = 
ENV_RUNNABLE
;

239 
e
->
ív_runs
 = 0;

245 
	`mem£t
(&
e
->
ív_tf
, 0, (e->env_tf));

255 
e
->
ív_tf
.
tf_ds
 = 
GD_UD
 | 3;

256 
e
->
ív_tf
.
tf_es
 = 
GD_UD
 | 3;

257 
e
->
ív_tf
.
tf_ss
 = 
GD_UD
 | 3;

258 
e
->
ív_tf
.
tf_e•
 = 
USTACKTOP
;

259 
e
->
ív_tf
.
tf_cs
 = 
GD_UT
 | 3;

264 
e
->
ív_tf
.
tf_eÊags
 |
FL_IF
 ;

267 
e
->
ív_pgÁu…_upˇŒ
 = 0;

270 
e
->
ív_ùc_ªcvög
 = 0;

273 
e
->
ív_¥i‹ôy
 = 
PRIORITY_DEFAULT
;

276 
ív_‰ì_li°
 = 
e
->
ív_lök
;

277 *
√wív_°‹e
 = 
e
;

281 
	}
}

291 
	$ªgi⁄_Æloc
(
Env
 *
e
, *
va
, 
size_t
 
Àn
)

301 
PageInfo
 *
p
;

302 
va
 = (*)
	`ROUNDDOWN
((
uöçå_t
)va,
PGSIZE
);

303 *
íd
;

304 
íd
 = 
va
 + 
	`ROUNDUP
(
Àn
,
PGSIZE
);

305 
r
;

306 ;
va
<
íd
;va+=
PGSIZE
)

308 
p
 = 
	`∑ge_Æloc
(0);

309 if(
p
==
NULL
)

310 
	`∑nic
("region_alloc:out of memory");

311 
r
=
	`∑ge_ö£π
(
e
->
ív_pgdú
,
p
,
va
,
PTE_U
 | 
PTE_W
);

312 if(
r
!=0)

313 
	`∑nic
("ªgi⁄-Æloc:%e\n",
r
);

316 
	}
}

341 
	$lﬂd_icode
(
Env
 *
e
, 
uöt8_t
 *
bö¨y
, 
size_t
 
size
)

372 
Proghdr
 *
ph
,*
ïh
;

373 
Elf
 *
ELFHDR
 = (El‡*)
bö¨y
;

375 
	`l¸3
(
	`PADDR
(
e
->
ív_pgdú
));

377 if(
ELFHDR
->
e_magic
 !=
ELF_MAGIC
)

378 
	`∑nic
("load_icode:invalid ELF");

380 
ph
 = (
Proghdr
 *)((
uöt8_t
 *)
ELFHDR
 + ELFHDR->
e_phoff
);

381 
ïh
 = 
ph
 + 
ELFHDR
-> 
e_phnum
;

382 ;
ph
<
ïh
;ph++)

384 if(
ph
->
p_ty≥
 !=
ELF_PROG_LOAD
)

386 
	`ªgi⁄_Æloc
(
e
,(*)
ph
->
p_va
,ph->
p_memsz
);

388 
	`mem£t
((*)
	`ROUNDDOWN
((
uöçå_t
)
ph
->
p_va
,
PGSIZE
), 0 , 
	`ROUNDUP
’h->
p_memsz
,PGSIZE));

389 
	`memmove
((*)
ph
->
p_va
,
bö¨y
+ph->
p_off£t
,ph->
p_fûesz
);

392 
e
->
ív_tf
.
tf_eù
 = 
ELFHDR
->
e_íåy
;

396 
	`ªgi⁄_Æloc
(
e
,(*)(
USTACKTOP
-
PGSIZE
),PGSIZE);

400 
	}
}

410 
	$ív_¸óã
(
uöt8_t
 *
bö¨y
, 
size_t
 
size
, 
EnvTy≥
 
ty≥
)

416 
Env
 *
e
;

417 
r
;

418 if((
r
=
	`ív_Æloc
(&
e
,0)<0))

420 
	`∑nic
("ív_¸óã:%e",
r
);

422 
	`lﬂd_icode
(
e
,
bö¨y
,
size
);

424 
e
->
ív_ty≥
 = 
ty≥
;

426 
	}
}

432 
	$ív_‰ì
(
Env
 *
e
)

434 
±e_t
 *
±
;

435 
uöt32_t
 
pdío
, 
±ío
;

436 
phyßddr_t
 
∑
;

441 i‡(
e
 =
cuªnv
)

442 
	`l¸3
(
	`PADDR
(
kîn_pgdú
));

448 
	`°©ic_as£π
(
UTOP
 % 
PTSIZE
 == 0);

449 
pdío
 = 0;Ödíÿ< 
	`PDX
(
UTOP
);Ödeno++) {

452 i‡(!(
e
->
ív_pgdú
[
pdío
] & 
PTE_P
))

456 
∑
 = 
	`PTE_ADDR
(
e
->
ív_pgdú
[
pdío
]);

457 
±
 = (
±e_t
*Ë
	`KADDR
(
∑
);

460 
±ío
 = 0;Öãnÿ<
	`PTX
(~0);Öteno++) {

461 i‡(
±
[
±ío
] & 
PTE_P
)

462 
	`∑ge_ªmove
(
e
->
ív_pgdú
, 
	`PGADDR
(
pdío
, 
±ío
, 0));

466 
e
->
ív_pgdú
[
pdío
] = 0;

467 
	`∑ge_de¸ef
(
	`∑2∑ge
(
∑
));

471 
∑
 = 
	`PADDR
(
e
->
ív_pgdú
);

472 
e
->
ív_pgdú
 = 0;

473 
	`∑ge_de¸ef
(
	`∑2∑ge
(
∑
));

476 
e
->
ív_°©us
 = 
ENV_FREE
;

477 
e
->
ív_lök
 = 
ív_‰ì_li°
;

478 
ív_‰ì_li°
 = 
e
;

479 
	}
}

487 
	$ív_de°roy
(
Env
 *
e
)

492 i‡(
e
->
ív_°©us
 =
ENV_RUNNING
 && 
cuªnv
 !=É) {

493 
e
->
ív_°©us
 = 
ENV_DYING
;

497 
	`ív_‰ì
(
e
);

499 i‡(
cuªnv
 =
e
) {

500 
cuªnv
 = 
NULL
;

501 
	`sched_yõld
();

503 
	}
}

513 
	$ív_p›_tf
(
Tøp‰ame
 *
tf
)

516 
cuªnv
->
ív_˝unum
 = 
	`˝unum
();

518 
__asm
 
	`__vﬁ©ûe
("movl %0,%%esp\n"

524 : : "g" (
tf
) : "memory");

525 
	`∑nic
("iret failed");

526 
	}
}

535 
	$ív_run
(
Env
 *
e
)

556 if(
cuªnv
 && cuªnv->
ív_°©us
 =
ENV_RUNNING
)

558 
cuªnv
->
ív_°©us
 =
ENV_RUNNABLE
;

560 
cuªnv
 = 
e
;

561 
	`as£π
(
cuªnv
->
ív_°©us
==
ENV_RUNNABLE
);

562 
cuªnv
->
ív_°©us
 = 
ENV_RUNNING
;

563 
cuªnv
->
ív_runs
++;

565 
	`l¸3
(
	`PADDR
(
cuªnv
->
ív_pgdú
));

567 
	`u∆ock_kî√l
();

568 
	`ív_p›_tf
(&
cuªnv
->
ív_tf
);

569 
	`∑nic
("env_runÇot yet implemented");

570 
	}
}

	@kern/env.h

3 #i‚de‡
JOS_KERN_ENV_H


4 
	#JOS_KERN_ENV_H


	)

6 
	~<öc/ív.h
>

7 
	~<kîn/˝u.h
>

9 
Env
 *
ívs
;

10 
	#cuªnv
 (
this˝u
->
˝u_ív
)

11 
Segdesc
 
gdt
[];

	)

13 
ív_öô
();

14 
ív_öô_≥r˝u
();

15 
ív_Æloc
(
Env
 **
e
, 
ívid_t
 
∑ª¡_id
);

16 
ív_‰ì
(
Env
 *
e
);

17 
ív_¸óã
(
uöt8_t
 *
bö¨y
, 
size_t
 
size
, 
EnvTy≥
 
ty≥
);

18 
ív_de°roy
(
Env
 *
e
);

20 
ívid2ív
(
ívid_t
 
ívid
, 
Env
 **
ív_°‹e
, 
boﬁ
 
check≥rm
);

22 
	$ív_run
(
Env
 *
e
Ë
	`__©åibuã__
((
n‹ëu∫
));

23 
	$ív_p›_tf
(
Tøp‰ame
 *
tf
Ë
	`__©åibuã__
((
n‹ëu∫
));

27 
	#ENV_PASTE3
(
x
, 
y
, 
z
Ëx ## y ## 
	)
z

29 
	#ENV_CREATE
(
x
, 
ty≥
) \

31 
uöt8_t
 
	`ENV_PASTE3
(
_bö¨y_obj_
, 
x
, 
_°¨t
)[], \

32 
	`ENV_PASTE3
(
_bö¨y_obj_
, 
x
, 
_size
)[]; \

33 
	`ív_¸óã
(
	`ENV_PASTE3
(
_bö¨y_obj_
, 
x
, 
_°¨t
), \

34 ()
	`ENV_PASTE3
(
_bö¨y_obj_
, 
x
, 
_size
), \

35 
ty≥
); \

36 
	}
} 0)

	)

	@kern/init.c

3 
	~<öc/°dio.h
>

4 
	~<öc/°rög.h
>

5 
	~<öc/as£π.h
>

7 
	~<kîn/m⁄ô‹.h
>

8 
	~<kîn/c⁄sﬁe.h
>

9 
	~<kîn/pm≠.h
>

10 
	~<kîn/k˛ock.h
>

11 
	~<kîn/ív.h
>

12 
	~<kîn/å≠.h
>

13 
	~<kîn/sched.h
>

14 
	~<kîn/picúq.h
>

15 
	~<kîn/˝u.h
>

16 
	~<kîn/•ölock.h
>

18 
boŸ_≠s
();

22 
	$i386_öô
()

24 
ed©a
[], 
íd
[];

29 
	`mem£t
(
ed©a
, 0, 
íd
 -Édata);

33 
	`c⁄s_öô
();

38 
	`mem_öô
();

41 
	`ív_öô
();

42 
	`å≠_öô
();

45 
	`mp_öô
();

46 
	`œpic_öô
();

49 
	`pic_öô
();

53 
	`lock_kî√l
();

56 
	`boŸ_≠s
();

62 #i‡
	`deföed
(
TEST
)

64 
	`ENV_CREATE
(
TEST
, 
ENV_TYPE_USER
);

67 
	`ENV_CREATE
(
u£r_f‹kåì
, 
ENV_TYPE_USER
);

84 
	`kbd_öå
();

89 
	`sched_yõld
();

90 
	}
}

95 *
	gm≥¡ry_k°ack
;

99 
	$boŸ_≠s
()

101 
m≥¡ry_°¨t
[], 
m≥¡ry_íd
[];

102 *
code
;

103 
CpuInfo
 *
c
;

106 
code
 = 
	`KADDR
(
MPENTRY_PADDR
);

107 
	`memmove
(
code
, 
m≥¡ry_°¨t
, 
m≥¡ry_íd
 - mpentry_start);

110 
c
 = 
˝us
; c < cpu†+ 
n˝u
; c++) {

111 i‡(
c
 =
˝us
 + 
	`˝unum
())

115 
m≥¡ry_k°ack
 = 
≥r˝u_k°acks
[
c
 - 
˝us
] + 
KSTKSIZE
;

117 
	`œpic_°¨èp
(
c
->
˝u_id
, 
	`PADDR
(
code
));

119 
c
->
˝u_°©us
 !
CPU_STARTED
)

122 
	}
}

126 
	$mp_maö
()

129 
	`l¸3
(
	`PADDR
(
kîn_pgdú
));

130 
	`˝rötf
("SMP: CPU %d sèπög\n", 
	`˝unum
());

132 
	`œpic_öô
();

133 
	`ív_öô_≥r˝u
();

134 
	`å≠_öô_≥r˝u
();

135 
	`xchg
(&
this˝u
->
˝u_°©us
, 
CPU_STARTED
);

142 
	`lock_kî√l
();

143 
	`sched_yõld
();

147 
	}
}

153 c⁄° *
	g∑nic°r
;

160 
	$_∑nic
(c⁄° *
fûe
, 
löe
, c⁄° *
fmt
,...)

162 
va_li°
 
≠
;

164 i‡(
∑nic°r
)

165 
dód
;

166 
∑nic°r
 = 
fmt
;

169 
__asm
 
	`__vﬁ©ûe
("cli; cld");

171 
	`va_°¨t
(
≠
, 
fmt
);

172 
	`˝rötf
("kî√»∑ni¯⁄ CPU %dáà%s:%d: ", 
	`˝unum
(), 
fûe
, 
löe
);

173 
	`v˝rötf
(
fmt
, 
≠
);

174 
	`˝rötf
("\n");

175 
	`va_íd
(
≠
);

177 
dód
:

180 
	`m⁄ô‹
(
NULL
);

181 
	}
}

185 
	$_w¨n
(c⁄° *
fûe
, 
löe
, c⁄° *
fmt
,...)

187 
va_li°
 
≠
;

189 
	`va_°¨t
(
≠
, 
fmt
);

190 
	`˝rötf
("kî√»w¨nögáà%s:%d: ", 
fûe
, 
löe
);

191 
	`v˝rötf
(
fmt
, 
≠
);

192 
	`˝rötf
("\n");

193 
	`va_íd
(
≠
);

194 
	}
}

	@kern/kclock.c

5 
	~<öc/x86.h
>

7 
	~<kîn/k˛ock.h
>

11 
	$mc146818_ªad
(
ªg
)

13 
	`outb
(
IO_RTC
, 
ªg
);

14  
	`öb
(
IO_RTC
+1);

15 
	}
}

18 
	$mc146818_wrôe
(
ªg
, 
d©um
)

20 
	`outb
(
IO_RTC
, 
ªg
);

21 
	`outb
(
IO_RTC
+1, 
d©um
);

22 
	}
}

	@kern/kclock.h

3 #i‚de‡
JOS_KERN_KCLOCK_H


4 
	#JOS_KERN_KCLOCK_H


	)

5 #i‚de‡
JOS_KERNEL


9 
	#IO_RTC
 0x070

	)

11 
	#MC_NVRAM_START
 0xê

	)

12 
	#MC_NVRAM_SIZE
 50

	)

15 
	#NVRAM_BASELO
 (
MC_NVRAM_START
 + 7Ë

	)

16 
	#NVRAM_BASEHI
 (
MC_NVRAM_START
 + 8Ë

	)

19 
	#NVRAM_EXTLO
 (
MC_NVRAM_START
 + 9Ë

	)

20 
	#NVRAM_EXTHI
 (
MC_NVRAM_START
 + 10Ë

	)

23 
	#NVRAM_PEXTLO
 (
MC_NVRAM_START
 + 34Ë

	)

24 
	#NVRAM_PEXTHI
 (
MC_NVRAM_START
 + 35Ë

	)

27 
	#NVRAM_CENTURY
 (
MC_NVRAM_START
 + 36Ë

	)

29 
mc146818_ªad
(
ªg
);

30 
mc146818_wrôe
(
ªg
, 
d©um
);

	@kern/kdebug.c

1 
	~<öc/°ab.h
>

2 
	~<öc/°rög.h
>

3 
	~<öc/memœyout.h
>

4 
	~<öc/as£π.h
>

6 
	~<kîn/kdebug.h
>

7 
	~<kîn/pm≠.h
>

8 
	~<kîn/ív.h
>

10 c⁄° 
Sèb
 
__STAB_BEGIN__
[];

11 c⁄° 
Sèb
 
__STAB_END__
[];

12 c⁄° 
__STABSTR_BEGIN__
[];

13 c⁄° 
__STABSTR_END__
[];

15 
	sU£rSèbD©a
 {

16 c⁄° 
Sèb
 *
	m°abs
;

17 c⁄° 
Sèb
 *
	m°ab_íd
;

18 c⁄° *
	m°ab°r
;

19 c⁄° *
	m°ab°r_íd
;

60 
	$°ab_bö£¨ch
(c⁄° 
Sèb
 *
°abs
, *
ªgi⁄_À·
, *
ªgi⁄_right
,

61 
ty≥
, 
uöçå_t
 
addr
)

63 
l
 = *
ªgi⁄_À·
, 
r
 = *
ªgi⁄_right
, 
™y_m©ches
 = 0;

65 
l
 <
r
) {

66 
åue_m
 = (
l
 + 
r
Ë/ 2, 
m
 =Årue_m;

69 
m
 >
l
 && 
°abs
[m].
n_ty≥
 !
ty≥
)

70 
m
--;

71 i‡(
m
 < 
l
) {

72 
l
 = 
åue_m
 + 1;

77 
™y_m©ches
 = 1;

78 i‡(
°abs
[
m
].
n_vÆue
 < 
addr
) {

79 *
ªgi⁄_À·
 = 
m
;

80 
l
 = 
åue_m
 + 1;

81 } i‡(
°abs
[
m
].
n_vÆue
 > 
addr
) {

82 *
ªgi⁄_right
 = 
m
 - 1;

83 
r
 = 
m
 - 1;

87 *
ªgi⁄_À·
 = 
m
;

88 
l
 = 
m
;

89 
addr
++;

93 i‡(!
™y_m©ches
)

94 *
ªgi⁄_right
 = *
ªgi⁄_À·
 - 1;

97 
l
 = *
ªgi⁄_right
;

98 
l
 > *
ªgi⁄_À·
 && 
°abs
[l].
n_ty≥
 !
ty≥
;

99 
l
--)

101 *
ªgi⁄_À·
 = 
l
;

103 
	}
}

114 
	$debugöfo_eù
(
uöçå_t
 
addr
, 
Eùdebugöfo
 *
öfo
)

116 c⁄° 
Sèb
 *
°abs
, *
°ab_íd
;

117 c⁄° *
°ab°r
, *
°ab°r_íd
;

118 
lfûe
, 
rfûe
, 
lfun
, 
rfun
, 
Œöe
, 
æöe
;

121 
öfo
->
eù_fûe
 = "<unknown>";

122 
öfo
->
eù_löe
 = 0;

123 
öfo
->
eù_‚_«me
 = "<unknown>";

124 
öfo
->
eù_‚_«mñí
 = 9;

125 
öfo
->
eù_‚_addr
 = 
addr
;

126 
öfo
->
eù_‚_«rg
 = 0;

129 i‡(
addr
 >
ULIM
) {

130 
°abs
 = 
__STAB_BEGIN__
;

131 
°ab_íd
 = 
__STAB_END__
;

132 
°ab°r
 = 
__STABSTR_BEGIN__
;

133 
°ab°r_íd
 = 
__STABSTR_END__
;

140 c⁄° 
U£rSèbD©a
 *
usd
 = (c⁄° U£rSèbD©®*Ë
USTABDATA
;

145 if(
	`u£r_mem_check
(
cuªnv
,
usd
,(
U£rSèbD©a
),
PTE_U
)<0)

148 
°abs
 = 
usd
->stabs;

149 
°ab_íd
 = 
usd
->stab_end;

150 
°ab°r
 = 
usd
->stabstr;

151 
°ab°r_íd
 = 
usd
->stabstr_end;

155 if(
	`u£r_mem_check
(
cuªnv
,
°abs
,
°ab_íd
 - sèbs,
PTE_U
)<0 ||u£r_mem_check(cuªnv,
°ab°r
,
°ab°r_íd
 - stabstr,PTE_U)<0)

160 i‡(
°ab°r_íd
 <
°ab°r
 || stabstr_end[-1] != 0)

169 
lfûe
 = 0;

170 
rfûe
 = (
°ab_íd
 - 
°abs
) - 1;

171 
	`°ab_bö£¨ch
(
°abs
, &
lfûe
, &
rfûe
, 
N_SO
, 
addr
);

172 i‡(
lfûe
 == 0)

177 
lfun
 = 
lfûe
;

178 
rfun
 = 
rfûe
;

179 
	`°ab_bö£¨ch
(
°abs
, &
lfun
, &
rfun
, 
N_FUN
, 
addr
);

181 i‡(
lfun
 <
rfun
) {

184 i‡(
°abs
[
lfun
].
n_°rx
 < 
°ab°r_íd
 - 
°ab°r
)

185 
öfo
->
eù_‚_«me
 = 
°ab°r
 + 
°abs
[
lfun
].
n_°rx
;

186 
öfo
->
eù_‚_addr
 = 
°abs
[
lfun
].
n_vÆue
;

187 
addr
 -
öfo
->
eù_‚_addr
;

189 
Œöe
 = 
lfun
;

190 
æöe
 = 
rfun
;

194 
öfo
->
eù_‚_addr
 = 
addr
;

195 
Œöe
 = 
lfûe
;

196 
æöe
 = 
rfûe
;

199 
öfo
->
eù_‚_«mñí
 = 
	`°rföd
(öfo->
eù_‚_«me
, ':') - info->eip_fn_name;

211 
	`°ab_bö£¨ch
(
°abs
, &
Œöe
, &
æöe
,
N_SLINE
, 
addr
);

213 if(
Œöe
<=
æöe
)

215 
öfo
->
eù_löe
 = 
°abs
[
Œöe
].
n_desc
;

224 
Œöe
 >
lfûe


225 && 
°abs
[
Œöe
].
n_ty≥
 !
N_SOL


226 && (
°abs
[
Œöe
].
n_ty≥
 !
N_SO
 || !°abs[Œöe].
n_vÆue
))

227 
Œöe
--;

228 i‡(
Œöe
 >
lfûe
 && 
°abs
[Œöe].
n_°rx
 < 
°ab°r_íd
 - 
°ab°r
)

229 
öfo
->
eù_fûe
 = 
°ab°r
 + 
°abs
[
Œöe
].
n_°rx
;

234 i‡(
lfun
 < 
rfun
)

235 
Œöe
 = 
lfun
 + 1;

236 
Œöe
 < 
rfun
 && 
°abs
[Œöe].
n_ty≥
 =
N_PSYM
;

237 
Œöe
++)

238 
öfo
->
eù_‚_«rg
++;

241 
	}
}

	@kern/kdebug.h

1 #i‚de‡
JOS_KERN_KDEBUG_H


2 
	#JOS_KERN_KDEBUG_H


	)

4 
	~<öc/ty≥s.h
>

7 
	sEùdebugöfo
 {

8 c⁄° *
	meù_fûe
;

9 
	meù_löe
;

11 c⁄° *
	meù_‚_«me
;

13 
	meù_‚_«mñí
;

14 
uöçå_t
 
	meù_‚_addr
;

15 
	meù_‚_«rg
;

18 
debugöfo_eù
(
uöçå_t
 
eù
, 
Eùdebugöfo
 *
öfo
);

	@kern/lapic.c

4 
	~<öc/ty≥s.h
>

5 
	~<öc/memœyout.h
>

6 
	~<öc/å≠.h
>

7 
	~<öc/mmu.h
>

8 
	~<öc/°dio.h
>

9 
	~<öc/x86.h
>

10 
	~<kîn/pm≠.h
>

11 
	~<kîn/˝u.h
>

14 
	#ID
 (0x0020/4)

15 
	#VER
 (0x0030/4)

16 
	#TPR
 (0x0080/4)

17 
	#EOI
 (0x00B0/4)

18 
	#SVR
 (0x00F0/4)

19 
	#ENABLE
 0x00000100

20 
	#ESR
 (0x0280/4)

21 
	#ICRLO
 (0x0300/4)

22 
	#INIT
 0x00000500

23 
	#STARTUP
 0x00000600

24 
	#DELIVS
 0x00001000

25 
	#ASSERT
 0x00004000

26 
	#DEASSERT
 0x00000000

	)

27 
	#LEVEL
 0x00008000

28 
	#BCAST
 0x00080000

29 
	#OTHERS
 0x000C0000

30 
	#BUSY
 0x00001000

	)

31 
	#FIXED
 0x00000000

	)

32 
	#ICRHI
 (0x0310/4)

33 
	#TIMER
 (0x0320/4)

34 
	#X1
 0x0000000B

35 
	#PERIODIC
 0x00020000

36 
	#PCINT
 (0x0340/4)

37 
	#LINT0
 (0x0350/4)

38 
	#LINT1
 (0x0360/4)

39 
	#ERROR
 (0x0370/4)

40 
	#MASKED
 0x00010000

41 
	#TICR
 (0x0380/4)

42 
	#TCCR
 (0x0390/4)

43 
	#TDCR
 (0x03E0/4)

44 

	)

45 
phyßddr_t
 
	gœpiˇddr
;

46 vﬁ©ûê
uöt32_t
 *
	gœpic
;

49 
	$œpicw
(
ödex
, 
vÆue
)

51 
œpic
[
ödex
] = 
vÆue
;

52 
œpic
[
ID
];

53 
	}
}

56 
	$œpic_öô
()

58 i‡(!
œpiˇddr
)

63 
œpic
 = 
	`mmio_m≠_ªgi⁄
(
œpiˇddr
, 4096);

66 
	`œpicw
(
SVR
, 
ENABLE
 | (
IRQ_OFFSET
 + 
IRQ_SPURIOUS
));

72 
	`œpicw
(
TDCR
, 
X1
);

73 
	`œpicw
(
TIMER
, 
PERIODIC
 | (
IRQ_OFFSET
 + 
IRQ_TIMER
));

74 
	`œpicw
(
TICR
, 10000000);

83 i‡(
this˝u
 !
boŸ˝u
)

84 
	`œpicw
(
LINT0
, 
MASKED
);

87 
	`œpicw
(
LINT1
, 
MASKED
);

91 i‡(((
œpic
[
VER
]>>16) & 0xFF) >= 4)

92 
	`œpicw
(
PCINT
, 
MASKED
);

95 
	`œpicw
(
ERROR
, 
IRQ_OFFSET
 + 
IRQ_ERROR
);

98 
	`œpicw
(
ESR
, 0);

99 
	`œpicw
(
ESR
, 0);

102 
	`œpicw
(
EOI
, 0);

105 
	`œpicw
(
ICRHI
, 0);

106 
	`œpicw
(
ICRLO
, 
BCAST
 | 
INIT
 | 
LEVEL
);

107 
œpic
[
ICRLO
] & 
DELIVS
)

111 
	`œpicw
(
TPR
, 0);

112 
	}
}

115 
	$˝unum
()

117 i‡(
œpic
)

118  
œpic
[
ID
] >> 24;

120 
	}
}

124 
	$œpic_eoi
()

126 i‡(
œpic
)

127 
	`œpicw
(
EOI
, 0);

128 
	}
}

133 
	$mi¸odñay
(
us
)

135 
	}
}

137 
	#IO_RTC
 0x70

	)

142 
	$œpic_°¨èp
(
uöt8_t
 
≠icid
, 
uöt32_t
 
addr
)

144 
i
;

145 
uöt16_t
 *
wrv
;

150 
	`outb
(
IO_RTC
, 0xF);

151 
	`outb
(
IO_RTC
+1, 0x0A);

152 
wrv
 = (
uöt16_t
 *)
	`KADDR
((0x40 << 4 | 0x67));

153 
wrv
[0] = 0;

154 
wrv
[1] = 
addr
 >> 4;

158 
	`œpicw
(
ICRHI
, 
≠icid
 << 24);

159 
	`œpicw
(
ICRLO
, 
INIT
 | 
LEVEL
 | 
ASSERT
);

160 
	`mi¸odñay
(200);

161 
	`œpicw
(
ICRLO
, 
INIT
 | 
LEVEL
);

162 
	`mi¸odñay
(100);

169 
i
 = 0; i < 2; i++) {

170 
	`œpicw
(
ICRHI
, 
≠icid
 << 24);

171 
	`œpicw
(
ICRLO
, 
STARTUP
 | (
addr
 >> 12));

172 
	`mi¸odñay
(200);

174 
	}
}

177 
	$œpic_ùi
(
ve˘‹
)

179 
	`œpicw
(
ICRLO
, 
OTHERS
 | 
FIXED
 | 
ve˘‹
);

180 
œpic
[
ICRLO
] & 
DELIVS
)

182 
	}
}

	@kern/monitor.c

4 
	~<öc/°dio.h
>

5 
	~<öc/°rög.h
>

6 
	~<öc/memœyout.h
>

7 
	~<öc/as£π.h
>

8 
	~<öc/x86.h
>

10 
	~<kîn/c⁄sﬁe.h
>

11 
	~<kîn/m⁄ô‹.h
>

12 
	~<kîn/kdebug.h
>

13 
	~<kîn/å≠.h
>

14 
	~<kîn/ív.h
>

16 
	#CMDBUF_SIZE
 80

17 

	)

19 
	sComm™d
 {

20 c⁄° *
	m«me
;

21 c⁄° *
	mdesc
;

23 (*
	mfunc
)(
	m¨gc
, ** 
	m¨gv
, 
Tøp‰ame
* 
	mtf
);

26 
Comm™d
 
	gcomm™ds
[] = {

27 { "hñp", "Di•œyÅhi†li° o‡comm™ds", 
m⁄_hñp
 },

28 { "kînöfo", "Di•œy inf‹m©i⁄ábouàthêkî√l", 
m⁄_kînöfo
 },

29 { "backåa˚", "Di•œyÅhêöfom©i⁄ábouàthê°ack",
m⁄_backåa˚
},

30 { "c⁄töue", "C⁄töuêexecuti⁄ fromÅhêcuºíàloˇti⁄",
m⁄_c⁄töue
},

31 { "si","SögÀ-°ï o√ in°ru˘i⁄áà®time",
m⁄_si
},

33 
	#NCOMMANDS
 ((
comm™ds
)/(comm™ds[0]))

	)

38 
	$m⁄_hñp
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
)

40 
i
;

42 
i
 = 0; i < 
NCOMMANDS
; i++)

43 
	`˝rötf
("%†- %s\n", 
comm™ds
[
i
].
«me
, comm™ds[i].
desc
);

45 
	}
}

48 
	$m⁄_kînöfo
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
)

50 
_°¨t
[], 
íåy
[], 
ëext
[], 
ed©a
[], 
íd
[];

52 
	`˝rötf
("Special kernel symbols:\n");

53 
	`˝rötf
(" _°¨à %08x (phys)\n", 
_°¨t
);

54 
	`˝rötf
("É¡ry %08x (vútË %08x (phys)\n", 
íåy
,É¡ry - 
KERNBASE
);

55 
	`˝rötf
("Éãxà %08x (vútË %08x (phys)\n", 
ëext
,Éãxà- 
KERNBASE
);

56 
	`˝rötf
("Éd©® %08x (vútË %08x (phys)\n", 
ed©a
,Éd©®- 
KERNBASE
);

57 
	`˝rötf
("Énd %08x (vútË %08x (phys)\n", 
íd
,Énd - 
KERNBASE
);

58 
	`˝rötf
("KernelÉxecutable memory footprint: %dKB\n",

59 
	`ROUNDUP
(
íd
 - 
íåy
, 1024) / 1024);

61 
	}
}

64 
	$m⁄_backåa˚
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
)

67 
i
;

68 
ebp
 = 
	`ªad_ebp
();

69 
Eùdebugöfo
 
öfo
;

70 
buf„r
[100];

72 
	`˝rötf
("Stack backtrace:\n");

73 
ebp
!=0)

75 
eù
 = *((*)
ebp
+1);

76 
¨gs
[5] = {0} ;

77 
i
= 0;i<5;i++)

78 
¨gs
[
i
] = *((*)
ebp
+ 2 + i);

80 
	`˝rötf
("Éb∞%08xÉù %08xárg†%08x %08x %08x %08x %08x\n",
ebp
,
eù
,
¨gs
[0],args[1],args[2],args[3],args[4]);

82 
	`debugöfo_eù
(
eù
,&
öfo
);

84 
i
=0;i<100&&i<
öfo
.
eù_‚_«mñí
;i++)

85 
buf„r
[
i
] = 
öfo
.
eù_‚_«me
[i];

86 
buf„r
[
i
] = '\0';

88 
	`˝rötf
(" %s:%d:%.*s+%d\n",
öfo
.
eù_fûe
, info.
eù_löe
, info.
eù_‚_«mñí
 ,öfo.
eù_‚_«me
 ,
eù
-öfo.
eù_‚_addr
);

90 
ebp
 = *((*)ebp);

93 
	}
}

96 
	$m⁄_c⁄töue
(
¨gc
,**
¨gv
,
Tøp‰ame
 *
tf
)

115 
	}
}

118 
	$m⁄_si
(
¨gc
,**
¨gv
,
Tøp‰ame
 *
tf
)

145 
	}
}

148 
	#WHITESPACE
 "\t\r\¿"

	)

149 
	#MAXARGS
 16

	)

152 
	$runcmd
(*
buf
, 
Tøp‰ame
 *
tf
)

154 
¨gc
;

155 *
¨gv
[
MAXARGS
];

156 
i
;

159 
¨gc
 = 0;

160 
¨gv
[
¨gc
] = 0;

163 *
buf
 && 
	`°rchr
(
WHITESPACE
, *buf))

164 *
buf
++ = 0;

165 i‡(*
buf
 == 0)

169 i‡(
¨gc
 =
MAXARGS
-1) {

170 
	`˝rötf
("Toÿm™yárgumít†(max %d)\n", 
MAXARGS
);

173 
¨gv
[
¨gc
++] = 
buf
;

174 *
buf
 && !
	`°rchr
(
WHITESPACE
, *buf))

175 
buf
++;

177 
¨gv
[
¨gc
] = 0;

180 i‡(
¨gc
 == 0)

182 
i
 = 0; i < 
NCOMMANDS
; i++) {

183 i‡(
	`°rcmp
(
¨gv
[0], 
comm™ds
[
i
].
«me
) == 0)

184  
comm™ds
[
i
].
	`func
(
¨gc
, 
¨gv
, 
tf
);

186 
	`˝rötf
("Unknow¿comm™d '%s'\n", 
¨gv
[0]);

188 
	}
}

191 
	$m⁄ô‹
(
Tøp‰ame
 *
tf
)

193 *
buf
;

195 
	`˝rötf
("WelcomeÅoÅhe JOS kernel monitor!\n");

196 
	`˝rötf
("Type 'help' foráÜist of commands.\n");

198 i‡(
tf
 !
NULL
)

199 
	`¥öt_å≠‰ame
(
tf
);

202 
buf
 = 
	`ªadlöe
("K> ");

203 i‡(
buf
 !
NULL
)

204 i‡(
	`runcmd
(
buf
, 
tf
) < 0)

207 
	}
}

	@kern/monitor.h

1 #i‚de‡
JOS_KERN_MONITOR_H


2 
	#JOS_KERN_MONITOR_H


	)

3 #i‚de‡
JOS_KERNEL


7 
	gTøp‰ame
;

12 
m⁄ô‹
(
Tøp‰ame
 *
tf
);

15 
m⁄_hñp
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
);

16 
m⁄_kînöfo
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
);

17 
m⁄_backåa˚
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
);

18 
m⁄_c⁄töue
(
¨gc
,**
¨gv
,
Tøp‰ame
 *
tf
);

19 
m⁄_si
(
¨gc
,**
¨gv
,
Tøp‰ame
 *
tf
);

	@kern/mpconfig.c

4 
	~<öc/ty≥s.h
>

5 
	~<öc/°rög.h
>

6 
	~<öc/memœyout.h
>

7 
	~<öc/x86.h
>

8 
	~<öc/mmu.h
>

9 
	~<öc/ív.h
>

10 
	~<kîn/˝u.h
>

11 
	~<kîn/pm≠.h
>

13 
CpuInfo
 
	g˝us
[
NCPU
];

14 
CpuInfo
 *
	gboŸ˝u
;

15 
	gismp
;

16 
	gn˝u
;

19 
	g≥r˝u_k°acks
[
NCPU
][
KSTKSIZE
]

20 
__©åibuã__
 ((
Æig√d
(
PGSIZE
)));

25 
	smp
 {

26 
uöt8_t
 
	msig«tuª
[4];

27 
phyßddr_t
 
	mphyßddr
;

28 
uöt8_t
 
	mÀngth
;

29 
uöt8_t
 
	m•e¸ev
;

30 
uöt8_t
 
	mchecksum
;

31 
uöt8_t
 
	mty≥
;

32 
uöt8_t
 
	mim¸p
;

33 
uöt8_t
 
	mª£rved
[3];

34 } 
__©åibuã__
((
__∑cked__
));

36 
	smpc⁄f
 {

37 
uöt8_t
 
	msig«tuª
[4];

38 
uöt16_t
 
	mÀngth
;

39 
uöt8_t
 
	mvîsi⁄
;

40 
uöt8_t
 
	mchecksum
;

41 
uöt8_t
 
	m¥odu˘
[20];

42 
phyßddr_t
 
	m€mèbÀ
;

43 
uöt16_t
 
	m€mÀngth
;

44 
uöt16_t
 
	míåy
;

45 
phyßddr_t
 
	mœpiˇddr
;

46 
uöt16_t
 
	mxÀngth
;

47 
uöt8_t
 
	mxchecksum
;

48 
uöt8_t
 
	mª£rved
;

49 
uöt8_t
 
	míåõs
[0];

50 } 
__©åibuã__
((
__∑cked__
));

52 
	smµroc
 {

53 
uöt8_t
 
	mty≥
;

54 
uöt8_t
 
	m≠icid
;

55 
uöt8_t
 
	mvîsi⁄
;

56 
uöt8_t
 
	mÊags
;

57 
uöt8_t
 
	msig«tuª
[4];

58 
uöt32_t
 
	m„©uª
;

59 
uöt8_t
 
	mª£rved
[8];

60 } 
__©åibuã__
((
__∑cked__
));

63 
	#MPPROC_BOOT
 0x02

64 

	)

66 
	#MPPROC
 0x00

67 
	#MPBUS
 0x01

68 
	#MPIOAPIC
 0x02

69 
	#MPIOINTR
 0x03

70 
	#MPLINTR
 0x04

71 

	)

72 
uöt8_t


73 
	$sum
(*
addr
, 
Àn
)

75 
i
, 
sum
;

77 
sum
 = 0;

78 
i
 = 0; i < 
Àn
; i++)

79 
sum
 +((
uöt8_t
 *)
addr
)[
i
];

80  
sum
;

81 
	}
}

84 
mp
 *

85 
	$mp£¨ch1
(
phyßddr_t
 
a
, 
Àn
)

87 
mp
 *m∞
	`KADDR
(
a
), *
íd
 = KADDR◊ + 
Àn
);

89 ; 
mp
 < 
íd
; mp++)

90 i‡(
	`memcmp
(
mp
->
sig«tuª
, "_MP_", 4) == 0 &&

91 
	`sum
(
mp
, (*mp)) == 0)

92  
mp
;

93  
NULL
;

94 
	}
}

101 
mp
 *

102 
	$mp£¨ch
()

104 
uöt8_t
 *
bda
;

105 
uöt32_t
 
p
;

106 
mp
 *mp;

108 
	`°©ic_as£π
((*
mp
) == 16);

111 
bda
 = (
uöt8_t
 *Ë
	`KADDR
(0x40 << 4);

115 i‡((
p
 = *(
uöt16_t
 *Ë(
bda
 + 0x0E))) {

116 
p
 <<= 4;

117 i‡((
mp
 = 
	`mp£¨ch1
(
p
, 1024)))

118  
mp
;

122 
p
 = *(
uöt16_t
 *Ë(
bda
 + 0x13) * 1024;

123 i‡((
mp
 = 
	`mp£¨ch1
(
p
 - 1024, 1024)))

124  
mp
;

126  
	`mp£¨ch1
(0xF0000, 0x10000);

127 
	}
}

132 
mpc⁄f
 *

133 
	$mpc⁄fig
(
mp
 **
pmp
)

135 
mpc⁄f
 *
c⁄f
;

136 
mp
 *mp;

138 i‡((
mp
 = 
	`mp£¨ch
()) == 0)

139  
NULL
;

140 i‡(
mp
->
phyßddr
 =0 || mp->
ty≥
 != 0) {

141 
	`˝rötf
("SMP: Default configurationsÇot implemented\n");

142  
NULL
;

144 
c⁄f
 = (
mpc⁄f
 *Ë
	`KADDR
(
mp
->
phyßddr
);

145 i‡(
	`memcmp
(
c⁄f
, "PCMP", 4) != 0) {

146 
	`˝rötf
("SMP: Incorrect MP configurationÅable signature\n");

147  
NULL
;

149 i‡(
	`sum
(
c⁄f
, c⁄f->
Àngth
) != 0) {

150 
	`˝rötf
("SMP: Bad MP configuration checksum\n");

151  
NULL
;

153 i‡(
c⁄f
->
vîsi⁄
 != 1 && conf->version != 4) {

154 
	`˝rötf
("SMP: Unsuµ‹ãd MP vîsi⁄ %d\n", 
c⁄f
->
vîsi⁄
);

155  
NULL
;

157 i‡(
	`sum
((
uöt8_t
 *)
c⁄f
 + c⁄f->
Àngth
, c⁄f->
xÀngth
Ë!c⁄f->
xchecksum
) {

158 
	`˝rötf
("SMP: Bad MP configurationÉxtended checksum\n");

159  
NULL
;

161 *
pmp
 = 
mp
;

162  
c⁄f
;

163 
	}
}

166 
	$mp_öô
()

168 
mp
 *mp;

169 
mpc⁄f
 *
c⁄f
;

170 
mµroc
 *
¥oc
;

171 
uöt8_t
 *
p
;

172 
i
;

174 
boŸ˝u
 = &
˝us
[0];

175 i‡((
c⁄f
 = 
	`mpc⁄fig
(&
mp
)) == 0)

177 
ismp
 = 1;

178 
œpiˇddr
 = 
c⁄f
->lapicaddr;

180 
p
 = 
c⁄f
->
íåõs
, 
i
 = 0; i < c⁄f->
íåy
; i++) {

181 *
p
) {

182 
MPPROC
:

183 
¥oc
 = (
mµroc
 *)
p
;

184 i‡(
¥oc
->
Êags
 & 
MPPROC_BOOT
)

185 
boŸ˝u
 = &
˝us
[
n˝u
];

186 i‡(
n˝u
 < 
NCPU
) {

187 
˝us
[
n˝u
].
˝u_id
 =Çcpu;

188 
n˝u
++;

190 
	`˝rötf
("SMP:Åoo many CPUs, CPU %d disabled\n",

191 
¥oc
->
≠icid
);

193 
p
 +(
mµroc
);

195 
MPBUS
:

196 
MPIOAPIC
:

197 
MPIOINTR
:

198 
MPLINTR
:

199 
p
 += 8;

202 
	`˝rötf
("mpöô: unknow¿c⁄figÅy≥ %x\n", *
p
);

203 
ismp
 = 0;

204 
i
 = 
c⁄f
->
íåy
;

208 
boŸ˝u
->
˝u_°©us
 = 
CPU_STARTED
;

209 i‡(!
ismp
) {

211 
n˝u
 = 1;

212 
œpiˇddr
 = 0;

213 
	`˝rötf
("SMP: configurationÇot found, SMP disabled\n");

216 
	`˝rötf
("SMP: CPU %d found %d CPU(s)\n", 
boŸ˝u
->
˝u_id
, 
n˝u
);

218 i‡(
mp
->
im¸p
) {

221 
	`˝rötf
("SMP: Setting IMCRÅo switch from PIC modeÅo symmetric I/O mode\n");

222 
	`outb
(0x22, 0x70);

223 
	`outb
(0x23, 
	`öb
(0x23) | 1);

225 
	}
}

	@kern/picirq.c

3 
	~<öc/as£π.h
>

4 
	~<öc/å≠.h
>

6 
	~<kîn/picúq.h
>

11 
uöt16_t
 
	gúq_mask_8259A
 = 0xFFFF & ~(1<<
IRQ_SLAVE
);

12 
boﬁ
 
	gdidöô
;

16 
	$pic_öô
()

18 
didöô
 = 1;

21 
	`outb
(
IO_PIC1
+1, 0xFF);

22 
	`outb
(
IO_PIC2
+1, 0xFF);

30 
	`outb
(
IO_PIC1
, 0x11);

33 
	`outb
(
IO_PIC1
+1, 
IRQ_OFFSET
);

37 
	`outb
(
IO_PIC1
+1, 1<<
IRQ_SLAVE
);

47 
	`outb
(
IO_PIC1
+1, 0x3);

50 
	`outb
(
IO_PIC2
, 0x11);

51 
	`outb
(
IO_PIC2
+1, 
IRQ_OFFSET
 + 8);

52 
	`outb
(
IO_PIC2
+1, 
IRQ_SLAVE
);

55 
	`outb
(
IO_PIC2
+1, 0x01);

61 
	`outb
(
IO_PIC1
, 0x68);

62 
	`outb
(
IO_PIC1
, 0x0a);

64 
	`outb
(
IO_PIC2
, 0x68);

65 
	`outb
(
IO_PIC2
, 0x0a);

67 i‡(
úq_mask_8259A
 != 0xFFFF)

68 
	`úq_£tmask_8259A
(
úq_mask_8259A
);

69 
	}
}

72 
	$úq_£tmask_8259A
(
uöt16_t
 
mask
)

74 
i
;

75 
úq_mask_8259A
 = 
mask
;

76 i‡(!
didöô
)

78 
	`outb
(
IO_PIC1
+1, ()
mask
);

79 
	`outb
(
IO_PIC2
+1, ()(
mask
 >> 8));

80 
	`˝rötf
("enabled interrupts:");

81 
i
 = 0; i < 16; i++)

82 i‡(~
mask
 & (1<<
i
))

83 
	`˝rötf
(" %d", 
i
);

84 
	`˝rötf
("\n");

85 
	}
}

	@kern/picirq.h

3 #i‚de‡
JOS_KERN_PICIRQ_H


4 
	#JOS_KERN_PICIRQ_H


	)

5 #i‚de‡
JOS_KERNEL


9 
	#MAX_IRQS
 16

10 

	)

12 
	#IO_PIC1
 0x20

13 
	#IO_PIC2
 0xA0

14 

	)

15 
	#IRQ_SLAVE
 2

16 

	)

18 #i‚de‡
__ASSEMBLER__


20 
	~<öc/ty≥s.h
>

21 
	~<öc/x86.h
>

23 
uöt16_t
 
úq_mask_8259A
;

24 
pic_öô
();

25 
úq_£tmask_8259A
(
uöt16_t
 
mask
);

	@kern/pmap.c

3 
	~<öc/x86.h
>

4 
	~<öc/mmu.h
>

5 
	~<öc/îr‹.h
>

6 
	~<öc/°rög.h
>

7 
	~<öc/as£π.h
>

9 
	~<kîn/pm≠.h
>

10 
	~<kîn/k˛ock.h
>

11 
	~<kîn/ív.h
>

12 
	~<kîn/˝u.h
>

15 
size_t
 
	g≈ages
;

16 
size_t
 
	g≈ages_ba£mem
;

19 
pde_t
 *
	gkîn_pgdú
;

20 
PageInfo
 *
	g∑ges
;

21 
PageInfo
 *
	g∑ge_‰ì_li°
;

29 
	$nvøm_ªad
(
r
)

31  
	`mc146818_ªad
(
r
) | (mc146818_read(r + 1) << 8);

32 
	}
}

35 
	$i386_dëe˘_mem‹y
()

37 
size_t
 
≈ages_extmem
;

41 
≈ages_ba£mem
 = (
	`nvøm_ªad
(
NVRAM_BASELO
Ë* 1024Ë/ 
PGSIZE
;

42 
≈ages_extmem
 = (
	`nvøm_ªad
(
NVRAM_EXTLO
Ë* 1024Ë/ 
PGSIZE
;

46 i‡(
≈ages_extmem
)

47 
≈ages
 = (
EXTPHYSMEM
 / 
PGSIZE
Ë+ 
≈ages_extmem
;

49 
≈ages
 = 
≈ages_ba£mem
;

51 
	`˝rötf
("Physical memory: %uKávailable, base = %uK,Éxtended = %uK\n",

52 
≈ages
 * 
PGSIZE
 / 1024,

53 
≈ages_ba£mem
 * 
PGSIZE
 / 1024,

54 
≈ages_extmem
 * 
PGSIZE
 / 1024);

55 
	}
}

62 
mem_öô_mp
();

63 
boŸ_m≠_ªgi⁄
(
pde_t
 *
pgdú
, 
uöçå_t
 
va
, 
size_t
 
size
, 
phyßddr_t
 
∑
, 
≥rm
);

64 
check_∑ge_‰ì_li°
(
boﬁ
 
⁄ly_low_mem‹y
);

65 
check_∑ge_Æloc
();

66 
check_kîn_pgdú
();

67 
phyßddr_t
 
check_va2∑
(
pde_t
 *
pgdú
, 
uöçå_t
 
va
);

68 
check_∑ge
();

69 
check_∑ge_ö°ÆÀd_pgdú
();

84 
	$boŸ_Æloc
(
uöt32_t
 
n
)

86 *
√xt‰ì
;

87 *
ªsu…
 = 
NULL
;

94 i‡(!
√xt‰ì
) {

95 
íd
[];

96 
√xt‰ì
 = 
	`ROUNDUP
((*Ë
íd
, 
PGSIZE
);

108 
ªsu…
 = 
√xt‰ì
;

109 if((
uöt32_t
)(
ªsu…
 - 
KERNBASE
+
n
Ë> (uöt32_t)(
≈ages
*
PGSIZE
))

111 
	`∑nic
("boot_alloc():out ofÖhysical memory\n");

114 
√xt‰ì
 = 
	`ROUNDUP
(
ªsu…
+
n
,
PGSIZE
);

121  
ªsu…
;

122 
	}
}

134 
	$mem_öô
()

136 
uöt32_t
 
¸0
;

137 
size_t
 
n
;

140 
	`i386_dëe˘_mem‹y
();

148 
kîn_pgdú
 = (
pde_t
 *Ë
	`boŸ_Æloc
(
PGSIZE
);

149 
	`mem£t
(
kîn_pgdú
, 0, 
PGSIZE
);

158 
kîn_pgdú
[
	`PDX
(
UVPT
)] = 
	`PADDR
(kîn_pgdúË| 
PTE_U
 | 
PTE_P
;

168 
∑ges
 = (
PageInfo
 *)
	`boŸ_Æloc
(
≈ages
 *  (PageInfo));

169 
	`mem£t
(
∑ges
,0,
≈ages
 * (
PageInfo
) );

173 
ívs
 = (
Env
 *)
	`boŸ_Æloc
(
NENV
 * (Env));

182 
	`∑ge_öô
();

184 
	`check_∑ge_‰ì_li°
(1);

185 
	`check_∑ge_Æloc
();

186 
	`check_∑ge
();

198 
	`boŸ_m≠_ªgi⁄
(
kîn_pgdú
,
UPAGES
,
PTSIZE
,
	`PADDR
(
∑ges
),
PTE_U
 | 
PTE_P
);

208 
	`boŸ_m≠_ªgi⁄
(
kîn_pgdú
,
UENVS
,
PTSIZE
,
	`PADDR
(
ívs
),
PTE_U
 | 
PTE_P
);

222 
	`boŸ_m≠_ªgi⁄
(
kîn_pgdú
,
KSTACKTOP
-
KSTKSIZE
 ,KSTKSIZE,
	`PADDR
(
boŸ°ack
),
PTE_W
|
PTE_P
);

234 
	`mem_öô_mp
();

237 
	`boŸ_m≠_ªgi⁄
(
kîn_pgdú
,
KERNBASE
,-KERNBASE,0,
PTE_W
);

240 
	`check_kîn_pgdú
();

249 
	`l¸3
(
	`PADDR
(
kîn_pgdú
));

251 
	`check_∑ge_‰ì_li°
(0);

255 
¸0
 = 
	`r¸0
();

256 
¸0
 |
CR0_PE
|
CR0_PG
|
CR0_AM
|
CR0_WP
|
CR0_NE
|
CR0_MP
;

257 
¸0
 &~(
CR0_TS
|
CR0_EM
);

258 
	`l¸0
(
¸0
);

261 
	`check_∑ge_ö°ÆÀd_pgdú
();

262 
	}
}

268 
	$mem_öô_mp
()

286 
uöt32_t
 
k°ackt›_i
;

287 
i
;

288 
i
 = 0;i< 
NCPU
;i++)

290 
k°ackt›_i
 = 
KSTACKTOP
 - 
i
*(
KSTKSIZE
 + 
KSTKGAP
);

291 
	`boŸ_m≠_ªgi⁄
(
kîn_pgdú
,
k°ackt›_i
-
KSTKSIZE
,KSTKSIZE,
	`PADDR
(&
≥r˝u_k°acks
[
i
]),
PTE_W
);

295 
	}
}

310 
	$∑ge_öô
()

333 
size_t
 
i
;

335 
size_t
 
IOPHYSMEM_begö
 = 
	`ROUNDDOWN
(
IOPHYSMEM
,
PGSIZE
)/PGSIZE;

336 
size_t
 
EXTPHYSEME_íd
 = 
	`PADDR
(
	`boŸ_Æloc
(0)Ë/ 
PGSIZE
;

342 
size_t
 
i_MPENTRY_PADDR
 = 
MPENTRY_PADDR
 / 
PGSIZE
;

343 
∑ge_‰ì_li°
 = 
NULL
;

345 
i
 = 0; i < 
≈ages
; i++) {

346 
∑ges
[
i
].
µ_ªf
 = 0;

347 if(0 =
i
 || ( (
IOPHYSMEM_begö
 <iË&& ( i < 
EXTPHYSEME_íd
 ) ) || i =
i_MPENTRY_PADDR
)

349 
∑ges
[
i
].
µ_ªf
 = 1;

350 
∑ges
[
i
].
µ_lök
 = 
NULL
;

355 
∑ges
[
i
].
µ_ªf
 = 0;

356 
∑ges
[
i
].
µ_lök
 = 
∑ge_‰ì_li°
;

357 
∑ge_‰ì_li°
 = &
∑ges
[
i
];

361 
	}
}

372 
PageInfo
 *

373 
	$∑ge_Æloc
(
Æloc_Êags
)

376 
PageInfo
 *
∑ge_ªtu∫
;

377 if(
∑ge_‰ì_li°
 !
NULL
)

379 
∑ge_ªtu∫
 = 
∑ge_‰ì_li°
;

380 
∑ge_‰ì_li°
 = (
PageInfo
 *Ìage_‰ì_li°->
µ_lök
;

381 if(
Æloc_Êags
 & 
ALLOC_ZERO
)

383 
	`mem£t
(
	`∑ge2kva
(
∑ge_ªtu∫
),'\0',
PGSIZE
);

387 
∑ge_ªtu∫
 =
NULL
;

389  
∑ge_ªtu∫
;

390 
	}
}

397 
	$∑ge_‰ì
(
PageInfo
 *
µ
)

400 
µ
->
µ_lök
 = 
∑ge_‰ì_li°
;

401 
∑ge_‰ì_li°
 = 
µ
;

404 
	}
}

411 
	$∑ge_de¸ef
(
PageInfo
* 
µ
)

413 i‡(--
µ
->
µ_ªf
 == 0)

414 
	`∑ge_‰ì
(
µ
);

415 
	}
}

439 
±e_t
 *

440 
	$pgdú_wÆk
(
pde_t
 *
pgdú
, c⁄° *
va
, 
¸óã
)

443 
pde_t
 *
pgdú_íåy
 = &
pgdú
[
	`PDX
(
va
)];

445 
±e_t
 *
pgèbÀ
;

446 
PageInfo
 *
µ
;

448 if(*
pgdú_íåy
 & 
PTE_P
)

450 
pgèbÀ
 = (
±e_t
*)
	`KADDR
(
	`PTE_ADDR
(*
pgdú_íåy
));

454 if(
¸óã
 ==
Ál£
)

455  
NULL
;

456 if((
µ
 = 
	`∑ge_Æloc
(
ALLOC_ZERO
)) ==0)

457  
NULL
;

458 
µ
->
µ_ªf
 = 1;

459 
pgèbÀ
 = (
±e_t
*)
	`KADDR
(
	`∑ge2∑
(
µ
));

460 *
pgdú_íåy
 = 
	`PADDR
(
pgèbÀ
Ë| 
PTE_P
 |
PTE_W
 |
PTE_U
;

464  &
pgèbÀ
[
	`PTX
(
va
)];

465 
	}
}

478 
	$boŸ_m≠_ªgi⁄
(
pde_t
 *
pgdú
, 
uöçå_t
 
va
, 
size_t
 
size
, 
phyßddr_t
 
∑
, 
≥rm
)

481 
uöçå_t
 
off£t
;

482 
±e_t
 *
±e
;

483 
off£t
 =0 ;off£à< 
size
 ;off£t+=
PGSIZE
)

485 
±e
 = 
	`pgdú_wÆk
(
pgdú
,(*)
va
,1);

486 if(!
±e
)

487 
	`∑nic
("boot_map_region:pgdir_walk failed");

488 if(*
±e
 & 
PTE_P
)

492 *
±e
 = 
∑
 | 
≥rm
 |
PTE_P
;

493 
va
 +=
PGSIZE
;

494 
∑
 +=
PGSIZE
;

496 
	}
}

524 
	$∑ge_ö£π
(
pde_t
 *
pgdú
, 
PageInfo
 *
µ
, *
va
, 
≥rm
)

527 
±e_t
 *
±e
 = 
	`pgdú_wÆk
(
pgdú
,
va
,1);

528 if(!
±e
)

529  -
E_NO_MEM
;

530 ++
µ
->
µ_ªf
;

531 if(*
±e
 & 
PTE_P
)

532 
	`∑ge_ªmove
(
pgdú
,
va
);

534 *
±e
 = 
	`∑ge2∑
(
µ
Ë|
≥rm
|
PTE_P
;

535 
	`éb_övÆid©e
(
pgdú
,
va
);

538 
	}
}

551 
PageInfo
 *

552 
	$∑ge_lookup
(
pde_t
 *
pgdú
, *
va
, 
±e_t
 **
±e_°‹e
)

555 
±e_t
 *
±e
 = 
	`pgdú_wÆk
(
pgdú
,(*)
va
,0);

557 if(!
±e
 || !(*±ê& 
PTE_P
))

558  
NULL
;

559 if(
±e_°‹e
 !=0)

560 *
±e_°‹e
 = 
±e
;

562  
	`∑2∑ge
(
	`PTE_ADDR
(*
±e
));

563 
	}
}

581 
	$∑ge_ªmove
(
pde_t
 *
pgdú
, *
va
)

584 
±e_t
 *
±e
;

585 
PageInfo
 *
pg
 = 
	`∑ge_lookup
(
pgdú
,
va
,&
±e
);

586 if(
pg
!=
NULL
)

588 
	`∑ge_de¸ef
(
pg
);

589 *
±e
 = 0;

590 
	`éb_övÆid©e
(
pgdú
,
va
);

592 
	}
}

599 
	$éb_övÆid©e
(
pde_t
 *
pgdú
, *
va
)

602 i‡(!
cuªnv
 || cuªnv->
ív_pgdú
 =
pgdú
)

603 
	`övÕg
(
va
);

604 
	}
}

612 
	$mmio_m≠_ªgi⁄
(
phyßddr_t
 
∑
, 
size_t
 
size
)

618 
uöçå_t
 
ba£
 = 
MMIOBASE
;

649 *
ªt
 =(*)
ba£
;

650 
size
 = 
	`ROUNDUP
(size,
PGSIZE
);

651 if(
ba£
 + 
size
 > 
MMIOLIM
 ||base +size <base)

652 
	`∑nic
("mmio_map_region :Ñeservation overflow");

653 
	`boŸ_m≠_ªgi⁄
(
kîn_pgdú
,
ba£
,
size
,
∑
,
PTE_PCD
|
PTE_PWT
|
PTE_W
);

654 
ba£
 +=
size
;

655  
ªt
;

656 
	}
}

658 
uöçå_t
 
	gu£r_mem_check_addr
;

679 
	$u£r_mem_check
(
Env
 *
ív
, c⁄° *
va
, 
size_t
 
Àn
, 
≥rm
)

683 
±e_t
 *
±e
;

684 
≥rm
 =Öîm | 
PTE_P
;

686 
uöt32_t
 
off£t
 = (uöt32_t)
va
;

687 
uöt32_t
 
off£t_limô
 = 
	`ROUNDUP
((uöt32_t)
va
 + 
Àn
,
PGSIZE
);

688 ;
off£t
 < 
off£t_limô
;off£à
	`ROUNDDOWN
(off£t+ 
PGSIZE
,PGSIZE))

690 if(
off£t
>=
ULIM
)

692 
u£r_mem_check_addr
 = (
uöçå_t
)
off£t
;

693  -
E_FAULT
;

695 
±e
 = 
	`pgdú_wÆk
(
ív
->
ív_pgdú
,(*)
off£t
,0);

696 if(
±e
 =
NULL
 || !(*±ê&
≥rm
))

698 
u£r_mem_check_addr
 =(
uöçå_t
)
off£t
;

699  -
E_FAULT
;

703 
	}
}

713 
	$u£r_mem_as£π
(
Env
 *
ív
, c⁄° *
va
, 
size_t
 
Àn
, 
≥rm
)

715 i‡(
	`u£r_mem_check
(
ív
, 
va
, 
Àn
, 
≥rm
 | 
PTE_U
) < 0) {

716 
	`˝rötf
("[%08x] user_mem_checkássertion failure for "

717 "v®%08x\n", 
ív
->
ív_id
, 
u£r_mem_check_addr
);

718 
	`ív_de°roy
(
ív
);

720 
	}
}

731 
	$check_∑ge_‰ì_li°
(
boﬁ
 
⁄ly_low_mem‹y
)

733 
PageInfo
 *
µ
;

734 
pdx_limô
 = 
⁄ly_low_mem‹y
 ? 1 : 
NPDENTRIES
;

735 
n‰ì_ba£mem
 = 0, 
n‰ì_extmem
 = 0;

736 *
fú°_‰ì_∑ge
;

738 i‡(!
∑ge_‰ì_li°
)

739 
	`∑nic
("'page_free_list' isáÇullÖointer!");

741 i‡(
⁄ly_low_mem‹y
) {

744 
PageInfo
 *
µ1
, *
µ2
;

745 
PageInfo
 **
ç
[2] = { &
µ1
, &
µ2
 };

746 
µ
 = 
∑ge_‰ì_li°
;Öp;Ö∞µ->
µ_lök
) {

747 
∑gëy≥
 = 
	`PDX
(
	`∑ge2∑
(
µ
)Ë>
pdx_limô
;

748 *
ç
[
∑gëy≥
] = 
µ
;

749 
ç
[
∑gëy≥
] = &
µ
->
µ_lök
;

751 *
ç
[1] = 0;

752 *
ç
[0] = 
µ2
;

753 
∑ge_‰ì_li°
 = 
µ1
;

759 
µ
 = 
∑ge_‰ì_li°
;Öp;Ö∞µ->
µ_lök
)

762 i‡(
	`PDX
(
	`∑ge2∑
(
µ
)Ë< 
pdx_limô
)

763 
	`mem£t
(
	`∑ge2kva
(
µ
), 0x97, 128);

767 
fú°_‰ì_∑ge
 = (*Ë
	`boŸ_Æloc
(0);

768 
µ
 = 
∑ge_‰ì_li°
;Öp;Ö∞µ->
µ_lök
) {

770 
	`as£π
(
µ
 >
∑ges
);

771 
	`as£π
(
µ
 < 
∑ges
 + 
≈ages
);

772 
	`as£π
(((*Ë
µ
 - (*Ë
∑ges
) % (*pp) == 0);

775 
	`as£π
(
	`∑ge2∑
(
µ
) != 0);

776 
	`as£π
(
	`∑ge2∑
(
µ
Ë!
IOPHYSMEM
);

777 
	`as£π
(
	`∑ge2∑
(
µ
Ë!
EXTPHYSMEM
 - 
PGSIZE
);

778 
	`as£π
(
	`∑ge2∑
(
µ
Ë!
EXTPHYSMEM
);

779 
	`as£π
(
	`∑ge2∑
(
µ
Ë< 
EXTPHYSMEM
 || (*Ë
	`∑ge2kva
’pË>
fú°_‰ì_∑ge
);

781 
	`as£π
(
	`∑ge2∑
(
µ
Ë!
MPENTRY_PADDR
);

783 i‡(
	`∑ge2∑
(
µ
Ë< 
EXTPHYSMEM
)

784 ++
n‰ì_ba£mem
;

786 ++
n‰ì_extmem
;

789 
	`as£π
(
n‰ì_ba£mem
 > 0);

790 
	`as£π
(
n‰ì_extmem
 > 0);

791 
	}
}

798 
	$check_∑ge_Æloc
()

800 
PageInfo
 *
µ
, *
µ0
, *
µ1
, *
µ2
;

801 
n‰ì
;

802 
PageInfo
 *
Ê
;

803 *
c
;

804 
i
;

806 i‡(!
∑ges
)

807 
	`∑nic
("'pages' isáÇullÖointer!");

810 
µ
 = 
∑ge_‰ì_li°
, 
n‰ì
 = 0;Öp;Ö∞µ->
µ_lök
)

811 ++
n‰ì
;

814 
µ0
 = 
µ1
 = 
µ2
 = 0;

815 
	`as£π
((
µ0
 = 
	`∑ge_Æloc
(0)));

816 
	`as£π
((
µ1
 = 
	`∑ge_Æloc
(0)));

817 
	`as£π
((
µ2
 = 
	`∑ge_Æloc
(0)));

819 
	`as£π
(
µ0
);

820 
	`as£π
(
µ1
 &&Öp1 !
µ0
);

821 
	`as£π
(
µ2
 &&Öp2 !
µ1
 &&Öp2 !
µ0
);

822 
	`as£π
(
	`∑ge2∑
(
µ0
Ë< 
≈ages
*
PGSIZE
);

823 
	`as£π
(
	`∑ge2∑
(
µ1
Ë< 
≈ages
*
PGSIZE
);

824 
	`as£π
(
	`∑ge2∑
(
µ2
Ë< 
≈ages
*
PGSIZE
);

827 
Ê
 = 
∑ge_‰ì_li°
;

828 
∑ge_‰ì_li°
 = 0;

831 
	`as£π
(!
	`∑ge_Æloc
(0));

834 
	`∑ge_‰ì
(
µ0
);

835 
	`∑ge_‰ì
(
µ1
);

836 
	`∑ge_‰ì
(
µ2
);

837 
µ0
 = 
µ1
 = 
µ2
 = 0;

838 
	`as£π
((
µ0
 = 
	`∑ge_Æloc
(0)));

839 
	`as£π
((
µ1
 = 
	`∑ge_Æloc
(0)));

840 
	`as£π
((
µ2
 = 
	`∑ge_Æloc
(0)));

841 
	`as£π
(
µ0
);

842 
	`as£π
(
µ1
 &&Öp1 !
µ0
);

843 
	`as£π
(
µ2
 &&Öp2 !
µ1
 &&Öp2 !
µ0
);

844 
	`as£π
(!
	`∑ge_Æloc
(0));

847 
	`mem£t
(
	`∑ge2kva
(
µ0
), 1, 
PGSIZE
);

848 
	`∑ge_‰ì
(
µ0
);

849 
	`as£π
((
µ
 = 
	`∑ge_Æloc
(
ALLOC_ZERO
)));

850 
	`as£π
(
µ
 && 
µ0
 ==Öp);

851 
c
 = 
	`∑ge2kva
(
µ
);

852 
i
 = 0; i < 
PGSIZE
; i++)

853 
	`as£π
(
c
[
i
] == 0);

856 
∑ge_‰ì_li°
 = 
Ê
;

859 
	`∑ge_‰ì
(
µ0
);

860 
	`∑ge_‰ì
(
µ1
);

861 
	`∑ge_‰ì
(
µ2
);

864 
µ
 = 
∑ge_‰ì_li°
;Öp;Ö∞µ->
µ_lök
)

865 --
n‰ì
;

866 
	`as£π
(
n‰ì
 == 0);

868 
	`˝rötf
("check_page_alloc() succeeded!\n");

869 
	}
}

880 
	$check_kîn_pgdú
()

882 
uöt32_t
 
i
, 
n
;

883 
pde_t
 *
pgdú
;

885 
pgdú
 = 
kîn_pgdú
;

888 
n
 = 
	`ROUNDUP
(
≈ages
*(
PageInfo
), 
PGSIZE
);

889 
i
 = 0; i < 
n
; i +
PGSIZE
)

890 
	`as£π
(
	`check_va2∑
(
pgdú
, 
UPAGES
 + 
i
Ë=
	`PADDR
(
∑ges
) + i);

893 
n
 = 
	`ROUNDUP
(
NENV
*(
Env
), 
PGSIZE
);

894 
i
 = 0; i < 
n
; i +
PGSIZE
)

895 
	`as£π
(
	`check_va2∑
(
pgdú
, 
UENVS
 + 
i
Ë=
	`PADDR
(
ívs
) + i);

898 
i
 = 0; i < 
≈ages
 * 
PGSIZE
; i += PGSIZE)

899 
	`as£π
(
	`check_va2∑
(
pgdú
, 
KERNBASE
 + 
i
) == i);

903 
n
 = 0;Ç < 
NCPU
;Ç++) {

904 
uöt32_t
 
ba£
 = 
KSTACKTOP
 - (
KSTKSIZE
 + 
KSTKGAP
Ë* (
n
 + 1);

905 
i
 = 0; i < 
KSTKSIZE
; i +
PGSIZE
)

906 
	`as£π
(
	`check_va2∑
(
pgdú
, 
ba£
 + 
KSTKGAP
 + 
i
)

907 =
	`PADDR
(
≥r˝u_k°acks
[
n
]Ë+ 
i
);

908 
i
 = 0; i < 
KSTKGAP
; i +
PGSIZE
)

909 
	`as£π
(
	`check_va2∑
(
pgdú
, 
ba£
 + 
i
) == ~0);

913 
i
 = 0; i < 
NPDENTRIES
; i++) {

914 
i
) {

915 
	`PDX
(
UVPT
):

916 
	`PDX
(
KSTACKTOP
-1):

917 
	`PDX
(
UPAGES
):

918 
	`PDX
(
UENVS
):

919 
	`PDX
(
MMIOBASE
):

920 
	`as£π
(
pgdú
[
i
] & 
PTE_P
);

923 i‡(
i
 >
	`PDX
(
KERNBASE
)) {

924 
	`as£π
(
pgdú
[
i
] & 
PTE_P
);

925 
	`as£π
(
pgdú
[
i
] & 
PTE_W
);

927 
	`as£π
(
pgdú
[
i
] == 0);

931 
	`˝rötf
("check_kern_pgdir() succeeded!\n");

932 
	}
}

939 
phyßddr_t


940 
	$check_va2∑
(
pde_t
 *
pgdú
, 
uöçå_t
 
va
)

942 
±e_t
 *
p
;

944 
pgdú
 = &pgdú[
	`PDX
(
va
)];

945 i‡(!(*
pgdú
 & 
PTE_P
))

947 
p
 = (
±e_t
*Ë
	`KADDR
(
	`PTE_ADDR
(*
pgdú
));

948 i‡(!(
p
[
	`PTX
(
va
)] & 
PTE_P
))

950  
	`PTE_ADDR
(
p
[
	`PTX
(
va
)]);

951 
	}
}

956 
	$check_∑ge
()

958 
PageInfo
 *
µ
, *
µ0
, *
µ1
, *
µ2
;

959 
PageInfo
 *
Ê
;

960 
±e_t
 *
±ï
, *
±ï1
;

961 *
va
;

962 
uöçå_t
 
mm1
, 
mm2
;

963 
i
;

964 
pde_t
 
íåy_pgdú
[];

967 
µ0
 = 
µ1
 = 
µ2
 = 0;

968 
	`as£π
((
µ0
 = 
	`∑ge_Æloc
(0)));

969 
	`as£π
((
µ1
 = 
	`∑ge_Æloc
(0)));

970 
	`as£π
((
µ2
 = 
	`∑ge_Æloc
(0)));

972 
	`as£π
(
µ0
);

973 
	`as£π
(
µ1
 &&Öp1 !
µ0
);

974 
	`as£π
(
µ2
 &&Öp2 !
µ1
 &&Öp2 !
µ0
);

977 
Ê
 = 
∑ge_‰ì_li°
;

978 
∑ge_‰ì_li°
 = 0;

981 
	`as£π
(!
	`∑ge_Æloc
(0));

984 
	`as£π
(
	`∑ge_lookup
(
kîn_pgdú
, (*Ë0x0, &
±ï
Ë=
NULL
);

987 
	`as£π
(
	`∑ge_ö£π
(
kîn_pgdú
, 
µ1
, 0x0, 
PTE_W
) < 0);

990 
	`∑ge_‰ì
(
µ0
);

991 
	`as£π
(
	`∑ge_ö£π
(
kîn_pgdú
, 
µ1
, 0x0, 
PTE_W
) == 0);

992 
	`as£π
(
	`PTE_ADDR
(
kîn_pgdú
[0]Ë=
	`∑ge2∑
(
µ0
));

993 
	`as£π
(
	`check_va2∑
(
kîn_pgdú
, 0x0Ë=
	`∑ge2∑
(
µ1
));

994 
	`as£π
(
µ1
->
µ_ªf
 == 1);

995 
	`as£π
(
µ0
->
µ_ªf
 == 1);

998 
	`as£π
(
	`∑ge_ö£π
(
kîn_pgdú
, 
µ2
, (*Ë
PGSIZE
, 
PTE_W
) == 0);

999 
	`as£π
(
	`check_va2∑
(
kîn_pgdú
, 
PGSIZE
Ë=
	`∑ge2∑
(
µ2
));

1000 
	`as£π
(
µ2
->
µ_ªf
 == 1);

1003 
	`as£π
(!
	`∑ge_Æloc
(0));

1006 
	`as£π
(
	`∑ge_ö£π
(
kîn_pgdú
, 
µ2
, (*Ë
PGSIZE
, 
PTE_W
) == 0);

1007 
	`as£π
(
	`check_va2∑
(
kîn_pgdú
, 
PGSIZE
Ë=
	`∑ge2∑
(
µ2
));

1008 
	`as£π
(
µ2
->
µ_ªf
 == 1);

1012 
	`as£π
(!
	`∑ge_Æloc
(0));

1015 
±ï
 = (
±e_t
 *Ë
	`KADDR
(
	`PTE_ADDR
(
kîn_pgdú
[
	`PDX
(
PGSIZE
)]));

1016 
	`as£π
(
	`pgdú_wÆk
(
kîn_pgdú
, (*)
PGSIZE
, 0Ë=
±ï
+
	`PTX
(PGSIZE));

1019 
	`as£π
(
	`∑ge_ö£π
(
kîn_pgdú
, 
µ2
, (*Ë
PGSIZE
, 
PTE_W
|
PTE_U
) == 0);

1020 
	`as£π
(
	`check_va2∑
(
kîn_pgdú
, 
PGSIZE
Ë=
	`∑ge2∑
(
µ2
));

1021 
	`as£π
(
µ2
->
µ_ªf
 == 1);

1022 
	`as£π
(*
	`pgdú_wÆk
(
kîn_pgdú
, (*Ë
PGSIZE
, 0Ë& 
PTE_U
);

1023 
	`as£π
(
kîn_pgdú
[0] & 
PTE_U
);

1026 
	`as£π
(
	`∑ge_ö£π
(
kîn_pgdú
, 
µ2
, (*Ë
PGSIZE
, 
PTE_W
) == 0);

1027 
	`as£π
(*
	`pgdú_wÆk
(
kîn_pgdú
, (*Ë
PGSIZE
, 0Ë& 
PTE_W
);

1028 
	`as£π
(!(*
	`pgdú_wÆk
(
kîn_pgdú
, (*Ë
PGSIZE
, 0Ë& 
PTE_U
));

1031 
	`as£π
(
	`∑ge_ö£π
(
kîn_pgdú
, 
µ0
, (*Ë
PTSIZE
, 
PTE_W
) < 0);

1034 
	`as£π
(
	`∑ge_ö£π
(
kîn_pgdú
, 
µ1
, (*Ë
PGSIZE
, 
PTE_W
) == 0);

1035 
	`as£π
(!(*
	`pgdú_wÆk
(
kîn_pgdú
, (*Ë
PGSIZE
, 0Ë& 
PTE_U
));

1038 
	`as£π
(
	`check_va2∑
(
kîn_pgdú
, 0Ë=
	`∑ge2∑
(
µ1
));

1039 
	`as£π
(
	`check_va2∑
(
kîn_pgdú
, 
PGSIZE
Ë=
	`∑ge2∑
(
µ1
));

1041 
	`as£π
(
µ1
->
µ_ªf
 == 2);

1042 
	`as£π
(
µ2
->
µ_ªf
 == 0);

1045 
	`as£π
((
µ
 = 
	`∑ge_Æloc
(0)Ë&&Ö∞=
µ2
);

1048 
	`∑ge_ªmove
(
kîn_pgdú
, 0x0);

1049 
	`as£π
(
	`check_va2∑
(
kîn_pgdú
, 0x0) == ~0);

1050 
	`as£π
(
	`check_va2∑
(
kîn_pgdú
, 
PGSIZE
Ë=
	`∑ge2∑
(
µ1
));

1051 
	`as£π
(
µ1
->
µ_ªf
 == 1);

1052 
	`as£π
(
µ2
->
µ_ªf
 == 0);

1055 
	`∑ge_ªmove
(
kîn_pgdú
, (*Ë
PGSIZE
);

1056 
	`as£π
(
	`check_va2∑
(
kîn_pgdú
, 0x0) == ~0);

1057 
	`as£π
(
	`check_va2∑
(
kîn_pgdú
, 
PGSIZE
) == ~0);

1058 
	`as£π
(
µ1
->
µ_ªf
 == 0);

1059 
	`as£π
(
µ2
->
µ_ªf
 == 0);

1062 
	`as£π
((
µ
 = 
	`∑ge_Æloc
(0)Ë&&Ö∞=
µ1
);

1065 
	`as£π
(!
	`∑ge_Æloc
(0));

1068 
	`as£π
(
	`PTE_ADDR
(
kîn_pgdú
[0]Ë=
	`∑ge2∑
(
µ0
));

1069 
kîn_pgdú
[0] = 0;

1070 
	`as£π
(
µ0
->
µ_ªf
 == 1);

1071 
µ0
->
µ_ªf
 = 0;

1074 
	`∑ge_‰ì
(
µ0
);

1075 
va
 = (*)(
PGSIZE
 * 
NPDENTRIES
 + PGSIZE);

1076 
±ï
 = 
	`pgdú_wÆk
(
kîn_pgdú
, 
va
, 1);

1077 
±ï1
 = (
±e_t
 *Ë
	`KADDR
(
	`PTE_ADDR
(
kîn_pgdú
[
	`PDX
(
va
)]));

1078 
	`as£π
(
±ï
 =
±ï1
 + 
	`PTX
(
va
));

1079 
kîn_pgdú
[
	`PDX
(
va
)] = 0;

1080 
µ0
->
µ_ªf
 = 0;

1083 
	`mem£t
(
	`∑ge2kva
(
µ0
), 0xFF, 
PGSIZE
);

1084 
	`∑ge_‰ì
(
µ0
);

1085 
	`pgdú_wÆk
(
kîn_pgdú
, 0x0, 1);

1086 
±ï
 = (
±e_t
 *Ë
	`∑ge2kva
(
µ0
);

1087 
i
=0; i<
NPTENTRIES
; i++)

1088 
	`as£π
((
±ï
[
i
] & 
PTE_P
) == 0);

1089 
kîn_pgdú
[0] = 0;

1090 
µ0
->
µ_ªf
 = 0;

1093 
∑ge_‰ì_li°
 = 
Ê
;

1096 
	`∑ge_‰ì
(
µ0
);

1097 
	`∑ge_‰ì
(
µ1
);

1098 
	`∑ge_‰ì
(
µ2
);

1101 
mm1
 = (
uöçå_t
Ë
	`mmio_m≠_ªgi⁄
(0, 4097);

1102 
mm2
 = (
uöçå_t
Ë
	`mmio_m≠_ªgi⁄
(0, 4096);

1104 
	`as£π
(
mm1
 >
MMIOBASE
 && mm1 + 8096 < 
MMIOLIM
);

1105 
	`as£π
(
mm2
 >
MMIOBASE
 && mm2 + 8096 < 
MMIOLIM
);

1107 
	`as£π
(
mm1
 % 
PGSIZE
 =0 && 
mm2
 % PGSIZE == 0);

1109 
	`as£π
(
mm1
 + 8096 <
mm2
);

1111 
	`as£π
(
	`check_va2∑
(
kîn_pgdú
, 
mm1
) == 0);

1112 
	`as£π
(
	`check_va2∑
(
kîn_pgdú
, 
mm1
+
PGSIZE
) == PGSIZE);

1113 
	`as£π
(
	`check_va2∑
(
kîn_pgdú
, 
mm2
) == 0);

1114 
	`as£π
(
	`check_va2∑
(
kîn_pgdú
, 
mm2
+
PGSIZE
) == ~0);

1116 
	`as£π
(*
	`pgdú_wÆk
(
kîn_pgdú
, (*Ë
mm1
, 0Ë& (
PTE_W
|
PTE_PWT
|
PTE_PCD
));

1117 
	`as£π
(!(*
	`pgdú_wÆk
(
kîn_pgdú
, (*Ë
mm1
, 0Ë& 
PTE_U
));

1119 *
	`pgdú_wÆk
(
kîn_pgdú
, (*Ë
mm1
, 0) = 0;

1120 *
	`pgdú_wÆk
(
kîn_pgdú
, (*Ë
mm1
 + 
PGSIZE
, 0) = 0;

1121 *
	`pgdú_wÆk
(
kîn_pgdú
, (*Ë
mm2
, 0) = 0;

1123 
	`˝rötf
("check_page() succeeded!\n");

1124 
	}
}

1128 
	$check_∑ge_ö°ÆÀd_pgdú
()

1130 
PageInfo
 *
µ
, *
µ0
, *
µ1
, *
µ2
;

1131 
PageInfo
 *
Ê
;

1132 
±e_t
 *
±ï
, *
±ï1
;

1133 
uöçå_t
 
va
;

1134 
i
;

1137 
µ1
 = 
µ2
 = 0;

1138 
	`as£π
((
µ0
 = 
	`∑ge_Æloc
(0)));

1139 
	`as£π
((
µ1
 = 
	`∑ge_Æloc
(0)));

1140 
	`as£π
((
µ2
 = 
	`∑ge_Æloc
(0)));

1141 
	`∑ge_‰ì
(
µ0
);

1142 
	`mem£t
(
	`∑ge2kva
(
µ1
), 1, 
PGSIZE
);

1143 
	`mem£t
(
	`∑ge2kva
(
µ2
), 2, 
PGSIZE
);

1144 
	`∑ge_ö£π
(
kîn_pgdú
, 
µ1
, (*Ë
PGSIZE
, 
PTE_W
);

1145 
	`as£π
(
µ1
->
µ_ªf
 == 1);

1146 
	`as£π
(*(
uöt32_t
 *)
PGSIZE
 == 0x01010101U);

1147 
	`∑ge_ö£π
(
kîn_pgdú
, 
µ2
, (*Ë
PGSIZE
, 
PTE_W
);

1148 
	`as£π
(*(
uöt32_t
 *)
PGSIZE
 == 0x02020202U);

1149 
	`as£π
(
µ2
->
µ_ªf
 == 1);

1150 
	`as£π
(
µ1
->
µ_ªf
 == 0);

1151 *(
uöt32_t
 *)
PGSIZE
 = 0x03030303U;

1152 
	`as£π
(*(
uöt32_t
 *)
	`∑ge2kva
(
µ2
) == 0x03030303U);

1153 
	`∑ge_ªmove
(
kîn_pgdú
, (*Ë
PGSIZE
);

1154 
	`as£π
(
µ2
->
µ_ªf
 == 0);

1157 
	`as£π
(
	`PTE_ADDR
(
kîn_pgdú
[0]Ë=
	`∑ge2∑
(
µ0
));

1158 
kîn_pgdú
[0] = 0;

1159 
	`as£π
(
µ0
->
µ_ªf
 == 1);

1160 
µ0
->
µ_ªf
 = 0;

1163 
	`∑ge_‰ì
(
µ0
);

1165 
	`˝rötf
("check_page_installed_pgdir() succeeded!\n");

1166 
	}
}

	@kern/pmap.h

3 #i‚de‡
JOS_KERN_PMAP_H


4 
	#JOS_KERN_PMAP_H


	)

5 #i‚de‡
JOS_KERNEL


9 
	~<öc/memœyout.h
>

10 
	~<öc/as£π.h
>

11 
	gEnv
;

13 
boŸ°ackt›
[], 
boŸ°ack
[];

15 
PageInfo
 *
∑ges
;

16 
size_t
 
≈ages
;

18 
pde_t
 *
kîn_pgdú
;

26 
	#PADDR
(
kva
Ë
	`_∑ddr
(
__FILE__
, 
__LINE__
, kva)

	)

28 
ölöe
 
phyßddr_t


29 
	$_∑ddr
(c⁄° *
fûe
, 
löe
, *
kva
)

31 i‡((
uöt32_t
)
kva
 < 
KERNBASE
)

32 
	`_∑nic
(
fûe
, 
löe
, "PADDR cÆÀd wôh invÆid kv®%08lx", 
kva
);

33  (
phyßddr_t
)
kva
 - 
KERNBASE
;

34 
	}
}

38 
	#KADDR
(
∑
Ë
	`_kaddr
(
__FILE__
, 
__LINE__
,Öa)

	)

40 
ölöe
 *

41 
	$_kaddr
(c⁄° *
fûe
, 
löe
, 
phyßddr_t
 
∑
)

43 i‡(
	`PGNUM
(
∑
Ë>
≈ages
)

44 
	`_∑nic
(
fûe
, 
löe
, "KADDR cÆÀd wôh invÆidÖ®%08lx", 
∑
);

45  (*)(
∑
 + 
KERNBASE
);

46 
	}
}

51 
	mALLOC_ZERO
 = 1<<0,

54 
mem_öô
();

56 
∑ge_öô
();

57 
PageInfo
 *
∑ge_Æloc
(
Æloc_Êags
);

58 
∑ge_‰ì
(
PageInfo
 *
µ
);

59 
∑ge_ö£π
(
pde_t
 *
pgdú
, 
PageInfo
 *
µ
, *
va
, 
≥rm
);

60 
∑ge_ªmove
(
pde_t
 *
pgdú
, *
va
);

61 
PageInfo
 *
∑ge_lookup
(
pde_t
 *
pgdú
, *
va
, 
±e_t
 **
±e_°‹e
);

62 
∑ge_de¸ef
(
PageInfo
 *
µ
);

64 
éb_övÆid©e
(
pde_t
 *
pgdú
, *
va
);

66 * 
mmio_m≠_ªgi⁄
(
phyßddr_t
 
∑
, 
size_t
 
size
);

68 
u£r_mem_check
(
Env
 *
ív
, c⁄° *
va
, 
size_t
 
Àn
, 
≥rm
);

69 
u£r_mem_as£π
(
Env
 *
ív
, c⁄° *
va
, 
size_t
 
Àn
, 
≥rm
);

71 
ölöe
 
phyßddr_t


72 
	$∑ge2∑
(
PageInfo
 *
µ
)

74  (
µ
 - 
∑ges
Ë<< 
PGSHIFT
;

75 
	}
}

77 
ölöe
 
PageInfo
*

78 
	$∑2∑ge
(
phyßddr_t
 
∑
)

80 i‡(
	`PGNUM
(
∑
Ë>
≈ages
)

81 
	`∑nic
("pa2page called with invalidÖa");

82  &
∑ges
[
	`PGNUM
(
∑
)];

83 
	}
}

85 
ölöe
 *

86 
	$∑ge2kva
(
PageInfo
 *
µ
)

88  
	`KADDR
(
	`∑ge2∑
(
µ
));

89 
	}
}

91 
±e_t
 *
pgdú_wÆk
(
pde_t
 *
pgdú
, c⁄° *
va
, 
¸óã
);

	@kern/printf.c

4 
	~<öc/ty≥s.h
>

5 
	~<öc/°dio.h
>

6 
	~<öc/°d¨g.h
>

10 
	$putch
(
ch
, *
˙t
)

12 
	`˝utch¨
(
ch
);

13 *
˙t
++;

14 
	}
}

17 
	$v˝rötf
(c⁄° *
fmt
, 
va_li°
 
≠
)

19 
˙t
 = 0;

21 
	`v¥ötfmt
((*)
putch
, &
˙t
, 
fmt
, 
≠
);

22  
˙t
;

23 
	}
}

26 
	$˝rötf
(c⁄° *
fmt
, ...)

28 
va_li°
 
≠
;

29 
˙t
;

31 
	`va_°¨t
(
≠
, 
fmt
);

32 
˙t
 = 
	`v˝rötf
(
fmt
, 
≠
);

33 
	`va_íd
(
≠
);

35  
˙t
;

36 
	}
}

	@kern/sched.c

1 
	~<öc/as£π.h
>

2 
	~<öc/x86.h
>

3 
	~<kîn/•ölock.h
>

4 
	~<kîn/ív.h
>

5 
	~<kîn/pm≠.h
>

6 
	~<kîn/m⁄ô‹.h
>

8 
sched_hÆt
();

11 
	$RR_sched
()

13 
now_ív
 , 
i
;

14 i‡(
cuªnv
)

17 
now_ív
 = (
	`ENVX
(
cuªnv
 ->
ív_id
Ë+ 1Ë% 
NENV
;

21 
now_ív
 = 0;

23 
i
 = 0; i < 
NENV
; i++, 
now_ív
 = (now_env + 1) % NENV)

25 i‡(
ívs
[
now_ív
 ]. 
ív_°©us
 =
ENV_RUNNABLE
)

28 
	`ív_run
 (& 
ívs
[
now_ív
 ]);

32 i‡(
cuªnv
 && cuªnv ->
ív_°©us
 =
ENV_RUNNING
)

34 
	`ív_run
(
cuªnv
);

36 
	}
}

38 
	$RR_Pri‹ôy_sched
()

40 
now_ív
,
i
;

41 if(
cuªnv
)

43 
now_ív
 = (
	`ENVX
(
cuªnv
->
ív_id
Ë+1Ë% 
NENV
;

47 
now_ív
 = 0 ;

50 
uöt32_t
 
max_¥i‹ôy
 = 0;

51 
£À˘_ív
 = -1;

54 
i
0;i< 
NENV
;i++ , 
now_ív
 = (now_env+1)%NENV)

56 if(
ívs
[
now_ív
].
ív_°©us
 ==
ENV_RUNNABLE
 && (ívs[now_ív].
ív_¥i‹ôy
 > 
max_¥i‹ôy


57 ||
£À˘_ív
 == -1))

59 
£À˘_ív
=
now_ív
;

60 
max_¥i‹ôy
 = 
ívs
[
now_ív
].
ív_¥i‹ôy
;

68 i‡(
£À˘_ív
 >0 && (! 
cuªnv
 || cuªnv ->
ív_°©us
 !
ENV_RUNNING
 ||

69 
max_¥i‹ôy
 >
cuªnv
 ->
ív_¥i‹ôy
))

71 
	`ív_run
 (& 
ívs
[
£À˘_ív
 ]);

73 i‡(
cuªnv
 && cuªnv ->
ív_°©us
 =
ENV_RUNNING
)

75 
	`ív_run
(
cuªnv
);

78 
	}
}

81 
	$sched_yõld
()

83 
Env
 *
idÀ
;

102 
	`RR_sched
();

107 
	`sched_hÆt
();

108 
	}
}

114 
	$sched_hÆt
()

116 
i
=0;

137 
i
 = 0; i < 
NENV
; i++) {

138 i‡((
ívs
[
i
].
ív_°©us
 =
ENV_RUNNABLE
 ||

139 
ívs
[
i
].
ív_°©us
 =
ENV_RUNNING
 ||

140 
ívs
[
i
].
ív_°©us
 =
ENV_DYING
))

143 i‡(
i
 =
NENV
) {

144 
	`˝rötf
("NoÑunnableÉnvironments inÅhe system!\n");

146 
	`m⁄ô‹
(
NULL
);

150 
cuªnv
 = 
NULL
;

151 
	`l¸3
(
	`PADDR
(
kîn_pgdú
));

156 
	`xchg
(&
this˝u
->
˝u_°©us
, 
CPU_HALTED
);

159 
	`u∆ock_kî√l
();

162 
asm
 volatile (

169 : : "a" (
this˝u
->
˝u_ts
.
ts_e•0
));

170 
	}
}

	@kern/sched.h

3 #i‚de‡
JOS_KERN_SCHED_H


4 
	#JOS_KERN_SCHED_H


	)

5 #i‚de‡
JOS_KERNEL


10 
	$sched_yõld
(Ë
	`__©åibuã__
((
n‹ëu∫
));

	@kern/spinlock.c

3 
	~<öc/ty≥s.h
>

4 
	~<öc/as£π.h
>

5 
	~<öc/x86.h
>

6 
	~<öc/memœyout.h
>

7 
	~<öc/°rög.h
>

8 
	~<kîn/˝u.h
>

9 
	~<kîn/•ölock.h
>

10 
	~<kîn/kdebug.h
>

13 
•ölock
 
	gkî√l_lock
 = {

14 #ifde‡
DEBUG_SPINLOCK


15 .
«me
 = "kernel_lock"

19 #ifde‡
DEBUG_SPINLOCK


22 
	$gë_ˇŒî_pcs
(
uöt32_t
 
pcs
[])

24 
uöt32_t
 *
ebp
;

25 
i
;

27 
ebp
 = (
uöt32_t
 *)
	`ªad_ebp
();

28 
i
 = 0; i < 10; i++){

29 i‡(
ebp
 =0 ||Éb∞< (
uöt32_t
 *)
ULIM
)

31 
pcs
[
i
] = 
ebp
[1];

32 
ebp
 = (
uöt32_t
 *)ebp[0];

34 ; 
i
 < 10; i++)

35 
pcs
[
i
] = 0;

36 
	}
}

40 
	$hﬁdög
(
•ölock
 *
lock
)

42  
lock
->
locked
 &&Üock->
˝u
 =
this˝u
;

43 
	}
}

47 
	$__•ö_öôlock
(
•ölock
 *
lk
, *
«me
)

49 
lk
->
locked
 = 0;

50 #ifde‡
DEBUG_SPINLOCK


51 
lk
->
«me
 =Çame;

52 
lk
->
˝u
 = 0;

54 
	}
}

61 
	$•ö_lock
(
•ölock
 *
lk
)

63 #ifde‡
DEBUG_SPINLOCK


64 i‡(
	`hﬁdög
(
lk
))

65 
	`∑nic
("CPU %d c™nŸácquúê%s:áÃódy hﬁdög", 
	`˝unum
(), 
lk
->
«me
);

71 
	`xchg
(&
lk
->
locked
, 1) != 0)

72 
asm
 volatile ("pause");

75 #ifde‡
DEBUG_SPINLOCK


76 
lk
->
˝u
 = 
this˝u
;

77 
	`gë_ˇŒî_pcs
(
lk
->
pcs
);

79 
	}
}

83 
	$•ö_u∆ock
(
•ölock
 *
lk
)

85 #ifde‡
DEBUG_SPINLOCK


86 i‡(!
	`hﬁdög
(
lk
)) {

87 
i
;

88 
uöt32_t
 
pcs
[10];

90 
	`memmove
(
pcs
, 
lk
->pcs, Öcs);

91 
	`˝rötf
("CPU %d cannotÑelease %s: held by CPU %d\nAcquiredát:",

92 
	`˝unum
(), 
lk
->
«me
,Ük->
˝u
->
˝u_id
);

93 
i
 = 0; i < 10 && 
pcs
[i]; i++) {

94 
Eùdebugöfo
 
öfo
;

95 i‡(
	`debugöfo_eù
(
pcs
[
i
], &
öfo
) >= 0)

96 
	`˝rötf
(" %08x %s:%d: %.*s+%x\n", 
pcs
[
i
],

97 
öfo
.
eù_fûe
, info.
eù_löe
,

98 
öfo
.
eù_‚_«mñí
, info.
eù_‚_«me
,

99 
pcs
[
i
] - 
öfo
.
eù_‚_addr
);

101 
	`˝rötf
(" %08x\n", 
pcs
[
i
]);

103 
	`∑nic
("spin_unlock");

106 
lk
->
pcs
[0] = 0;

107 
lk
->
˝u
 = 0;

119 
	`xchg
(&
lk
->
locked
, 0);

120 
	}
}

	@kern/spinlock.h

1 #i‚de‡
JOS_INC_SPINLOCK_H


2 
	#JOS_INC_SPINLOCK_H


	)

4 
	~<öc/ty≥s.h
>

7 
	#DEBUG_SPINLOCK


	)

10 
	s•ölock
 {

11 
	mlocked
;

13 #ifde‡
DEBUG_SPINLOCK


15 *
	m«me
;

16 
CpuInfo
 *
	m˝u
;

17 
uöçå_t
 
	mpcs
[10];

22 
__•ö_öôlock
(
•ölock
 *
lk
, *
«me
);

23 
•ö_lock
(
•ölock
 *
lk
);

24 
•ö_u∆ock
(
•ölock
 *
lk
);

26 
	#•ö_öôlock
(
lock
Ë
	`__•ö_öôlock
÷ock, #lock)

	)

28 
•ölock
 
kî√l_lock
;

30 
ölöe
 

31 
	$lock_kî√l
()

33 
	`•ö_lock
(&
kî√l_lock
);

34 
	}
}

36 
ölöe
 

37 
	$u∆ock_kî√l
()

39 
	`•ö_u∆ock
(&
kî√l_lock
);

45 
asm
 volatile("pause");

46 
	}
}

	@kern/syscall.c

3 
	~<öc/x86.h
>

4 
	~<öc/îr‹.h
>

5 
	~<öc/°rög.h
>

6 
	~<öc/as£π.h
>

8 
	~<kîn/ív.h
>

9 
	~<kîn/pm≠.h
>

10 
	~<kîn/å≠.h
>

11 
	~<kîn/sysˇŒ.h
>

12 
	~<kîn/c⁄sﬁe.h
>

13 
	~<kîn/sched.h
>

19 
	$sys_˝uts
(c⁄° *
s
, 
size_t
 
Àn
)

25 
	`u£r_mem_as£π
(
cuªnv
,(*)
s
,
Àn
,
PTE_U
);

27 
	`˝rötf
("%.*s", 
Àn
, 
s
);

28 
	}
}

33 
	$sys_cgëc
()

35  
	`c⁄s_gëc
();

36 
	}
}

39 
ívid_t


40 
	$sys_gëívid
()

42  
cuªnv
->
ív_id
;

43 
	}
}

51 
	$sys_ív_de°roy
(
ívid_t
 
ívid
)

53 
r
;

54 
Env
 *
e
;

56 i‡((
r
 = 
	`ívid2ív
(
ívid
, &
e
, 1)) < 0)

57  
r
;

58 
	`ív_de°roy
(
e
);

60 
	}
}

64 
	$sys_yõld
()

66 
	`sched_yõld
();

67 
	}
}

73 
ívid_t


74 
	$sys_exof‹k
()

83 
Env
 *
chûdív
;

84 
r
;

86 if((
r
 = 
	`ív_Æloc
(&
chûdív
,
	`sys_gëívid
()))<0)

87  
r
;

88 
chûdív
->
ív_°©us
 = 
ENV_NOT_RUNNABLE
;

90 
	`memmove
((*)&(
chûdív
->
ív_tf
),(c⁄° *)&(
cuªnv
->ív_tf),(
Tøp‰ame
));

92 
chûdív
->
ív_tf
.
tf_ªgs
.
ªg_óx
 = 0;

93  
chûdív
->
ív_id
;

95 
	}
}

105 
	$sys_ív_£t_°©us
(
ívid_t
 
ívid
, 
°©us
)

114 if(
°©us
 !=
ENV_RUNNABLE
 && sètus!=
ENV_NOT_RUNNABLE
)

115  -
E_INVAL
;

117 
Env
* 
ív
;

118 
r
;

120 if((
r
=
	`ívid2ív
(
ívid
,&
ív
,1))<0)

121  
r
;

122 
ív
->
ív_°©us
 = 
°©us
;

125 
	}
}

136 
	$sys_ív_£t_å≠‰ame
(
ívid_t
 
ívid
, 
Tøp‰ame
 *
tf
)

141 
	`∑nic
("sys_env_set_trapframeÇot implemented");

142 
	}
}

145 
	$sys_ív_£t_¥i‹ôy
(
ívid_t
 
ívid
,
uöt32_t
 
¥i‹ôy
)

147 
Env
 *
ív
;

148 
r

	`ívid2ív
(
ívid
,&
ív
,1);

149 if(
r
)

150  
r
;

152 
ív
->
ív_¥i‹ôy
 = 
¥i‹ôy
;

154 
	}
}

165 
	$sys_ív_£t_pgÁu…_upˇŒ
(
ívid_t
 
ívid
, *
func
)

168 
Env
 *
ív
;

169 
r
 = 
	`ívid2ív
(
ívid
,&
ív
,1);

170 if(
r
 < 0)

171  -
E_BAD_ENV
;

173 
ív
->
ív_pgÁu…_upˇŒ
 = 
func
;

176 
	}
}

195 
	$sys_∑ge_Æloc
(
ívid_t
 
ívid
, *
va
, 
≥rm
)

205 if(
va
>=(*)
UTOP
 || 
	`ROUNDUP
(va,
PGSIZE
)!=va)

206  -
E_INVAL
;

208 if(!(
≥rm
 & 
PTE_U
)||!’îm &
PTE_P
)||(’îm & ~
PTE_SYSCALL
)!=0))

209  -
E_INVAL
;

211 
Env
 *
ív
;

212 
r
;

213 if((
r
 = 
	`ívid2ív
(
ívid
,&
ív
,1))<0)

214  -
E_BAD_ENV
;

216 
PageInfo
 *
µ
;

217 
µ
 = 
	`∑ge_Æloc
(
ALLOC_ZERO
);

218 if(
µ
 ==
NULL
)

219  -
E_NO_MEM
;

221 if((
r
 = 
	`∑ge_ö£π
(
ív
->
ív_pgdú
,
µ
,
va
,
≥rm
))<0)

223 
	`∑ge_‰ì
(
µ
);

224  
r
;

228 
	}
}

247 
	$sys_∑ge_m≠
(
ívid_t
 
§˚nvid
, *
§cva
,

248 
ívid_t
 
d°ívid
, *
d°va
, 
≥rm
)

258 if(
§cva
 >=(*)
UTOP
 || 
	`ROUNDUP
(§cva,
PGSIZE
)!=srcva

259 ||
d°va
 >=(*)
UTOP
||
	`ROUNDUP
(d°va,
PGSIZE
)!=dstva)

260  -
E_INVAL
;

262 if(!(
≥rm
 &
PTE_U
Ë|| !’îm &
PTE_P
Ë||(’îm & ~
PTE_SYSCALL
)!=0))

263  -
E_INVAL
;

265 
Env
 *
§˚nv
,*
d°ív
;

266 
r
;

267 if((
r
 = 
	`ívid2ív
(
§˚nvid
,&
§˚nv
,1))<0)

268  -
E_BAD_ENV
;

269 if((
r
 = 
	`ívid2ív
(
d°ívid
,&
d°ív
,1))<0)

270  -
E_BAD_ENV
;

272 
±e_t
 *
±e
;

273 
PageInfo
 *
µ
;

274 
µ
 = 
	`∑ge_lookup
(
§˚nv
->
ív_pgdú
,
§cva
,&
±e
);

276 if(
µ
==
NULL
 ||((
≥rm
&
PTE_W
)!=0 && (*
±e
 &PTE_W)==0))

277  -
E_INVAL
;

279 i‡(!((
≥rm
 & 
PTE_U
Ë&& (≥rm & 
PTE_P
Ë&& (≥rm & (~
PTE_SYSCALL
))==0))

280  -
E_INVAL
;

282 if((
r
 =
	`∑ge_ö£π
(
d°ív
->
ív_pgdú
,
µ
,
d°va
,
≥rm
))<0)

283  -
E_NO_MEM
;

288 
	}
}

298 
	$sys_∑ge_unm≠
(
ívid_t
 
ívid
, *
va
)

303 if(
va
>=(*)
UTOP
 ||
	`ROUNDUP
(va,
PGSIZE
)!=va)

304  -
E_INVAL
;

306 
Env
 *
ív
;

307 
r
;

308 if((
r
=
	`ívid2ív
(
ívid
,&
ív
,1))<0)

309  -
E_BAD_ENV
;

311 
	`∑ge_ªmove
(
ív
->
ív_pgdú
,
va
);

315 
	}
}

356 
	$sys_ùc_åy_£nd
(
ívid_t
 
ívid
, 
uöt32_t
 
vÆue
, *
§cva
, 
≥rm
)

359 
Env
 *
d°ív
;

360 
r
;

362 if((
r
 = 
	`ívid2ív
(
ívid
,&
d°ív
,0))< 0 )

363  -
E_BAD_ENV
;

365 if((
d°ív
->
ív_ùc_ªcvög
 =0Ë|| (d°ív->
ív_ùc_‰om
 !=0))

366  -
E_IPC_NOT_RECV
;

368 if(
§cva
 < (*)
UTOP
 && 
	`ROUNDUP
(§cva,
PGSIZE
)!=srcva)

369  -
E_INVAL
;

371 if(
§cva
 < (*)
UTOP
 && (!(
≥rm
 & 
PTE_U
Ë|| !’îm & 
PTE_P
Ë||’îm & ~
PTE_SYSCALL
)!=0))

372  -
E_INVAL
;

374 
±e_t
 *
±e
;

375 
PageInfo
 *
µ
;

377 if(
§cva
 < (*)
UTOP
)

379 
µ
 = 
	`∑ge_lookup
(
cuªnv
->
ív_pgdú
,
§cva
,&
±e
);

380 if(
µ
 =
NULL
)

381  -
E_INVAL
;

383 if((
≥rm
 &
PTE_W
Ë&& (*
±e
 & PTE_W)==0)

384  -
E_INVAL
;

386 if(
d°ív
->
ív_ùc_d°va
 !
NULL
)

388 
r
 = 
	`∑ge_ö£π
(
d°ív
->
ív_pgdú
,
µ
,d°ív->
ív_ùc_d°va
,
≥rm
);

389 if(
r
 < 0)

390  -
E_NO_MEM
;

392 
d°ív
->
ív_ùc_≥rm
 = 
≥rm
;

394 
d°ív
->
ív_ùc_≥rm
 = 0;

414 
d°ív
->
ív_ùc_‰om
 = 
cuªnv
->
ív_id
;

415 
d°ív
->
ív_ùc_vÆue
 = 
vÆue
;

416 
d°ív
->
ív_°©us
 = 
ENV_RUNNABLE
;

417 
d°ív
->
ív_ùc_ªcvög
 = 0;

418 
d°ív
->
ív_tf
.
tf_ªgs
.
ªg_óx
 = 0 ;

423 
	}
}

437 
	$sys_ùc_ªcv
(*
d°va
)

440 if(
d°va
 < (*)
UTOP
 && 
	`ROUNDUP
(d°va,
PGSIZE
)!=dstva)

441  -
E_INVAL
;

443 
cuªnv
->
ív_ùc_ªcvög
 = 1;

444 
cuªnv
->
ív_ùc_d°va
 = 
d°va
;

445 
cuªnv
->
ív_ùc_‰om
 = 0;

447 
cuªnv
->
ív_°©us
 = 
ENV_NOT_RUNNABLE
;

449 
	`sched_yõld
();

452 
	}
}

456 
öt32_t


457 
	$sysˇŒ
(
uöt32_t
 
sysˇŒno
, uöt32_à
a1
, uöt32_à
a2
, uöt32_à
a3
, uöt32_à
a4
, uöt32_à
a5
)

463 
öt32_t
 
r
 =0;

464 
sysˇŒno
)

466 
SYS_˝uts
:

467 
	`sys_˝uts
((c⁄° *)
a1
,(
size_t
)
a2
);

469 
SYS_cgëc
:

470 
r
 = 
	`sys_cgëc
();

472 
SYS_gëívid
:

473 
r
 = 
	`sys_gëívid
();

475 
SYS_ív_de°roy
:

476 
r
 = 
	`sys_ív_de°roy
((
ívid_t
)
a1
);

478 
SYS_exof‹k
:

479 
r
 = 
	`sys_exof‹k
();

481 
SYS_ív_£t_pgÁu…_upˇŒ
:

482 
r
 = 
	`sys_ív_£t_pgÁu…_upˇŒ
((
ívid_t
)
a1
,(*)
a2
);

484 
SYS_ív_£t_°©us
:

485 
r
 = 
	`sys_ív_£t_°©us
((
ívid_t
)
a1
,()
a2
);

487 
SYS_∑ge_Æloc
:

488 
r
 = 
	`sys_∑ge_Æloc
((
ívid_t
)
a1
,(*)
a2
,()
a3
);

490 
SYS_∑ge_m≠
:

491 
r
 = 
	`sys_∑ge_m≠
((
ívid_t
)
a1
,(*)
a2
,”nvid_t)
a3
,(*)
a4
,()
a5
);

493 
SYS_∑ge_unm≠
:

494 
r
 = 
	`sys_∑ge_unm≠
((
ívid_t
)
a1
,(*)
a2
);

496 
SYS_yõld
:

497 
	`sys_yõld
();

499 
SYS_ív_£t_¥i‹ôy
:

500 
r
 = 
	`sys_ív_£t_¥i‹ôy
((
ívid_t
)
a1
,()
a2
);

502 
SYS_ùc_åy_£nd
:

504 
r
 = 
	`sys_ùc_åy_£nd
((
ívid_t
)
a1
,(
uöt32_t
)
a2
,(*)
a3
,()
a4
);

506 
SYS_ùc_ªcv
:

507 
r
 = 
	`sys_ùc_ªcv
((*)
a1
);

510  -
E_INVAL
;

512  
r
;

514 
	}
}

	@kern/syscall.h

1 #i‚de‡
JOS_KERN_SYSCALL_H


2 
	#JOS_KERN_SYSCALL_H


	)

3 #i‚de‡
JOS_KERNEL


7 
	~<öc/sysˇŒ.h
>

9 
öt32_t
 
sysˇŒ
(
uöt32_t
 
num
, uöt32_à
a1
, uöt32_à
a2
, uöt32_à
a3
, uöt32_à
a4
, uöt32_à
a5
);

	@kern/trap.c

1 
	~<öc/mmu.h
>

2 
	~<öc/x86.h
>

3 
	~<öc/as£π.h
>

5 
	~<kîn/pm≠.h
>

6 
	~<kîn/å≠.h
>

7 
	~<kîn/c⁄sﬁe.h
>

8 
	~<kîn/m⁄ô‹.h
>

9 
	~<kîn/ív.h
>

10 
	~<kîn/sysˇŒ.h
>

11 
	~<kîn/sched.h
>

12 
	~<kîn/k˛ock.h
>

13 
	~<kîn/picúq.h
>

14 
	~<kîn/˝u.h
>

15 
	~<kîn/•ölock.h
>

17 
Task°©e
 
	gts
;

23 
Tøp‰ame
 *
	gœ°_tf
;

28 
G©edesc
 
	gidt
[256] = { { 0 } };

29 
P£udodesc
 
	gidt_pd
 = {

30 (
idt
Ë- 1, (
uöt32_t
) idt

34 c⁄° *
	$å≠«me
(
å≠no
)

36 c⁄° * c⁄° 
ex˙ames
[] = {

59 i‡(
å≠no
 < (
ex˙ames
)/(excnames[0]))

60  
ex˙ames
[
å≠no
];

61 i‡(
å≠no
 =
T_SYSCALL
)

63 i‡(
å≠no
 >
IRQ_OFFSET
 &&Årapno < IRQ_OFFSET + 16)

66 
	}
}

70 
	$å≠_öô
()

72 
Segdesc
 
gdt
[];

76 
	`__idt_divide
();

77 
	`__idt_debug
();

78 
	`__idt_nmi
();

79 
	`__idt_bªakpoöt
();

80 
	`__idt_ovîÊow
();

81 
	`__idt_bound
();

82 
	`__idt_ûl›
();

83 
	`__idt_devi˚
();

84 
	`__idt_dblÊt
();

85 
	`__idt_tss
();

86 
	`__idt_£g≈
();

87 
	`__idt_°ack
();

88 
	`__idt_gpÊt
();

89 
	`__idt_pgÊt
();

90 
	`__idt_Âîr
();

91 
	`__idt_Æign
();

92 
	`__idt_mchk
();

93 
	`__idt_simd
();

94 
	`__idt_sysˇŒ
();

95 
	`__idt_deÁu…
();

98 
	`__idt_úq0
();

99 
	`__idt_úq1
();

100 
	`__idt_úq2
();

101 
	`__idt_úq3
();

102 
	`__idt_úq4
();

103 
	`__idt_úq5
();

104 
	`__idt_úq6
();

105 
	`__idt_úq7
();

106 
	`__idt_úq8
();

107 
	`__idt_úq9
();

108 
	`__idt_úq10
();

109 
	`__idt_úq11
();

110 
	`__idt_úq12
();

111 
	`__idt_úq13
();

112 
	`__idt_úq14
();

113 
	`__idt_úq15
();

115 
i
 = 0;

116 
	`SETGATE
(
idt
[0],0,
GD_KT
,
__idt_deÁu…
,0);

117 
i
=1;i<255;i++)

119 
idt
[
i
] = idt[0];

122 
	`SETGATE
(
idt
[
T_DIVIDE
],1,
GD_KT
,
__idt_divide
,0);

123 
	`SETGATE
(
idt
[
T_DEBUG
],0,
GD_KT
,
__idt_debug
,0);

124 
	`SETGATE
(
idt
[
T_NMI
],0,
GD_KT
,
__idt_nmi
,0);

125 
	`SETGATE
(
idt
[
T_BRKPT
],1,
GD_KT
,
__idt_bªakpoöt
,3);

126 
	`SETGATE
(
idt
[
T_OFLOW
],1,
GD_KT
,
__idt_ovîÊow
,0);

127 
	`SETGATE
(
idt
[
T_BOUND
],1,
GD_KT
,
__idt_bound
,0);

128 
	`SETGATE
(
idt
[
T_ILLOP
],1,
GD_KT
,
__idt_ûl›
,0);

129 
	`SETGATE
(
idt
[
T_DEVICE
],1,
GD_KT
,
__idt_devi˚
,0);

130 
	`SETGATE
(
idt
[
T_DBLFLT
],1,
GD_KT
,
__idt_dblÊt
,0);

131 
	`SETGATE
(
idt
[
T_TSS
],1,
GD_KT
,
__idt_tss
,0);

132 
	`SETGATE
(
idt
[
T_SEGNP
],1,
GD_KT
,
__idt_£g≈
,0);

133 
	`SETGATE
(
idt
[
T_STACK
],1,
GD_KT
,
__idt_°ack
,0);

134 
	`SETGATE
(
idt
[
T_GPFLT
],1,
GD_KT
,
__idt_gpÊt
,0);

135 
	`SETGATE
(
idt
[
T_PGFLT
],1,
GD_KT
,
__idt_pgÊt
,0);

136 
	`SETGATE
(
idt
[
T_FPERR
],1,
GD_KT
,
__idt_Âîr
,0);

137 
	`SETGATE
(
idt
[
T_ALIGN
],1,
GD_KT
,
__idt_Æign
,0);

140 
	`SETGATE
(
idt
[
T_MCHK
],1,
GD_KT
,
__idt_mchk
,0);

141 
	`SETGATE
(
idt
[
T_SIMDERR
],1,
GD_KT
,
__idt_simd
,0);

142 
	`SETGATE
(
idt
[
T_SYSCALL
],0,
GD_KT
,
__idt_sysˇŒ
,3);

146 
	`SETGATE
(
idt
[
IRQ_OFFSET
+0],0,
GD_KT
,
__idt_úq0
,0);

147 
	`SETGATE
(
idt
[
IRQ_OFFSET
+1],0,
GD_KT
,
__idt_úq1
,0);

148 
	`SETGATE
(
idt
[
IRQ_OFFSET
+2],0,
GD_KT
,
__idt_úq2
,0);

149 
	`SETGATE
(
idt
[
IRQ_OFFSET
+3],0,
GD_KT
,
__idt_úq3
,0);

150 
	`SETGATE
(
idt
[
IRQ_OFFSET
+4],0,
GD_KT
,
__idt_úq4
,0);

151 
	`SETGATE
(
idt
[
IRQ_OFFSET
+5],0,
GD_KT
,
__idt_úq5
,0);

152 
	`SETGATE
(
idt
[
IRQ_OFFSET
+6],0,
GD_KT
,
__idt_úq6
,0);

153 
	`SETGATE
(
idt
[
IRQ_OFFSET
+7],0,
GD_KT
,
__idt_úq7
,0);

154 
	`SETGATE
(
idt
[
IRQ_OFFSET
+8],0,
GD_KT
,
__idt_úq8
,0);

155 
	`SETGATE
(
idt
[
IRQ_OFFSET
+9],0,
GD_KT
,
__idt_úq9
,0);

156 
	`SETGATE
(
idt
[
IRQ_OFFSET
+10],0,
GD_KT
,
__idt_úq10
,0);

157 
	`SETGATE
(
idt
[
IRQ_OFFSET
+11],0,
GD_KT
,
__idt_úq11
,0);

158 
	`SETGATE
(
idt
[
IRQ_OFFSET
+12],0,
GD_KT
,
__idt_úq12
,0);

159 
	`SETGATE
(
idt
[
IRQ_OFFSET
+13],0,
GD_KT
,
__idt_úq13
,0);

160 
	`SETGATE
(
idt
[
IRQ_OFFSET
+14],0,
GD_KT
,
__idt_úq14
,0);

161 
	`SETGATE
(
idt
[
IRQ_OFFSET
+15],0,
GD_KT
,
__idt_úq15
,0);

164 
	`å≠_öô_≥r˝u
();

165 
	}
}

169 
	$å≠_öô_≥r˝u
()

196 
uöt8_t
 
cur_˝u_i
 = 
this˝u
->
˝u_id
;

198 
this˝u
->
˝u_ts
.
ts_e•0
 = 
KSTACKTOP
-
cur_˝u_i
 *(
KSTKSIZE
 + 
KSTKGAP
);

199 
this˝u
->
˝u_ts
.
ts_ss0
 = 
GD_KD
;

202 
gdt
[(
GD_TSS0
 >> 3)+ 
cur_˝u_i
] = 
	`SEG16
(
STS_T32A
, (
uöt32_t
Ë(&
this˝u
->
˝u_ts
),

203 (
Task°©e
), 0);

204 
gdt
[(
GD_TSS0
 >> 3)+ 
cur_˝u_i
].
sd_s
 = 0;

208 
	`…r
((
GD_TSS0
+(
cur_˝u_i
<<3)) & ~0x7);

212 
	`lidt
(&
idt_pd
);

213 
	}
}

216 
	$¥öt_å≠‰ame
(
Tøp‰ame
 *
tf
)

218 
	`˝rötf
("TRAP fømê© %∞‰om CPU %d\n", 
tf
, 
	`˝unum
());

219 
	`¥öt_ªgs
(&
tf
->
tf_ªgs
);

220 
	`˝rötf
("É† 0x----%04x\n", 
tf
->
tf_es
);

221 
	`˝rötf
(" d† 0x----%04x\n", 
tf
->
tf_ds
);

222 
	`˝rötf
("Åø∞0x%08x %s\n", 
tf
->
tf_å≠no
, 
	`å≠«me
(tf->tf_trapno));

225 i‡(
tf
 =
œ°_tf
 &&Åf->
tf_å≠no
 =
T_PGFLT
)

226 
	`˝rötf
(" cr2 0x%08x\n", 
	`r¸2
());

227 
	`˝rötf
("Éº 0x%08x", 
tf
->
tf_îr
);

232 i‡(
tf
->
tf_å≠no
 =
T_PGFLT
)

233 
	`˝rötf
(" [%s, %s, %s]\n",

234 
tf
->
tf_îr
 & 4 ? "user" : "kernel",

235 
tf
->
tf_îr
 & 2 ? "write" : "read",

236 
tf
->
tf_îr
 & 1 ? "protection" : "not-present");

238 
	`˝rötf
("\n");

239 
	`˝rötf
("Éù 0x%08x\n", 
tf
->
tf_eù
);

240 
	`˝rötf
(" c† 0x----%04x\n", 
tf
->
tf_cs
);

241 
	`˝rötf
(" fœg 0x%08x\n", 
tf
->
tf_eÊags
);

242 i‡((
tf
->
tf_cs
 & 3) != 0) {

243 
	`˝rötf
("É• 0x%08x\n", 
tf
->
tf_e•
);

244 
	`˝rötf
(" s† 0x----%04x\n", 
tf
->
tf_ss
);

246 
	}
}

249 
	$¥öt_ªgs
(
PushRegs
 *
ªgs
)

251 
	`˝rötf
("Édò 0x%08x\n", 
ªgs
->
ªg_edi
);

252 
	`˝rötf
("Ésò 0x%08x\n", 
ªgs
->
ªg_esi
);

253 
	`˝rötf
("Éb∞ 0x%08x\n", 
ªgs
->
ªg_ebp
);

254 
	`˝rötf
(" oe• 0x%08x\n", 
ªgs
->
ªg_€•
);

255 
	`˝rötf
("Ébx 0x%08x\n", 
ªgs
->
ªg_ebx
);

256 
	`˝rötf
("Édx 0x%08x\n", 
ªgs
->
ªg_edx
);

257 
	`˝rötf
("Écx 0x%08x\n", 
ªgs
->
ªg_ecx
);

258 
	`˝rötf
("Éax 0x%08x\n", 
ªgs
->
ªg_óx
);

259 
	}
}

262 
	$å≠_di•©ch
(
Tøp‰ame
 *
tf
)

270 i‡(
tf
->
tf_å≠no
 =
IRQ_OFFSET
 + 
IRQ_SPURIOUS
) {

271 
	`˝rötf
("Spurious interrupt on irq 7\n");

272 
	`¥öt_å≠‰ame
(
tf
);

283 
r
;

284 
tf
->
tf_å≠no
)

286 
T_PGFLT
:

287 
	`∑ge_Áu…_h™dÀr
(
tf
);

289 
T_BRKPT
:

290 
	`m⁄ô‹
(
tf
);

292 
T_SYSCALL
:

293 
r
 = 
	`sysˇŒ
(
tf
->
tf_ªgs
.
ªg_óx
,tf->tf_ªgs.
ªg_edx
,tf->tf_ªgs.
ªg_ecx
,tf->tf_ªgs.
ªg_ebx
,

294 
tf
->
tf_ªgs
.
ªg_edi
,tf->tf_ªgs.
ªg_esi
);

300  
tf
->
tf_ªgs
.
ªg_óx
 = 
r
;

302 (
IRQ_OFFSET
+
IRQ_TIMER
):

303 
	`œpic_eoi
();

304 
	`sched_yõld
();

311 
	`¥öt_å≠‰ame
(
tf
);

312 i‡(
tf
->
tf_cs
 =
GD_KT
)

313 
	`∑nic
("unhandledÅrap in kernel");

315 
	`ív_de°roy
(
cuªnv
);

318 
	}
}

321 
	$å≠
(
Tøp‰ame
 *
tf
)

325 
asm
 volatile("cld" ::: "cc");

328 *
∑nic°r
;

329 i‡(
∑nic°r
)

330 
asm
 volatile("hlt");

334 i‡(
	`xchg
(&
this˝u
->
˝u_°©us
, 
CPU_STARTED
Ë=
CPU_HALTED
)

335 
	`lock_kî√l
();

342 i‡((
tf
->
tf_cs
 & 3) == 3) {

347 
	`lock_kî√l
();

349 
	`as£π
(
cuªnv
);

352 i‡(
cuªnv
->
ív_°©us
 =
ENV_DYING
) {

353 
	`ív_‰ì
(
cuªnv
);

354 
cuªnv
 = 
NULL
;

355 
	`sched_yõld
();

361 
cuªnv
->
ív_tf
 = *
tf
;

363 
tf
 = &
cuªnv
->
ív_tf
;

368 
œ°_tf
 = 
tf
;

371 
	`å≠_di•©ch
(
tf
);

376 i‡(
cuªnv
 && cuªnv->
ív_°©us
 =
ENV_RUNNING
)

377 
	`ív_run
(
cuªnv
);

379 
	`sched_yõld
();

380 
	}
}

384 
	$∑ge_Áu…_h™dÀr
(
Tøp‰ame
 *
tf
)

386 
uöt32_t
 
Áu…_va
;

389 
Áu…_va
 = 
	`r¸2
();

394 if(
tf
->
tf_cs
 =
GD_KT
)

396 
	`∑nic
("kern/trap.c/page_fault_handler:kerenlÖage fault!\n");

431 if(
cuªnv
->
ív_pgÁu…_upˇŒ
 !
NULL
)

433 
UTøp‰ame
 *
ut‰ame
;

434 if(
tf
->
tf_e•
 >=
UXSTACKTOP
-
PGSIZE
 &&Åf->tf_esp < UXSTACKTOP)

436 
ut‰ame
 = (
UTøp‰ame
 *)((*)
tf
->
tf_e•
 -(UTrapframe)-4);

437 
	`u£r_mem_as£π
(
cuªnv
,(*)
ut‰ame
,(
UTøp‰ame
Ë+4,
PTE_U
 |
PTE_W
);

441 
ut‰ame
 = (
UTøp‰ame
 *)(
UXSTACKTOP
 - (UTrapframe));

442 
	`u£r_mem_as£π
(
cuªnv
,(*)
ut‰ame
,(
UTøp‰ame
),
PTE_U
|
PTE_W
);

445 
ut‰ame
->
utf_e•
 = 
tf
->
tf_e•
;

446 
ut‰ame
->
utf_eÊags
 = 
tf
->
tf_eÊags
;

447 
ut‰ame
->
utf_eù
 = 
tf
->
tf_eù
;

448 
ut‰ame
->
utf_ªgs
 = 
tf
->
tf_ªgs
;

449 
ut‰ame
->
utf_îr
 = 
tf
->
tf_îr
;

450 
ut‰ame
->
utf_Áu…_va
 = 
Áu…_va
;

452 
cuªnv
->
ív_tf
.
tf_eù
 = (
uöt32_t
)cuªnv->
ív_pgÁu…_upˇŒ
;

453 
cuªnv
->
ív_tf
.
tf_e•
 = (
uöt32_t
)
ut‰ame
;

454 
	`ív_run
(
cuªnv
);

458 
	`˝rötf
("userÖage fault,Énv_pgfault_upcall == NULL\n");

463 
	`˝rötf
("[%08x] user fault va %08x ip %08x\n",

464 
cuªnv
->
ív_id
, 
Áu…_va
, 
tf
->
tf_eù
);

465 
	`¥öt_å≠‰ame
(
tf
);

466 
	`ív_de°roy
(
cuªnv
);

467 
	}
}

	@kern/trap.h

3 #i‚de‡
JOS_KERN_TRAP_H


4 
	#JOS_KERN_TRAP_H


	)

5 #i‚de‡
JOS_KERNEL


9 
	~<öc/å≠.h
>

10 
	~<öc/mmu.h
>

13 
G©edesc
 
idt
[];

14 
P£udodesc
 
idt_pd
;

16 
å≠_öô
();

17 
å≠_öô_≥r˝u
();

18 
¥öt_ªgs
(
PushRegs
 *
ªgs
);

19 
¥öt_å≠‰ame
(
Tøp‰ame
 *
tf
);

20 
∑ge_Áu…_h™dÀr
(
Tøp‰ame
 *);

21 
backåa˚
(
Tøp‰ame
 *);

	@lib/args.c

1 
	~<öc/¨gs.h
>

2 
	~<öc/°rög.h
>

5 
	$¨g°¨t
(*
¨gc
, **
¨gv
, 
Arg°©e
 *
¨gs
)

7 
¨gs
->
¨gc
 =árgc;

8 
¨gs
->
¨gv
 = (const **)árgv;

9 
¨gs
->
cuørg
 = (*
¨gc
 > 1 && 
¨gv
 ? "" : 0);

10 
¨gs
->
¨gvÆue
 = 0;

11 
	}
}

14 
	$¨g√xt
(
Arg°©e
 *
¨gs
)

16 
¨g
;

18 
¨gs
->
¨gvÆue
 = 0;

21 i‡(
¨gs
->
cuørg
 == 0)

24 i‡(!*
¨gs
->
cuørg
) {

27 i‡(*
¨gs
->
¨gc
 == 1

28 || 
¨gs
->
¨gv
[1][0] != '-'

29 || 
¨gs
->
¨gv
[1][1] == '\0')

30 
ídoÁrgs
;

32 
¨gs
->
cuørg
 =árgs->
¨gv
[1] + 1;

33 
	`memmove
(
¨gs
->
¨gv
 + 1,árgs->¨gv + 2, (c⁄° *Ë* (*¨gs->
¨gc
 - 1));

34 (*
¨gs
->
¨gc
)--;

36 i‡(
¨gs
->
cuørg
[0] == '-' &&árgs->curarg[1] == '\0')

37 
ídoÁrgs
;

40 
¨g
 = (Ë*
¨gs
->
cuørg
;

41 
¨gs
->
cuørg
++;

42  
¨g
;

44 
ídoÁrgs
:

45 
¨gs
->
cuørg
 = 0;

47 
	}
}

50 
	$¨gvÆue
(
Arg°©e
 *
¨gs
)

52  (*Ë(
¨gs
->
¨gvÆue
 ?árgs->¨gvÆuê: 
	`¨g√xtvÆue
(args));

53 
	}
}

56 
	$¨g√xtvÆue
(
Arg°©e
 *
¨gs
)

58 i‡(!
¨gs
->
cuørg
)

60 i‡(*
¨gs
->
cuørg
) {

61 
¨gs
->
¨gvÆue
 =árgs->
cuørg
;

62 
¨gs
->
cuørg
 = "";

63 } i‡(*
¨gs
->
¨gc
 > 1) {

64 
¨gs
->
¨gvÆue
 =árgs->
¨gv
[1];

65 
	`memmove
(
¨gs
->
¨gv
 + 1,árgs->¨gv + 2, (c⁄° *Ë* (*¨gs->
¨gc
 - 1));

66 (*
¨gs
->
¨gc
)--;

68 
¨gs
->
¨gvÆue
 = 0;

69 
¨gs
->
cuørg
 = 0;

71  (*Ë
¨gs
->
¨gvÆue
;

72 
	}
}

	@lib/console.c

2 
	~<öc/°rög.h
>

3 
	~<öc/lib.h
>

6 
	$˝utch¨
(
ch
)

8 
c
 = 
ch
;

12 
	`sys_˝uts
(&
c
, 1);

13 
	}
}

16 
	$gëch¨
()

18 
c
;

19 
r
;

24 
r
 = 
	`ªad
(0, &
c
, 1);

25 i‡(
r
 < 0)

26  
r
;

27 i‡(
r
 < 1)

28  -
E_EOF
;

29  
c
;

30 
	}
}

37 
ssize_t
 
devc⁄s_ªad
(
Fd
*, *, 
size_t
);

38 
ssize_t
 
devc⁄s_wrôe
(
Fd
*, c⁄° *, 
size_t
);

39 
devc⁄s_˛o£
(
Fd
*);

40 
devc⁄s_°©
(
Fd
*, 
Sèt
*);

42 
Dev
 
	gdevc⁄s
 =

44 .
dev_id
 = 'c',

45 .
	gdev_«me
 = "cons",

46 .
	gdev_ªad
 = 
devc⁄s_ªad
,

47 .
	gdev_wrôe
 = 
devc⁄s_wrôe
,

48 .
	gdev_˛o£
 = 
devc⁄s_˛o£
,

49 .
	gdev_°©
 = 
devc⁄s_°©


53 
	$isc⁄s
(
fdnum
)

55 
r
;

56 
Fd
 *
fd
;

58 i‡((
r
 = 
	`fd_lookup
(
fdnum
, &
fd
)) < 0)

59  
r
;

60  
fd
->
fd_dev_id
 =
devc⁄s
.
dev_id
;

61 
	}
}

64 
	$›íc⁄s
()

66 
r
;

67 
Fd
* 
fd
;

69 i‡((
r
 = 
	`fd_Æloc
(&
fd
)) < 0)

70  
r
;

71 i‡((
r
 = 
	`sys_∑ge_Æloc
(0, 
fd
, 
PTE_P
|
PTE_U
|
PTE_W
|
PTE_SHARE
)) < 0)

72  
r
;

73 
fd
->
fd_dev_id
 = 
devc⁄s
.
dev_id
;

74 
fd
->
fd_omode
 = 
O_RDWR
;

75  
	`fd2num
(
fd
);

76 
	}
}

78 
ssize_t


79 
	$devc⁄s_ªad
(
Fd
 *
fd
, *
vbuf
, 
size_t
 
n
)

81 
c
;

83 i‡(
n
 == 0)

86 (
c
 = 
	`sys_cgëc
()) == 0)

87 
	`sys_yõld
();

88 i‡(
c
 < 0)

89  
c
;

90 i‡(
c
 == 0x04)

92 *(*)
vbuf
 = 
c
;

94 
	}
}

96 
ssize_t


97 
	$devc⁄s_wrôe
(
Fd
 *
fd
, c⁄° *
vbuf
, 
size_t
 
n
)

99 
tŸ
, 
m
;

100 
buf
[128];

104 
tŸ
 = 0;ÅŸ < 
n
;ÅŸ +
m
) {

105 
m
 = 
n
 - 
tŸ
;

106 i‡(
m
 > (
buf
) - 1)

107 
m
 = (
buf
) - 1;

108 
	`memmove
(
buf
, (*)
vbuf
 + 
tŸ
, 
m
);

109 
	`sys_˝uts
(
buf
, 
m
);

111  
tŸ
;

112 
	}
}

115 
	$devc⁄s_˛o£
(
Fd
 *
fd
)

117 
	`USED
(
fd
);

120 
	}
}

123 
	$devc⁄s_°©
(
Fd
 *
fd
, 
Sèt
 *
°©
)

125 
	`°r˝y
(
°©
->
°_«me
, "<cons>");

127 
	}
}

	@lib/exit.c

2 
	~<öc/lib.h
>

5 
	$exô
()

7 
	`˛o£_Æl
();

8 
	`sys_ív_de°roy
(0);

9 
	}
}

	@lib/fd.c

1 
	~<öc/lib.h
>

3 
	#debug
 0

	)

6 
	#MAXFD
 32

	)

8 
	#FDTABLE
 0xD0000000

	)

11 
	#FILEDATA
 (
FDTABLE
 + 
MAXFD
*
PGSIZE
)

	)

14 
	#INDEX2FD
(
i
Ë((
Fd
*Ë(
FDTABLE
 + (i)*
PGSIZE
))

	)

16 
	#INDEX2DATA
(
i
Ë((*Ë(
FILEDATA
 + (i)*
PGSIZE
))

	)

24 
	$fd2num
(
Fd
 *
fd
)

26  ((
uöçå_t
Ë
fd
 - 
FDTABLE
Ë/ 
PGSIZE
;

27 
	}
}

30 
	$fd2d©a
(
Fd
 *
fd
)

32  
	`INDEX2DATA
(
	`fd2num
(
fd
));

33 
	}
}

51 
	$fd_Æloc
(
Fd
 **
fd_°‹e
)

53 
i
;

54 
Fd
 *
fd
;

56 
i
 = 0; i < 
MAXFD
; i++) {

57 
fd
 = 
	`INDEX2FD
(
i
);

58 i‡((
uvpd
[
	`PDX
(
fd
)] & 
PTE_P
Ë=0 || (
uv±
[
	`PGNUM
(fd)] & PTE_P) == 0) {

59 *
fd_°‹e
 = 
fd
;

63 *
fd_°‹e
 = 0;

64  -
E_MAX_OPEN
;

65 
	}
}

74 
	$fd_lookup
(
fdnum
, 
Fd
 **
fd_°‹e
)

76 
Fd
 *
fd
;

78 i‡(
fdnum
 < 0 || fdnum >
MAXFD
) {

79 i‡(
debug
)

80 
	`˝rötf
("[%08x] bad fd %d\n", 
thi£nv
->
ív_id
, 
fdnum
);

81  -
E_INVAL
;

83 
fd
 = 
	`INDEX2FD
(
fdnum
);

84 i‡(!(
uvpd
[
	`PDX
(
fd
)] & 
PTE_P
Ë|| !(
uv±
[
	`PGNUM
(fd)] & PTE_P)) {

85 i‡(
debug
)

86 
	`˝rötf
("[%08x] clo£d fd %d\n", 
thi£nv
->
ív_id
, 
fdnum
);

87  -
E_INVAL
;

89 *
fd_°‹e
 = 
fd
;

91 
	}
}

101 
	$fd_˛o£
(
Fd
 *
fd
, 
boﬁ
 
mu°_exi°
)

103 
Fd
 *
fd2
;

104 
Dev
 *
dev
;

105 
r
;

106 i‡((
r
 = 
	`fd_lookup
(
	`fd2num
(
fd
), &
fd2
)) < 0

107 || 
fd
 !
fd2
)

108  (
mu°_exi°
 ? 
r
 : 0);

109 i‡((
r
 = 
	`dev_lookup
(
fd
->
fd_dev_id
, &
dev
)) >= 0) {

110 i‡(
dev
->
dev_˛o£
)

111 
r
 = (*
dev
->
dev_˛o£
)(
fd
);

113 
r
 = 0;

117 (Ë
	`sys_∑ge_unm≠
(0, 
fd
);

118  
r
;

119 
	}
}

126 
Dev
 *
	gdevèb
[] =

128 &
devfûe
,

129 &
devpùe
,

130 &
devc⁄s
,

135 
	$dev_lookup
(
dev_id
, 
Dev
 **
dev
)

137 
i
;

138 
i
 = 0; 
devèb
[i]; i++)

139 i‡(
devèb
[
i
]->
dev_id
 == dev_id) {

140 *
dev
 = 
devèb
[
i
];

143 
	`˝rötf
("[%08x] unknow¿devi˚Åy≥ %d\n", 
thi£nv
->
ív_id
, 
dev_id
);

144 *
dev
 = 0;

145  -
E_INVAL
;

146 
	}
}

149 
	$˛o£
(
fdnum
)

151 
Fd
 *
fd
;

152 
r
;

154 i‡((
r
 = 
	`fd_lookup
(
fdnum
, &
fd
)) < 0)

155  
r
;

157  
	`fd_˛o£
(
fd
, 1);

158 
	}
}

161 
	$˛o£_Æl
()

163 
i
;

164 
i
 = 0; i < 
MAXFD
; i++)

165 
	`˛o£
(
i
);

166 
	}
}

174 
	$dup
(
ﬁdfdnum
, 
√wfdnum
)

176 
r
;

177 *
ova
, *
nva
;

178 
±e_t
 
±e
;

179 
Fd
 *
ﬁdfd
, *
√wfd
;

181 i‡((
r
 = 
	`fd_lookup
(
ﬁdfdnum
, &
ﬁdfd
)) < 0)

182  
r
;

183 
	`˛o£
(
√wfdnum
);

185 
√wfd
 = 
	`INDEX2FD
(
√wfdnum
);

186 
ova
 = 
	`fd2d©a
(
ﬁdfd
);

187 
nva
 = 
	`fd2d©a
(
√wfd
);

189 i‡((
uvpd
[
	`PDX
(
ova
)] & 
PTE_P
Ë&& (
uv±
[
	`PGNUM
(ova)] & PTE_P))

190 i‡((
r
 = 
	`sys_∑ge_m≠
(0, 
ova
, 0, 
nva
, 
uv±
[
	`PGNUM
(ova)] & 
PTE_SYSCALL
)) < 0)

191 
îr
;

192 i‡((
r
 = 
	`sys_∑ge_m≠
(0, 
ﬁdfd
, 0, 
√wfd
, 
uv±
[
	`PGNUM
(ﬁdfd)] & 
PTE_SYSCALL
)) < 0)

193 
îr
;

195  
√wfdnum
;

197 
îr
:

198 
	`sys_∑ge_unm≠
(0, 
√wfd
);

199 
	`sys_∑ge_unm≠
(0, 
nva
);

200  
r
;

201 
	}
}

203 
ssize_t


204 
	$ªad
(
fdnum
, *
buf
, 
size_t
 
n
)

206 
r
;

207 
Dev
 *
dev
;

208 
Fd
 *
fd
;

210 i‡((
r
 = 
	`fd_lookup
(
fdnum
, &
fd
)) < 0

211 || (
r
 = 
	`dev_lookup
(
fd
->
fd_dev_id
, &
dev
)) < 0)

212  
r
;

213 i‡((
fd
->
fd_omode
 & 
O_ACCMODE
Ë=
O_WRONLY
) {

214 
	`˝rötf
("[%08x]Ñód %d -- bad mode\n", 
thi£nv
->
ív_id
, 
fdnum
);

215  -
E_INVAL
;

217 i‡(!
dev
->
dev_ªad
)

218  -
E_NOT_SUPP
;

219  (*
dev
->
dev_ªad
)(
fd
, 
buf
, 
n
);

220 
	}
}

222 
ssize_t


223 
	$ªadn
(
fdnum
, *
buf
, 
size_t
 
n
)

225 
m
, 
tŸ
;

227 
tŸ
 = 0;ÅŸ < 
n
;ÅŸ +
m
) {

228 
m
 = 
	`ªad
(
fdnum
, (*)
buf
 + 
tŸ
, 
n
 -Åot);

229 i‡(
m
 < 0)

230  
m
;

231 i‡(
m
 == 0)

234  
tŸ
;

235 
	}
}

237 
ssize_t


238 
	$wrôe
(
fdnum
, c⁄° *
buf
, 
size_t
 
n
)

240 
r
;

241 
Dev
 *
dev
;

242 
Fd
 *
fd
;

244 i‡((
r
 = 
	`fd_lookup
(
fdnum
, &
fd
)) < 0

245 || (
r
 = 
	`dev_lookup
(
fd
->
fd_dev_id
, &
dev
)) < 0)

246  
r
;

247 i‡((
fd
->
fd_omode
 & 
O_ACCMODE
Ë=
O_RDONLY
) {

248 
	`˝rötf
("[%08x] wrôê%d -- bad mode\n", 
thi£nv
->
ív_id
, 
fdnum
);

249  -
E_INVAL
;

251 i‡(
debug
)

252 
	`˝rötf
("write %d %p %d via dev %s\n",

253 
fdnum
, 
buf
, 
n
, 
dev
->
dev_«me
);

254 i‡(!
dev
->
dev_wrôe
)

255  -
E_NOT_SUPP
;

256  (*
dev
->
dev_wrôe
)(
fd
, 
buf
, 
n
);

257 
	}
}

260 
	$£ek
(
fdnum
, 
off_t
 
off£t
)

262 
r
;

263 
Fd
 *
fd
;

265 i‡((
r
 = 
	`fd_lookup
(
fdnum
, &
fd
)) < 0)

266  
r
;

267 
fd
->
fd_off£t
 = 
off£t
;

269 
	}
}

272 
	$·runˇã
(
fdnum
, 
off_t
 
√wsize
)

274 
r
;

275 
Dev
 *
dev
;

276 
Fd
 *
fd
;

277 i‡((
r
 = 
	`fd_lookup
(
fdnum
, &
fd
)) < 0

278 || (
r
 = 
	`dev_lookup
(
fd
->
fd_dev_id
, &
dev
)) < 0)

279  
r
;

280 i‡((
fd
->
fd_omode
 & 
O_ACCMODE
Ë=
O_RDONLY
) {

281 
	`˝rötf
("[%08x] ftruncate %d -- bad mode\n",

282 
thi£nv
->
ív_id
, 
fdnum
);

283  -
E_INVAL
;

285 i‡(!
dev
->
dev_åunc
)

286  -
E_NOT_SUPP
;

287  (*
dev
->
dev_åunc
)(
fd
, 
√wsize
);

288 
	}
}

291 
	$f°©
(
fdnum
, 
Sèt
 *
°©
)

293 
r
;

294 
Dev
 *
dev
;

295 
Fd
 *
fd
;

297 i‡((
r
 = 
	`fd_lookup
(
fdnum
, &
fd
)) < 0

298 || (
r
 = 
	`dev_lookup
(
fd
->
fd_dev_id
, &
dev
)) < 0)

299  
r
;

300 i‡(!
dev
->
dev_°©
)

301  -
E_NOT_SUPP
;

302 
°©
->
°_«me
[0] = 0;

303 
°©
->
°_size
 = 0;

304 
°©
->
°_isdú
 = 0;

305 
°©
->
°_dev
 = 
dev
;

306  (*
dev
->
dev_°©
)(
fd
, 
°©
);

307 
	}
}

310 
	$°©
(c⁄° *
∑th
, 
Sèt
 *
°©
)

312 
fd
, 
r
;

314 i‡((
fd
 = 
	`›í
(
∑th
, 
O_RDONLY
)) < 0)

315  
fd
;

316 
r
 = 
	`f°©
(
fd
, 
°©
);

317 
	`˛o£
(
fd
);

318  
r
;

319 
	}
}

	@lib/file.c

1 
	~<öc/fs.h
>

2 
	~<öc/°rög.h
>

3 
	~<öc/lib.h
>

5 
	#debug
 0

	)

7 
Fsùc
 
fsùcbuf
 
__©åibuã__
((
Æig√d
(
PGSIZE
)));

16 
	$fsùc
(
ty≥
, *
d°va
)

18 
ívid_t
 
f£nv
;

19 i‡(
f£nv
 == 0)

20 
f£nv
 = 
	`ùc_föd_ív
(
ENV_TYPE_FS
);

22 
	`°©ic_as£π
((
fsùcbuf
Ë=
PGSIZE
);

24 i‡(
debug
)

25 
	`˝rötf
("[%08x] fsù¯%d %08x\n", 
thi£nv
->
ív_id
, 
ty≥
, *(
uöt32_t
 *)&
fsùcbuf
);

27 
	`ùc_£nd
(
f£nv
, 
ty≥
, &
fsùcbuf
, 
PTE_P
 | 
PTE_W
 | 
PTE_U
);

28  
	`ùc_ªcv
(
NULL
, 
d°va
, NULL);

29 
	}
}

31 
devfûe_Êush
(
Fd
 *
fd
);

32 
ssize_t
 
devfûe_ªad
(
Fd
 *
fd
, *
buf
, 
size_t
 
n
);

33 
ssize_t
 
devfûe_wrôe
(
Fd
 *
fd
, c⁄° *
buf
, 
size_t
 
n
);

34 
devfûe_°©
(
Fd
 *
fd
, 
Sèt
 *
°©
);

35 
devfûe_åunc
(
Fd
 *
fd
, 
off_t
 
√wsize
);

37 
Dev
 
	gdevfûe
 =

39 .
dev_id
 = 'f',

40 .
	gdev_«me
 = "file",

41 .
	gdev_ªad
 = 
devfûe_ªad
,

42 .
	gdev_˛o£
 = 
devfûe_Êush
,

43 .
	gdev_°©
 = 
devfûe_°©
,

53 
	$›í
(c⁄° *
∑th
, 
mode
)

69 
r
;

70 
Fd
 *
fd
;

72 i‡(
	`°æí
(
∑th
Ë>
MAXPATHLEN
)

73  -
E_BAD_PATH
;

75 i‡((
r
 = 
	`fd_Æloc
(&
fd
)) < 0)

76  
r
;

78 
	`°r˝y
(
fsùcbuf
.
›í
.
ªq_∑th
, 
∑th
);

79 
fsùcbuf
.
›í
.
ªq_omode
 = 
mode
;

81 i‡((
r
 = 
	`fsùc
(
FSREQ_OPEN
, 
fd
)) < 0) {

82 
	`fd_˛o£
(
fd
, 0);

83  
r
;

86  
	`fd2num
(
fd
);

87 
	}
}

98 
	$devfûe_Êush
(
Fd
 *
fd
)

100 
fsùcbuf
.
Êush
.
ªq_fûeid
 = 
fd
->
fd_fûe
.
id
;

101  
	`fsùc
(
FSREQ_FLUSH
, 
NULL
);

102 
	}
}

109 
ssize_t


110 
	$devfûe_ªad
(
Fd
 *
fd
, *
buf
, 
size_t
 
n
)

116 
r
;

118 
fsùcbuf
.
ªad
.
ªq_fûeid
 = 
fd
->
fd_fûe
.
id
;

119 
fsùcbuf
.
ªad
.
ªq_n
 = 
n
;

120 i‡((
r
 = 
	`fsùc
(
FSREQ_READ
, 
NULL
)) < 0)

121  
r
;

122 
	`as£π
(
r
 <
n
);

123 
	`as£π
(
r
 <
PGSIZE
);

124 
	`memmove
(
buf
, &
fsùcbuf
, 
r
);

125  
r
;

126 
	}
}

130 
	$devfûe_°©
(
Fd
 *
fd
, 
Sèt
 *
°
)

132 
r
;

134 
fsùcbuf
.
°©
.
ªq_fûeid
 = 
fd
->
fd_fûe
.
id
;

135 i‡((
r
 = 
	`fsùc
(
FSREQ_STAT
, 
NULL
)) < 0)

136  
r
;

137 
	`°r˝y
(
°
->
°_«me
, 
fsùcbuf
.
°©Rë
.
ªt_«me
);

138 
°
->
°_size
 = 
fsùcbuf
.
°©Rë
.
ªt_size
;

139 
°
->
°_isdú
 = 
fsùcbuf
.
°©Rë
.
ªt_isdú
;

141 
	}
}

	@lib/fork.c

3 
	~<öc/°rög.h
>

4 
	~<öc/lib.h
>

8 
	#PTE_COW
 0x800

	)

15 
	$pgÁu…
(
UTøp‰ame
 *
utf
)

17 *
addr
 = (*Ë
utf
->
utf_Áu…_va
;

18 
uöt32_t
 
îr
 = 
utf
->
utf_îr
;

19 
r
;

28 i‡((
îr
 & 
FEC_WR
) == 0)

29 
	`∑nic
("pgfault,Åhe fault isÇotá write\n");

31 
uöt32_t
 
uaddr
 = (uöt32_tË
addr
;

32 i‡((
uvpd
[
	`PDX
(
addr
)] & 
PTE_P
Ë=0 || (
uv±
[
uaddr
/
PGSIZE
] & 
PTE_COW
) == 0)

34 
	`∑nic
("pgfault,Çotá copy-on-writeÖage\n");

45 
r
 = 
	`sys_∑ge_Æloc
(0,(*)
PFTEMP
,
PTE_W
 | 
PTE_U
 | 
PTE_P
);

46 if(
r
 < 0 )

47 
	`∑nic
("pgÁu…,ˇ¿nŸ sys_∑ge_Ælo¯:e\n",
r
);

49 
addr
 = 
	`ROUNDDOWN
◊ddr, 
PGSIZE
);

51 
	`mem˝y
(
PFTEMP
, 
addr
, 
PGSIZE
);

53 
r
 = 
	`sys_∑ge_m≠
(0, 
PFTEMP
, 0, 
addr
, 
PTE_W
 | 
PTE_U
 | 
PTE_P
);

54 i‡(
r
 < 0)

55 
	`∑nic
("pgÁu…, sys_∑ge_m≠Éº‹ : %e\n", 
r
);

59 
	}
}

73 
	$duµage
(
ívid_t
 
ívid
, 
≤
)

75 
r
;

78 if(
≤
 * 
PGSIZE
 ==
UXSTACKTOP
 - PGSIZE)  0;

80 *
addr
 = (*)(
≤
 * 
PGSIZE
);

82 i‡((
uv±
[
≤
] & 
PTE_W
Ë|| (uv±[≤] & 
PTE_COW
))

85 
r
 = 
	`sys_∑ge_m≠
(0, 
addr
, 
ívid
,áddr, 
PTE_COW
 | 
PTE_P
 | 
PTE_U
);

86 i‡(
r
 < 0)

87 
	`∑nic
("duµagêsys_∑ge_m≠Éº‹ : %e\n", 
r
);

90 
r
 = 
	`sys_∑ge_m≠
(0, 
addr
, 0,áddr, 
PTE_COW
 | 
PTE_P
 | 
PTE_U
);

91 i‡(
r
 < 0)

92 
	`∑nic
("duµagêsys_∑ge_m≠Éº‹ : %e\n", 
r
);

97 
r
 = 
	`sys_∑ge_m≠
(0, 
addr
, 
ívid
,áddr, 
PTE_P
 | 
PTE_U
);

98 i‡(
r
 < 0)

99 
	`∑nic
("duµagêsys_∑ge_m≠Éº‹ : %e\n", 
r
);

103 
	}
}

121 
ívid_t


122 
	$f‹k
()

125 
r
;

126 
	`£t_pgÁu…_h™dÀr
(
pgÁu…
);

128 
ívid_t
 
chûdpid
;

129 if((
chûdpid
 = 
	`sys_exof‹k
())<0)

130 
	`∑nic
("lib/f‹k.c/f‹k():%e\n",
chûdpid
);

132 if(
chûdpid
 ==0)

134 
thi£nv
 = &
ívs
[
	`ENVX
(
	`sys_gëívid
())];

138 
uöt32_t
 
addr
;

139 
addr
 = 0;add∏!
UTOP
;add∏+=
PGSIZE
)

141 if((
uvpd
[
	`PDX
(
addr
)] & 
PTE_P
Ë&& (
uv±
[addr/
PGSIZE
] & PTE_PË&& (uv±[addr/PGSIZE] & 
PTE_U
))

143 
	`˝rötf
("uvpd[PDX◊ddr)]%x\n",
uvpd
[
	`PDX
(
addr
)]);

144 
	`duµage
(
chûdpid
,
addr
/
PGSIZE
);

148 
r
 = 
	`sys_∑ge_Æloc
(
chûdpid
,(*)(
UXSTACKTOP
 -
PGSIZE
),
PTE_U
|
PTE_W
|
PTE_P
);

149 if(
r
<0)

150 
	`∑nic
("lib/f‹k.c/f‹k():sys_∑ge_Ælo¯Áûed: %e\n",
r
);

152 
	`_pgÁu…_upˇŒ
();

153 
r
 = 
	`sys_ív_£t_pgÁu…_upˇŒ
(
chûdpid
, 
_pgÁu…_upˇŒ
);

155 i‡(
r
 < 0)

156 
	`∑nic
("f‹k, sëÖgÁu… upˇŒ faû : %e\n", 
r
);

158 
r
 = 
	`sys_ív_£t_°©us
(
chûdpid
,
ENV_RUNNABLE
);

160 if(
r
 < 0)

161 
	`∑nic
("lib/f‹k.c/f‹k():£àchûdÉnv sètu†Áûed: %e\n",
r
);

163  
chûdpid
;

166 
	}
}

170 
	$sf‹k
()

172 
	`∑nic
("sforkÇot implemented");

173  -
E_INVAL
;

174 
	}
}

	@lib/fprintf.c

1 
	~<öc/lib.h
>

8 
	s¥ötbuf
 {

9 
	mfd
;

10 
	midx
;

11 
ssize_t
 
	mªsu…
;

12 
	mîr‹
;

13 
	mbuf
[256];

18 
	$wrôebuf
(
¥ötbuf
 *
b
)

20 i‡(
b
->
îr‹
 > 0) {

21 
ssize_t
 
ªsu…
 = 
	`wrôe
(
b
->
fd
, b->
buf
, b->
idx
);

22 i‡(
ªsu…
 > 0)

23 
b
->
ªsu…
 +=Ñesult;

24 i‡(
ªsu…
 !
b
->
idx
)

25 
b
->
îr‹
 = (
ªsu…
 < 0 ?Ñesult : 0);

27 
	}
}

30 
	$putch
(
ch
, *
thunk
)

32 
¥ötbuf
 *
b
 = (¥ötbu‡*Ë
thunk
;

33 
b
->
buf
[b->
idx
++] = 
ch
;

34 i‡(
b
->
idx
 == 256) {

35 
	`wrôebuf
(
b
);

36 
b
->
idx
 = 0;

38 
	}
}

41 
	$vÂrötf
(
fd
, c⁄° *
fmt
, 
va_li°
 
≠
)

43 
¥ötbuf
 
b
;

45 
b
.
fd
 = fd;

46 
b
.
idx
 = 0;

47 
b
.
ªsu…
 = 0;

48 
b
.
îr‹
 = 1;

49 
	`v¥ötfmt
(
putch
, &
b
, 
fmt
, 
≠
);

50 i‡(
b
.
idx
 > 0)

51 
	`wrôebuf
(&
b
);

53  (
b
.
ªsu…
 ? b.ªsu… : b.
îr‹
);

54 
	}
}

57 
	$Ârötf
(
fd
, c⁄° *
fmt
, ...)

59 
va_li°
 
≠
;

60 
˙t
;

62 
	`va_°¨t
(
≠
, 
fmt
);

63 
˙t
 = 
	`vÂrötf
(
fd
, 
fmt
, 
≠
);

64 
	`va_íd
(
≠
);

66  
˙t
;

67 
	}
}

70 
	$¥ötf
(c⁄° *
fmt
, ...)

72 
va_li°
 
≠
;

73 
˙t
;

75 
	`va_°¨t
(
≠
, 
fmt
);

76 
˙t
 = 
	`vÂrötf
(1, 
fmt
, 
≠
);

77 
	`va_íd
(
≠
);

79  
˙t
;

80 
	}
}

	@lib/ipc.c

3 
	~<öc/lib.h
>

22 
öt32_t


23 
	$ùc_ªcv
(
ívid_t
 *
‰om_ív_°‹e
, *
pg
, *
≥rm_°‹e
)

26 
	`∑nic
("ipc_recvÇot implemented");

28 
	}
}

39 
	$ùc_£nd
(
ívid_t
 
to_ív
, 
uöt32_t
 
vÆ
, *
pg
, 
≥rm
)

42 
	`∑nic
("ipc_sendÇot implemented");

43 
	}
}

48 
ívid_t


49 
	$ùc_föd_ív
(
EnvTy≥
 
ty≥
)

51 
i
;

52 
i
 = 0; i < 
NENV
; i++)

53 i‡(
ívs
[
i
].
ív_ty≥
 =
ty≥
)

54  
ívs
[
i
].
ív_id
;

56 
	}
}

	@lib/libmain.c

4 
	~<öc/lib.h
>

6 
umaö
(
¨gc
, **
¨gv
);

8 c⁄° vﬁ©ûê
Env
 *
	gthi£nv
;

9 c⁄° *
	gbö¨y«me
 = "<unknown>";

12 
	$libmaö
(
¨gc
, **
¨gv
)

16 
thi£nv
 = 0;

17 
thi£nv
 = 
ívs
 + 
	`ENVX
(
	`sys_gëívid
());

19 i‡(
¨gc
 > 0)

20 
bö¨y«me
 = 
¨gv
[0];

23 
	`umaö
(
¨gc
, 
¨gv
);

26 
	`exô
();

27 
	}
}

	@lib/pageref.c

1 
	~<öc/lib.h
>

4 
	$∑gîef
(*
v
)

6 
±e_t
 
±e
;

8 i‡(!(
uvpd
[
	`PDX
(
v
)] & 
PTE_P
))

10 
±e
 = 
uv±
[
	`PGNUM
(
v
)];

11 i‡(!(
±e
 & 
PTE_P
))

13  
∑ges
[
	`PGNUM
(
±e
)].
µ_ªf
;

14 
	}
}

	@lib/panic.c

2 
	~<öc/lib.h
>

10 
	$_∑nic
(c⁄° *
fûe
, 
löe
, c⁄° *
fmt
, ...)

12 
va_li°
 
≠
;

14 
	`va_°¨t
(
≠
, 
fmt
);

17 
	`˝rötf
("[%08x] userÖanic in %sát %s:%d: ",

18 
	`sys_gëívid
(), 
bö¨y«me
, 
fûe
, 
löe
);

19 
	`v˝rötf
(
fmt
, 
≠
);

20 
	`˝rötf
("\n");

24 
asm
 volatile("int3");

25 
	}
}

	@lib/pgfault.c

7 
	~<öc/lib.h
>

11 
_pgÁu…_upˇŒ
();

14 (*
_pgÁu…_h™dÀr
)(
UTøp‰ame
 *
utf
);

25 
	`£t_pgÁu…_h™dÀr
((*
h™dÀr
)(
UTøp‰ame
 *
utf
))

27 
r
;

29 i‡(
_pgÁu…_h™dÀr
 == 0)

33 if((
r
 = 
	`sys_∑ge_Æloc
(0,(*)(
UXSTACKTOP
-
PGSIZE
),
PTE_U
|
PTE_W
|
PTE_P
))<0)

35 
	`∑nic
("£t_pgÁu…_h™dÀr: %e\n",
r
);

37 if((
r
 = 
	`sys_ív_£t_pgÁu…_upˇŒ
(0,
_pgÁu…_upˇŒ
))<0)

39 
	`∑nic
("sys_ív_£t_pgÁu…_upˇŒÉº‹ : %e\n", 
r
);

45 
_pgÁu…_h™dÀr
 = 
h™dÀr
;

47 
	}
}

	@lib/pipe.c

1 
	~<öc/lib.h
>

3 
	#debug
 0

	)

5 
ssize_t
 
devpùe_ªad
(
Fd
 *
fd
, *
buf
, 
size_t
 
n
);

6 
ssize_t
 
devpùe_wrôe
(
Fd
 *
fd
, c⁄° *
buf
, 
size_t
 
n
);

7 
devpùe_°©
(
Fd
 *
fd
, 
Sèt
 *
°©
);

8 
devpùe_˛o£
(
Fd
 *
fd
);

10 
Dev
 
	gdevpùe
 =

12 .
dev_id
 = 'p',

13 .
	gdev_«me
 = "pipe",

14 .
	gdev_ªad
 = 
devpùe_ªad
,

15 .
	gdev_wrôe
 = 
devpùe_wrôe
,

16 .
	gdev_˛o£
 = 
devpùe_˛o£
,

17 .
	gdev_°©
 = 
devpùe_°©
,

20 
	#PIPEBUFSIZ
 32

21 

	)

22 
	sPùe
 {

23 
off_t
 
	mp_Ωos
;

24 
off_t
 
	mp_wpos
;

25 
uöt8_t
 
	mp_buf
[
PIPEBUFSIZ
];

29 
	$pùe
(
pfd
[2])

31 
r
;

32 
Fd
 *
fd0
, *
fd1
;

33 *
va
;

36 i‡((
r
 = 
	`fd_Æloc
(&
fd0
)) < 0

37 || (
r
 = 
	`sys_∑ge_Æloc
(0, 
fd0
, 
PTE_P
|
PTE_W
|
PTE_U
|
PTE_SHARE
)) < 0)

38 
îr
;

40 i‡((
r
 = 
	`fd_Æloc
(&
fd1
)) < 0

41 || (
r
 = 
	`sys_∑ge_Æloc
(0, 
fd1
, 
PTE_P
|
PTE_W
|
PTE_U
|
PTE_SHARE
)) < 0)

42 
îr1
;

45 
va
 = 
	`fd2d©a
(
fd0
);

46 i‡((
r
 = 
	`sys_∑ge_Æloc
(0, 
va
, 
PTE_P
|
PTE_W
|
PTE_U
|
PTE_SHARE
)) < 0)

47 
îr2
;

48 i‡((
r
 = 
	`sys_∑ge_m≠
(0, 
va
, 0, 
	`fd2d©a
(
fd1
), 
PTE_P
|
PTE_W
|
PTE_U
|
PTE_SHARE
)) < 0)

49 
îr3
;

52 
fd0
->
fd_dev_id
 = 
devpùe
.
dev_id
;

53 
fd0
->
fd_omode
 = 
O_RDONLY
;

55 
fd1
->
fd_dev_id
 = 
devpùe
.
dev_id
;

56 
fd1
->
fd_omode
 = 
O_WRONLY
;

58 i‡(
debug
)

59 
	`˝rötf
("[%08x]Öùe¸óã %08x\n", 
thi£nv
->
ív_id
, 
uv±
[
	`PGNUM
(
va
)]);

61 
pfd
[0] = 
	`fd2num
(
fd0
);

62 
pfd
[1] = 
	`fd2num
(
fd1
);

65 
îr3
:

66 
	`sys_∑ge_unm≠
(0, 
va
);

67 
îr2
:

68 
	`sys_∑ge_unm≠
(0, 
fd1
);

69 
îr1
:

70 
	`sys_∑ge_unm≠
(0, 
fd0
);

71 
îr
:

72  
r
;

73 
	}
}

76 
	$_pùeis˛o£d
(
Fd
 *
fd
, 
Pùe
 *
p
)

78 
n
, 
¬
, 
ªt
;

81 
n
 = 
thi£nv
->
ív_runs
;

82 
ªt
 = 
	`∑gîef
(
fd
Ë=∑gîef(
p
);

83 
¬
 = 
thi£nv
->
ív_runs
;

84 i‡(
n
 =
¬
)

85  
ªt
;

86 i‡(
n
 !
¬
 && 
ªt
 == 1)

87 
	`˝rötf
("pùêø˚ávoided\n", 
n
, 
thi£nv
->
ív_runs
, 
ªt
);

89 
	}
}

92 
	$pùeis˛o£d
(
fdnum
)

94 
Fd
 *
fd
;

95 
Pùe
 *
p
;

96 
r
;

98 i‡((
r
 = 
	`fd_lookup
(
fdnum
, &
fd
)) < 0)

99  
r
;

100 
p
 = (
Pùe
*Ë
	`fd2d©a
(
fd
);

101  
	`_pùeis˛o£d
(
fd
, 
p
);

102 
	}
}

104 
ssize_t


105 
	$devpùe_ªad
(
Fd
 *
fd
, *
vbuf
, 
size_t
 
n
)

107 
uöt8_t
 *
buf
;

108 
size_t
 
i
;

109 
Pùe
 *
p
;

111 
p
 = (
Pùe
*)
	`fd2d©a
(
fd
);

112 i‡(
debug
)

113 
	`˝rötf
("[%08x] devpipe_read %08x %dÑpos %d wpos %d\n",

114 
thi£nv
->
ív_id
, 
uv±
[
	`PGNUM
(
p
)], 
n
,Ö->
p_Ωos
,Ö->
p_wpos
);

116 
buf
 = 
vbuf
;

117 
i
 = 0; i < 
n
; i++) {

118 
p
->
p_Ωos
 =p->
p_wpos
) {

121 i‡(
i
 > 0)

122  
i
;

124 i‡(
	`_pùeis˛o£d
(
fd
, 
p
))

127 i‡(
debug
)

128 
	`˝rötf
("devpipe_read yield\n");

129 
	`sys_yõld
();

133 
buf
[
i
] = 
p
->
p_buf
[p->
p_Ωos
 % 
PIPEBUFSIZ
];

134 
p
->
p_Ωos
++;

136  
i
;

137 
	}
}

139 
ssize_t


140 
	$devpùe_wrôe
(
Fd
 *
fd
, c⁄° *
vbuf
, 
size_t
 
n
)

142 c⁄° 
uöt8_t
 *
buf
;

143 
size_t
 
i
;

144 
Pùe
 *
p
;

146 
p
 = (
Pùe
*Ë
	`fd2d©a
(
fd
);

147 i‡(
debug
)

148 
	`˝rötf
("[%08x] devpipe_write %08x %dÑpos %d wpos %d\n",

149 
thi£nv
->
ív_id
, 
uv±
[
	`PGNUM
(
p
)], 
n
,Ö->
p_Ωos
,Ö->
p_wpos
);

151 
buf
 = 
vbuf
;

152 
i
 = 0; i < 
n
; i++) {

153 
p
->
p_wpos
 >p->
p_Ωos
 + ’->
p_buf
)) {

158 i‡(
	`_pùeis˛o£d
(
fd
, 
p
))

161 i‡(
debug
)

162 
	`˝rötf
("devpipe_write yield\n");

163 
	`sys_yõld
();

167 
p
->
p_buf
[p->
p_wpos
 % 
PIPEBUFSIZ
] = 
buf
[
i
];

168 
p
->
p_wpos
++;

171  
i
;

172 
	}
}

175 
	$devpùe_°©
(
Fd
 *
fd
, 
Sèt
 *
°©
)

177 
Pùe
 *
p
 = (Pùe*Ë
	`fd2d©a
(
fd
);

178 
	`°r˝y
(
°©
->
°_«me
, "<pipe>");

179 
°©
->
°_size
 = 
p
->
p_wpos
 -Ö->
p_Ωos
;

180 
°©
->
°_isdú
 = 0;

181 
°©
->
°_dev
 = &
devpùe
;

183 
	}
}

186 
	$devpùe_˛o£
(
Fd
 *
fd
)

188 (Ë
	`sys_∑ge_unm≠
(0, 
fd
);

189  
	`sys_∑ge_unm≠
(0, 
	`fd2d©a
(
fd
));

190 
	}
}

	@lib/printf.c

8 
	~<öc/ty≥s.h
>

9 
	~<öc/°dio.h
>

10 
	~<öc/°d¨g.h
>

11 
	~<öc/lib.h
>

19 
	s¥ötbuf
 {

20 
	midx
;

21 
	m˙t
;

22 
	mbuf
[256];

27 
	$putch
(
ch
, 
¥ötbuf
 *
b
)

29 
b
->
buf
[b->
idx
++] = 
ch
;

30 i‡(
b
->
idx
 == 256-1) {

31 
	`sys_˝uts
(
b
->
buf
, b->
idx
);

32 
b
->
idx
 = 0;

34 
b
->
˙t
++;

35 
	}
}

38 
	$v˝rötf
(c⁄° *
fmt
, 
va_li°
 
≠
)

40 
¥ötbuf
 
b
;

42 
b
.
idx
 = 0;

43 
b
.
˙t
 = 0;

44 
	`v¥ötfmt
((*)
putch
, &
b
, 
fmt
, 
≠
);

45 
	`sys_˝uts
(
b
.
buf
, b.
idx
);

47  
b
.
˙t
;

48 
	}
}

51 
	$˝rötf
(c⁄° *
fmt
, ...)

53 
va_li°
 
≠
;

54 
˙t
;

56 
	`va_°¨t
(
≠
, 
fmt
);

57 
˙t
 = 
	`v˝rötf
(
fmt
, 
≠
);

58 
	`va_íd
(
≠
);

60  
˙t
;

61 
	}
}

	@lib/printfmt.c

5 
	~<öc/ty≥s.h
>

6 
	~<öc/°dio.h
>

7 
	~<öc/°rög.h
>

8 
	~<öc/°d¨g.h
>

9 
	~<öc/îr‹.h
>

21 c⁄° * c⁄° 
	gîr‹_°rög
[
MAXERROR
] =

23 [
E_UNSPECIFIED
] = "unspecifiedÉrror",

24 [
E_BAD_ENV
] = "badÉnvironment",

25 [
E_INVAL
] = "invalidÖarameter",

26 [
E_NO_MEM
] = "out of memory",

27 [
E_NO_FREE_ENV
] = "out ofÉnvironments",

28 [
E_FAULT
] = "segmentation fault",

29 [
E_IPC_NOT_RECV
]= "env isÇotÑecving",

30 [
E_EOF
] = "unexpectedÉnd of file",

31 [
E_NO_DISK
] = "no free space on disk",

32 [
E_MAX_OPEN
] = "too many filesáre open",

33 [
E_NOT_FOUND
] = "file or blockÇot found",

34 [
E_BAD_PATH
] = "invalidÖath",

35 [
E_FILE_EXISTS
] = "fileálreadyÉxists",

36 [
E_NOT_EXEC
] = "file isÇotá validÉxecutable",

37 [
E_NOT_SUPP
] = "operationÇot supported",

45 
¥öäum
((*
putch
)(, *), *
putd©
,

46 
num
, 
ba£
, 
width
, 
∑dc
)

49 i‡(
num
 >
ba£
) {

50 
	`¥öäum
(
putch
, 
putd©
, 
num
 / 
ba£
, ba£, 
width
 - 1, 
∑dc
);

53 --
width
 > 0)

54 
	`putch
(
∑dc
, 
putd©
);

58 
	`putch
("0123456789abcdef"[
num
 % 
ba£
], 
putd©
);

59 
	}
}

64 
	$gëuöt
(
va_li°
 *
≠
, 
lÊag
)

66 i‡(
lÊag
 >= 2)

67  
	`va_¨g
(*
≠
, );

68 i‡(
lÊag
)

69  
	`va_¨g
(*
≠
, );

71  
	`va_¨g
(*
≠
, );

72 
	}
}

77 
	$gëöt
(
va_li°
 *
≠
, 
lÊag
)

79 i‡(
lÊag
 >= 2)

80  
	`va_¨g
(*
≠
, );

81 i‡(
lÊag
)

82  
	`va_¨g
(*
≠
, );

84  
	`va_¨g
(*
≠
, );

85 
	}
}

89 
¥ötfmt
((*
putch
)(, *), *
putd©
, c⁄° *
fmt
, ...);

92 
	`v¥ötfmt
((*
putch
)(, *), *
putd©
, c⁄° *
fmt
, 
va_li°
 
≠
)

94 c⁄° *
p
;

95 
ch
, 
îr
;

96 
num
;

97 
ba£
, 
lÊag
, 
width
, 
¥ecisi⁄
, 
ÆtÊag
;

98 
∑dc
;

101 (
ch
 = *(*Ë
fmt
++) != '%') {

102 i‡(
ch
 == '\0')

104 
	`putch
(
ch
, 
putd©
);

108 
∑dc
 = ' ';

109 
width
 = -1;

110 
¥ecisi⁄
 = -1;

111 
lÊag
 = 0;

112 
ÆtÊag
 = 0;

113 
ªswôch
:

114 
ch
 = *(*Ë
fmt
++) {

118 
∑dc
 = '-';

119 
ªswôch
;

123 
∑dc
 = '0';

124 
ªswôch
;

136 
¥ecisi⁄
 = 0; ; ++
fmt
) {

137 
¥ecisi⁄
 =Öªcisi⁄ * 10 + 
ch
 - '0';

138 
ch
 = *
fmt
;

139 i‡(
ch
 < '0' || ch > '9')

142 
¥o˚ss_¥ecisi⁄
;

145 
¥ecisi⁄
 = 
	`va_¨g
(
≠
, );

146 
¥o˚ss_¥ecisi⁄
;

149 i‡(
width
 < 0)

150 
width
 = 0;

151 
ªswôch
;

154 
ÆtÊag
 = 1;

155 
ªswôch
;

157 
¥o˚ss_¥ecisi⁄
:

158 i‡(
width
 < 0)

159 
width
 = 
¥ecisi⁄
,Örecision = -1;

160 
ªswôch
;

164 
lÊag
++;

165 
ªswôch
;

169 
	`putch
(
	`va_¨g
(
≠
, ), 
putd©
);

174 
îr
 = 
	`va_¨g
(
≠
, );

175 i‡(
îr
 < 0)

176 
îr
 = -err;

177 i‡(
îr
 >
MAXERROR
 || (
p
 = 
îr‹_°rög
[îr]Ë=
NULL
)

178 
	`¥ötfmt
(
putch
, 
putd©
, "îr‹ %d", 
îr
);

180 
	`¥ötfmt
(
putch
, 
putd©
, "%s", 
p
);

185 i‡((
p
 = 
	`va_¨g
(
≠
, *)Ë=
NULL
)

186 
p
 = "(null)";

187 i‡(
width
 > 0 && 
∑dc
 != '-')

188 
width
 -
	`°∫Àn
(
p
, 
¥ecisi⁄
); width > 0; width--)

189 
	`putch
(
∑dc
, 
putd©
);

190 ; (
ch
 = *
p
++Ë!'\0' && (
¥ecisi⁄
 < 0 || --¥ecisi⁄ >0); 
width
--)

191 i‡(
ÆtÊag
 && (
ch
 < ' ' || ch > '~'))

192 
	`putch
('?', 
putd©
);

194 
	`putch
(
ch
, 
putd©
);

195 ; 
width
 > 0; width--)

196 
	`putch
(' ', 
putd©
);

201 
num
 = 
	`gëöt
(&
≠
, 
lÊag
);

202 i‡((Ë
num
 < 0) {

203 
	`putch
('-', 
putd©
);

204 
num
 = -()Çum;

206 
ba£
 = 10;

207 
numbî
;

211 
num
 = 
	`gëuöt
(&
≠
, 
lÊag
);

212 
ba£
 = 10;

213 
numbî
;

218 
num
 = 
	`gëuöt
(&
≠
, 
lÊag
);

219 
ba£
 = 8;

223 
numbî
;

227 
	`putch
('0', 
putd©
);

228 
	`putch
('x', 
putd©
);

229 
num
 = ()

230 (
uöçå_t
Ë
	`va_¨g
(
≠
, *);

231 
ba£
 = 16;

232 
numbî
;

236 
num
 = 
	`gëuöt
(&
≠
, 
lÊag
);

237 
ba£
 = 16;

238 
numbî
:

239 
	`¥öäum
(
putch
, 
putd©
, 
num
, 
ba£
, 
width
, 
∑dc
);

244 
	`putch
(
ch
, 
putd©
);

249 
	`putch
('%', 
putd©
);

250 
fmt
--; fmt[-1] != '%'; fmt--)

255 
	}
}

258 
¥ötfmt
((*
putch
)(, *), *
putd©
, c⁄° *
fmt
, ...)

260 
va_li°
 
≠
;

262 
	`va_°¨t
(
≠
, 
fmt
);

263 
	`v¥ötfmt
(
putch
, 
putd©
, 
fmt
, 
≠
);

264 
	`va_íd
(
≠
);

265 
	}
}

267 
	s•rötbuf
 {

268 *
	mbuf
;

269 *
	mebuf
;

270 
	m˙t
;

274 
	$•röçutch
(
ch
, 
•rötbuf
 *
b
)

276 
b
->
˙t
++;

277 i‡(
b
->
buf
 < b->
ebuf
)

278 *
b
->
buf
++ = 
ch
;

279 
	}
}

282 
	$v¢¥ötf
(*
buf
, 
n
, c⁄° *
fmt
, 
va_li°
 
≠
)

284 
•rötbuf
 
b
 = {
buf
, buf+
n
-1, 0};

286 i‡(
buf
 =
NULL
 || 
n
 < 1)

287  -
E_INVAL
;

290 
	`v¥ötfmt
((*)
•röçutch
, &
b
, 
fmt
, 
≠
);

293 *
b
.
buf
 = '\0';

295  
b
.
˙t
;

296 
	}
}

299 
	$¢¥ötf
(*
buf
, 
n
, c⁄° *
fmt
, ...)

301 
va_li°
 
≠
;

302 
rc
;

304 
	`va_°¨t
(
≠
, 
fmt
);

305 
rc
 = 
	`v¢¥ötf
(
buf
, 
n
, 
fmt
, 
≠
);

306 
	`va_íd
(
≠
);

308  
rc
;

309 
	}
}

	@lib/readline.c

1 
	~<öc/°dio.h
>

2 
	~<öc/îr‹.h
>

4 
	#BUFLEN
 1024

	)

5 
	gbuf
[
BUFLEN
];

8 
	$ªadlöe
(c⁄° *
¥om±
)

10 
i
, 
c
, 
echoög
;

12 #i‡
JOS_KERNEL


13 i‡(
¥om±
 !
NULL
)

14 
	`˝rötf
("%s", 
¥om±
);

16 i‡(
¥om±
 !
NULL
)

17 
	`Ârötf
(1, "%s", 
¥om±
);

20 
i
 = 0;

21 
echoög
 = 
	`isc⁄s
(0);

23 
c
 = 
	`gëch¨
();

24 i‡(
c
 < 0) {

25 i‡(
c
 !-
E_EOF
)

26 
	`˝rötf
("ªadÉº‹: %e\n", 
c
);

27  
NULL
;

28 } i‡((
c
 ='\b' || c ='\x7f'Ë&& 
i
 > 0) {

29 i‡(
echoög
)

30 
	`˝utch¨
('\b');

31 
i
--;

32 } i‡(
c
 >' ' && 
i
 < 
BUFLEN
-1) {

33 i‡(
echoög
)

34 
	`˝utch¨
(
c
);

35 
buf
[
i
++] = 
c
;

36 } i‡(
c
 == '\n' || c == '\r') {

37 i‡(
echoög
)

38 
	`˝utch¨
('\n');

39 
buf
[
i
] = 0;

40  
buf
;

43 
	}
}

	@lib/spawn.c

1 
	~<öc/lib.h
>

2 
	~<öc/ñf.h
>

4 
	#UTEMP2USTACK
(
addr
Ë((*Ë◊ddrË+ (
USTACKTOP
 - 
PGSIZE
Ë- 
UTEMP
)

	)

5 
	#UTEMP2
 (
UTEMP
 + 
PGSIZE
)

	)

6 
	#UTEMP3
 (
UTEMP2
 + 
PGSIZE
)

	)

9 
öô_°ack
(
ívid_t
 
chûd
, c⁄° **
¨gv
, 
uöçå_t
 *
öô_e•
);

10 
m≠_£gmít
(
ívid_t
 
chûd
, 
uöçå_t
 
va
, 
size_t
 
memsz
,

11 
fd
, 
size_t
 
fûesz
, 
off_t
 
fûeoff£t
, 
≥rm
);

12 
c›y_sh¨ed_∑ges
(
ívid_t
 
chûd
);

20 
	$•awn
(c⁄° *
¥og
, c⁄° **
¨gv
)

22 
ñf_buf
[512];

23 
Tøp‰ame
 
chûd_tf
;

24 
ívid_t
 
chûd
;

26 
fd
, 
i
, 
r
;

27 
Elf
 *
ñf
;

28 
Proghdr
 *
ph
;

29 
≥rm
;

88 i‡((
r
 = 
	`›í
(
¥og
, 
O_RDONLY
)) < 0)

89  
r
;

90 
fd
 = 
r
;

93 
ñf
 = (
Elf
*Ë
ñf_buf
;

94 i‡(
	`ªadn
(
fd
, 
ñf_buf
, (elf_buf)) != (elf_buf)

95 || 
ñf
->
e_magic
 !
ELF_MAGIC
) {

96 
	`˛o£
(
fd
);

97 
	`˝rötf
("ñ‡magi¯%08x w™à%08x\n", 
ñf
->
e_magic
, 
ELF_MAGIC
);

98  -
E_NOT_EXEC
;

102 i‡((
r
 = 
	`sys_exof‹k
()) < 0)

103  
r
;

104 
chûd
 = 
r
;

107 
chûd_tf
 = 
ívs
[
	`ENVX
(
chûd
)].
ív_tf
;

108 
chûd_tf
.
tf_eù
 = 
ñf
->
e_íåy
;

110 i‡((
r
 = 
	`öô_°ack
(
chûd
, 
¨gv
, &
chûd_tf
.
tf_e•
)) < 0)

111  
r
;

114 
ph
 = (
Proghdr
*Ë(
ñf_buf
 + 
ñf
->
e_phoff
);

115 
i
 = 0; i < 
ñf
->
e_phnum
; i++, 
ph
++) {

116 i‡(
ph
->
p_ty≥
 !
ELF_PROG_LOAD
)

118 
≥rm
 = 
PTE_P
 | 
PTE_U
;

119 i‡(
ph
->
p_Êags
 & 
ELF_PROG_FLAG_WRITE
)

120 
≥rm
 |
PTE_W
;

121 i‡((
r
 = 
	`m≠_£gmít
(
chûd
, 
ph
->
p_va
,Öh->
p_memsz
,

122 
fd
, 
ph
->
p_fûesz
,Öh->
p_off£t
, 
≥rm
)) < 0)

123 
îr‹
;

125 
	`˛o£
(
fd
);

126 
fd
 = -1;

129 i‡((
r
 = 
	`c›y_sh¨ed_∑ges
(
chûd
)) < 0)

130 
	`∑nic
("c›y_sh¨ed_∑ges: %e", 
r
);

132 i‡((
r
 = 
	`sys_ív_£t_å≠‰ame
(
chûd
, &
chûd_tf
)) < 0)

133 
	`∑nic
("sys_ív_£t_å≠‰ame: %e", 
r
);

135 i‡((
r
 = 
	`sys_ív_£t_°©us
(
chûd
, 
ENV_RUNNABLE
)) < 0)

136 
	`∑nic
("sys_ív_£t_°©us: %e", 
r
);

138  
chûd
;

140 
îr‹
:

141 
	`sys_ív_de°roy
(
chûd
);

142 
	`˛o£
(
fd
);

143  
r
;

144 
	}
}

150 
	$•aw∆
(c⁄° *
¥og
, c⁄° *
¨g0
, ...)

156 
¨gc
=0;

157 
va_li°
 
vl
;

158 
	`va_°¨t
(
vl
, 
¨g0
);

159 
	`va_¨g
(
vl
, *Ë!
NULL
)

160 
¨gc
++;

161 
	`va_íd
(
vl
);

165 c⁄° *
¨gv
[
¨gc
+2];

166 
¨gv
[0] = 
¨g0
;

167 
¨gv
[
¨gc
+1] = 
NULL
;

169 
	`va_°¨t
(
vl
, 
¨g0
);

170 
i
;

171 
i
=0;i<
¨gc
;i++)

172 
¨gv
[
i
+1] = 
	`va_¨g
(
vl
, const *);

173 
	`va_íd
(
vl
);

174  
	`•awn
(
¥og
, 
¨gv
);

175 
	}
}

186 
	$öô_°ack
(
ívid_t
 
chûd
, c⁄° **
¨gv
, 
uöçå_t
 *
öô_e•
)

188 
size_t
 
°rög_size
;

189 
¨gc
, 
i
, 
r
;

190 *
°rög_°‹e
;

191 
uöçå_t
 *
¨gv_°‹e
;

195 
°rög_size
 = 0;

196 
¨gc
 = 0; 
¨gv
[argc] != 0;árgc++)

197 
°rög_size
 +
	`°æí
(
¨gv
[
¨gc
]) + 1;

204 
°rög_°‹e
 = (*Ë
UTEMP
 + 
PGSIZE
 - 
°rög_size
;

207 
¨gv_°‹e
 = (
uöçå_t
*Ë(
	`ROUNDDOWN
(
°rög_°‹e
, 4Ë- 4 * (
¨gc
 + 1));

211 i‡((*Ë(
¨gv_°‹e
 - 2Ë< (*Ë
UTEMP
)

212  -
E_NO_MEM
;

215 i‡((
r
 = 
	`sys_∑ge_Æloc
(0, (*Ë
UTEMP
, 
PTE_P
|
PTE_U
|
PTE_W
)) < 0)

216  
r
;

235 
i
 = 0; i < 
¨gc
; i++) {

236 
¨gv_°‹e
[
i
] = 
	`UTEMP2USTACK
(
°rög_°‹e
);

237 
	`°r˝y
(
°rög_°‹e
, 
¨gv
[
i
]);

238 
°rög_°‹e
 +
	`°æí
(
¨gv
[
i
]) + 1;

240 
¨gv_°‹e
[
¨gc
] = 0;

241 
	`as£π
(
°rög_°‹e
 =(*)
UTEMP
 + 
PGSIZE
);

243 
¨gv_°‹e
[-1] = 
	`UTEMP2USTACK
(argv_store);

244 
¨gv_°‹e
[-2] = 
¨gc
;

246 *
öô_e•
 = 
	`UTEMP2USTACK
(&
¨gv_°‹e
[-2]);

250 i‡((
r
 = 
	`sys_∑ge_m≠
(0, 
UTEMP
, 
chûd
, (*Ë(
USTACKTOP
 - 
PGSIZE
), 
PTE_P
 | 
PTE_U
 | 
PTE_W
)) < 0)

251 
îr‹
;

252 i‡((
r
 = 
	`sys_∑ge_unm≠
(0, 
UTEMP
)) < 0)

253 
îr‹
;

257 
îr‹
:

258 
	`sys_∑ge_unm≠
(0, 
UTEMP
);

259  
r
;

260 
	}
}

263 
	$m≠_£gmít
(
ívid_t
 
chûd
, 
uöçå_t
 
va
, 
size_t
 
memsz
,

264 
fd
, 
size_t
 
fûesz
, 
off_t
 
fûeoff£t
, 
≥rm
)

266 
i
, 
r
;

267 *
blk
;

271 i‡((
i
 = 
	`PGOFF
(
va
))) {

272 
va
 -
i
;

273 
memsz
 +
i
;

274 
fûesz
 +
i
;

275 
fûeoff£t
 -
i
;

278 
i
 = 0; i < 
memsz
; i +
PGSIZE
) {

279 i‡(
i
 >
fûesz
) {

281 i‡((
r
 = 
	`sys_∑ge_Æloc
(
chûd
, (*Ë(
va
 + 
i
), 
≥rm
)) < 0)

282  
r
;

285 i‡((
r
 = 
	`sys_∑ge_Æloc
(0, 
UTEMP
, 
PTE_P
|
PTE_U
|
PTE_W
)) < 0)

286  
r
;

287 i‡((
r
 = 
	`£ek
(
fd
, 
fûeoff£t
 + 
i
)) < 0)

288  
r
;

289 i‡((
r
 = 
	`ªadn
(
fd
, 
UTEMP
, 
	`MIN
(
PGSIZE
, 
fûesz
-
i
))) < 0)

290  
r
;

291 i‡((
r
 = 
	`sys_∑ge_m≠
(0, 
UTEMP
, 
chûd
, (*Ë(
va
 + 
i
), 
≥rm
)) < 0)

292 
	`∑nic
("•awn: sys_∑ge_m≠ d©a: %e", 
r
);

293 
	`sys_∑ge_unm≠
(0, 
UTEMP
);

297 
	}
}

301 
	$c›y_sh¨ed_∑ges
(
ívid_t
 
chûd
)

305 
	}
}

	@lib/string.c

3 
	~<öc/°rög.h
>

9 
	#ASM
 1

	)

12 
	$°æí
(c⁄° *
s
)

14 
n
;

16 
n
 = 0; *
s
 != '\0'; s++)

17 
n
++;

18  
n
;

19 
	}
}

22 
	$°∫Àn
(c⁄° *
s
, 
size_t
 
size
)

24 
n
;

26 
n
 = 0; 
size
 > 0 && *
s
 != '\0'; s++, size--)

27 
n
++;

28  
n
;

29 
	}
}

32 
	$°r˝y
(*
d°
, c⁄° *
§c
)

34 *
ªt
;

36 
ªt
 = 
d°
;

37 (*
d°
++ = *
§c
++) != '\0')

39  
ªt
;

40 
	}
}

43 
	$°rˇt
(*
d°
, c⁄° *
§c
)

45 
Àn
 = 
	`°æí
(
d°
);

46 
	`°r˝y
(
d°
 + 
Àn
, 
§c
);

47  
d°
;

48 
	}
}

51 
	$°∫˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
size
) {

52 
size_t
 
i
;

53 *
ªt
;

55 
ªt
 = 
d°
;

56 
i
 = 0; i < 
size
; i++) {

57 *
d°
++ = *
§c
;

59 i‡(*
§c
 != '\0')

60 
§c
++;

62  
ªt
;

63 
	}
}

65 
size_t


66 
	$°æ˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
size
)

68 *
d°_ö
;

70 
d°_ö
 = 
d°
;

71 i‡(
size
 > 0) {

72 --
size
 > 0 && *
§c
 != '\0')

73 *
d°
++ = *
§c
++;

74 *
d°
 = '\0';

76  
d°
 - 
d°_ö
;

77 
	}
}

80 
	$°rcmp
(c⁄° *
p
, c⁄° *
q
)

82 *
p
 && *∞=*
q
)

83 
p
++, 
q
++;

84  (Ë((Ë*
p
 - (Ë*
q
);

85 
	}
}

88 
	$°∫cmp
(c⁄° *
p
, c⁄° *
q
, 
size_t
 
n
)

90 
n
 > 0 && *
p
 && *∞=*
q
)

91 
n
--, 
p
++, 
q
++;

92 i‡(
n
 == 0)

95  (Ë((Ë*
p
 - (Ë*
q
);

96 
	}
}

101 
	$°rchr
(c⁄° *
s
, 
c
)

103 ; *
s
; s++)

104 i‡(*
s
 =
c
)

105  (*Ë
s
;

107 
	}
}

112 
	$°rföd
(c⁄° *
s
, 
c
)

114 ; *
s
; s++)

115 i‡(*
s
 =
c
)

117  (*Ë
s
;

118 
	}
}

120 #i‡
ASM


122 
	$mem£t
(*
v
, 
c
, 
size_t
 
n
)

124 *
p
;

126 i‡(
n
 == 0)

127  
v
;

128 i‡(()
v
%4 =0 && 
n
%4 == 0) {

129 
c
 &= 0xFF;

130 
c
 = (c<<24)|(c<<16)|(c<<8)|c;

131 
asm
 volatile("cld;Ñep stosl\n"

132 :: "D" (
v
), "a" (
c
), "c" (
n
/4)

135 
asm
 volatile("cld;Ñep stosb\n"

136 :: "D" (
v
), "a" (
c
), "c" (
n
)

138  
v
;

139 
	}
}

142 
	$memmove
(*
d°
, c⁄° *
§c
, 
size_t
 
n
)

144 c⁄° *
s
;

145 *
d
;

147 
s
 = 
§c
;

148 
d
 = 
d°
;

149 i‡(
s
 < 
d
 && s + 
n
 > d) {

150 
s
 +
n
;

151 
d
 +
n
;

152 i‡(()
s
%4 =0 && ()
d
%4 =0 && 
n
%4 == 0)

153 
asm
 volatile("std;Ñep movsl\n"

154 :: "D" (
d
-4), "S" (
s
-4), "c" (
n
/4) : "cc", "memory");

156 
asm
 volatile("std;Ñep movsb\n"

157 :: "D" (
d
-1), "S" (
s
-1), "c" (
n
) : "cc", "memory");

159 
asm
 volatile("cld" ::: "cc");

161 i‡(()
s
%4 =0 && ()
d
%4 =0 && 
n
%4 == 0)

162 
asm
 volatile("cld;Ñep movsl\n"

163 :: "D" (
d
), "S" (
s
), "c" (
n
/4) : "cc", "memory");

165 
asm
 volatile("cld;Ñep movsb\n"

166 :: "D" (
d
), "S" (
s
), "c" (
n
) : "cc", "memory");

168  
d°
;

169 
	}
}

174 
	$mem£t
(*
v
, 
c
, 
size_t
 
n
)

176 *
p
;

177 
m
;

179 
p
 = 
v
;

180 
m
 = 
n
;

181 --
m
 >= 0)

182 *
p
++ = 
c
;

184  
v
;

185 
	}
}

188 
	$memmove
(*
d°
, c⁄° *
§c
, 
size_t
 
n
)

190 c⁄° *
s
;

191 *
d
;

193 
s
 = 
§c
;

194 
d
 = 
d°
;

195 i‡(
s
 < 
d
 && s + 
n
 > d) {

196 
s
 +
n
;

197 
d
 +
n
;

198 
n
-- > 0)

199 *--
d
 = *--
s
;

201 
n
-- > 0)

202 *
d
++ = *
s
++;

204  
d°
;

205 
	}
}

209 
	$mem˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
n
)

211  
	`memmove
(
d°
, 
§c
, 
n
);

212 
	}
}

215 
	$memcmp
(c⁄° *
v1
, c⁄° *
v2
, 
size_t
 
n
)

217 c⁄° 
uöt8_t
 *
s1
 = (c⁄° uöt8_à*Ë
v1
;

218 c⁄° 
uöt8_t
 *
s2
 = (c⁄° uöt8_à*Ë
v2
;

220 
n
-- > 0) {

221 i‡(*
s1
 !*
s2
)

222  (Ë*
s1
 - (Ë*
s2
;

223 
s1
++, 
s2
++;

227 
	}
}

230 
	$memföd
(c⁄° *
s
, 
c
, 
size_t
 
n
)

232 c⁄° *
íds
 = (c⁄° *Ë
s
 + 
n
;

233 ; 
s
 < 
íds
; s++)

234 i‡(*(c⁄° *Ë
s
 =(Ë
c
)

236  (*Ë
s
;

237 
	}
}

240 
	$°πﬁ
(c⁄° *
s
, **
íd±r
, 
ba£
)

242 
√g
 = 0;

243 
vÆ
 = 0;

246 *
s
 == ' ' || *s == '\t')

247 
s
++;

250 i‡(*
s
 == '+')

251 
s
++;

252 i‡(*
s
 == '-')

253 
s
++, 
√g
 = 1;

256 i‡((
ba£
 =0 || ba£ =16Ë&& (
s
[0] == '0' && s[1] == 'x'))

257 
s
 +2, 
ba£
 = 16;

258 i‡(
ba£
 =0 && 
s
[0] == '0')

259 
s
++, 
ba£
 = 8;

260 i‡(
ba£
 == 0)

261 
ba£
 = 10;

265 
dig
;

267 i‡(*
s
 >= '0' && *s <= '9')

268 
dig
 = *
s
 - '0';

269 i‡(*
s
 >= 'a' && *s <= 'z')

270 
dig
 = *
s
 - 'a' + 10;

271 i‡(*
s
 >= 'A' && *s <= 'Z')

272 
dig
 = *
s
 - 'A' + 10;

275 i‡(
dig
 >
ba£
)

277 
s
++, 
vÆ
 = (vÆ * 
ba£
Ë+ 
dig
;

281 i‡(
íd±r
)

282 *
íd±r
 = (*Ë
s
;

283  (
√g
 ? -
vÆ
 : val);

284 
	}
}

	@lib/syscall.c

3 
	~<öc/sysˇŒ.h
>

4 
	~<öc/lib.h
>

6 
ölöe
 
öt32_t


7 
	$sysˇŒ
(
num
, 
check
, 
uöt32_t
 
a1
, uöt32_à
a2
, uöt32_à
a3
, uöt32_à
a4
, uöt32_à
a5
)

9 
öt32_t
 
ªt
;

23 
asm
 volatile("int %1\n"

24 : "˜" (
ªt
)

25 : "i" (
T_SYSCALL
),

26 "a" (
num
),

27 "d" (
a1
),

28 "c" (
a2
),

29 "b" (
a3
),

30 "D" (
a4
),

31 "S" (
a5
)

34 if(
check
 && 
ªt
 > 0)

35 
	`∑nic
("sysˇŒ %dÑëu∫ed %d (> 0)", 
num
, 
ªt
);

37  
ªt
;

38 
	}
}

41 
	$sys_˝uts
(c⁄° *
s
, 
size_t
 
Àn
)

43 
	`sysˇŒ
(
SYS_˝uts
, 0, (
uöt32_t
)
s
, 
Àn
, 0, 0, 0);

44 
	}
}

47 
	$sys_cgëc
()

49  
	`sysˇŒ
(
SYS_cgëc
, 0, 0, 0, 0, 0, 0);

50 
	}
}

53 
	$sys_ív_de°roy
(
ívid_t
 
ívid
)

55  
	`sysˇŒ
(
SYS_ív_de°roy
, 1, 
ívid
, 0, 0, 0, 0);

56 
	}
}

58 
ívid_t


59 
	$sys_gëívid
()

61  
	`sysˇŒ
(
SYS_gëívid
, 0, 0, 0, 0, 0, 0);

62 
	}
}

65 
	$sys_yõld
()

67 
	`sysˇŒ
(
SYS_yõld
, 0, 0, 0, 0, 0, 0);

68 
	}
}

71 
	$sys_∑ge_Æloc
(
ívid_t
 
ívid
, *
va
, 
≥rm
)

73  
	`sysˇŒ
(
SYS_∑ge_Æloc
, 1, 
ívid
, (
uöt32_t
Ë
va
, 
≥rm
, 0, 0);

74 
	}
}

77 
	$sys_∑ge_m≠
(
ívid_t
 
§˚nv
, *
§cva
,Énvid_à
d°ív
, *
d°va
, 
≥rm
)

79  
	`sysˇŒ
(
SYS_∑ge_m≠
, 1, 
§˚nv
, (
uöt32_t
Ë
§cva
, 
d°ív
, (uöt32_tË
d°va
, 
≥rm
);

80 
	}
}

83 
	$sys_∑ge_unm≠
(
ívid_t
 
ívid
, *
va
)

85  
	`sysˇŒ
(
SYS_∑ge_unm≠
, 1, 
ívid
, (
uöt32_t
Ë
va
, 0, 0, 0);

86 
	}
}

91 
	$sys_ív_£t_°©us
(
ívid_t
 
ívid
, 
°©us
)

93  
	`sysˇŒ
(
SYS_ív_£t_°©us
, 1, 
ívid
, 
°©us
, 0, 0, 0);

94 
	}
}

97 
	$sys_ív_£t_å≠‰ame
(
ívid_t
 
ívid
, 
Tøp‰ame
 *
tf
)

99  
	`sysˇŒ
(
SYS_ív_£t_å≠‰ame
, 1, 
ívid
, (
uöt32_t
Ë
tf
, 0, 0, 0);

100 
	}
}

103 
	$sys_ív_£t_pgÁu…_upˇŒ
(
ívid_t
 
ívid
, *
upˇŒ
)

105  
	`sysˇŒ
(
SYS_ív_£t_pgÁu…_upˇŒ
, 1, 
ívid
, (
uöt32_t
Ë
upˇŒ
, 0, 0, 0);

106 
	}
}

109 
	$sys_ùc_åy_£nd
(
ívid_t
 
ívid
, 
uöt32_t
 
vÆue
, *
§cva
, 
≥rm
)

111  
	`sysˇŒ
(
SYS_ùc_åy_£nd
, 0, 
ívid
, 
vÆue
, (
uöt32_t
Ë
§cva
, 
≥rm
, 0);

112 
	}
}

115 
	$sys_ùc_ªcv
(*
d°va
)

117  
	`sysˇŒ
(
SYS_ùc_ªcv
, 1, (
uöt32_t
)
d°va
, 0, 0, 0, 0);

118 
	}
}

121 
	$sys_ív_£t_¥i‹ôy
(
ívid_t
 
ívid
,
¥i‹ôy
)

123  
	`sysˇŒ
(
SYS_ív_£t_¥i‹ôy
,1,
ívid
,
¥i‹ôy
,0,0,0);

124 
	}
}

	@lib/wait.c

1 
	~<öc/lib.h
>

5 
	$waô
(
ívid_t
 
ívid
)

7 c⁄° vﬁ©ûê
Env
 *
e
;

9 
	`as£π
(
ívid
 != 0);

10 
e
 = &
ívs
[
	`ENVX
(
ívid
)];

11 
e
->
ív_id
 =
ívid
 &&É->
ív_°©us
 !
ENV_FREE
)

12 
	`sys_yõld
();

13 
	}
}

	@user/badsegment.c

3 
	~<öc/lib.h
>

6 
	$umaö
(
¨gc
, **
¨gv
)

9 
asm
 volatile("movw $0x28,%ax; movw %ax,%ds");

10 
	}
}

	@user/breakpoint.c

3 
	~<öc/lib.h
>

6 
	$umaö
(
¨gc
, **
¨gv
)

8 
	`˝rötf
("this is before int 3\n");

9 
asm
 volatile("int $3");

10 
	`˝rötf
("this isáfter int 3(1)\n");

11 
	`˝rötf
("this isáfter int 3(2)\n");

13 
	}
}

	@user/buggyhello.c

4 
	~<öc/lib.h
>

7 
	$umaö
(
¨gc
, **
¨gv
)

9 
	`sys_˝uts
((*)1, 1);

10 
	}
}

	@user/buggyhello2.c

4 
	~<öc/lib.h
>

6 c⁄° *
	ghñlo
 = "hello, world\n";

9 
	$umaö
(
¨gc
, **
¨gv
)

11 
	`sys_˝uts
(
hñlo
, 1024*1024);

12 
	}
}

	@user/cat.c

1 
	~<öc/lib.h
>

3 
	gbuf
[8192];

6 
	$ˇt
(
f
, *
s
)

8 
n
;

9 
r
;

11 (
n
 = 
	`ªad
(
f
, 
buf
, ()(buf))) > 0)

12 i‡((
r
 = 
	`wrôe
(1, 
buf
, 
n
)) !=Ç)

13 
	`∑nic
("wrôêîr‹ c›yög %s: %e", 
s
, 
r
);

14 i‡(
n
 < 0)

15 
	`∑nic
("îr‹Ñódög %s: %e", 
s
, 
n
);

16 
	}
}

19 
	$umaö
(
¨gc
, **
¨gv
)

21 
f
, 
i
;

23 
bö¨y«me
 = "cat";

24 i‡(
¨gc
 == 1)

25 
	`ˇt
(0, "<stdin>");

27 
i
 = 1; i < 
¨gc
; i++) {

28 
f
 = 
	`›í
(
¨gv
[
i
], 
O_RDONLY
);

29 i‡(
f
 < 0)

30 
	`¥ötf
("ˇn'à›í %s: %e\n", 
¨gv
[
i
], 
f
);

32 
	`ˇt
(
f
, 
¨gv
[
i
]);

33 
	`˛o£
(
f
);

36 
	}
}

	@user/divzero.c

3 
	~<öc/lib.h
>

5 
	gzîo
;

8 
	$umaö
(
¨gc
, **
¨gv
)

10 
zîo
 = 0;

11 
	`˝rötf
("1/0 i†%08x!\n", 1/
zîo
);

12 
	}
}

	@user/dumbfork.c

4 
	~<öc/°rög.h
>

5 
	~<öc/lib.h
>

7 
ívid_t
 
dumbf‹k
();

10 
	$umaö
(
¨gc
, **
¨gv
)

12 
ívid_t
 
who
;

13 
i
;

16 
who
 = 
	`dumbf‹k
();

19 
i
 = 0; i < (
who
 ? 10 : 20); i++) {

20 
	`˝rötf
("%d: IámÅhê%s!\n", 
i
, 
who
 ? "parent" : "child");

21 
	`sys_yõld
();

23 
	}
}

26 
	$duµage
(
ívid_t
 
d°ív
, *
addr
)

28 
r
;

31 i‡((
r
 = 
	`sys_∑ge_Æloc
(
d°ív
, 
addr
, 
PTE_P
|
PTE_U
|
PTE_W
)) < 0)

32 
	`∑nic
("sys_∑ge_Æloc: %e", 
r
);

33 i‡((
r
 = 
	`sys_∑ge_m≠
(
d°ív
, 
addr
, 0, 
UTEMP
, 
PTE_P
|
PTE_U
|
PTE_W
)) < 0)

34 
	`∑nic
("sys_∑ge_m≠: %e", 
r
);

35 
	`memmove
(
UTEMP
, 
addr
, 
PGSIZE
);

36 i‡((
r
 = 
	`sys_∑ge_unm≠
(0, 
UTEMP
)) < 0)

37 
	`∑nic
("sys_∑ge_unm≠: %e", 
r
);

38 
	}
}

40 
ívid_t


41 
	$dumbf‹k
()

43 
ívid_t
 
ívid
;

44 
uöt8_t
 *
addr
;

45 
r
;

46 
íd
[];

53 
ívid
 = 
	`sys_exof‹k
();

54 i‡(
ívid
 < 0)

55 
	`∑nic
("sys_exof‹k: %e", 
ívid
);

56 i‡(
ívid
 == 0) {

61 
thi£nv
 = &
ívs
[
	`ENVX
(
	`sys_gëívid
())];

68 
addr
 = (
uöt8_t
*Ë
UTEXT
;ádd∏< 
íd
;ádd∏+
PGSIZE
)

69 
	`duµage
(
ívid
, 
addr
);

72 
	`duµage
(
ívid
, 
	`ROUNDDOWN
(&
addr
, 
PGSIZE
));

75 i‡((
r
 = 
	`sys_ív_£t_°©us
(
ívid
, 
ENV_RUNNABLE
)) < 0)

76 
	`∑nic
("sys_ív_£t_°©us: %e", 
r
);

78  
ívid
;

79 
	}
}

	@user/echo.c

1 
	~<öc/lib.h
>

4 
	$umaö
(
¨gc
, **
¨gv
)

6 
i
, 
nÊag
;

8 
nÊag
 = 0;

9 i‡(
¨gc
 > 1 && 
	`°rcmp
(
¨gv
[1], "-n") == 0) {

10 
nÊag
 = 1;

11 
¨gc
--;

12 
¨gv
++;

14 
i
 = 1; i < 
¨gc
; i++) {

15 i‡(
i
 > 1)

16 
	`wrôe
(1, " ", 1);

17 
	`wrôe
(1, 
¨gv
[
i
], 
	`°æí
(argv[i]));

19 i‡(!
nÊag
)

20 
	`wrôe
(1, "\n", 1);

21 
	}
}

	@user/evilhello.c

4 
	~<öc/lib.h
>

7 
	$umaö
(
¨gc
, **
¨gv
)

10 
	`sys_˝uts
((*)0xf010000c, 100);

11 
	}
}

	@user/fairness.c

5 
	~<öc/lib.h
>

8 
	$umaö
(
¨gc
, **
¨gv
)

10 
ívid_t
 
who
, 
id
;

12 
id
 = 
	`sys_gëívid
();

14 i‡(
thi£nv
 =&
ívs
[1]) {

16 
	`ùc_ªcv
(&
who
, 0, 0);

17 
	`˝rötf
("%xÑecv from %x\n", 
id
, 
who
);

20 
	`˝rötf
("%xÜo› sídögÅÿ%x\n", 
id
, 
ívs
[1].
ív_id
);

22 
	`ùc_£nd
(
ívs
[1].
ív_id
, 0, 0, 0);

24 
	}
}

	@user/faultalloc.c

3 
	~<öc/lib.h
>

6 
	$h™dÀr
(
UTøp‰ame
 *
utf
)

8 
r
;

9 *
addr
 = (*)
utf
->
utf_Áu…_va
;

11 
	`˝rötf
("Áu… %x\n", 
addr
);

12 i‡((
r
 = 
	`sys_∑ge_Æloc
(0, 
	`ROUNDDOWN
(
addr
, 
PGSIZE
),

13 
PTE_P
|
PTE_U
|
PTE_W
)) < 0)

14 
	`∑nic
("Æloˇtögáà%x i¿∑gêÁu… h™dÀr: %e", 
addr
, 
r
);

15 
	`¢¥ötf
((*Ë
addr
, 100, "this string was faulted inát %x",áddr);

16 
	}
}

19 
	$umaö
(
¨gc
, **
¨gv
)

21 
	`£t_pgÁu…_h™dÀr
(
h™dÀr
);

22 
	`˝rötf
("%s\n", (*)0xDeadBeef);

23 
	`˝rötf
("%s\n", (*)0xCafeBffe);

24 
	}
}

	@user/faultallocbad.c

4 
	~<öc/lib.h
>

7 
	$h™dÀr
(
UTøp‰ame
 *
utf
)

9 
r
;

10 *
addr
 = (*)
utf
->
utf_Áu…_va
;

12 
	`˝rötf
("Áu… %x\n", 
addr
);

13 i‡((
r
 = 
	`sys_∑ge_Æloc
(0, 
	`ROUNDDOWN
(
addr
, 
PGSIZE
),

14 
PTE_P
|
PTE_U
|
PTE_W
)) < 0)

15 
	`∑nic
("Æloˇtögáà%x i¿∑gêÁu… h™dÀr: %e", 
addr
, 
r
);

16 
	`¢¥ötf
((*Ë
addr
, 100, "this string was faulted inát %x",áddr);

17 
	}
}

20 
	$umaö
(
¨gc
, **
¨gv
)

22 
	`£t_pgÁu…_h™dÀr
(
h™dÀr
);

23 
	`sys_˝uts
((*)0xDEADBEEF, 4);

24 
	}
}

	@user/faultbadhandler.c

6 
	~<öc/lib.h
>

9 
	$umaö
(
¨gc
, **
¨gv
)

11 
	`sys_∑ge_Æloc
(0, (*Ë(
UXSTACKTOP
 - 
PGSIZE
), 
PTE_P
|
PTE_U
|
PTE_W
);

12 
	`sys_ív_£t_pgÁu…_upˇŒ
(0, (*) 0xDeadBeef);

14 
	}
}

	@user/faultdie.c

3 
	~<öc/lib.h
>

6 
	$h™dÀr
(
UTøp‰ame
 *
utf
)

8 *
addr
 = (*)
utf
->
utf_Áu…_va
;

9 
uöt32_t
 
îr
 = 
utf
->
utf_îr
;

10 
	`˝rötf
("òÁu…edáàv®%x,Éº %x\n", 
addr
, 
îr
 & 7);

11 
	`sys_ív_de°roy
(
	`sys_gëívid
());

12 
	}
}

15 
	$umaö
(
¨gc
, **
¨gv
)

17 
	`£t_pgÁu…_h™dÀr
(
h™dÀr
);

19 
	}
}

	@user/faultevilhandler.c

3 
	~<öc/lib.h
>

6 
	$umaö
(
¨gc
, **
¨gv
)

8 
	`sys_∑ge_Æloc
(0, (*Ë(
UXSTACKTOP
 - 
PGSIZE
), 
PTE_P
|
PTE_U
|
PTE_W
);

9 
	`sys_ív_£t_pgÁu…_upˇŒ
(0, (*) 0xF0100020);

11 
	}
}

	@user/faultnostack.c

3 
	~<öc/lib.h
>

5 
_pgÁu…_upˇŒ
();

8 
	$umaö
(
¨gc
, **
¨gv
)

10 
	`sys_ív_£t_pgÁu…_upˇŒ
(0, (*Ë
_pgÁu…_upˇŒ
);

12 
	}
}

	@user/faultread.c

3 
	~<öc/lib.h
>

6 
	$umaö
(
¨gc
, **
¨gv
)

8 
	`˝rötf
("IÑead %08x fromÜocation 0!\n", *(*)0);

9 
	}
}

	@user/faultreadkernel.c

3 
	~<öc/lib.h
>

6 
	$umaö
(
¨gc
, **
¨gv
)

8 
	`˝rötf
("IÑead %08x fromÜocation 0xf0100000!\n", *(*)0xf0100000);

9 
	}
}

	@user/faultregs.c

3 
	~<öc/lib.h
>

5 
	sªgs


7 
PushRegs
 
	mªgs
;

8 
uöçå_t
 
	meù
;

9 
uöt32_t
 
	meÊags
;

10 
uöçå_t
 
	me•
;

13 
	#SAVE_REGS
(
ba£
) \

14 "\tmov»%%edi, "
ba£
"+0x00\n" \

15 "\tmov»%%esi, "
ba£
"+0x04\n" \

16 "\tmov»%%ebp, "
ba£
"+0x08\n" \

17 "\tmov»%%ebx, "
ba£
"+0x10\n" \

18 "\tmov»%%edx, "
ba£
"+0x14\n" \

19 "\tmov»%%ecx, "
ba£
"+0x18\n" \

20 "\tmov»%%óx, "
ba£
"+0x1c\n" \

21 "\tmov»%%e•, "
ba£
"+0x28\n"

	)

23 
	#LOAD_REGS
(
ba£
) \

24 "\tmov»"
ba£
"+0x00, %%edi\n" \

25 "\tmov»"
ba£
"+0x04, %%esi\n" \

26 "\tmov»"
ba£
"+0x08, %%ebp\n" \

27 "\tmov»"
ba£
"+0x10, %%ebx\n" \

28 "\tmov»"
ba£
"+0x14, %%edx\n" \

29 "\tmov»"
ba£
"+0x18, %%ecx\n" \

30 "\tmov»"
ba£
"+0x1c, %%eax\n" \

31 "\tmov»"
ba£
"+0x28, %%e•\n"

	)

33 
ªgs
 
	gbef‹e
, 
	gdurög
, 
	ga·î
;

36 
	$check_ªgs
(
ªgs
* 
a
, c⁄° *
™
, ªgs* 
b
, c⁄° *
bn
,

37 c⁄° *
ã°«me
)

39 
mism©ch
 = 0;

41 
	`˝rötf
("%-6†%-8†%-8s\n", "", 
™
, 
bn
);

43 
	#CHECK
(
«me
, 
fõld
) \

45 
	`˝rötf
("%-6†%08x %08x ", #«me, 
a
->
fõld
, 
b
->field); \

46 i‡(
a
->
fõld
 =
b
->field) \

47 
	`˝rötf
("OK\n"); \

49 
	`˝rötf
("MISMATCH\n"); \

50 
mism©ch
 = 1; \

52 } 0)

	)

54 
	`CHECK
(
edi
, 
ªgs
.
ªg_edi
);

55 
	`CHECK
(
esi
, 
ªgs
.
ªg_esi
);

56 
	`CHECK
(
ebp
, 
ªgs
.
ªg_ebp
);

57 
	`CHECK
(
ebx
, 
ªgs
.
ªg_ebx
);

58 
	`CHECK
(
edx
, 
ªgs
.
ªg_edx
);

59 
	`CHECK
(
ecx
, 
ªgs
.
ªg_ecx
);

60 
	`CHECK
(
óx
, 
ªgs
.
ªg_óx
);

61 
	`CHECK
(
eù
,Éip);

62 
	`CHECK
(
eÊags
,Éflags);

63 
	`CHECK
(
e•
,Ésp);

65 #unde‡
CHECK


67 
	`˝rötf
("Regi°î†%†", 
ã°«me
);

68 i‡(!
mism©ch
)

69 
	`˝rötf
("OK\n");

71 
	`˝rötf
("MISMATCH\n");

72 
	}
}

75 
	$pgÁu…
(
UTøp‰ame
 *
utf
)

77 
r
;

79 i‡(
utf
->
utf_Áu…_va
 !(
uöt32_t
)
UTEMP
)

80 
	`∑nic
("pgfaultÉxpectedát UTEMP, got 0x%08x (eip %08x)",

81 
utf
->
utf_Áu…_va
, utf->
utf_eù
);

84 
durög
.
ªgs
 = 
utf
->
utf_ªgs
;

85 
durög
.
eù
 = 
utf
->
utf_eù
;

86 
durög
.
eÊags
 = 
utf
->
utf_eÊags
;

87 
durög
.
e•
 = 
utf
->
utf_e•
;

88 
	`check_ªgs
(&
bef‹e
, "bef‹e", &
durög
, "during", "in UTrapframe");

91 i‡((
r
 = 
	`sys_∑ge_Æloc
(0, 
UTEMP
, 
PTE_U
|
PTE_P
|
PTE_W
)) < 0)

92 
	`∑nic
("sys_∑ge_Æloc: %e", 
r
);

93 
	}
}

96 
	$umaö
(
¨gc
, **
¨gv
)

98 
	`£t_pgÁu…_h™dÀr
(
pgÁu…
);

100 
__asm
 
	`__vﬁ©ûe
(

117 
	`SAVE_REGS
("%0")

123 
	`SAVE_REGS
("%1")

127 
	`LOAD_REGS
("%0")

136 : : "m" (
bef‹e
), "m" (
a·î
) : "memory", "cc");

141 i‡(*(*)
UTEMP
 != 42)

142 
	`˝rötf
("EIPáfterÖage-fault MISMATCH\n");

143 
a·î
.
eù
 = 
bef‹e
.eip;

145 
	`check_ªgs
(&
bef‹e
, "bef‹e", &
a·î
, "after", "afterÖage-fault");

146 
	}
}

	@user/faultwrite.c

3 
	~<öc/lib.h
>

6 
	$umaö
(
¨gc
, **
¨gv
)

9 
	}
}

	@user/faultwritekernel.c

3 
	~<öc/lib.h
>

6 
	$umaö
(
¨gc
, **
¨gv
)

9 
	}
}

	@user/forktree.c

3 
	~<öc/lib.h
>

5 
	#DEPTH
 3

	)

7 
f‹kåì
(c⁄° *
cur
);

10 
	$f‹kchûd
(c⁄° *
cur
, 
bønch
)

12 
nxt
[
DEPTH
+1];

14 i‡(
	`°æí
(
cur
Ë>
DEPTH
)

17 
	`¢¥ötf
(
nxt
, 
DEPTH
+1, "%s%c", 
cur
, 
bønch
);

18 i‡(
	`f‹k
() == 0) {

19 
	`f‹kåì
(
nxt
);

20 
	`exô
();

22 
	}
}

25 
	$f‹kåì
(c⁄° *
cur
)

27 
	`˝rötf
("%04x: Iám '%s'\n", 
	`sys_gëívid
(), 
cur
);

29 
	`f‹kchûd
(
cur
, '0');

30 
	`f‹kchûd
(
cur
, '1');

31 
	}
}

34 
	$umaö
(
¨gc
, **
¨gv
)

36 
	`f‹kåì
("");

37 
	}
}

	@user/hello.c

2 
	~<öc/lib.h
>

5 
	$umaö
(
¨gc
, **
¨gv
)

7 
	`˝rötf
("hello, world\n");

8 
	`˝rötf
("òamÉnvú⁄míà%08x\n", 
thi£nv
->
ív_id
);

9 
	}
}

	@user/icode.c

1 
	~<öc/lib.h
>

4 
	$umaö
(
¨gc
, **
¨gv
)

6 
fd
, 
n
, 
r
;

7 
buf
[512+1];

9 
bö¨y«me
 = "icode";

11 
	`˝rötf
("icode startup\n");

13 
	`˝rötf
("icode: open /motd\n");

14 i‡((
fd
 = 
	`›í
("/mŸd", 
O_RDONLY
)) < 0)

15 
	`∑nic
("icode: o≥¿/mŸd: %e", 
fd
);

17 
	`˝rötf
("icode:Ñead /motd\n");

18 (
n
 = 
	`ªad
(
fd
, 
buf
,  buf-1)) > 0)

19 
	`sys_˝uts
(
buf
, 
n
);

21 
	`˝rötf
("icode: close /motd\n");

22 
	`˛o£
(
fd
);

24 
	`˝rötf
("icode: spawn /init\n");

25 i‡((
r
 = 
	`•aw∆
("/init", "init", "initarg1", "initarg2", (*)0)) < 0)

26 
	`∑nic
("icode: s∑w¿/öô: %e", 
r
);

28 
	`˝rötf
("icode:Éxiting\n");

29 
	}
}

	@user/idle.c

3 
	~<öc/x86.h
>

4 
	~<öc/lib.h
>

7 
	$umaö
(
¨gc
, **
¨gv
)

9 
bö¨y«me
 = "idle";

17 
	`sys_yõld
();

19 
	}
}

	@user/init.c

1 
	~<öc/lib.h
>

4 
	mmsg1
[5000];

5 
	mmsg2
[1000];

6 } 
	gd©a
 = {

11 
	gbss
[6000];

14 
	$sum
(c⁄° *
s
, 
n
)

16 
i
, 
tŸ
 = 0;

17 
i
 = 0; i < 
n
; i++)

18 
tŸ
 ^
i
 * 
s
[i];

19  
tŸ
;

20 
	}
}

23 
	$umaö
(
¨gc
, **
¨gv
)

25 
i
, 
r
, 
x
, 
w™t
;

26 
¨gs
[256];

28 
	`˝rötf
("init:Ñunning\n");

30 
w™t
 = 0xf989e;

31 i‡((
x
 = 
	`sum
((*)&
d©a
,  d©a)Ë!
w™t
)

32 
	`˝rötf
("init: data isÇot initialized: got sum %08x wanted %08x\n",

33 
x
, 
w™t
);

35 
	`˝rötf
("init: data seems okay\n");

36 i‡((
x
 = 
	`sum
(
bss
,  bss)) != 0)

37 
	`˝rötf
("bs†i†nŸ inôülized: w™ãd sum 0 gŸ %08x\n", 
x
);

39 
	`˝rötf
("init: bss seems okay\n");

42 
	`°rˇt
(
¨gs
, "init:árgs:");

43 
i
 = 0; i < 
¨gc
; i++) {

44 
	`°rˇt
(
¨gs
, " '");

45 
	`°rˇt
(
¨gs
, 
¨gv
[
i
]);

46 
	`°rˇt
(
¨gs
, "'");

48 
	`˝rötf
("%s\n", 
¨gs
);

50 
	`˝rötf
("init:Ñunning sh\n");

53 
	`˛o£
(0);

54 i‡((
r
 = 
	`›íc⁄s
()) < 0)

55 
	`∑nic
("›íc⁄s: %e", 
r
);

56 i‡(
r
 != 0)

57 
	`∑nic
("fú° o≥nc⁄†u£d fd %d", 
r
);

58 i‡((
r
 = 
	`dup
(0, 1)) < 0)

59 
	`∑nic
("dup: %e", 
r
);

61 
	`˝rötf
("init: starting sh\n");

62 
r
 = 
	`•aw∆
("/sh", "sh", (*)0);

63 i‡(
r
 < 0) {

64 
	`˝rötf
("öô: s∑w¿sh: %e\n", 
r
);

67 
	`waô
(
r
);

69 
	}
}

	@user/initsh.c

1 
	~<öc/lib.h
>

4 
	$umaö
(
¨gc
, **
¨gv
)

6 
i
, 
r
, 
x
, 
w™t
;

8 
	`˝rötf
("initsh:Ñunning sh\n");

11 
	`˛o£
(0);

12 i‡((
r
 = 
	`›íc⁄s
()) < 0)

13 
	`∑nic
("›íc⁄s: %e", 
r
);

14 i‡(
r
 != 0)

15 
	`∑nic
("fú° o≥nc⁄†u£d fd %d", 
r
);

16 i‡((
r
 = 
	`dup
(0, 1)) < 0)

17 
	`∑nic
("dup: %e", 
r
);

19 
	`˝rötf
("init: starting sh\n");

20 
r
 = 
	`•aw∆
("/sh", "sh", (*)0);

21 i‡(
r
 < 0) {

22 
	`˝rötf
("öô: s∑w¿sh: %e\n", 
r
);

25 
	`waô
(
r
);

27 
	}
}

	@user/ls.c

1 
	~<öc/lib.h
>

3 
	gÊag
[256];

5 
lsdú
(const *, const *);

6 
ls1
(c⁄° *, 
boﬁ
, 
off_t
, const *);

9 
	$ls
(c⁄° *
∑th
, c⁄° *
¥efix
)

11 
r
;

12 
Sèt
 
°
;

14 i‡((
r
 = 
	`°©
(
∑th
, &
°
)) < 0)

15 
	`∑nic
("°© %s: %e", 
∑th
, 
r
);

16 i‡(
°
.
°_isdú
 && !
Êag
['d'])

17 
	`lsdú
(
∑th
, 
¥efix
);

19 
	`ls1
(0, 
°
.
°_isdú
, st.
°_size
, 
∑th
);

20 
	}
}

23 
	$lsdú
(c⁄° *
∑th
, c⁄° *
¥efix
)

25 
fd
, 
n
;

26 
Fûe
 
f
;

28 i‡((
fd
 = 
	`›í
(
∑th
, 
O_RDONLY
)) < 0)

29 
	`∑nic
("›í %s: %e", 
∑th
, 
fd
);

30 (
n
 = 
	`ªadn
(
fd
, &
f
,  f)) ==  f)

31 i‡(
f
.
f_«me
[0])

32 
	`ls1
(
¥efix
, 
f
.
f_ty≥
==
FTYPE_DIR
, f.
f_size
, f.
f_«me
);

33 i‡(
n
 > 0)

34 
	`∑nic
("sh‹àªad i¿dúe˘‹y %s", 
∑th
);

35 i‡(
n
 < 0)

36 
	`∑nic
("îr‹Ñódög dúe˘‹y %s: %e", 
∑th
, 
n
);

37 
	}
}

40 
	$ls1
(c⁄° *
¥efix
, 
boﬁ
 
isdú
, 
off_t
 
size
, c⁄° *
«me
)

42 c⁄° *
£p
;

44 if(
Êag
['l'])

45 
	`¥ötf
("%11d %¯", 
size
, 
isdú
 ? 'd' : '-');

46 if(
¥efix
) {

47 i‡(
¥efix
[0] &&Öªfix[
	`°æí
(prefix)-1] != '/')

48 
£p
 = "/";

50 
£p
 = "";

51 
	`¥ötf
("%s%s", 
¥efix
, 
£p
);

53 
	`¥ötf
("%s", 
«me
);

54 if(
Êag
['F'] && 
isdú
)

55 
	`¥ötf
("/");

56 
	`¥ötf
("\n");

57 
	}
}

60 
	$ußge
()

62 
	`¥ötf
("usage:Üs [-dFl] [file...]\n");

63 
	`exô
();

64 
	}
}

67 
	$umaö
(
¨gc
, **
¨gv
)

69 
i
;

70 
Arg°©e
 
¨gs
;

72 
	`¨g°¨t
(&
¨gc
, 
¨gv
, &
¨gs
);

73 (
i
 = 
	`¨g√xt
(&
¨gs
)) >= 0)

74 
i
) {

78 
Êag
[
i
]++;

81 
	`ußge
();

84 i‡(
¨gc
 == 1)

85 
	`ls
("/", "");

87 
i
 = 1; i < 
¨gc
; i++)

88 
	`ls
(
¨gv
[
i
],árgv[i]);

90 
	}
}

	@user/lsfd.c

1 
	~<öc/lib.h
>

4 
	$ußge
()

6 
	`˝rötf
("usage:Üsfd [-1]\n");

7 
	`exô
();

8 
	}
}

11 
	$umaö
(
¨gc
, **
¨gv
)

13 
i
, 
u£Âröt
 = 0;

14 
Sèt
 
°
;

15 
Arg°©e
 
¨gs
;

17 
	`¨g°¨t
(&
¨gc
, 
¨gv
, &
¨gs
);

18 (
i
 = 
	`¨g√xt
(&
¨gs
)) >= 0)

19 i‡(
i
 == '1')

20 
u£Âröt
 = 1;

22 
	`ußge
();

24 
i
 = 0; i < 32; i++)

25 i‡(
	`f°©
(
i
, &
°
) >= 0) {

26 i‡(
u£Âröt
)

27 
	`Ârötf
(1, "fd %d:Çame %s isdir %d size %d dev %s\n",

28 
i
, 
°
.
°_«me
, st.
°_isdú
,

29 
°
.
°_size
, st.
°_dev
->
dev_«me
);

31 
	`˝rötf
("fd %d:Çame %s isdir %d size %d dev %s\n",

32 
i
, 
°
.
°_«me
, st.
°_isdú
,

33 
°
.
°_size
, st.
°_dev
->
dev_«me
);

35 
	}
}

	@user/num.c

1 
	~<öc/lib.h
>

3 
	gbﬁ
 = 1;

4 
	glöe
 = 0;

7 
	$num
(
f
, c⁄° *
s
)

9 
n
;

10 
r
;

11 
c
;

13 (
n
 = 
	`ªad
(
f
, &
c
, 1)) > 0) {

14 i‡(
bﬁ
) {

15 
	`¥ötf
("%5d ", ++
löe
);

16 
bﬁ
 = 0;

18 i‡((
r
 = 
	`wrôe
(1, &
c
, 1)) != 1)

19 
	`∑nic
("wrôêîr‹ c›yög %s: %e", 
s
, 
r
);

20 i‡(
c
 == '\n')

21 
bﬁ
 = 1;

23 i‡(
n
 < 0)

24 
	`∑nic
("îr‹Ñódög %s: %e", 
s
, 
n
);

25 
	}
}

28 
	$umaö
(
¨gc
, **
¨gv
)

30 
f
, 
i
;

32 
bö¨y«me
 = "num";

33 i‡(
¨gc
 == 1)

34 
	`num
(0, "<stdin>");

36 
i
 = 1; i < 
¨gc
; i++) {

37 
f
 = 
	`›í
(
¨gv
[
i
], 
O_RDONLY
);

38 i‡(
f
 < 0)

39 
	`∑nic
("ˇn'à›í %s: %e", 
¨gv
[
i
], 
f
);

41 
	`num
(
f
, 
¨gv
[
i
]);

42 
	`˛o£
(
f
);

45 
	`exô
();

46 
	}
}

	@user/pingpong.c

4 
	~<öc/lib.h
>

7 
	$umaö
(
¨gc
, **
¨gv
)

9 
ívid_t
 
who
;

11 i‡((
who
 = 
	`f‹k
()) != 0) {

13 
	`˝rötf
("£nd 0 from %xÅÿ%x\n", 
	`sys_gëívid
(), 
who
);

14 
	`ùc_£nd
(
who
, 0, 0, 0);

18 
uöt32_t
 
i
 = 
	`ùc_ªcv
(&
who
, 0, 0);

19 
	`˝rötf
("%x gŸ %d from %x\n", 
	`sys_gëívid
(), 
i
, 
who
);

20 i‡(
i
 == 10)

22 
i
++;

23 
	`ùc_£nd
(
who
, 
i
, 0, 0);

24 i‡(
i
 == 10)

28 
	}
}

	@user/pingpongs.c

4 
	~<öc/lib.h
>

6 
uöt32_t
 
	gvÆ
;

9 
	$umaö
(
¨gc
, **
¨gv
)

11 
ívid_t
 
who
;

12 
uöt32_t
 
i
;

14 
i
 = 0;

15 i‡((
who
 = 
	`sf‹k
()) != 0) {

16 
	`˝rötf
("òam %08x;Åhi£nv i†%p\n", 
	`sys_gëívid
(), 
thi£nv
);

18 
	`˝rötf
("£nd 0 from %xÅÿ%x\n", 
	`sys_gëívid
(), 
who
);

19 
	`ùc_£nd
(
who
, 0, 0, 0);

23 
	`ùc_ªcv
(&
who
, 0, 0);

24 
	`˝rötf
("%x gŸ %d from %x (thi£nv i†%∞%x)\n", 
	`sys_gëívid
(), 
vÆ
, 
who
, 
thi£nv
,Åhi£nv->
ív_id
);

25 i‡(
vÆ
 == 10)

27 ++
vÆ
;

28 
	`ùc_£nd
(
who
, 0, 0, 0);

29 i‡(
vÆ
 == 10)

33 
	}
}

	@user/primes.c

11 
	~<öc/lib.h
>

14 
	$¥imïroc
()

16 
i
, 
id
, 
p
;

17 
ívid_t
 
ívid
;

20 
t›
:

21 
p
 = 
	`ùc_ªcv
(&
ívid
, 0, 0);

22 
	`˝rötf
("CPU %d: %d ", 
thi£nv
->
ív_˝unum
, 
p
);

25 i‡((
id
 = 
	`f‹k
()) < 0)

26 
	`∑nic
("f‹k: %e", 
id
);

27 i‡(
id
 == 0)

28 
t›
;

32 
i
 = 
	`ùc_ªcv
(&
ívid
, 0, 0);

33 i‡(
i
 % 
p
)

34 
	`ùc_£nd
(
id
, 
i
, 0, 0);

36 
	}
}

39 
	$umaö
(
¨gc
, **
¨gv
)

41 
i
, 
id
;

44 i‡((
id
 = 
	`f‹k
()) < 0)

45 
	`∑nic
("f‹k: %e", 
id
);

46 i‡(
id
 == 0)

47 
	`¥imïroc
();

50 
i
 = 2; ; i++)

51 
	`ùc_£nd
(
id
, 
i
, 0, 0);

52 
	}
}

	@user/primespipe.c

11 
	~<öc/lib.h
>

14 
	$¥imïroc
(
fd
)

16 
i
, 
id
, 
p
, 
pfd
[2], 
wfd
, 
r
;

19 
t›
:

20 i‡((
r
 = 
	`ªadn
(
fd
, &
p
, 4)) != 4)

21 
	`∑nic
("¥imïro¯couldÇŸÑód inôü»¥ime: %d, %e", 
r
,Ñ >= 0 ? 0 :Ñ);

23 
	`˝rötf
("%d\n", 
p
);

26 i‡((
i
=
	`pùe
(
pfd
)) < 0)

27 
	`∑nic
("pùe: %e", 
i
);

28 i‡((
id
 = 
	`f‹k
()) < 0)

29 
	`∑nic
("f‹k: %e", 
id
);

30 i‡(
id
 == 0) {

31 
	`˛o£
(
fd
);

32 
	`˛o£
(
pfd
[1]);

33 
fd
 = 
pfd
[0];

34 
t›
;

37 
	`˛o£
(
pfd
[0]);

38 
wfd
 = 
pfd
[1];

42 i‡((
r
=
	`ªadn
(
fd
, &
i
, 4)) != 4)

43 
	`∑nic
("¥imïro¯%dÑód¿%d %d %e", 
p
, 
fd
, 
r
,Ñ >= 0 ? 0 :Ñ);

44 i‡(
i
%
p
)

45 i‡((
r
=
	`wrôe
(
wfd
, &
i
, 4)) != 4)

46 
	`∑nic
("¥imïro¯%d wrôe: %d %e", 
p
, 
r
,Ñ >= 0 ? 0 :Ñ);

48 
	}
}

51 
	$umaö
(
¨gc
, **
¨gv
)

53 
i
, 
id
, 
p
[2], 
r
;

55 
bö¨y«me
 = "primespipe";

57 i‡((
i
=
	`pùe
(
p
)) < 0)

58 
	`∑nic
("pùe: %e", 
i
);

61 i‡((
id
=
	`f‹k
()) < 0)

62 
	`∑nic
("f‹k: %e", 
id
);

64 i‡(
id
 == 0) {

65 
	`˛o£
(
p
[1]);

66 
	`¥imïroc
(
p
[0]);

69 
	`˛o£
(
p
[0]);

72 
i
=2;; i++)

73 i‡((
r
=
	`wrôe
(
p
[1], &
i
, 4)) != 4)

74 
	`∑nic
("gíî©‹ wrôe: %d, %e", 
r
,Ñ >= 0 ? 0 :Ñ);

75 
	}
}

	@user/sh.c

1 
	~<öc/lib.h
>

3 
	#BUFSIZ
 1024

	)

4 
	gdebug
 = 0;

13 
gëtokí
(*
s
, **
tokí
);

20 
	#MAXARGS
 16

	)

22 
	$runcmd
(* 
s
)

24 *
¨gv
[
MAXARGS
], *
t
, 
¨gv0buf
[
BUFSIZ
];

25 
¨gc
, 
c
, 
i
, 
r
, 
p
[2], 
fd
, 
pùe_chûd
;

27 
pùe_chûd
 = 0;

28 
	`gëtokí
(
s
, 0);

30 
agaö
:

31 
¨gc
 = 0;

33 (
c
 = 
	`gëtokí
(0, &
t
))) {

36 i‡(
¨gc
 =
MAXARGS
) {

37 
	`˝rötf
("too manyárguments\n");

38 
	`exô
();

40 
¨gv
[
¨gc
++] = 
t
;

45 i‡(
	`gëtokí
(0, &
t
) != 'w') {

46 
	`˝rötf
("syntaxÉrror: <Çot followed by word\n");

47 
	`exô
();

49 i‡((
fd
 = 
	`›í
(
t
, 
O_RDONLY
)) < 0) {

50 
	`˝rötf
("›í %†f‹Ñód: %e", 
t
, 
fd
);

51 
	`exô
();

53 i‡(
fd
 != 0) {

54 
	`dup
(
fd
, 0);

55 
	`˛o£
(
fd
);

61 i‡(
	`gëtokí
(0, &
t
) != 'w') {

62 
	`˝rötf
("syntaxÉrror: >Çot followed by word\n");

63 
	`exô
();

65 i‡((
fd
 = 
	`›í
(
t
, 
O_WRONLY
|
O_CREAT
|
O_TRUNC
)) < 0) {

66 
	`˝rötf
("›í %†f‹ wrôe: %e", 
t
, 
fd
);

67 
	`exô
();

69 i‡(
fd
 != 1) {

70 
	`dup
(
fd
, 1);

71 
	`˛o£
(
fd
);

76 i‡((
r
 = 
	`pùe
(
p
)) < 0) {

77 
	`˝rötf
("pùe: %e", 
r
);

78 
	`exô
();

80 i‡(
debug
)

81 
	`˝rötf
("PIPE: %d %d\n", 
p
[0],Ö[1]);

82 i‡((
r
 = 
	`f‹k
()) < 0) {

83 
	`˝rötf
("f‹k: %e", 
r
);

84 
	`exô
();

86 i‡(
r
 == 0) {

87 i‡(
p
[0] != 0) {

88 
	`dup
(
p
[0], 0);

89 
	`˛o£
(
p
[0]);

91 
	`˛o£
(
p
[1]);

92 
agaö
;

94 
pùe_chûd
 = 
r
;

95 i‡(
p
[1] != 1) {

96 
	`dup
(
p
[1], 1);

97 
	`˛o£
(
p
[1]);

99 
	`˛o£
(
p
[0]);

100 
runô
;

102 
	`∑nic
("|Çot implemented");

107 
runô
;

110 
	`∑nic
("badÑëu∫ %d from gëtokí", 
c
);

116 
runô
:

118 if(
¨gc
 == 0) {

119 i‡(
debug
)

120 
	`˝rötf
("EMPTY COMMAND\n");

128 i‡(
¨gv
[0][0] != '/') {

129 
¨gv0buf
[0] = '/';

130 
	`°r˝y
(
¨gv0buf
 + 1, 
¨gv
[0]);

131 
¨gv
[0] = 
¨gv0buf
;

133 
¨gv
[
¨gc
] = 0;

136 i‡(
debug
) {

137 
	`˝rötf
("[%08x] SPAWN:", 
thi£nv
->
ív_id
);

138 
i
 = 0; 
¨gv
[i]; i++)

139 
	`˝rötf
(" %s", 
¨gv
[
i
]);

140 
	`˝rötf
("\n");

144 i‡((
r
 = 
	`•awn
(
¨gv
[0], (const **)árgv)) < 0)

145 
	`˝rötf
("•aw¿%s: %e\n", 
¨gv
[0], 
r
);

149 
	`˛o£_Æl
();

150 i‡(
r
 >= 0) {

151 i‡(
debug
)

152 
	`˝rötf
("[%08x] WAIT %†%08x\n", 
thi£nv
->
ív_id
, 
¨gv
[0], 
r
);

153 
	`waô
(
r
);

154 i‡(
debug
)

155 
	`˝rötf
("[%08x] waô föished\n", 
thi£nv
->
ív_id
);

160 i‡(
pùe_chûd
) {

161 i‡(
debug
)

162 
	`˝rötf
("[%08x] WAITÖùe_chûd %08x\n", 
thi£nv
->
ív_id
, 
pùe_chûd
);

163 
	`waô
(
pùe_chûd
);

164 i‡(
debug
)

165 
	`˝rötf
("[%08x] waô föished\n", 
thi£nv
->
ív_id
);

169 
	`exô
();

170 
	}
}

184 
	#WHITESPACE
 " \t\r\n"

	)

185 
	#SYMBOLS
 "<|>&;()"

	)

188 
	$_gëtokí
(*
s
, **
p1
, **
p2
)

190 
t
;

192 i‡(
s
 == 0) {

193 i‡(
debug
 > 1)

194 
	`˝rötf
("GETTOKEN NULL\n");

198 i‡(
debug
 > 1)

199 
	`˝rötf
("GETTOKEN: %s\n", 
s
);

201 *
p1
 = 0;

202 *
p2
 = 0;

204 
	`°rchr
(
WHITESPACE
, *
s
))

205 *
s
++ = 0;

206 i‡(*
s
 == 0) {

207 i‡(
debug
 > 1)

208 
	`˝rötf
("EOL\n");

211 i‡(
	`°rchr
(
SYMBOLS
, *
s
)) {

212 
t
 = *
s
;

213 *
p1
 = 
s
;

214 *
s
++ = 0;

215 *
p2
 = 
s
;

216 i‡(
debug
 > 1)

217 
	`˝rötf
("TOK %c\n", 
t
);

218  
t
;

220 *
p1
 = 
s
;

221 *
s
 && !
	`°rchr
(
WHITESPACE
 
SYMBOLS
, *s))

222 
s
++;

223 *
p2
 = 
s
;

224 i‡(
debug
 > 1) {

225 
t
 = **
p2
;

226 **
p2
 = 0;

227 
	`˝rötf
("WORD: %s\n", *
p1
);

228 **
p2
 = 
t
;

231 
	}
}

234 
	$gëtokí
(*
s
, **
p1
)

236 
c
, 
nc
;

237 * 
≈1
, *
≈2
;

239 i‡(
s
) {

240 
nc
 = 
	`_gëtokí
(
s
, &
≈1
, &
≈2
);

243 
c
 = 
nc
;

244 *
p1
 = 
≈1
;

245 
nc
 = 
	`_gëtokí
(
≈2
, &
≈1
, &np2);

246  
c
;

247 
	}
}

251 
	$ußge
()

253 
	`˝rötf
("usage: sh [-dix] [command-file]\n");

254 
	`exô
();

255 
	}
}

258 
	$umaö
(
¨gc
, **
¨gv
)

260 
r
, 
öãø˘ive
, 
echocmds
;

261 
Arg°©e
 
¨gs
;

263 
öãø˘ive
 = '?';

264 
echocmds
 = 0;

265 
	`¨g°¨t
(&
¨gc
, 
¨gv
, &
¨gs
);

266 (
r
 = 
	`¨g√xt
(&
¨gs
)) >= 0)

267 
r
) {

269 
debug
++;

272 
öãø˘ive
 = 1;

275 
echocmds
 = 1;

278 
	`ußge
();

281 i‡(
¨gc
 > 2)

282 
	`ußge
();

283 i‡(
¨gc
 == 2) {

284 
	`˛o£
(0);

285 i‡((
r
 = 
	`›í
(
¨gv
[1], 
O_RDONLY
)) < 0)

286 
	`∑nic
("›í %s: %e", 
¨gv
[1], 
r
);

287 
	`as£π
(
r
 == 0);

289 i‡(
öãø˘ive
 == '?')

290 
öãø˘ive
 = 
	`isc⁄s
(0);

293 *
buf
;

295 
buf
 = 
	`ªadlöe
(
öãø˘ive
 ? "$ " : 
NULL
);

296 i‡(
buf
 =
NULL
) {

297 i‡(
debug
)

298 
	`˝rötf
("EXITING\n");

299 
	`exô
();

301 i‡(
debug
)

302 
	`˝rötf
("LINE: %s\n", 
buf
);

303 i‡(
buf
[0] == '#')

305 i‡(
echocmds
)

306 
	`¥ötf
("# %s\n", 
buf
);

307 i‡(
debug
)

308 
	`˝rötf
("BEFORE FORK\n");

309 i‡((
r
 = 
	`f‹k
()) < 0)

310 
	`∑nic
("f‹k: %e", 
r
);

311 i‡(
debug
)

312 
	`˝rötf
("FORK: %d\n", 
r
);

313 i‡(
r
 == 0) {

314 
	`runcmd
(
buf
);

315 
	`exô
();

317 
	`waô
(
r
);

319 
	}
}

	@user/softint.c

3 
	~<öc/lib.h
>

6 
	$umaö
(
¨gc
, **
¨gv
)

8 
asm
 volatile("int $14");

9 
	}
}

	@user/spawnhello.c

1 
	~<öc/lib.h
>

4 
	$umaö
(
¨gc
, **
¨gv
)

6 
r
;

7 
	`˝rötf
("òamÖ¨íàívú⁄míà%08x\n", 
thi£nv
->
ív_id
);

8 i‡((
r
 = 
	`•aw∆
("hello", "hello", 0)) < 0)

9 
	`∑nic
("•awn(hñloËÁûed: %e", 
r
);

10 
	}
}

	@user/spawninit.c

1 
	~<öc/lib.h
>

4 
	$umaö
(
¨gc
, **
¨gv
)

6 
r
;

7 
	`˝rötf
("òamÖ¨íàívú⁄míà%08x\n", 
thi£nv
->
ív_id
);

8 i‡((
r
 = 
	`•aw∆
("init", "init", "one", "two", 0)) < 0)

9 
	`∑nic
("•aw∆(öôËÁûed: %e", 
r
);

10 
	}
}

	@user/spin.c

4 
	~<öc/lib.h
>

7 
	$umaö
(
¨gc
, **
¨gv
)

9 
ívid_t
 
ív
;

11 
	`˝rötf
("IámÅheÖarent. ForkingÅhe child...\n");

12 i‡((
ív
 = 
	`f‹k
()) == 0) {

13 
	`˝rötf
("IámÅhe child. Spinning...\n");

18 
	`˝rötf
("IámÅheÖarent. RunningÅhe child...\n");

19 
	`sys_yõld
();

20 
	`sys_yõld
();

21 
	`sys_yõld
();

22 
	`sys_yõld
();

23 
	`sys_yõld
();

24 
	`sys_yõld
();

25 
	`sys_yõld
();

26 
	`sys_yõld
();

28 
	`˝rötf
("IámÅheÖarent. KillingÅhe child...\n");

29 
	`sys_ív_de°roy
(
ív
);

30 
	}
}

	@user/stresssched.c

1 
	~<öc/lib.h
>

3 vﬁ©ûê
	gcou¡î
;

6 
	$umaö
(
¨gc
, **
¨gv
)

8 
i
, 
j
;

9 
£í
;

10 
ívid_t
 
∑ª¡
 = 
	`sys_gëívid
();

13 
i
 = 0; i < 20; i++)

14 i‡(
	`f‹k
() == 0)

16 i‡(
i
 == 20) {

17 
	`sys_yõld
();

22 
ívs
[
	`ENVX
(
∑ª¡
)].
ív_°©us
 !
ENV_FREE
)

23 
asm
 volatile("pause");

26 
i
 = 0; i < 10; i++) {

27 
	`sys_yõld
();

28 
j
 = 0; j < 10000; j++)

29 
cou¡î
++;

32 i‡(
cou¡î
 != 10*10000)

33 
	`∑nic
("ø¿⁄ÅwÿCPU†© on˚ (cou¡î i†%d)", 
cou¡î
);

36 
	`˝rötf
("[%08x] såesssched o¿CPU %d\n", 
thi£nv
->
ív_id
,Åhi£nv->
ív_˝unum
);

38 
	}
}

	@user/testbss.c

3 
	~<öc/lib.h
>

5 
	#ARRAYSIZE
 (1024*1024)

	)

7 
uöt32_t
 
	gbig¨øy
[
ARRAYSIZE
];

10 
	$umaö
(
¨gc
, **
¨gv
)

12 
i
;

14 
	`˝rötf
("Making sure bss worksÑight...\n");

15 
i
 = 0; i < 
ARRAYSIZE
; i++)

16 i‡(
big¨øy
[
i
] != 0)

17 
	`∑nic
("big¨øy[%d] i¢'à˛óªd!\n", 
i
);

18 
i
 = 0; i < 
ARRAYSIZE
; i++)

19 
big¨øy
[
i
] = i;

20 
i
 = 0; i < 
ARRAYSIZE
; i++)

21 i‡(
big¨øy
[
i
] != i)

22 
	`∑nic
("big¨øy[%d] didn'àhﬁd it†vÆue!\n", 
i
);

24 
	`˝rötf
("Yes, good. Now doingá wild write offÅheÉnd...\n");

25 
big¨øy
[
ARRAYSIZE
+1024] = 0;

26 
	`∑nic
("SHOULD HAVE TRAPPED!!!");

27 
	}
}

	@user/testfdsharing.c

1 
	~<öc/x86.h
>

2 
	~<öc/lib.h
>

4 
	gbuf
[512], 
	gbuf2
[512];

7 
	$umaö
(
¨gc
, **
¨gv
)

9 
fd
, 
r
, 
n
, 
n2
;

11 i‡((
fd
 = 
	`›í
("mŸd", 
O_RDONLY
)) < 0)

12 
	`∑nic
("›í mŸd: %e", 
fd
);

13 
	`£ek
(
fd
, 0);

14 i‡((
n
 = 
	`ªadn
(
fd
, 
buf
,  buf)) <= 0)

15 
	`∑nic
("ªadn: %e", 
n
);

17 i‡((
r
 = 
	`f‹k
()) < 0)

18 
	`∑nic
("f‹k: %e", 
r
);

19 i‡(
r
 == 0) {

20 
	`£ek
(
fd
, 0);

21 
	`˝rötf
("goingÅoÑead in child (mightÖage fault if your sharing is buggy)\n");

22 i‡((
n2
 = 
	`ªadn
(
fd
, 
buf2
,  buf2)Ë!
n
)

23 
	`∑nic
("ªad i¿∑ª¡ gŸ %d,Ñód i¿chûd gŸ %d", 
n
, 
n2
);

24 i‡(
	`memcmp
(
buf
, 
buf2
, 
n
) != 0)

25 
	`∑nic
("read inÖarent got different bytes fromÑead in child");

26 
	`˝rötf
("read in child succeeded\n");

27 
	`£ek
(
fd
, 0);

28 
	`˛o£
(
fd
);

29 
	`exô
();

31 
	`waô
(
r
);

32 i‡((
n2
 = 
	`ªadn
(
fd
, 
buf2
,  buf2)Ë!
n
)

33 
	`∑nic
("ªad i¿∑ª¡ gŸ %d,Åhí gŸ %d", 
n
, 
n2
);

34 
	`˝rötf
("read inÖarent succeeded\n");

35 
	`˛o£
(
fd
);

37 
	`bªakpoöt
();

38 
	}
}

	@user/testfile.c

1 
	~<öc/lib.h
>

3 c⁄° *
	gmsg
 = "This isÅhe NEW message ofÅhe day!\n\n";

5 
	#FVA
 ((
Fd
*)0xCCCCC000)

	)

8 
	$x›í
(c⁄° *
∑th
, 
mode
)

10 
Fsùc
 
fsùcbuf
;

11 
ívid_t
 
f£nv
;

13 
	`°r˝y
(
fsùcbuf
.
›í
.
ªq_∑th
, 
∑th
);

14 
fsùcbuf
.
›í
.
ªq_omode
 = 
mode
;

16 
f£nv
 = 
	`ùc_föd_ív
(
ENV_TYPE_FS
);

17 
	`ùc_£nd
(
f£nv
, 
FSREQ_OPEN
, &
fsùcbuf
, 
PTE_P
 | 
PTE_W
 | 
PTE_U
);

18  
	`ùc_ªcv
(
NULL
, 
FVA
, NULL);

19 
	}
}

22 
	$umaö
(
¨gc
, **
¨gv
)

24 
r
, 
f
, 
i
;

25 
Fd
 *
fd
;

26 
Fd
 
fdc›y
;

27 
Sèt
 
°
;

28 
buf
[512];

31 i‡((
r
 = 
	`x›í
("/nŸ-found", 
O_RDONLY
)Ë< 0 &&Ñ !-
E_NOT_FOUND
)

32 
	`∑nic
("£rve_›í /nŸ-found: %e", 
r
);

33 i‡(
r
 >= 0)

34 
	`∑nic
("serve_open /not-found succeeded!");

36 i‡((
r
 = 
	`x›í
("/√wmŸd", 
O_RDONLY
)) < 0)

37 
	`∑nic
("£rve_›í /√wmŸd: %e", 
r
);

38 i‡(
FVA
->
fd_dev_id
 !'f' || FVA->
fd_off£t
 !0 || FVA->
fd_omode
 !
O_RDONLY
)

39 
	`∑nic
("serve_open didÇot fill struct Fd correctly\n");

40 
	`˝rötf
("serve_open is good\n");

42 i‡((
r
 = 
devfûe
.
	`dev_°©
(
FVA
, &
°
)) < 0)

43 
	`∑nic
("fûe_°©: %e", 
r
);

44 i‡(
	`°æí
(
msg
Ë!
°
.
°_size
)

45 
	`∑nic
("fûe_°©Ñëu∫ed sizê%d w™ãd %d\n", 
°
.
°_size
, 
	`°æí
(
msg
));

46 
	`˝rötf
("file_stat is good\n");

48 
	`mem£t
(
buf
, 0,  buf);

49 i‡((
r
 = 
devfûe
.
	`dev_ªad
(
FVA
, 
buf
,  buf)) < 0)

50 
	`∑nic
("fûe_ªad: %e", 
r
);

51 i‡(
	`°rcmp
(
buf
, 
msg
) != 0)

52 
	`∑nic
("file_readÑeturned wrong data");

53 
	`˝rötf
("file_read is good\n");

55 i‡((
r
 = 
devfûe
.
	`dev_˛o£
(
FVA
)) < 0)

56 
	`∑nic
("fûe_˛o£: %e", 
r
);

57 
	`˝rötf
("file_close is good\n");

63 
fdc›y
 = *
FVA
;

64 
	`sys_∑ge_unm≠
(0, 
FVA
);

66 i‡((
r
 = 
devfûe
.
	`dev_ªad
(&
fdc›y
, 
buf
,  buf)Ë!-
E_INVAL
)

67 
	`∑nic
("£rve_ªad d€†nŸ h™dÀ sèÀ fûeid†c‹ª˘ly: %e", 
r
);

68 
	`˝rötf
("stale fileid is good\n");

71 i‡((
r
 = 
	`x›í
("/√w-fûe", 
O_RDWR
|
O_CREAT
)) < 0)

72 
	`∑nic
("£rve_›í /√w-fûe: %e", 
r
);

74 i‡((
r
 = 
devfûe
.
	`dev_wrôe
(
FVA
, 
msg
, 
	`°æí
(msg))) != strlen(msg))

75 
	`∑nic
("fûe_wrôe: %e", 
r
);

76 
	`˝rötf
("file_write is good\n");

78 
FVA
->
fd_off£t
 = 0;

79 
	`mem£t
(
buf
, 0,  buf);

80 i‡((
r
 = 
devfûe
.
	`dev_ªad
(
FVA
, 
buf
,  buf)) < 0)

81 
	`∑nic
("fûe_ªadá·î fûe_wrôe: %e", 
r
);

82 i‡(
r
 !
	`°æí
(
msg
))

83 
	`∑nic
("fûe_ªadá·î fûe_wrôêªtu∫ed wr⁄gÜígth: %d", 
r
);

84 i‡(
	`°rcmp
(
buf
, 
msg
) != 0)

85 
	`∑nic
("file_readáfter file_writeÑeturned wrong data");

86 
	`˝rötf
("file_readáfter file_write is good\n");

89 i‡((
r
 = 
	`›í
("/nŸ-found", 
O_RDONLY
)Ë< 0 &&Ñ !-
E_NOT_FOUND
)

90 
	`∑nic
("›í /nŸ-found: %e", 
r
);

91 i‡(
r
 >= 0)

92 
	`∑nic
("open /not-found succeeded!");

94 i‡((
r
 = 
	`›í
("/√wmŸd", 
O_RDONLY
)) < 0)

95 
	`∑nic
("›í /√wmŸd: %e", 
r
);

96 
fd
 = (
Fd
*Ë(0xD0000000 + 
r
*
PGSIZE
);

97 i‡(
fd
->
fd_dev_id
 !'f' || fd->
fd_off£t
 !0 || fd->
fd_omode
 !
O_RDONLY
)

98 
	`∑nic
("open didÇot fill struct Fd correctly\n");

99 
	`˝rötf
("open is good\n");

102 i‡((
f
 = 
	`›í
("/big", 
O_WRONLY
|
O_CREAT
)) < 0)

103 
	`∑nic
("¸óà/big: %e", 
f
);

104 
	`mem£t
(
buf
, 0, (buf));

105 
i
 = 0; i < (
NDIRECT
*3)*
BLKSIZE
; i +(
buf
)) {

106 *(*)
buf
 = 
i
;

107 i‡((
r
 = 
	`wrôe
(
f
, 
buf
, (buf))) < 0)

108 
	`∑nic
("wrôê/big@%d: %e", 
i
, 
r
);

110 
	`˛o£
(
f
);

112 i‡((
f
 = 
	`›í
("/big", 
O_RDONLY
)) < 0)

113 
	`∑nic
("›í /big: %e", 
f
);

114 
i
 = 0; i < (
NDIRECT
*3)*
BLKSIZE
; i +(
buf
)) {

115 *(*)
buf
 = 
i
;

116 i‡((
r
 = 
	`ªadn
(
f
, 
buf
, (buf))) < 0)

117 
	`∑nic
("ªad /big@%d: %e", 
i
, 
r
);

118 i‡(
r
 !(
buf
))

119 
	`∑nic
("read /big from %dÑeturned %d < %d bytes",

120 
i
, 
r
, (
buf
));

121 i‡(*(*)
buf
 !
i
)

122 
	`∑nic
("read /big from %dÑeturned bad data %d",

123 
i
, *(*)
buf
);

125 
	`˛o£
(
f
);

126 
	`˝rötf
("large file is good\n");

127 
	}
}

	@user/testkbd.c

2 
	~<öc/lib.h
>

5 
	$umaö
(
¨gc
, **
¨gv
)

7 
i
, 
r
;

10 
i
 = 0; i < 10; ++i)

11 
	`sys_yõld
();

13 
	`˛o£
(0);

14 i‡((
r
 = 
	`›íc⁄s
()) < 0)

15 
	`∑nic
("›íc⁄s: %e", 
r
);

16 i‡(
r
 != 0)

17 
	`∑nic
("fú° o≥nc⁄†u£d fd %d", 
r
);

18 i‡((
r
 = 
	`dup
(0, 1)) < 0)

19 
	`∑nic
("dup: %e", 
r
);

22 *
buf
;

24 
buf
 = 
	`ªadlöe
("TypeáÜine: ");

25 i‡(
buf
 !
NULL
)

26 
	`Ârötf
(1, "%s\n", 
buf
);

28 
	`Ârötf
(1, "(end of fileÑeceived)\n");

30 
	}
}

	@user/testmalloc.c

1 
	~<öc/lib.h
>

4 
	$umaö
(
¨gc
, **
¨gv
)

6 *
buf
;

7 
n
;

8 *
v
;

11 
buf
 = 
	`ªadlöe
("> ");

12 i‡(
buf
 == 0)

13 
	`exô
();

14 i‡(
	`memcmp
(
buf
, "free ", 5) == 0) {

15 
v
 = (*Ë
	`°πﬁ
(
buf
 + 5, 0, 0);

16 
	`‰ì
(
v
);

17 } i‡(
	`memcmp
(
buf
, "malloc ", 7) == 0) {

18 
n
 = 
	`°πﬁ
(
buf
 + 7, 0, 0);

19 
v
 = 
	`mÆloc
(
n
);

20 
	`¥ötf
("\t0x%x\n", (
uöçå_t
Ë
v
);

22 
	`¥ötf
("?unknown command\n");

24 
	}
}

	@user/testpipe.c

1 
	~<öc/lib.h
>

3 *
	gmsg
 = "Now isÅheÅime foráll good menÅo comeÅoÅheáid ofÅheirÖarty.";

6 
	$umaö
(
¨gc
, **
¨gv
)

8 
buf
[100];

9 
i
, 
pid
, 
p
[2];

11 
bö¨y«me
 = "pipereadeof";

13 i‡((
i
 = 
	`pùe
(
p
)) < 0)

14 
	`∑nic
("pùe: %e", 
i
);

16 i‡((
pid
 = 
	`f‹k
()) < 0)

17 
	`∑nic
("f‹k: %e", 
i
);

19 i‡(
pid
 == 0) {

20 
	`˝rötf
("[%08x]Öùîódeo‡˛o£ %d\n", 
thi£nv
->
ív_id
, 
p
[1]);

21 
	`˛o£
(
p
[1]);

22 
	`˝rötf
("[%08x]Öùîódeo‡ªad¿%d\n", 
thi£nv
->
ív_id
, 
p
[0]);

23 
i
 = 
	`ªadn
(
p
[0], 
buf
,  buf-1);

24 i‡(
i
 < 0)

25 
	`∑nic
("ªad: %e", 
i
);

26 
buf
[
i
] = 0;

27 i‡(
	`°rcmp
(
buf
, 
msg
) == 0)

28 
	`˝rötf
("\npipeÑead closedÖroperly\n");

30 
	`˝rötf
("\ngŸ %d byãs: %s\n", 
i
, 
buf
);

31 
	`exô
();

33 
	`˝rötf
("[%08x]Öùîódeo‡˛o£ %d\n", 
thi£nv
->
ív_id
, 
p
[0]);

34 
	`˛o£
(
p
[0]);

35 
	`˝rötf
("[%08x]Öùîódeo‡wrôê%d\n", 
thi£nv
->
ív_id
, 
p
[1]);

36 i‡((
i
 = 
	`wrôe
(
p
[1], 
msg
, 
	`°æí
(msg))) != strlen(msg))

37 
	`∑nic
("wrôe: %e", 
i
);

38 
	`˛o£
(
p
[1]);

40 
	`waô
(
pid
);

42 
bö¨y«me
 = "pipewriteeof";

43 i‡((
i
 = 
	`pùe
(
p
)) < 0)

44 
	`∑nic
("pùe: %e", 
i
);

46 i‡((
pid
 = 
	`f‹k
()) < 0)

47 
	`∑nic
("f‹k: %e", 
i
);

49 i‡(
pid
 == 0) {

50 
	`˛o£
(
p
[0]);

52 
	`˝rötf
(".");

53 i‡(
	`wrôe
(
p
[1], "x", 1) != 1)

56 
	`˝rötf
("\npipe write closedÖroperly\n");

57 
	`exô
();

59 
	`˛o£
(
p
[0]);

60 
	`˛o£
(
p
[1]);

61 
	`waô
(
pid
);

63 
	`˝rötf
("pipeÅestsÖassed\n");

64 
	}
}

	@user/testpiperace.c

1 
	~<öc/lib.h
>

4 
	$umaö
(
¨gc
, **
¨gv
)

6 
p
[2], 
r
, 
pid
, 
i
, 
max
;

7 *
va
;

8 
Fd
 *
fd
;

9 c⁄° vﬁ©ûê
Env
 *
kid
;

11 
	`˝rötf
("testing for dupÑace...\n");

12 i‡((
r
 = 
	`pùe
(
p
)) < 0)

13 
	`∑nic
("pùe: %e", 
r
);

14 
max
 = 200;

15 i‡((
r
 = 
	`f‹k
()) < 0)

16 
	`∑nic
("f‹k: %e", 
r
);

17 i‡(
r
 == 0) {

18 
	`˛o£
(
p
[1]);

37 
i
=0; i<
max
; i++) {

38 if(
	`pùeis˛o£d
(
p
[0])){

39 
	`˝rötf
("RACE:Öipeáppears closed\n");

40 
	`exô
();

42 
	`sys_yõld
();

45 
	`ùc_ªcv
(0,0,0);

47 
pid
 = 
r
;

48 
	`˝rötf
("pid i†%d\n", 
pid
);

49 
va
 = 0;

50 
kid
 = &
ívs
[
	`ENVX
(
pid
)];

51 
	`˝rötf
("kid i†%d\n", 
kid
-
ívs
);

52 
	`dup
(
p
[0], 10);

53 
kid
->
ív_°©us
 =
ENV_RUNNABLE
)

54 
	`dup
(
p
[0], 10);

56 
	`˝rötf
("child done withÜoop\n");

57 i‡(
	`pùeis˛o£d
(
p
[0]))

58 
	`∑nic
("somehowÅhe otherÉnd ofÖ[0] got closed!");

59 i‡((
r
 = 
	`fd_lookup
(
p
[0], &
fd
)) < 0)

60 
	`∑nic
("ˇ¬ŸÜook u∞p[0]: %e", 
r
);

61 
va
 = 
	`fd2d©a
(
fd
);

62 i‡(
	`∑gîef
(
va
) != 3+1)

63 
	`˝rötf
("\nchild detectedÑace\n");

65 
	`˝rötf
("\ƒa˚ didn'àh≠≥n\n", 
max
);

66 
	}
}

	@user/testpiperace2.c

2 
	~<öc/lib.h
>

5 
	$umaö
(
¨gc
, **
¨gv
)

7 
p
[2], 
r
, 
i
;

8 
Fd
 *
fd
;

9 c⁄° vﬁ©ûê
Env
 *
kid
;

11 
	`˝rötf
("testing forÖipeisclosedÑace...\n");

12 i‡((
r
 = 
	`pùe
(
p
)) < 0)

13 
	`∑nic
("pùe: %e", 
r
);

14 i‡((
r
 = 
	`f‹k
()) < 0)

15 
	`∑nic
("f‹k: %e", 
r
);

16 i‡(
r
 == 0) {

20 
	`˛o£
(
p
[1]);

21 
i
 = 0; i < 200; i++) {

22 i‡(
i
 % 10 == 0)

23 
	`˝rötf
("%d.", 
i
);

26 
	`dup
(
p
[0], 10);

27 
	`sys_yõld
();

28 
	`˛o£
(10);

29 
	`sys_yõld
();

31 
	`exô
();

55 
kid
 = &
ívs
[
	`ENVX
(
r
)];

56 
kid
->
ív_°©us
 =
ENV_RUNNABLE
)

57 i‡(
	`pùeis˛o£d
(
p
[0]) != 0) {

58 
	`˝rötf
("\nRACE:Öipeáppears closed\n");

59 
	`sys_ív_de°roy
(
r
);

60 
	`exô
();

62 
	`˝rötf
("child done withÜoop\n");

63 i‡(
	`pùeis˛o£d
(
p
[0]))

64 
	`∑nic
("somehowÅhe otherÉnd ofÖ[0] got closed!");

65 i‡((
r
 = 
	`fd_lookup
(
p
[0], &
fd
)) < 0)

66 
	`∑nic
("ˇ¬ŸÜook u∞p[0]: %e", 
r
);

67 (Ë
	`fd2d©a
(
fd
);

68 
	`˝rötf
("race didn't happen\n");

69 
	}
}

	@user/testpriority_default.c

1 
	~<öc/lib.h
>

2 
	~<öc/ív.h
>

5 
	$umaö
(
¨gc
,**
¨gv
)

7 
	`sys_ív_£t_¥i‹ôy
(0,
PRIORITY_DEFAULT
);

8 
i
;

9 
n
 =3;

10 
i
0;i<
n
;i++)

12 
	`˝rötf
("[%08x]DeÁu… Pri‹ôy Pro˚s†i†Ru¬ög\n",
	`sys_gëívid
());

15 
	}
}

	@user/testpriority_high.c

1 
	~<öc/lib.h
>

2 
	~<öc/ív.h
>

5 
	$umaö
(
¨gc
,**
¨gv
)

7 
	`sys_ív_£t_¥i‹ôy
(0,
PRIORITY_HIGH
);

8 
i
;

9 
n
 =3;

10 
i
0;i<
n
;i++)

12 
	`˝rötf
("[%08x]High Pri‹ôy Pro˚s†i†Ru¬ög\n",
	`sys_gëívid
());

15 
	}
}

	@user/testpriority_low.c

1 
	~<öc/lib.h
>

2 
	~<öc/ív.h
>

5 
	$umaö
(
¨gc
,**
¨gv
)

7 
	`sys_ív_£t_¥i‹ôy
(0,
PRIORITY_LOW
);

8 
i
;

9 
n
 =3;

10 
i
0;i<
n
;i++)

12 
	`˝rötf
("[%08x]Low Pri‹ôy Pro˚s†i†Ru¬ög\n",
	`sys_gëívid
());

15 
	}
}

	@user/testpriority_middle.c

1 
	~<öc/lib.h
>

2 
	~<öc/ív.h
>

5 
	$umaö
(
¨gc
,**
¨gv
)

7 
	`sys_ív_£t_¥i‹ôy
(0,
PRIORITY_MIDDLE
);

8 
i
;

9 
n
 =3;

10 
i
0;i<
n
;i++)

12 
	`˝rötf
("[%08x]MiddÀ Pri‹ôy Pro˚s†i†Ru¬ög\n",
	`sys_gëívid
());

15 
	}
}

	@user/testptelibrary.c

1 
	~<öc/lib.h
>

3 
	#VA
 ((*Ë0xA0000000)

	)

4 c⁄° *
	gmsg
 = "hello, world\n";

5 c⁄° *
	gmsg2
 = "goodbye, world\n";

7 
chûdof•awn
();

10 
	$umaö
(
¨gc
, **
¨gv
)

12 
r
;

14 i‡(
¨gc
 != 0)

15 
	`chûdof•awn
();

17 i‡((
r
 = 
	`sys_∑ge_Æloc
(0, 
VA
, 
PTE_P
|
PTE_W
|
PTE_U
|
PTE_SHARE
)) < 0)

18 
	`∑nic
("sys_∑ge_Æloc: %e", 
r
);

21 i‡((
r
 = 
	`f‹k
()) < 0)

22 
	`∑nic
("f‹k: %e", 
r
);

23 i‡(
r
 == 0) {

24 
	`°r˝y
(
VA
, 
msg
);

25 
	`exô
();

27 
	`waô
(
r
);

28 
	`˝rötf
("f‹k h™dÀ†PTE_SHARE %s\n", 
	`°rcmp
(
VA
, 
msg
) == 0 ? "right" : "wrong");

31 i‡((
r
 = 
	`•aw∆
("/testptelibrary", "testptelibrary", "arg", 0)) < 0)

32 
	`∑nic
("•awn: %e", 
r
);

33 
	`waô
(
r
);

34 
	`˝rötf
("•aw¿h™dÀ†PTE_SHARE %s\n", 
	`°rcmp
(
VA
, 
msg2
) == 0 ? "right" : "wrong");

35 
	}
}

38 
	$chûdof•awn
()

40 
	`°r˝y
(
VA
, 
msg2
);

41 
	`exô
();

42 
	}
}

	@user/testpteshare.c

1 
	~<öc/x86.h
>

2 
	~<öc/lib.h
>

4 
	#VA
 ((*Ë0xA0000000)

	)

5 c⁄° *
	gmsg
 = "hello, world\n";

6 c⁄° *
	gmsg2
 = "goodbye, world\n";

8 
chûdof•awn
();

11 
	$umaö
(
¨gc
, **
¨gv
)

13 
r
;

15 i‡(
¨gc
 != 0)

16 
	`chûdof•awn
();

18 i‡((
r
 = 
	`sys_∑ge_Æloc
(0, 
VA
, 
PTE_P
|
PTE_W
|
PTE_U
|
PTE_SHARE
)) < 0)

19 
	`∑nic
("sys_∑ge_Æloc: %e", 
r
);

22 i‡((
r
 = 
	`f‹k
()) < 0)

23 
	`∑nic
("f‹k: %e", 
r
);

24 i‡(
r
 == 0) {

25 
	`°r˝y
(
VA
, 
msg
);

26 
	`exô
();

28 
	`waô
(
r
);

29 
	`˝rötf
("f‹k h™dÀ†PTE_SHARE %s\n", 
	`°rcmp
(
VA
, 
msg
) == 0 ? "right" : "wrong");

32 i‡((
r
 = 
	`•aw∆
("/testpteshare", "testpteshare", "arg", 0)) < 0)

33 
	`∑nic
("•awn: %e", 
r
);

34 
	`waô
(
r
);

35 
	`˝rötf
("•aw¿h™dÀ†PTE_SHARE %s\n", 
	`°rcmp
(
VA
, 
msg2
) == 0 ? "right" : "wrong");

37 
	`bªakpoöt
();

38 
	}
}

41 
	$chûdof•awn
()

43 
	`°r˝y
(
VA
, 
msg2
);

44 
	`exô
();

45 
	}
}

	@user/testshell.c

1 
	~<öc/x86.h
>

2 
	~<öc/lib.h
>

4 
wr⁄g
(, , );

7 
	$umaö
(
¨gc
, **
¨gv
)

9 
c1
, 
c2
;

10 
r
, 
rfd
, 
wfd
, 
kfd
, 
n1
, 
n2
, 
off
, 
∆off
;

11 
pfds
[2];

13 
	`˛o£
(0);

14 
	`˛o£
(1);

15 
	`›íc⁄s
();

16 
	`›íc⁄s
();

18 i‡((
rfd
 = 
	`›í
("ã°shñl.sh", 
O_RDONLY
)) < 0)

19 
	`∑nic
("›íÅe°shñl.sh: %e", 
rfd
);

20 i‡((
wfd
 = 
	`pùe
(
pfds
)) < 0)

21 
	`∑nic
("pùe: %e", 
wfd
);

22 
wfd
 = 
pfds
[1];

24 
	`˝rötf
("running sh -x <Åestshell.sh | cat\n");

25 i‡((
r
 = 
	`f‹k
()) < 0)

26 
	`∑nic
("f‹k: %e", 
r
);

27 i‡(
r
 == 0) {

28 
	`dup
(
rfd
, 0);

29 
	`dup
(
wfd
, 1);

30 
	`˛o£
(
rfd
);

31 
	`˛o£
(
wfd
);

32 i‡((
r
 = 
	`•aw∆
("/sh", "sh", "-x", 0)) < 0)

33 
	`∑nic
("•awn: %e", 
r
);

34 
	`˛o£
(0);

35 
	`˛o£
(1);

36 
	`waô
(
r
);

37 
	`exô
();

39 
	`˛o£
(
rfd
);

40 
	`˛o£
(
wfd
);

42 
rfd
 = 
pfds
[0];

43 i‡((
kfd
 = 
	`›í
("ã°shñl.key", 
O_RDONLY
)) < 0)

44 
	`∑nic
("›íÅe°shñl.key f‹Ñódög: %e", 
kfd
);

46 
∆off
 = 0;

47 
off
=0;; off++) {

48 
n1
 = 
	`ªad
(
rfd
, &
c1
, 1);

49 
n2
 = 
	`ªad
(
kfd
, &
c2
, 1);

50 i‡(
n1
 < 0)

51 
	`∑nic
("ªadögÅe°shñl.out: %e", 
n1
);

52 i‡(
n2
 < 0)

53 
	`∑nic
("ªadögÅe°shñl.key: %e", 
n2
);

54 i‡(
n1
 =0 && 
n2
 == 0)

56 i‡(
n1
 !1 || 
n2
 !1 || 
c1
 !
c2
)

57 
	`wr⁄g
(
rfd
, 
kfd
, 
∆off
);

58 i‡(
c1
 == '\n')

59 
∆off
 = 
off
+1;

61 
	`˝rötf
("shellÑan correctly\n");

63 
	`bªakpoöt
();

64 
	}
}

67 
	$wr⁄g
(
rfd
, 
kfd
, 
off
)

69 
buf
[100];

70 
n
;

72 
	`£ek
(
rfd
, 
off
);

73 
	`£ek
(
kfd
, 
off
);

75 
	`˝rötf
("shellÖroduced incorrect output.\n");

76 
	`˝rötf
("expected:\n===\n");

77 (
n
 = 
	`ªad
(
kfd
, 
buf
,  buf-1)) > 0)

78 
	`sys_˝uts
(
buf
, 
n
);

79 
	`˝rötf
("===\ngot:\n===\n");

80 (
n
 = 
	`ªad
(
rfd
, 
buf
,  buf-1)) > 0)

81 
	`sys_˝uts
(
buf
, 
n
);

82 
	`˝rötf
("===\n");

83 
	`exô
();

84 
	}
}

	@user/writemotd.c

1 
	~<öc/lib.h
>

4 
	$umaö
(
¨gc
, **
¨gv
)

6 
rfd
, 
wfd
;

7 
buf
[512];

8 
n
, 
r
;

10 i‡((
rfd
 = 
	`›í
("/√wmŸd", 
O_RDONLY
)) < 0)

11 
	`∑nic
("›í /√wmŸd: %e", 
rfd
);

12 i‡((
wfd
 = 
	`›í
("/mŸd", 
O_RDWR
)) < 0)

13 
	`∑nic
("›í /mŸd: %e", 
wfd
);

14 
	`˝rötf
("fûêdes¸ùt‹†%d %d\n", 
rfd
, 
wfd
);

15 i‡(
rfd
 =
wfd
)

16 
	`∑nic
("open /newmotdánd /motd give same file descriptor");

18 
	`˝rötf
("OLD MOTD\n===\n");

19 (
n
 = 
	`ªad
(
wfd
, 
buf
,  buf-1)) > 0)

20 
	`sys_˝uts
(
buf
, 
n
);

21 
	`˝rötf
("===\n");

22 
	`£ek
(
wfd
, 0);

24 i‡((
r
 = 
	`·runˇã
(
wfd
, 0)) < 0)

25 
	`∑nic
("åunˇã /mŸd: %e", 
r
);

27 
	`˝rötf
("NEW MOTD\n===\n");

28 (
n
 = 
	`ªad
(
rfd
, 
buf
,  buf-1)) > 0) {

29 
	`sys_˝uts
(
buf
, 
n
);

30 i‡((
r
 = 
	`wrôe
(
wfd
, 
buf
, 
n
)) !=Ç)

31 
	`∑nic
("wrôê/mŸd: %e", 
r
);

33 
	`˝rötf
("===\n");

35 i‡(
n
 < 0)

36 
	`∑nic
("ªad /√wmŸd: %e", 
n
);

38 
	`˛o£
(
rfd
);

39 
	`˛o£
(
wfd
);

40 
	}
}

	@user/yield.c

3 
	~<öc/lib.h
>

6 
	$umaö
(
¨gc
, **
¨gv
)

8 
i
;

10 
	`˝rötf
("Hñlo, IámÉnvú⁄míà%08x.\n", 
thi£nv
->
ív_id
);

11 
i
 = 0; i < 5; i++) {

12 
	`sys_yõld
();

13 
	`˝rötf
("Back inÉnvironment %08x, iteration %d.\n",

14 
thi£nv
->
ív_id
, 
i
);

16 
	`˝rötf
("AŒ d⁄êöÉnvú⁄míà%08x.\n", 
thi£nv
->
ív_id
);

17 
	}
}

	@/usr/include/assert.h

23 #ifdef 
_ASSERT_H


25 #unde‡
_ASSERT_H


26 #unde‡
as£π


27 #unde‡
__ASSERT_VOID_CAST


29 #ifdef 
__USE_GNU


30 #unde‡
as£π_≥º‹


35 
	#_ASSERT_H
 1

	)

36 
	~<„©uªs.h
>

38 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

39 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

41 
	#__ASSERT_VOID_CAST
 ()

	)

49 #ifdef 
NDEBUG


51 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

59 #ifdef 
__USE_GNU


60 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

65 
__BEGIN_DECLS


68 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

69 
__löe
, c⁄° *
__fun˘i⁄
)

70 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

73 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

74 
__löe
, c⁄° *
__fun˘i⁄
)

75 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

80 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

81 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

84 
__END_DECLS


86 
	#as£π
(
ex¥
) \

87 ((
ex¥
) \

88 ? 
	`__ASSERT_VOID_CAST
 (0) \

89 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

91 #ifdef 
__USE_GNU


92 
	#as£π_≥º‹
(
î∫um
) \

93 (!(
î∫um
) \

94 ? 
	`__ASSERT_VOID_CAST
 (0) \

95 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

103 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

104 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

106 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

107 
	#__ASSERT_FUNCTION
 
__func__


	)

109 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

116 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


118 #unde‡
°©ic_as£π


119 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


32 
	~<bôs/f˙é.h
>

34 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


37 #i‚de‡
__mode_t_deföed


38 
__mode_t
 
	tmode_t
;

39 
	#__mode_t_deföed


	)

42 #i‚de‡
__off_t_deföed


43 #i‚de‡
__USE_FILE_OFFSET64


44 
__off_t
 
	toff_t
;

46 
__off64_t
 
	toff_t
;

48 
	#__off_t_deföed


	)

51 #i‚de‡
__pid_t_deföed


52 
__pid_t
 
	tpid_t
;

53 
	#__pid_t_deföed


	)

58 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


59 
	~<bôs/ty≥s.h
>

60 
	#__√ed_time•ec


	)

61 
	~<time.h
>

62 
	~<bôs/°©.h
>

64 
	#S_IFMT
 
__S_IFMT


	)

65 
	#S_IFDIR
 
__S_IFDIR


	)

66 
	#S_IFCHR
 
__S_IFCHR


	)

67 
	#S_IFBLK
 
__S_IFBLK


	)

68 
	#S_IFREG
 
__S_IFREG


	)

69 #ifde‡
__S_IFIFO


70 
	#S_IFIFO
 
__S_IFIFO


	)

72 #ifde‡
__S_IFLNK


73 
	#S_IFLNK
 
__S_IFLNK


	)

75 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


76 
	#S_IFSOCK
 
__S_IFSOCK


	)

81 
	#S_ISUID
 
__S_ISUID


	)

82 
	#S_ISGID
 
__S_ISGID


	)

84 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


86 
	#S_ISVTX
 
__S_ISVTX


	)

89 
	#S_IRUSR
 
__S_IREAD


	)

90 
	#S_IWUSR
 
__S_IWRITE


	)

91 
	#S_IXUSR
 
__S_IEXEC


	)

93 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

95 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

96 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

97 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

99 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

101 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

102 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

103 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

105 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

108 #ifdef 
__USE_MISC


109 #i‚de‡
R_OK


112 
	#R_OK
 4

	)

113 
	#W_OK
 2

	)

114 
	#X_OK
 1

	)

115 
	#F_OK
 0

	)

120 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


121 
	#SEEK_SET
 0

	)

122 
	#SEEK_CUR
 1

	)

123 
	#SEEK_END
 2

	)

126 #ifde‡
__USE_ATFILE


127 
	#AT_FDCWD
 -100

	)

130 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

131 
	#AT_REMOVEDIR
 0x200

	)

133 
	#AT_SYMLINK_FOLLOW
 0x400

	)

134 #ifde‡
__USE_GNU


135 
	#AT_NO_AUTOMOUNT
 0x800

	)

137 
	#AT_EMPTY_PATH
 0x1000

	)

139 
	#AT_EACCESS
 0x200

	)

148 
f˙é
 (
__fd
, 
__cmd
, ...);

156 #i‚de‡
__USE_FILE_OFFSET64


157 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

159 #ifde‡
__REDIRECT


160 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

161 
	`__n⁄nuŒ
 ((1));

163 
	#›í
 
›í64


	)

166 #ifde‡
__USE_LARGEFILE64


167 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

170 #ifde‡
__USE_ATFILE


180 #i‚de‡
__USE_FILE_OFFSET64


181 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

182 
	`__n⁄nuŒ
 ((2));

184 #ifde‡
__REDIRECT


185 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

186 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

188 
	#›í©
 
›í©64


	)

191 #ifde‡
__USE_LARGEFILE64


192 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

193 
	`__n⁄nuŒ
 ((2));

202 #i‚de‡
__USE_FILE_OFFSET64


203 
	$¸ót
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

205 #ifde‡
__REDIRECT


206 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
__mode_t
 
__mode
),

207 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

209 
	#¸ót
 
¸ót64


	)

212 #ifde‡
__USE_LARGEFILE64


213 
	$¸ót64
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

216 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

217 && !
deföed
 
__USE_POSIX
))

226 
	#F_ULOCK
 0

	)

227 
	#F_LOCK
 1

	)

228 
	#F_TLOCK
 2

	)

229 
	#F_TEST
 3

	)

231 #i‚de‡
__USE_FILE_OFFSET64


232 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

234 #ifde‡
__REDIRECT


235 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

237 
	#lockf
 
lockf64


	)

240 #ifde‡
__USE_LARGEFILE64


241 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

245 #ifde‡
__USE_XOPEN2K


248 #i‚de‡
__USE_FILE_OFFSET64


249 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

250 
__advi£
Ë
__THROW
;

252 #ifde‡
__REDIRECT_NTH


253 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

254 
__off64_t
 
__Àn
, 
__advi£
),

255 
posix_Ádvi£64
);

257 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

260 #ifde‡
__USE_LARGEFILE64


261 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

262 
__advi£
Ë
__THROW
;

270 #i‚de‡
__USE_FILE_OFFSET64


271 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

273 #ifde‡
__REDIRECT


274 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

275 
__off64_t
 
__Àn
),

276 
posix_ÁŒoˇã64
);

278 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

281 #ifde‡
__USE_LARGEFILE64


282 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

288 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

289 && 
deföed
 
__va_¨g_∑ck_Àn


290 
	~<bôs/f˙é2.h
>

293 
__END_DECLS


	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

46 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_FORMAT_MACROS


48 #i‡
__WORDSIZE
 == 64

49 
	#__PRI64_PREFIX
 "l"

	)

50 
	#__PRIPTR_PREFIX
 "l"

	)

52 
	#__PRI64_PREFIX
 "Œ"

	)

53 
	#__PRIPTR_PREFIX


	)

59 
	#PRId8
 "d"

	)

60 
	#PRId16
 "d"

	)

61 
	#PRId32
 "d"

	)

62 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdLEAST8
 "d"

	)

65 
	#PRIdLEAST16
 "d"

	)

66 
	#PRIdLEAST32
 "d"

	)

67 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

69 
	#PRIdFAST8
 "d"

	)

70 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

71 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

72 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

75 
	#PRIi8
 "i"

	)

76 
	#PRIi16
 "i"

	)

77 
	#PRIi32
 "i"

	)

78 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiLEAST8
 "i"

	)

81 
	#PRIiLEAST16
 "i"

	)

82 
	#PRIiLEAST32
 "i"

	)

83 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

85 
	#PRIiFAST8
 "i"

	)

86 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

87 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

88 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

91 
	#PRIo8
 "o"

	)

92 
	#PRIo16
 "o"

	)

93 
	#PRIo32
 "o"

	)

94 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoLEAST8
 "o"

	)

97 
	#PRIoLEAST16
 "o"

	)

98 
	#PRIoLEAST32
 "o"

	)

99 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

101 
	#PRIoFAST8
 "o"

	)

102 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

103 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

104 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

107 
	#PRIu8
 "u"

	)

108 
	#PRIu16
 "u"

	)

109 
	#PRIu32
 "u"

	)

110 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuLEAST8
 "u"

	)

113 
	#PRIuLEAST16
 "u"

	)

114 
	#PRIuLEAST32
 "u"

	)

115 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

117 
	#PRIuFAST8
 "u"

	)

118 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

119 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

120 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

123 
	#PRIx8
 "x"

	)

124 
	#PRIx16
 "x"

	)

125 
	#PRIx32
 "x"

	)

126 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxLEAST8
 "x"

	)

129 
	#PRIxLEAST16
 "x"

	)

130 
	#PRIxLEAST32
 "x"

	)

131 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

133 
	#PRIxFAST8
 "x"

	)

134 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

135 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

136 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

139 
	#PRIX8
 "X"

	)

140 
	#PRIX16
 "X"

	)

141 
	#PRIX32
 "X"

	)

142 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXLEAST8
 "X"

	)

145 
	#PRIXLEAST16
 "X"

	)

146 
	#PRIXLEAST32
 "X"

	)

147 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

149 
	#PRIXFAST8
 "X"

	)

150 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

151 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

152 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

156 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

157 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

158 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

159 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

160 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

161 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

165 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

166 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

167 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

168 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

169 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

170 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

176 
	#SCNd8
 "hhd"

	)

177 
	#SCNd16
 "hd"

	)

178 
	#SCNd32
 "d"

	)

179 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

181 
	#SCNdLEAST8
 "hhd"

	)

182 
	#SCNdLEAST16
 "hd"

	)

183 
	#SCNdLEAST32
 "d"

	)

184 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

186 
	#SCNdFAST8
 "hhd"

	)

187 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

188 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

189 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

192 
	#SCNi8
 "hhi"

	)

193 
	#SCNi16
 "hi"

	)

194 
	#SCNi32
 "i"

	)

195 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

197 
	#SCNiLEAST8
 "hhi"

	)

198 
	#SCNiLEAST16
 "hi"

	)

199 
	#SCNiLEAST32
 "i"

	)

200 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

202 
	#SCNiFAST8
 "hhi"

	)

203 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

204 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

205 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

208 
	#SCNu8
 "hhu"

	)

209 
	#SCNu16
 "hu"

	)

210 
	#SCNu32
 "u"

	)

211 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

213 
	#SCNuLEAST8
 "hhu"

	)

214 
	#SCNuLEAST16
 "hu"

	)

215 
	#SCNuLEAST32
 "u"

	)

216 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

218 
	#SCNuFAST8
 "hhu"

	)

219 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

220 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

221 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

224 
	#SCNo8
 "hho"

	)

225 
	#SCNo16
 "ho"

	)

226 
	#SCNo32
 "o"

	)

227 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

229 
	#SCNoLEAST8
 "hho"

	)

230 
	#SCNoLEAST16
 "ho"

	)

231 
	#SCNoLEAST32
 "o"

	)

232 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

234 
	#SCNoFAST8
 "hho"

	)

235 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

236 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

237 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

240 
	#SCNx8
 "hhx"

	)

241 
	#SCNx16
 "hx"

	)

242 
	#SCNx32
 "x"

	)

243 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

245 
	#SCNxLEAST8
 "hhx"

	)

246 
	#SCNxLEAST16
 "hx"

	)

247 
	#SCNxLEAST32
 "x"

	)

248 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

250 
	#SCNxFAST8
 "hhx"

	)

251 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

252 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

253 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

257 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

258 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

259 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

260 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

261 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

264 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

265 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

266 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

267 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

268 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

273 
	g__BEGIN_DECLS


275 #i‡
__WORDSIZE
 == 64

280 
	mquŸ
;

281 
	mªm
;

282 } 
	timaxdiv_t
;

289 
	mquŸ
;

290 
	mªm
;

291 } 
	timaxdiv_t
;

297 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

300 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

301 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

304 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

305 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

308 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

309 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

312 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

313 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

314 
__THROW
;

317 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

318 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

319 
__THROW
;

321 #ifde‡
__USE_EXTERN_INLINES


323 #i‡
__WORDSIZE
 == 64

325 
	$__°πﬁ_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

326 **
__ª°ri˘
 
__íd±r
,

327 
__ba£
, 
__group
)

328 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

330 
__exã∫_ölöe
 
ötmax_t


331 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

332 
ba£
))

334  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

335 
	}
}

337 
	$__°πoul_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

338 ** 
__ª°ri˘
 
__íd±r
,

339 
__ba£
, 
__group
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

342 
__exã∫_ölöe
 
uötmax_t


343 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

344 
ba£
))

346  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

347 
	}
}

349 
	$__wc°ﬁ_öã∫Æ
 (c⁄° 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

350 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

351 
__ba£
, 
__group
)

352 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

354 
__exã∫_ölöe
 
ötmax_t


355 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

356 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

358  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

359 
	}
}

361 
	$__wc°oul_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

362 
__ª°ri˘
 
__≈å
,

363 
__gwch¨_t
 **

364 
__ª°ri˘
 
__íd±r
,

365 
__ba£
, 
__group
)

366 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

368 
__exã∫_ölöe
 
uötmax_t


369 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

370 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

372  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

373 
	}
}

377 
__exãnsi⁄__


378 
	$__°πﬁl_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

379 **
__ª°ri˘
 
__íd±r
,

380 
__ba£
, 
__group
)

381 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

383 
__exã∫_ölöe
 
ötmax_t


384 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

385 
ba£
))

387  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

388 
	}
}

390 
__exãnsi⁄__


391 
	$__°πouŒ_öã∫Æ
 (const *

392 
__ª°ri˘
 
__≈å
,

394 
__ª°ri˘
 
__íd±r
,

395 
__ba£
,

396 
__group
)

397 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

399 
__exã∫_ölöe
 
uötmax_t


400 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

401 
ba£
))

403  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

404 
	}
}

406 
__exãnsi⁄__


407 
	$__wc°ﬁl_öã∫Æ
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

408 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

409 
__ba£
, 
__group
)

410 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

412 
__exã∫_ölöe
 
ötmax_t


413 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

414 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

416  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

417 
	}
}

420 
__exãnsi⁄__


421 
	$__wc°ouŒ_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

422 
__ª°ri˘
 
__≈å
,

423 
__gwch¨_t
 **

424 
__ª°ri˘
 
__íd±r
,

425 
__ba£
,

426 
__group
)

427 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

429 
__exã∫_ölöe
 
uötmax_t


430 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

431 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

433  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

434 
	}
}

439 
	g__END_DECLS


	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

171 #ifde‡
__STDC__


173 
	#°dö
 
°dö


	)

174 
	#°dout
 
°dout


	)

175 
	#°dîr
 
°dîr


	)

178 
__BEGIN_NAMESPACE_STD


180 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

182 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

183 
__END_NAMESPACE_STD


185 #ifde‡
__USE_ATFILE


187 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

188 c⁄° *
__√w
Ë
__THROW
;

191 
__BEGIN_NAMESPACE_STD


196 #i‚de‡
__USE_FILE_OFFSET64


197 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

199 #ifde‡
__REDIRECT


200 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

202 
	#tmpfûe
 
tmpfûe64


	)

206 #ifde‡
__USE_LARGEFILE64


207 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

211 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

212 
__END_NAMESPACE_STD


214 #ifde‡
__USE_MISC


217 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

221 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


229 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

230 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

234 
__BEGIN_NAMESPACE_STD


239 
	`f˛o£
 (
FILE
 *
__°ªam
);

244 
	`fÊush
 (
FILE
 *
__°ªam
);

245 
__END_NAMESPACE_STD


247 #ifde‡
__USE_MISC


254 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

257 #ifde‡
__USE_GNU


264 
	`f˛o£Æl
 ();

268 
__BEGIN_NAMESPACE_STD


269 #i‚de‡
__USE_FILE_OFFSET64


274 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

275 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

280 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

281 c⁄° *
__ª°ri˘
 
__modes
,

282 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

284 #ifde‡
__REDIRECT


285 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

286 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

287 
__wur
;

288 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

289 c⁄° *
__ª°ri˘
 
__modes
,

290 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

291 
__wur
;

293 
	#f›í
 
f›í64


	)

294 
	#‰e›í
 
‰e›í64


	)

297 
__END_NAMESPACE_STD


298 #ifde‡
__USE_LARGEFILE64


299 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

301 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

302 c⁄° *
__ª°ri˘
 
__modes
,

303 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

306 #ifdef 
__USE_POSIX


308 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

311 #ifdef 
__USE_GNU


314 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

315 c⁄° *
__ª°ri˘
 
__modes
,

316 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

319 #ifde‡
__USE_XOPEN2K8


321 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

322 
__THROW
 
__wur
;

327 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

331 
__BEGIN_NAMESPACE_STD


334 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

338 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

339 
__modes
, 
size_t
 
__n
Ë
__THROW
;

340 
__END_NAMESPACE_STD


342 #ifdef 
__USE_BSD


345 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

346 
size_t
 
__size
Ë
__THROW
;

349 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

353 
__BEGIN_NAMESPACE_STD


358 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

359 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

366 
	$•rötf
 (*
__ª°ri˘
 
__s
,

367 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

373 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

374 
_G_va_li°
 
__¨g
);

379 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

381 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

382 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

383 
__END_NAMESPACE_STD


385 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


386 
__BEGIN_NAMESPACE_C99


388 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

389 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

390 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

392 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

393 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

394 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

395 
__END_NAMESPACE_C99


398 #ifde‡
__USE_GNU


401 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

402 
_G_va_li°
 
__¨g
)

403 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

404 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

405 c⁄° *
__ª°ri˘
 
__fmt
, ...)

406 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

407 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

408 c⁄° *
__ª°ri˘
 
__fmt
, ...)

409 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

412 #ifde‡
__USE_XOPEN2K8


414 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

415 
_G_va_li°
 
__¨g
)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

417 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

418 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

422 
__BEGIN_NAMESPACE_STD


427 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

428 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

435 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

436 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

438 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

439 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

440 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

441 #ifde‡
__REDIRECT


445 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

446 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_fsˇnf
Ë
__wur
;

448 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

449 
__isoc99_sˇnf
Ë
__wur
;

450 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

451 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

452 
__isoc99_ssˇnf
);

454 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

455 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

456 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

457 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

458 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

459 
	#fsˇnf
 
__isoc99_fsˇnf


	)

460 
	#sˇnf
 
__isoc99_sˇnf


	)

461 
	#ssˇnf
 
__isoc99_ssˇnf


	)

465 
__END_NAMESPACE_STD


467 #ifdef 
__USE_ISOC99


468 
__BEGIN_NAMESPACE_C99


473 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

474 
_G_va_li°
 
__¨g
)

475 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

481 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

482 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

485 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

486 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

487 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

489 #i‡!
deföed
 
__USE_GNU
 \

490 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

491 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

492 #ifde‡
__REDIRECT


496 
	`__REDIRECT
 (
vfsˇnf
,

497 (
FILE
 *
__ª°ri˘
 
__s
,

498 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

499 
__isoc99_vfsˇnf
)

500 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

501 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

502 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

503 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

504 
	`__REDIRECT_NTH
 (
vssˇnf
,

505 (c⁄° *
__ª°ri˘
 
__s
,

506 c⁄° *
__ª°ri˘
 
__f‹m©
,

507 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

508 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

510 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

511 c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

514 
_G_va_li°
 
__¨g
Ë
__wur
;

515 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

516 c⁄° *
__ª°ri˘
 
__f‹m©
,

517 
_G_va_li°
 
__¨g
Ë
__THROW
;

518 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

519 
	#vsˇnf
 
__isoc99_vsˇnf


	)

520 
	#vssˇnf
 
__isoc99_vssˇnf


	)

524 
__END_NAMESPACE_C99


528 
__BEGIN_NAMESPACE_STD


533 
	`fgëc
 (
FILE
 *
__°ªam
);

534 
	`gëc
 (
FILE
 *
__°ªam
);

540 
	`gëch¨
 ();

541 
__END_NAMESPACE_STD


545 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

547 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


552 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

553 
	`gëch¨_u∆ocked
 ();

556 #ifde‡
__USE_MISC


563 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

567 
__BEGIN_NAMESPACE_STD


575 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

576 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

582 
	`putch¨
 (
__c
);

583 
__END_NAMESPACE_STD


587 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

589 #ifde‡
__USE_MISC


596 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

599 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


604 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

605 
	`putch¨_u∆ocked
 (
__c
);

609 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

610 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

612 
	`gëw
 (
FILE
 *
__°ªam
);

615 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

619 
__BEGIN_NAMESPACE_STD


624 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

625 
__wur
;

627 #i‡!
deföed
 
__USE_ISOC11
 \

628 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

640 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

642 
__END_NAMESPACE_STD


644 #ifde‡
__USE_GNU


651 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

652 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

656 #ifdef 
__USE_XOPEN2K8


667 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

668 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

669 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

670 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

671 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

672 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

680 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

681 
size_t
 *
__ª°ri˘
 
__n
,

682 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

686 
__BEGIN_NAMESPACE_STD


691 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

697 
	`puts
 (c⁄° *
__s
);

704 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

711 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

712 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

717 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

718 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

719 
__END_NAMESPACE_STD


721 #ifde‡
__USE_GNU


728 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

729 
FILE
 *
__ª°ri˘
 
__°ªam
);

732 #ifde‡
__USE_MISC


739 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

741 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

742 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

746 
__BEGIN_NAMESPACE_STD


751 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

756 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

761 
	`ªwöd
 (
FILE
 *
__°ªam
);

762 
__END_NAMESPACE_STD


769 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


770 #i‚de‡
__USE_FILE_OFFSET64


775 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

780 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

782 #ifde‡
__REDIRECT


783 
	`__REDIRECT
 (
f£eko
,

784 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

785 
f£eko64
);

786 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

788 
	#f£eko
 
f£eko64


	)

789 
	#·ñlo
 
·ñlo64


	)

794 
__BEGIN_NAMESPACE_STD


795 #i‚de‡
__USE_FILE_OFFSET64


800 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

805 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

807 #ifde‡
__REDIRECT


808 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

809 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

810 
	`__REDIRECT
 (
f£ços
,

811 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

813 
	#fgëpos
 
fgëpos64


	)

814 
	#f£ços
 
f£ços64


	)

817 
__END_NAMESPACE_STD


819 #ifde‡
__USE_LARGEFILE64


820 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

821 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

822 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

823 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

826 
__BEGIN_NAMESPACE_STD


828 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

830 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

832 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

833 
__END_NAMESPACE_STD


835 #ifde‡
__USE_MISC


837 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

838 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

839 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

843 
__BEGIN_NAMESPACE_STD


848 
	`≥º‹
 (c⁄° *
__s
);

849 
__END_NAMESPACE_STD


855 
	~<bôs/sys_îæi°.h
>

858 #ifdef 
__USE_POSIX


860 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

863 #ifde‡
__USE_MISC


865 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

869 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

870 
deföed
 
__USE_MISC
)

875 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

881 
	`p˛o£
 (
FILE
 *
__°ªam
);

885 #ifdef 
__USE_POSIX


887 *
	$˘îmid
 (*
__s
Ë
__THROW
;

891 #ifde‡
__USE_XOPEN


893 *
	`cu£rid
 (*
__s
);

897 #ifdef 
__USE_GNU


898 
ob°ack
;

901 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

902 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

903 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

904 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

905 c⁄° *
__ª°ri˘
 
__f‹m©
,

906 
_G_va_li°
 
__¨gs
)

907 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

911 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


915 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

919 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

922 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

925 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


929 
	#__√ed_gë›t


	)

930 
	~<gë›t.h
>

935 #ifde‡
__USE_EXTERN_INLINES


936 
	~<bôs/°dio.h
>

938 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


939 
	~<bôs/°dio2.h
>

941 #ifde‡
__LDBL_COMPAT


942 
	~<bôs/°dio-ldbl.h
>

945 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©of
 (c⁄° *
__≈å
))

280  
	`°πod
 (
__≈å
, (**Ë
NULL
);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

285  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
__exã∫_ölöe
 

288 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

290  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

291 
	}
}

292 
	g__END_NAMESPACE_STD


294 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


295 
__BEGIN_NAMESPACE_C99


296 
__exãnsi⁄__
 
__exã∫_ölöe
 

297 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

299  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

300 
	}
}

301 
	g__END_NAMESPACE_C99


306 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


310 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

313 
	$a64l
 (c⁄° *
__s
)

314 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

318 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


319 
	~<sys/ty≥s.h
>

326 
	$øndom
 (Ë
__THROW
;

329 
	$§™dom
 (
__£ed
Ë
__THROW
;

335 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

336 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

340 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

343 #ifde‡
__USE_MISC


348 
	søndom_d©a


350 
öt32_t
 *
Âå
;

351 
öt32_t
 *
Ωå
;

352 
öt32_t
 *
°©e
;

353 
ønd_ty≥
;

354 
ønd_deg
;

355 
ønd_£p
;

356 
öt32_t
 *
íd_±r
;

359 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

360 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

362 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2));

365 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

366 
size_t
 
__°©ñí
,

367 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

368 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

370 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

371 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

372 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

377 
__BEGIN_NAMESPACE_STD


379 
	$ønd
 (Ë
__THROW
;

381 
	$§™d
 (
__£ed
Ë
__THROW
;

382 
__END_NAMESPACE_STD


384 #ifde‡
__USE_POSIX


386 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

390 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


394 
	$dønd48
 (Ë
__THROW
;

395 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$Ã™d48
 (Ë
__THROW
;

399 
	$ƒ™d48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$mønd48
 (Ë
__THROW
;

404 
	$jønd48
 (
__xsubi
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

408 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

409 *
	$£ed48
 (
__£ed16v
[3])

410 
__THROW
 
	`__n⁄nuŒ
 ((1));

411 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

413 #ifde‡
__USE_MISC


417 
	sdønd48_d©a


419 
__x
[3];

420 
__ﬁd_x
[3];

421 
__c
;

422 
__öô
;

423 
__a
;

427 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

428 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

429 
	$î™d48_r
 (
__xsubi
[3],

430 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

434 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

437 
	$ƒ™d48_r
 (
__xsubi
[3],

438 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

439 *
__ª°ri˘
 
__ªsu…
)

440 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

443 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

446 
	$jønd48_r
 (
__xsubi
[3],

447 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

448 *
__ª°ri˘
 
__ªsu…
)

449 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

452 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

453 
__THROW
 
	`__n⁄nuŒ
 ((2));

455 
	$£ed48_r
 (
__£ed16v
[3],

456 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

458 
	$lc⁄g48_r
 (
__∑øm
[7],

459 
dønd48_d©a
 *
__buf„r
)

460 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

466 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


467 
	#__mÆloc_™d_ˇŒoc_deföed


	)

468 
__BEGIN_NAMESPACE_STD


470 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

472 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

473 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

474 
__END_NAMESPACE_STD


477 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


478 
__BEGIN_NAMESPACE_STD


484 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

485 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

487 
	$‰ì
 (*
__±r
Ë
__THROW
;

488 
__END_NAMESPACE_STD


490 #ifdef 
__USE_MISC


492 
	$c‰ì
 (*
__±r
Ë
__THROW
;

495 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


496 
	~<Æloˇ.h
>

499 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

500 || 
deföed
 
__USE_BSD


502 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

505 #ifde‡
__USE_XOPEN2K


507 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

508 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

511 #ifde‡
__USE_ISOC11


513 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

514 
__THROW
 
__wur
 
	`__©åibuã__
 ((
__mÆloc__
, 
	`__Æloc_size__
 (2)));

517 
__BEGIN_NAMESPACE_STD


519 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

523 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

525 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


527 #ifde‡
__˝lu•lus


528 "C++" 
	`©_quick_exô
 ((*
__func
) ())

529 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

531 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

534 
__END_NAMESPACE_STD


536 #ifdef 
__USE_MISC


539 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

540 
__THROW
 
	`__n⁄nuŒ
 ((1));

543 
__BEGIN_NAMESPACE_STD


547 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

549 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


553 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

555 
__END_NAMESPACE_STD


557 #ifde‡
__USE_ISOC99


558 
__BEGIN_NAMESPACE_C99


561 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

562 
__END_NAMESPACE_C99


566 
__BEGIN_NAMESPACE_STD


568 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

569 
__END_NAMESPACE_STD


573 *
	$__£cuª_gëív
 (c⁄° *
__«me
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

576 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


580 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

583 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


586 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

587 
__THROW
 
	`__n⁄nuŒ
 ((2));

590 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #ifdef 
__USE_MISC


597 
	$˛óªnv
 (Ë
__THROW
;

601 #i‡
deföed
 
__USE_MISC
 \

602 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

608 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

611 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

612 || 
deföed
 
__USE_XOPEN2K8


621 #i‚de‡
__USE_FILE_OFFSET64


622 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

624 #ifde‡
__REDIRECT


625 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

626 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

628 
	#mk°emp
 
mk°emp64


	)

631 #ifde‡
__USE_LARGEFILE64


632 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

636 #ifde‡
__USE_MISC


643 #i‚de‡
__USE_FILE_OFFSET64


644 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

646 #ifde‡
__REDIRECT


647 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

648 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

650 
	#mk°emps
 
mk°emps64


	)

653 #ifde‡
__USE_LARGEFILE64


654 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

655 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

659 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


665 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

668 #ifde‡
__USE_GNU


675 #i‚de‡
__USE_FILE_OFFSET64


676 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

678 #ifde‡
__REDIRECT


679 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

680 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

682 
	#mko°emp
 
mko°emp64


	)

685 #ifde‡
__USE_LARGEFILE64


686 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

695 #i‚de‡
__USE_FILE_OFFSET64


696 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

697 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

699 #ifde‡
__REDIRECT


700 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

701 
__Êags
), 
mko°emps64
)

702 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

704 
	#mko°emps
 
mko°emps64


	)

707 #ifde‡
__USE_LARGEFILE64


708 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

709 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

714 
__BEGIN_NAMESPACE_STD


719 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

720 
__END_NAMESPACE_STD


723 #ifdef 
__USE_GNU


726 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

727 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

730 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


736 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

737 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

742 #i‚de‡
__COMPAR_FN_T


743 
	#__COMPAR_FN_T


	)

744 (*
	t__com∑r_‚_t
) (const *, const *);

746 #ifdef 
__USE_GNU


747 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

750 #ifde‡
__USE_GNU


751 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

754 
__BEGIN_NAMESPACE_STD


757 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

758 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

759 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

763 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

764 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

765 #ifde‡
__USE_GNU


766 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

767 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

768 
	`__n⁄nuŒ
 ((1, 4));

773 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

774 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

775 
__END_NAMESPACE_STD


777 #ifde‡
__USE_ISOC99


778 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

779 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

783 
__BEGIN_NAMESPACE_STD


787 
div_t
 
	$div
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
__END_NAMESPACE_STD


793 #ifde‡
__USE_ISOC99


794 
__BEGIN_NAMESPACE_C99


795 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

796 
__díom
)

797 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

798 
__END_NAMESPACE_C99


802 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

803 || 
deföed
 
__USE_SVID


810 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

811 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

816 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

817 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

822 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

823 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

826 #ifde‡
__USE_MISC


828 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

829 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

830 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

831 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

832 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

834 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

835 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

840 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

841 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

842 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

843 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

844 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

845 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

847 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

848 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

849 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

850 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

851 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

852 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

853 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

854 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

859 
__BEGIN_NAMESPACE_STD


862 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

865 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

866 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

869 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

873 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

874 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

876 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

877 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

878 
__THROW
;

879 
__END_NAMESPACE_STD


882 #ifde‡
__USE_SVID


887 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


898 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

899 *c⁄° *
__ª°ri˘
 
__tokís
,

900 **
__ª°ri˘
 
__vÆuï
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

905 #ifde‡
__USE_XOPEN


907 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

913 #ifde‡
__USE_XOPEN2KXSI


915 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

918 #ifde‡
__USE_XOPEN


923 
	$gø¡±
 (
__fd
Ë
__THROW
;

927 
	$u∆ock±
 (
__fd
Ë
__THROW
;

932 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

935 #ifde‡
__USE_GNU


939 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

940 
__THROW
 
	`__n⁄nuŒ
 ((2));

943 
	`gë±
 ();

946 #ifde‡
__USE_BSD


950 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

951 
__THROW
 
	`__n⁄nuŒ
 ((1));

956 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


957 
	~<bôs/°dlib.h
>

959 #ifde‡
__LDBL_COMPAT


960 
	~<bôs/°dlib-ldbl.h
>

964 #unde‡
__√ed_mÆloc_™d_ˇŒoc


966 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

170 || 
deföed
 
__USE_XOPEN2K8


172 *
	$°rdup
 (c⁄° *
__s
)

173 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

179 #i‡
deföed
 
__USE_XOPEN2K8


180 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

181 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

184 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


186 
	#°rdu∑
(
s
) \

187 (
__exãnsi⁄__
 \

189 c⁄° *
__ﬁd
 = (
s
); \

190 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

191 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

192 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

193 
	}
}))

	)

196 
	#°∫du∑
(
s
, 
n
) \

197 (
__exãnsi⁄__
 \

199 c⁄° *
__ﬁd
 = (
s
); \

200 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

201 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

202 
__√w
[
__Àn
] = '\0'; \

203 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

204 }))

	)

207 
	g__BEGIN_NAMESPACE_STD


209 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


212 *
°rchr
 (*
__s
, 
__c
)

213 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

214 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

215 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 #ifde‡
__OPTIMIZE__


218 
__exã∫_Æways_ölöe
 *

219 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


221  
__buûtö_°rchr
 (
__s
, 
__c
);

224 
__exã∫_Æways_ölöe
 const *

225 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


227  
__buûtö_°rchr
 (
__s
, 
__c
);

232 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

233 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

236 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


239 *
	`°ºchr
 (*
__s
, 
__c
)

240 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

241 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

242 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 #ifde‡
__OPTIMIZE__


245 
__exã∫_Æways_ölöe
 *

246 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


248  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

251 
__exã∫_Æways_ölöe
 const *

252 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


254  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

257 
	}
}

259 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

260 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

262 
__END_NAMESPACE_STD


264 #ifde‡
__USE_GNU


267 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


268 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

269 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

270 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

271 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

274 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

278 
__BEGIN_NAMESPACE_STD


281 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

282 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

285 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


291 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

292 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

293 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

294 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 #ifde‡
__OPTIMIZE__


297 
__exã∫_Æways_ölöe
 *

298 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


300  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

303 
__exã∫_Æways_ölöe
 const *

304 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


306  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

309 
	}
}

311 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

312 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

315 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


318 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

319 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

320 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

321 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 #ifde‡
__OPTIMIZE__


324 
__exã∫_Æways_ölöe
 *

325 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


327  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

330 
__exã∫_Æways_ölöe
 const *

331 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


333  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

336 
	}
}

338 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

339 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

344 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

345 
__THROW
 
	`__n⁄nuŒ
 ((2));

346 
__END_NAMESPACE_STD


350 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

351 c⁄° *
__ª°ri˘
 
__dñim
,

352 **
__ª°ri˘
 
__ßve_±r
)

353 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

354 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


355 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

360 #ifde‡
__USE_GNU


362 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


363 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

364 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

365 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

366 c⁄° *
__√edÀ
)

367 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

370 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

374 #ifde‡
__USE_GNU


378 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

379 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

380 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

384 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

385 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

386 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

387 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

388 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

389 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

393 
__BEGIN_NAMESPACE_STD


395 
size_t
 
	$°æí
 (c⁄° *
__s
)

396 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

397 
__END_NAMESPACE_STD


399 #ifdef 
__USE_XOPEN2K8


402 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

403 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

407 
__BEGIN_NAMESPACE_STD


409 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

410 
__END_NAMESPACE_STD


411 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


419 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


422 #ifde‡
__REDIRECT_NTH


423 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

424 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

425 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

427 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

428 
__THROW
 
	`__n⁄nuŒ
 ((2));

429 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

434 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

435 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

439 #ifde‡
__USE_XOPEN2K8


441 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

447 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

449 #ifde‡
__USE_BSD


451 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

452 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

455 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

458 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

459 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

462 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


465 *
	`ödex
 (*
__s
, 
__c
)

466 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

467 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

468 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

470 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


471 
__exã∫_Æways_ölöe
 *

472 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


474  
	`__buûtö_ödex
 (
__s
, 
__c
);

477 
__exã∫_Æways_ölöe
 const *

478 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


480  
	`__buûtö_ödex
 (
__s
, 
__c
);

483 
	}
}

485 *
	$ödex
 (c⁄° *
__s
, 
__c
)

486 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

490 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


493 *
	`rödex
 (*
__s
, 
__c
)

494 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

495 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

496 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

498 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


499 
__exã∫_Æways_ölöe
 *

500 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


502  
	`__buûtö_rödex
 (
__s
, 
__c
);

505 
__exã∫_Æways_ölöe
 const *

506 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


508  
	`__buûtö_rödex
 (
__s
, 
__c
);

511 
	}
}

513 *
	$rödex
 (c⁄° *
__s
, 
__c
)

514 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

519 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

523 #ifdef 
__USE_GNU


524 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

525 #ifde‡
__GNUC__


526 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

527 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

532 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

533 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

536 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 #ifdef 
__USE_GNU


543 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

544 
__loˇÀ_t
 
__loc
)

545 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

547 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

548 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

552 #ifdef 
__USE_BSD


555 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

556 c⁄° *
__ª°ri˘
 
__dñim
)

557 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

560 #ifdef 
__USE_XOPEN2K8


562 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

565 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

566 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

567 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

575 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

576 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

577 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

580 #ifdef 
__USE_GNU


582 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

583 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

586 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

589 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #i‚de‡
ba£«me


596 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


597 "C++" *
	$ba£«me
 (*
__fûíame
)

598 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

602 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

608 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

609 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

610 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


630 
	~<bôs/°rög.h
>

633 
	~<bôs/°rög2.h
>

636 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


638 
	~<bôs/°rög3.h
>

642 
__END_DECLS


	@/usr/include/sys/mman.h

19 #i‚def 
_SYS_MMAN_H


20 
	#_SYS_MMAN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 #i‚de‡
__off_t_deföed


28 #i‚de‡
__USE_FILE_OFFSET64


29 
__off_t
 
	toff_t
;

31 
__off64_t
 
	toff_t
;

33 
	#__off_t_deföed


	)

36 #i‚de‡
__mode_t_deföed


37 
__mode_t
 
	tmode_t
;

38 
	#__mode_t_deföed


	)

41 
	~<bôs/mm™.h
>

44 
	#MAP_FAILED
 ((*Ë-1)

	)

46 
	g__BEGIN_DECLS


56 #i‚de‡
__USE_FILE_OFFSET64


57 *
	$mm≠
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

58 
__Êags
, 
__fd
, 
__off_t
 
__off£t
Ë
__THROW
;

60 #ifde‡
__REDIRECT_NTH


61 * 
	`__REDIRECT_NTH
 (
mm≠
,

62 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

63 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
),

64 
mm≠64
);

66 
	#mm≠
 
mm≠64


	)

69 #ifde‡
__USE_LARGEFILE64


70 *
	$mm≠64
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

71 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
Ë
__THROW
;

76 
	$munm≠
 (*
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

81 
	$m¥Ÿe˘
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
Ë
__THROW
;

89 
	`msync
 (*
__addr
, 
size_t
 
__Àn
, 
__Êags
);

91 #ifde‡
__USE_BSD


94 
	$madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

96 #ifde‡
__USE_XOPEN2K


98 
	$posix_madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

103 
	$mlock
 (c⁄° *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

106 
	$mu∆ock
 (c⁄° *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

111 
	$mlockÆl
 (
__Êags
Ë
__THROW
;

115 
	$mu∆ockÆl
 (Ë
__THROW
;

117 #ifde‡
__USE_MISC


123 
	$möc‹e
 (*
__°¨t
, 
size_t
 
__Àn
, *
__vec
)

124 
__THROW
;

127 #ifde‡
__USE_GNU


133 *
	$mªm≠
 (*
__addr
, 
size_t
 
__ﬁd_Àn
, size_à
__√w_Àn
,

134 
__Êags
, ...Ë
__THROW
;

138 
	$ªm≠_fûe_∑ges
 (*
__°¨t
, 
size_t
 
__size
, 
__¥Ÿ
,

139 
size_t
 
__pgoff
, 
__Êags
Ë
__THROW
;

144 
	`shm_›í
 (c⁄° *
__«me
, 
__oÊag
, 
mode_t
 
__mode
);

147 
	`shm_u∆ök
 (c⁄° *
__«me
);

149 
__END_DECLS


	@/usr/include/sys/stat.h

23 #i‚def 
_SYS_STAT_H


24 
	#_SYS_STAT_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

31 || 
deföed
 
	g__USE_ATFILE


32 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


33 
	#__√ed_time_t


	)

35 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


36 
	#__√ed_time•ec


	)

38 
	~<time.h
>

41 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


44 #i‚de‡
__dev_t_deföed


45 
__dev_t
 
	tdev_t
;

46 
	#__dev_t_deföed


	)

49 #i‚de‡
__gid_t_deföed


50 
__gid_t
 
	tgid_t
;

51 
	#__gid_t_deföed


	)

54 #i‚de‡
__öo_t_deföed


55 #i‚de‡
__USE_FILE_OFFSET64


56 
__öo_t
 
	töo_t
;

58 
__öo64_t
 
	töo_t
;

60 
	#__öo_t_deföed


	)

63 #i‚de‡
__mode_t_deföed


64 
__mode_t
 
	tmode_t
;

65 
	#__mode_t_deföed


	)

68 #i‚de‡
__∆ök_t_deföed


69 
__∆ök_t
 
	t∆ök_t
;

70 
	#__∆ök_t_deföed


	)

73 #i‚de‡
__off_t_deföed


74 #i‚de‡
__USE_FILE_OFFSET64


75 
__off_t
 
	toff_t
;

77 
__off64_t
 
	toff_t
;

79 
	#__off_t_deföed


	)

82 #i‚de‡
__uid_t_deföed


83 
__uid_t
 
	tuid_t
;

84 
	#__uid_t_deföed


	)

88 #ifde‡
__USE_UNIX98


89 #i‚de‡
__blk˙t_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__blk˙t_t
 
	tblk˙t_t
;

93 
__blk˙t64_t
 
	tblk˙t_t
;

95 
	#__blk˙t_t_deföed


	)

98 #i‚de‡
__blksize_t_deföed


99 
__blksize_t
 
	tblksize_t
;

100 
	#__blksize_t_deföed


	)

104 
	g__BEGIN_DECLS


106 
	~<bôs/°©.h
>

108 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


109 
	#S_IFMT
 
__S_IFMT


	)

110 
	#S_IFDIR
 
__S_IFDIR


	)

111 
	#S_IFCHR
 
__S_IFCHR


	)

112 
	#S_IFBLK
 
__S_IFBLK


	)

113 
	#S_IFREG
 
__S_IFREG


	)

114 #ifde‡
__S_IFIFO


115 
	#S_IFIFO
 
__S_IFIFO


	)

117 #ifde‡
__S_IFLNK


118 
	#S_IFLNK
 
__S_IFLNK


	)

120 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

121 && 
deföed
 
	g__S_IFSOCK


122 
	#S_IFSOCK
 
__S_IFSOCK


	)

128 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

130 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

131 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

132 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

133 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

134 #ifde‡
__S_IFIFO


135 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

137 #ifde‡
__S_IFLNK


138 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

141 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


142 
	#S_ISLNK
(
mode
Ë0

	)

145 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K
) \

146 && 
deföed
 
	g__S_IFSOCK


147 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

148 #ñi‡
deföed
 
__USE_XOPEN2K


149 
	#S_ISSOCK
(
mode
Ë0

	)

156 #ifdef 
__USE_POSIX199309


157 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

158 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

159 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

165 
	#S_ISUID
 
__S_ISUID


	)

166 
	#S_ISGID
 
__S_ISGID


	)

168 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


170 
	#S_ISVTX
 
__S_ISVTX


	)

173 
	#S_IRUSR
 
__S_IREAD


	)

174 
	#S_IWUSR
 
__S_IWRITE


	)

175 
	#S_IXUSR
 
__S_IEXEC


	)

177 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

179 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


180 
	#S_IREAD
 
S_IRUSR


	)

181 
	#S_IWRITE
 
S_IWUSR


	)

182 
	#S_IEXEC
 
S_IXUSR


	)

185 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

186 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

187 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

189 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

191 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

192 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

193 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

195 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

198 #ifdef 
__USE_BSD


200 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

201 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

202 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

204 
	#S_BLKSIZE
 512

	)

208 #i‚de‡
__USE_FILE_OFFSET64


210 
	$°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

211 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

215 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

217 #ifde‡
__REDIRECT_NTH


218 
	`__REDIRECT_NTH
 (
°©
, (c⁄° *
__ª°ri˘
 
__fûe
,

219 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

220 
	`__n⁄nuŒ
 ((1, 2));

221 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

222 
	`__n⁄nuŒ
 ((2));

224 
	#°©
 
°©64


	)

225 
	#f°©
 
f°©64


	)

228 #ifde‡
__USE_LARGEFILE64


229 
	$°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

230 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

231 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

234 #ifde‡
__USE_ATFILE


238 #i‚de‡
__USE_FILE_OFFSET64


239 
	$f°©©
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

240 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

241 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

243 #ifde‡
__REDIRECT_NTH


244 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

245 
°©
 *
__ª°ri˘
 
__buf
,

246 
__Êag
),

247 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

249 
	#f°©©
 
f°©©64


	)

253 #ifde‡
__USE_LARGEFILE64


254 
	$f°©©64
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

255 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

256 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

260 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


261 #i‚de‡
__USE_FILE_OFFSET64


264 
	$l°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

265 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

267 #ifde‡
__REDIRECT_NTH


268 
	`__REDIRECT_NTH
 (
l°©
,

269 (c⁄° *
__ª°ri˘
 
__fûe
,

270 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

271 
	`__n⁄nuŒ
 ((1, 2));

273 
	#l°©
 
l°©64


	)

276 #ifde‡
__USE_LARGEFILE64


277 
	$l°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

278 
°©64
 *
__ª°ri˘
 
__buf
)

279 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

285 
	$chmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

286 
__THROW
 
	`__n⁄nuŒ
 ((1));

288 #ifde‡
__USE_BSD


292 
	$lchmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX


298 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

301 #ifde‡
__USE_ATFILE


304 
	$fchmod©
 (
__fd
, c⁄° *
__fûe
, 
__mode_t
 
__mode
,

305 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

313 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

315 #ifdef 
__USE_GNU


318 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

322 
	$mkdú
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

323 
__THROW
 
	`__n⁄nuŒ
 ((1));

325 #ifde‡
__USE_ATFILE


329 
	$mkdú©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

330 
__THROW
 
	`__n⁄nuŒ
 ((2));

336 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


337 
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

338 
__THROW
 
	`__n⁄nuŒ
 ((1));

340 #ifde‡
__USE_ATFILE


344 
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

345 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

351 
	$mkfifo
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

352 
__THROW
 
	`__n⁄nuŒ
 ((1));

354 #ifde‡
__USE_ATFILE


358 
	$mkfifﬂt
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

359 
__THROW
 
	`__n⁄nuŒ
 ((2));

362 #ifde‡
__USE_ATFILE


365 
	$utimíßt
 (
__fd
, c⁄° *
__∑th
,

366 c⁄° 
time•ec
 
__times
[2],

367 
__Êags
)

368 
__THROW
 
	`__n⁄nuŒ
 ((2));

371 #ifde‡
__USE_XOPEN2K8


373 
	$futimís
 (
__fd
, c⁄° 
time•ec
 
__times
[2]Ë
__THROW
;

391 #i‚de‡
_STAT_VER


392 
	#_STAT_VER
 0

	)

394 #i‚de‡
_MKNOD_VER


395 
	#_MKNOD_VER
 0

	)

399 #i‚de‡
__USE_FILE_OFFSET64


400 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

401 
__THROW
 
	`__n⁄nuŒ
 ((3));

402 
	$__x°©
 (
__vî
, c⁄° *
__fûíame
,

403 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

404 
	$__lx°©
 (
__vî
, c⁄° *
__fûíame
,

405 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

406 
	$__fx°©©
 (
__vî
, 
__fûdes
, c⁄° *
__fûíame
,

407 
°©
 *
__°©_buf
, 
__Êag
)

408 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

410 #ifde‡
__REDIRECT_NTH


411 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

412 
°©
 *
__°©_buf
), 
__fx°©64
)

413 
	`__n⁄nuŒ
 ((3));

414 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, c⁄° *
__fûíame
,

415 
°©
 *
__°©_buf
), 
__x°©64
)

416 
	`__n⁄nuŒ
 ((2, 3));

417 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, c⁄° *
__fûíame
,

418 
°©
 *
__°©_buf
), 
__lx°©64
)

419 
	`__n⁄nuŒ
 ((2, 3));

420 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

421 c⁄° *
__fûíame
,

422 
°©
 *
__°©_buf
, 
__Êag
),

423 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

426 
	#__fx°©
 
__fx°©64


	)

427 
	#__x°©
 
__x°©64


	)

428 
	#__lx°©
 
__lx°©64


	)

432 #ifde‡
__USE_LARGEFILE64


433 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

434 
__THROW
 
	`__n⁄nuŒ
 ((3));

435 
	$__x°©64
 (
__vî
, c⁄° *
__fûíame
,

436 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

437 
	$__lx°©64
 (
__vî
, c⁄° *
__fûíame
,

438 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

439 
	$__fx°©©64
 (
__vî
, 
__fûdes
, c⁄° *
__fûíame
,

440 
°©64
 *
__°©_buf
, 
__Êag
)

441 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

443 
	$__xmknod
 (
__vî
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

444 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

446 
	$__xmknod©
 (
__vî
, 
__fd
, c⁄° *
__∑th
,

447 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

448 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

450 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


453 
__exã∫_ölöe
 

454 
	`__NTH
 (
	$°©
 (c⁄° *
__∑th
, 
°©
 *
__°©buf
))

456  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

457 
	}
}

459 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


460 
__exã∫_ölöe
 

461 
__NTH
 (
	$l°©
 (c⁄° *
__∑th
, 
°©
 *
__°©buf
))

463  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

464 
	}
}

467 
__exã∫_ölöe
 

468 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

470  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

471 
	}
}

473 #ifde‡
__USE_ATFILE


474 
__exã∫_ölöe
 

475 
__NTH
 (
	$f°©©
 (
__fd
, c⁄° *
__fûíame
, 
°©
 *
__°©buf
,

476 
__Êag
))

478  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

479 
	}
}

482 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


483 
__exã∫_ölöe
 

484 
__NTH
 (
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

486  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

487 
	}
}

490 #ifde‡
__USE_ATFILE


491 
__exã∫_ölöe
 

492 
__NTH
 (
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

493 
__dev_t
 
__dev
))

495  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

496 
	}
}

499 #i‡
deföed
 
__USE_LARGEFILE64
 \

500 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

501 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

502 
__exã∫_ölöe
 

503 
__NTH
 (
	$°©64
 (c⁄° *
__∑th
, 
°©64
 *
__°©buf
))

505  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

506 
	}
}

508 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


509 
__exã∫_ölöe
 

510 
__NTH
 (
	$l°©64
 (c⁄° *
__∑th
, 
°©64
 *
__°©buf
))

512  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

513 
	}
}

516 
__exã∫_ölöe
 

517 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

519  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

520 
	}
}

522 #ifde‡
__USE_ATFILE


523 
__exã∫_ölöe
 

524 
__NTH
 (
	$f°©©64
 (
__fd
, c⁄° *
__fûíame
, 
°©64
 *
__°©buf
,

525 
__Êag
))

527  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

528 
	}
}

535 
	g__END_DECLS


	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_BSD


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

44 
__loff_t
 
	tloff_t
;

46 #i‚de‡
__öo_t_deföed


47 #i‚de‡
__USE_FILE_OFFSET64


48 
__öo_t
 
	töo_t
;

50 
__öo64_t
 
	töo_t
;

52 
	#__öo_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


55 
__öo64_t
 
	töo64_t
;

56 
	#__öo64_t_deföed


	)

59 #i‚de‡
__dev_t_deföed


60 
__dev_t
 
	tdev_t
;

61 
	#__dev_t_deföed


	)

64 #i‚de‡
__gid_t_deföed


65 
__gid_t
 
	tgid_t
;

66 
	#__gid_t_deföed


	)

69 #i‚de‡
__mode_t_deföed


70 
__mode_t
 
	tmode_t
;

71 
	#__mode_t_deföed


	)

74 #i‚de‡
__∆ök_t_deföed


75 
__∆ök_t
 
	t∆ök_t
;

76 
	#__∆ök_t_deföed


	)

79 #i‚de‡
__uid_t_deföed


80 
__uid_t
 
	tuid_t
;

81 
	#__uid_t_deföed


	)

84 #i‚de‡
__off_t_deföed


85 #i‚de‡
__USE_FILE_OFFSET64


86 
__off_t
 
	toff_t
;

88 
__off64_t
 
	toff_t
;

90 
	#__off_t_deföed


	)

92 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


93 
__off64_t
 
	toff64_t
;

94 
	#__off64_t_deföed


	)

97 #i‚de‡
__pid_t_deföed


98 
__pid_t
 
	tpid_t
;

99 
	#__pid_t_deföed


	)

102 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

103 && !
deföed
 
__id_t_deföed


104 
__id_t
 
	tid_t
;

105 
	#__id_t_deföed


	)

108 #i‚de‡
__ssize_t_deföed


109 
__ssize_t
 
	tssize_t
;

110 
	#__ssize_t_deföed


	)

113 #ifdef 
__USE_BSD


114 #i‚de‡
__daddr_t_deföed


115 
__daddr_t
 
	tdaddr_t
;

116 
__ˇddr_t
 
	tˇddr_t
;

117 
	#__daddr_t_deföed


	)

121 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


122 
__key_t
 
	tkey_t
;

123 
	#__key_t_deföed


	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#__√ed_˛ock_t


	)

129 
	#__√ed_time_t


	)

130 
	#__√ed_timî_t


	)

131 
	#__√ed_˛ockid_t


	)

132 
	~<time.h
>

134 #ifde‡
__USE_XOPEN


135 #i‚de‡
__u£c⁄ds_t_deföed


136 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

137 
	#__u£c⁄ds_t_deföed


	)

139 #i‚de‡
__su£c⁄ds_t_deföed


140 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

141 
	#__su£c⁄ds_t_deföed


	)

145 
	#__√ed_size_t


	)

146 
	~<°ddef.h
>

148 #ifde‡
__USE_MISC


150 
	tul⁄g
;

151 
	tush‹t
;

152 
	tuöt
;

157 #i‡!
__GNUC_PREREQ
 (2, 7)

160 #i‚de‡
__öt8_t_deföed


161 
	#__öt8_t_deföed


	)

162 
	töt8_t
;

163 
	töt16_t
;

164 
	töt32_t
;

165 #i‡
__WORDSIZE
 == 64

166 
	töt64_t
;

167 #ñi‡
__GLIBC_HAVE_LONG_LONG


168 
__exãnsi⁄__
 
	töt64_t
;

173 
	tu_öt8_t
;

174 
	tu_öt16_t
;

175 
	tu_öt32_t
;

176 #i‡
__WORDSIZE
 == 64

177 
	tu_öt64_t
;

178 #ñi‡
__GLIBC_HAVE_LONG_LONG


179 
__exãnsi⁄__
 
	tu_öt64_t
;

182 
	tªgi°î_t
;

187 
	#__ötN_t
(
N
, 
MODE
) \

188 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

189 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

190 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

192 #i‚de‡
	t__öt8_t_deföed


193 
	t__öt8_t_deföed


	)

194 
	t__ötN_t
 (8, 
	t__QI__
);

195 
__ötN_t
 (16, 
__HI__
);

196 
__ötN_t
 (32, 
__SI__
);

197 
__ötN_t
 (64, 
__DI__
);

200 
__u_ötN_t
 (8, 
__QI__
);

201 
__u_ötN_t
 (16, 
__HI__
);

202 
__u_ötN_t
 (32, 
__SI__
);

203 
__u_ötN_t
 (64, 
__DI__
);

205 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

211 
	#__BIT_TYPES_DEFINED__
 1

	)

214 #ifdef 
__USE_BSD


216 
	~<ídün.h
>

219 
	~<sys/£À˘.h
>

222 
	~<sys/sysma¸os.h
>

226 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

227 && !
deföed
 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

71 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

75 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

79 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

83 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

86 #ifde‡
__USE_XOPEN2K8


87 
	#_XOPEN_VERSION
 700

	)

88 #ñi‡
deföed
 
__USE_XOPEN2K


89 
	#_XOPEN_VERSION
 600

	)

90 #ñi‡
deföed
 
__USE_UNIX98


91 
	#_XOPEN_VERSION
 500

	)

93 
	#_XOPEN_VERSION
 4

	)

97 
	#_XOPEN_XCU_VERSION
 4

	)

100 
	#_XOPEN_XPG2
 1

	)

101 
	#_XOPEN_XPG3
 1

	)

102 
	#_XOPEN_XPG4
 1

	)

105 
	#_XOPEN_UNIX
 1

	)

108 
	#_XOPEN_CRYPT
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_BSD


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_BSD


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

635 #i‚de‡
__FAVOR_BSD


636 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

638 #ifde‡
__REDIRECT_NTH


639 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

641 
	#gëpgΩ
 
__gëpgid


	)

646 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

647 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


648 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

655 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

657 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


668 #i‚de‡
__FAVOR_BSD


672 
	$£çgΩ
 (Ë
__THROW
;

677 #ifde‡
__REDIRECT_NTH


678 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

680 
	#£çgΩ
 
£çgid


	)

689 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

691 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


693 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

697 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

700 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

703 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

706 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

711 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

713 #ifdef 
__USE_GNU


715 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

722 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

724 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


727 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

730 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


732 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

739 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

741 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


744 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

747 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


749 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

752 #ifde‡
__USE_GNU


755 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

756 
__THROW
;

760 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

761 
__THROW
;

765 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

766 
__THROW
 
__wur
;

770 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

771 
__THROW
 
__wur
;

778 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

780 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

781 || 
deföed
 
__USE_BSD


786 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

792 *
	$ây«me
 (
__fd
Ë
__THROW
;

796 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

797 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

801 
	$ißây
 (
__fd
Ë
__THROW
;

803 #i‡
deföed
 
__USE_BSD
 \

804 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

807 
	$ây¶Ÿ
 (Ë
__THROW
;

812 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

813 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

815 #ifde‡
__USE_ATFILE


818 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

819 c⁄° *
__to
, 
__Êags
)

820 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

823 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


825 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

826 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

831 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

832 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

836 #ifde‡
__USE_ATFILE


838 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

839 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

842 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

843 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

844 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

848 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

850 #ifde‡
__USE_ATFILE


852 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

853 
__THROW
 
	`__n⁄nuŒ
 ((2));

857 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

861 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

864 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

871 *
	`gëlogö
 ();

872 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


879 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

882 #ifdef 
__USE_BSD


884 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

888 #ifdef 
__USE_POSIX2


892 
	#__√ed_gë›t


	)

893 
	~<gë›t.h
>

897 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


901 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

905 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

908 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

909 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

913 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

919 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

920 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

921 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

922 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

928 
	$vh™gup
 (Ë
__THROW
;

931 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

939 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

940 
size_t
 
__off£t
, 
__sˇÀ
)

941 
__THROW
 
	`__n⁄nuŒ
 ((1));

947 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

951 *
	$gëu£rshñl
 (Ë
__THROW
;

952 
	$ídu£rshñl
 (Ë
__THROW
;

953 
	$£tu£rshñl
 (Ë
__THROW
;

959 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

963 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

966 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

970 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

978 
	`fsync
 (
__fd
);

981 #ifde‡
__USE_GNU


984 
	$syncfs
 (
__fd
Ë
__THROW
;

988 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


991 
	`gëho°id
 ();

994 
	$sync
 (Ë
__THROW
;

997 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


1000 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

1005 
	$gëdèbÀsize
 (Ë
__THROW
;

1011 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1014 #i‚de‡
__USE_FILE_OFFSET64


1015 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

1016 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1018 #ifde‡
__REDIRECT_NTH


1019 
	`__REDIRECT_NTH
 (
åunˇã
,

1020 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

1021 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1023 
	#åunˇã
 
åunˇã64


	)

1026 #ifde‡
__USE_LARGEFILE64


1027 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1028 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1033 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX199309
 \

1034 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1037 #i‚de‡
__USE_FILE_OFFSET64


1038 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1040 #ifde‡
__REDIRECT_NTH


1041 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1042 
·runˇã64
Ë
__wur
;

1044 
	#·runˇã
 
·runˇã64


	)

1047 #ifde‡
__USE_LARGEFILE64


1048 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1054 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1055 || 
deföed
 
__USE_MISC


1059 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1065 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1069 #ifde‡
__USE_MISC


1080 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1085 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1097 
	#F_ULOCK
 0

	)

1098 
	#F_LOCK
 1

	)

1099 
	#F_TLOCK
 2

	)

1100 
	#F_TEST
 3

	)

1102 #i‚de‡
__USE_FILE_OFFSET64


1103 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1105 #ifde‡
__REDIRECT


1106 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1107 
lockf64
Ë
__wur
;

1109 
	#lockf
 
lockf64


	)

1112 #ifde‡
__USE_LARGEFILE64


1113 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1118 #ifde‡
__USE_GNU


1123 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1124 (
__exãnsi⁄__
 \

1125 ({ 
__ªsu…
; \

1126 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1127 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1128 
__ªsu…
; 
	}
}))

	)

1131 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1134 
fd©async
 (
__fûdes
);

1140 #ifdef 
__USE_XOPEN


1142 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1143 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1147 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1154 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1155 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1161 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1163 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1168 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1169 
	~<bôs/uni°d.h
>

1172 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/bits/confname.h

20 #i‚de‡
_UNISTD_H


27 
	m_PC_LINK_MAX
,

28 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

29 
	m_PC_MAX_CANON
,

30 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

31 
	m_PC_MAX_INPUT
,

32 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

33 
	m_PC_NAME_MAX
,

34 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

35 
	m_PC_PATH_MAX
,

36 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

37 
	m_PC_PIPE_BUF
,

38 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

39 
	m_PC_CHOWN_RESTRICTED
,

40 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

41 
	m_PC_NO_TRUNC
,

42 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

43 
	m_PC_VDISABLE
,

44 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

45 
	m_PC_SYNC_IO
,

46 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

47 
	m_PC_ASYNC_IO
,

48 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

49 
	m_PC_PRIO_IO
,

50 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

51 
	m_PC_SOCK_MAXBUF
,

52 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

53 
	m_PC_FILESIZEBITS
,

54 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

55 
	m_PC_REC_INCR_XFER_SIZE
,

56 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

57 
	m_PC_REC_MAX_XFER_SIZE
,

58 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

59 
	m_PC_REC_MIN_XFER_SIZE
,

60 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

61 
	m_PC_REC_XFER_ALIGN
,

62 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

63 
	m_PC_ALLOC_SIZE_MIN
,

64 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

65 
	m_PC_SYMLINK_MAX
,

66 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

67 
	m_PC_2_SYMLINKS


68 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

74 
	m_SC_ARG_MAX
,

75 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

76 
	m_SC_CHILD_MAX
,

77 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

78 
	m_SC_CLK_TCK
,

79 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

80 
	m_SC_NGROUPS_MAX
,

81 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

82 
	m_SC_OPEN_MAX
,

83 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

84 
	m_SC_STREAM_MAX
,

85 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

86 
	m_SC_TZNAME_MAX
,

87 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

88 
	m_SC_JOB_CONTROL
,

89 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

90 
	m_SC_SAVED_IDS
,

91 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

92 
	m_SC_REALTIME_SIGNALS
,

93 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

94 
	m_SC_PRIORITY_SCHEDULING
,

95 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

96 
	m_SC_TIMERS
,

97 
	#_SC_TIMERS
 
_SC_TIMERS


	)

98 
	m_SC_ASYNCHRONOUS_IO
,

99 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

100 
	m_SC_PRIORITIZED_IO
,

101 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

102 
	m_SC_SYNCHRONIZED_IO
,

103 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

104 
	m_SC_FSYNC
,

105 
	#_SC_FSYNC
 
_SC_FSYNC


	)

106 
	m_SC_MAPPED_FILES
,

107 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

108 
	m_SC_MEMLOCK
,

109 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

110 
	m_SC_MEMLOCK_RANGE
,

111 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

112 
	m_SC_MEMORY_PROTECTION
,

113 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

114 
	m_SC_MESSAGE_PASSING
,

115 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

116 
	m_SC_SEMAPHORES
,

117 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

118 
	m_SC_SHARED_MEMORY_OBJECTS
,

119 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

120 
	m_SC_AIO_LISTIO_MAX
,

121 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

122 
	m_SC_AIO_MAX
,

123 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

124 
	m_SC_AIO_PRIO_DELTA_MAX
,

125 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

126 
	m_SC_DELAYTIMER_MAX
,

127 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

128 
	m_SC_MQ_OPEN_MAX
,

129 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

130 
	m_SC_MQ_PRIO_MAX
,

131 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

132 
	m_SC_VERSION
,

133 
	#_SC_VERSION
 
_SC_VERSION


	)

134 
	m_SC_PAGESIZE
,

135 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

136 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

137 
	m_SC_RTSIG_MAX
,

138 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

139 
	m_SC_SEM_NSEMS_MAX
,

140 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

141 
	m_SC_SEM_VALUE_MAX
,

142 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

143 
	m_SC_SIGQUEUE_MAX
,

144 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

145 
	m_SC_TIMER_MAX
,

146 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

150 
	m_SC_BC_BASE_MAX
,

151 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

152 
	m_SC_BC_DIM_MAX
,

153 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

154 
	m_SC_BC_SCALE_MAX
,

155 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

156 
	m_SC_BC_STRING_MAX
,

157 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

158 
	m_SC_COLL_WEIGHTS_MAX
,

159 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

160 
	m_SC_EQUIV_CLASS_MAX
,

161 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

162 
	m_SC_EXPR_NEST_MAX
,

163 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

164 
	m_SC_LINE_MAX
,

165 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

166 
	m_SC_RE_DUP_MAX
,

167 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

168 
	m_SC_CHARCLASS_NAME_MAX
,

169 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

171 
	m_SC_2_VERSION
,

172 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

173 
	m_SC_2_C_BIND
,

174 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

175 
	m_SC_2_C_DEV
,

176 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

177 
	m_SC_2_FORT_DEV
,

178 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

179 
	m_SC_2_FORT_RUN
,

180 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

181 
	m_SC_2_SW_DEV
,

182 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

183 
	m_SC_2_LOCALEDEF
,

184 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

186 
	m_SC_PII
,

187 
	#_SC_PII
 
_SC_PII


	)

188 
	m_SC_PII_XTI
,

189 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

190 
	m_SC_PII_SOCKET
,

191 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

192 
	m_SC_PII_INTERNET
,

193 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

194 
	m_SC_PII_OSI
,

195 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

196 
	m_SC_POLL
,

197 
	#_SC_POLL
 
_SC_POLL


	)

198 
	m_SC_SELECT
,

199 
	#_SC_SELECT
 
_SC_SELECT


	)

200 
	m_SC_UIO_MAXIOV
,

201 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

202 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

203 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

204 
	m_SC_PII_INTERNET_STREAM
,

205 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

206 
	m_SC_PII_INTERNET_DGRAM
,

207 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

208 
	m_SC_PII_OSI_COTS
,

209 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

210 
	m_SC_PII_OSI_CLTS
,

211 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

212 
	m_SC_PII_OSI_M
,

213 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

214 
	m_SC_T_IOV_MAX
,

215 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

218 
	m_SC_THREADS
,

219 
	#_SC_THREADS
 
_SC_THREADS


	)

220 
	m_SC_THREAD_SAFE_FUNCTIONS
,

221 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

222 
	m_SC_GETGR_R_SIZE_MAX
,

223 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

224 
	m_SC_GETPW_R_SIZE_MAX
,

225 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

226 
	m_SC_LOGIN_NAME_MAX
,

227 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

228 
	m_SC_TTY_NAME_MAX
,

229 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

230 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

231 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

232 
	m_SC_THREAD_KEYS_MAX
,

233 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

234 
	m_SC_THREAD_STACK_MIN
,

235 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

236 
	m_SC_THREAD_THREADS_MAX
,

237 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

238 
	m_SC_THREAD_ATTR_STACKADDR
,

239 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

240 
	m_SC_THREAD_ATTR_STACKSIZE
,

241 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

242 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

243 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

244 
	m_SC_THREAD_PRIO_INHERIT
,

245 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

246 
	m_SC_THREAD_PRIO_PROTECT
,

247 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

248 
	m_SC_THREAD_PROCESS_SHARED
,

249 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

251 
	m_SC_NPROCESSORS_CONF
,

252 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

253 
	m_SC_NPROCESSORS_ONLN
,

254 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

255 
	m_SC_PHYS_PAGES
,

256 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

257 
	m_SC_AVPHYS_PAGES
,

258 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

259 
	m_SC_ATEXIT_MAX
,

260 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

261 
	m_SC_PASS_MAX
,

262 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

264 
	m_SC_XOPEN_VERSION
,

265 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

266 
	m_SC_XOPEN_XCU_VERSION
,

267 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

268 
	m_SC_XOPEN_UNIX
,

269 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

270 
	m_SC_XOPEN_CRYPT
,

271 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

272 
	m_SC_XOPEN_ENH_I18N
,

273 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

274 
	m_SC_XOPEN_SHM
,

275 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

277 
	m_SC_2_CHAR_TERM
,

278 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

279 
	m_SC_2_C_VERSION
,

280 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

281 
	m_SC_2_UPE
,

282 
	#_SC_2_UPE
 
_SC_2_UPE


	)

284 
	m_SC_XOPEN_XPG2
,

285 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

286 
	m_SC_XOPEN_XPG3
,

287 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

288 
	m_SC_XOPEN_XPG4
,

289 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

291 
	m_SC_CHAR_BIT
,

292 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

293 
	m_SC_CHAR_MAX
,

294 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

295 
	m_SC_CHAR_MIN
,

296 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

297 
	m_SC_INT_MAX
,

298 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

299 
	m_SC_INT_MIN
,

300 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

301 
	m_SC_LONG_BIT
,

302 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

303 
	m_SC_WORD_BIT
,

304 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

305 
	m_SC_MB_LEN_MAX
,

306 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

307 
	m_SC_NZERO
,

308 
	#_SC_NZERO
 
_SC_NZERO


	)

309 
	m_SC_SSIZE_MAX
,

310 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

311 
	m_SC_SCHAR_MAX
,

312 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

313 
	m_SC_SCHAR_MIN
,

314 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

315 
	m_SC_SHRT_MAX
,

316 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

317 
	m_SC_SHRT_MIN
,

318 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

319 
	m_SC_UCHAR_MAX
,

320 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

321 
	m_SC_UINT_MAX
,

322 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

323 
	m_SC_ULONG_MAX
,

324 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

325 
	m_SC_USHRT_MAX
,

326 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

328 
	m_SC_NL_ARGMAX
,

329 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

330 
	m_SC_NL_LANGMAX
,

331 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

332 
	m_SC_NL_MSGMAX
,

333 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

334 
	m_SC_NL_NMAX
,

335 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

336 
	m_SC_NL_SETMAX
,

337 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

338 
	m_SC_NL_TEXTMAX
,

339 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

341 
	m_SC_XBS5_ILP32_OFF32
,

342 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

343 
	m_SC_XBS5_ILP32_OFFBIG
,

344 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

345 
	m_SC_XBS5_LP64_OFF64
,

346 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

347 
	m_SC_XBS5_LPBIG_OFFBIG
,

348 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

350 
	m_SC_XOPEN_LEGACY
,

351 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

352 
	m_SC_XOPEN_REALTIME
,

353 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

354 
	m_SC_XOPEN_REALTIME_THREADS
,

355 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

357 
	m_SC_ADVISORY_INFO
,

358 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

359 
	m_SC_BARRIERS
,

360 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

361 
	m_SC_BASE
,

362 
	#_SC_BASE
 
_SC_BASE


	)

363 
	m_SC_C_LANG_SUPPORT
,

364 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

365 
	m_SC_C_LANG_SUPPORT_R
,

366 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

367 
	m_SC_CLOCK_SELECTION
,

368 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

369 
	m_SC_CPUTIME
,

370 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

371 
	m_SC_THREAD_CPUTIME
,

372 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

373 
	m_SC_DEVICE_IO
,

374 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

375 
	m_SC_DEVICE_SPECIFIC
,

376 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

377 
	m_SC_DEVICE_SPECIFIC_R
,

378 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

379 
	m_SC_FD_MGMT
,

380 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

381 
	m_SC_FIFO
,

382 
	#_SC_FIFO
 
_SC_FIFO


	)

383 
	m_SC_PIPE
,

384 
	#_SC_PIPE
 
_SC_PIPE


	)

385 
	m_SC_FILE_ATTRIBUTES
,

386 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

387 
	m_SC_FILE_LOCKING
,

388 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

389 
	m_SC_FILE_SYSTEM
,

390 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

391 
	m_SC_MONOTONIC_CLOCK
,

392 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

393 
	m_SC_MULTI_PROCESS
,

394 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

395 
	m_SC_SINGLE_PROCESS
,

396 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

397 
	m_SC_NETWORKING
,

398 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

399 
	m_SC_READER_WRITER_LOCKS
,

400 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

401 
	m_SC_SPIN_LOCKS
,

402 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

403 
	m_SC_REGEXP
,

404 
	#_SC_REGEXP
 
_SC_REGEXP


	)

405 
	m_SC_REGEX_VERSION
,

406 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

407 
	m_SC_SHELL
,

408 
	#_SC_SHELL
 
_SC_SHELL


	)

409 
	m_SC_SIGNALS
,

410 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

411 
	m_SC_SPAWN
,

412 
	#_SC_SPAWN
 
_SC_SPAWN


	)

413 
	m_SC_SPORADIC_SERVER
,

414 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

415 
	m_SC_THREAD_SPORADIC_SERVER
,

416 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

417 
	m_SC_SYSTEM_DATABASE
,

418 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

419 
	m_SC_SYSTEM_DATABASE_R
,

420 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

421 
	m_SC_TIMEOUTS
,

422 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

423 
	m_SC_TYPED_MEMORY_OBJECTS
,

424 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

425 
	m_SC_USER_GROUPS
,

426 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

427 
	m_SC_USER_GROUPS_R
,

428 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

429 
	m_SC_2_PBS
,

430 
	#_SC_2_PBS
 
_SC_2_PBS


	)

431 
	m_SC_2_PBS_ACCOUNTING
,

432 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

433 
	m_SC_2_PBS_LOCATE
,

434 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

435 
	m_SC_2_PBS_MESSAGE
,

436 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

437 
	m_SC_2_PBS_TRACK
,

438 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

439 
	m_SC_SYMLOOP_MAX
,

440 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

441 
	m_SC_STREAMS
,

442 
	#_SC_STREAMS
 
_SC_STREAMS


	)

443 
	m_SC_2_PBS_CHECKPOINT
,

444 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

446 
	m_SC_V6_ILP32_OFF32
,

447 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

448 
	m_SC_V6_ILP32_OFFBIG
,

449 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

450 
	m_SC_V6_LP64_OFF64
,

451 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

452 
	m_SC_V6_LPBIG_OFFBIG
,

453 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

455 
	m_SC_HOST_NAME_MAX
,

456 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

457 
	m_SC_TRACE
,

458 
	#_SC_TRACE
 
_SC_TRACE


	)

459 
	m_SC_TRACE_EVENT_FILTER
,

460 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

461 
	m_SC_TRACE_INHERIT
,

462 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

463 
	m_SC_TRACE_LOG
,

464 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

466 
	m_SC_LEVEL1_ICACHE_SIZE
,

467 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

468 
	m_SC_LEVEL1_ICACHE_ASSOC
,

469 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

470 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

471 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

472 
	m_SC_LEVEL1_DCACHE_SIZE
,

473 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

474 
	m_SC_LEVEL1_DCACHE_ASSOC
,

475 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

476 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

477 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

478 
	m_SC_LEVEL2_CACHE_SIZE
,

479 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

480 
	m_SC_LEVEL2_CACHE_ASSOC
,

481 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

482 
	m_SC_LEVEL2_CACHE_LINESIZE
,

483 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

484 
	m_SC_LEVEL3_CACHE_SIZE
,

485 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

486 
	m_SC_LEVEL3_CACHE_ASSOC
,

487 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

488 
	m_SC_LEVEL3_CACHE_LINESIZE
,

489 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

490 
	m_SC_LEVEL4_CACHE_SIZE
,

491 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

492 
	m_SC_LEVEL4_CACHE_ASSOC
,

493 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

494 
	m_SC_LEVEL4_CACHE_LINESIZE
,

495 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

498 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

499 
	#_SC_IPV6
 
_SC_IPV6


	)

500 
	m_SC_RAW_SOCKETS
,

501 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

503 
	m_SC_V7_ILP32_OFF32
,

504 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

505 
	m_SC_V7_ILP32_OFFBIG
,

506 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

507 
	m_SC_V7_LP64_OFF64
,

508 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

509 
	m_SC_V7_LPBIG_OFFBIG
,

510 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

512 
	m_SC_SS_REPL_MAX
,

513 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

515 
	m_SC_TRACE_EVENT_NAME_MAX
,

516 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

517 
	m_SC_TRACE_NAME_MAX
,

518 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

519 
	m_SC_TRACE_SYS_MAX
,

520 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

521 
	m_SC_TRACE_USER_EVENT_MAX
,

522 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

524 
	m_SC_XOPEN_STREAMS
,

525 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

527 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

528 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

529 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


530 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

536 
	m_CS_PATH
,

537 
	#_CS_PATH
 
_CS_PATH


	)

539 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

540 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

541 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

543 
	m_CS_GNU_LIBC_VERSION
,

544 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

545 
	m_CS_GNU_LIBPTHREAD_VERSION
,

546 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

548 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

549 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

550 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

552 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

553 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

554 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

556 
	m_CS_LFS_CFLAGS
 = 1000,

557 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

558 
	m_CS_LFS_LDFLAGS
,

559 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

560 
	m_CS_LFS_LIBS
,

561 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

562 
	m_CS_LFS_LINTFLAGS
,

563 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

564 
	m_CS_LFS64_CFLAGS
,

565 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

566 
	m_CS_LFS64_LDFLAGS
,

567 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

568 
	m_CS_LFS64_LIBS
,

569 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

570 
	m_CS_LFS64_LINTFLAGS
,

571 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

573 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

574 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

575 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

576 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

577 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

578 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

579 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

580 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

581 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

582 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

583 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

584 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

585 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

586 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

587 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

588 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

589 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

590 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

591 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

592 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

593 
	m_CS_XBS5_LP64_OFF64_LIBS
,

594 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

595 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

596 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

597 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

598 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

599 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

600 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

601 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

602 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

603 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

604 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

606 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

607 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

608 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

609 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

610 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

611 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

612 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

613 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

614 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

615 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

616 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

617 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

618 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

619 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

620 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

621 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

622 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

623 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

624 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

625 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

626 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

627 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

628 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

629 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

630 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

631 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

632 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

633 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

634 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

635 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

636 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

637 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

639 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

640 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

641 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

642 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

643 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

644 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

645 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

646 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

647 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

648 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

649 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

650 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

651 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

652 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

653 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

654 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

655 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

656 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

657 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

658 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

659 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

660 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

661 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

662 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

663 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

664 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

665 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

666 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

667 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

668 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

669 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

670 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

672 
	m_CS_V6_ENV
,

673 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

674 
	m_CS_V7_ENV


675 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/environments.h

18 #i‚de‡
_UNISTD_H


22 
	~<bôs/w‹dsize.h
>

42 #i‡
__WORDSIZE
 == 64

56 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

57 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

58 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

61 
	#_POSIX_V7_LP64_OFF64
 1

	)

62 
	#_POSIX_V6_LP64_OFF64
 1

	)

63 
	#_XBS5_LP64_OFF64
 1

	)

69 
	#_POSIX_V7_ILP32_OFF32
 1

	)

70 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

71 
	#_POSIX_V6_ILP32_OFF32
 1

	)

72 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

73 
	#_XBS5_ILP32_OFF32
 1

	)

74 
	#_XBS5_ILP32_OFFBIG
 1

	)

91 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

92 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

93 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

94 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

95 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

96 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

19 #ifde‡
_ERRNO_H


21 #unde‡
EDOM


22 #unde‡
EILSEQ


23 #unde‡
ERANGE


24 
	~<löux/î∫o.h
>

27 
	#ENOTSUP
 
EOPNOTSUPP


	)

30 #i‚de‡
ECANCELED


31 
	#ECANCELED
 125

	)

35 #i‚de‡
EOWNERDEAD


36 
	#EOWNERDEAD
 130

	)

37 
	#ENOTRECOVERABLE
 131

	)

40 #i‚de‡
ERFKILL


41 
	#ERFKILL
 132

	)

44 #i‚de‡
EHWPOISON


45 
	#EHWPOISON
 133

	)

48 #i‚de‡
__ASSEMBLER__


50 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

52 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


54 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

59 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


63 
	#EDOM
 33

	)

64 
	#EILSEQ
 84

	)

65 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

19 #i‚def 
_FCNTL_H


23 
	~<sys/ty≥s.h
>

24 #ifde‡
__USE_GNU


25 
	~<bôs/uio.h
>

31 
	#O_ACCMODE
 0003

	)

32 
	#O_RDONLY
 00

	)

33 
	#O_WRONLY
 01

	)

34 
	#O_RDWR
 02

	)

35 
	#O_CREAT
 0100

	)

36 
	#O_EXCL
 0200

	)

37 
	#O_NOCTTY
 0400

	)

38 
	#O_TRUNC
 01000

	)

39 
	#O_APPEND
 02000

	)

40 
	#O_NONBLOCK
 04000

	)

41 
	#O_NDELAY
 
O_NONBLOCK


	)

42 
	#O_SYNC
 04010000

	)

43 
	#O_FSYNC
 
O_SYNC


	)

44 
	#O_ASYNC
 020000

	)

46 #ifde‡
__USE_XOPEN2K8


47 
	#O_DIRECTORY
 0200000

	)

48 
	#O_NOFOLLOW
 0400000

	)

49 
	#O_CLOEXEC
 02000000

	)

51 #ifde‡
__USE_GNU


52 
	#O_DIRECT
 040000

	)

53 
	#O_NOATIME
 01000000

	)

54 
	#O_PATH
 010000000

	)

60 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


61 
	#O_DSYNC
 010000

	)

62 
	#O_RSYNC
 
O_SYNC


	)

65 #ifde‡
__USE_LARGEFILE64


66 #ifde‡
__x86_64__


67 
	#O_LARGEFILE
 0

	)

69 
	#O_LARGEFILE
 0100000

	)

74 
	#F_DUPFD
 0

	)

75 
	#F_GETFD
 1

	)

76 
	#F_SETFD
 2

	)

77 
	#F_GETFL
 3

	)

78 
	#F_SETFL
 4

	)

79 #ifde‡
__x86_64__


80 
	#F_GETLK
 5

	)

81 
	#F_SETLK
 6

	)

82 
	#F_SETLKW
 7

	)

84 
	#F_GETLK64
 5

	)

85 
	#F_SETLK64
 6

	)

86 
	#F_SETLKW64
 7

	)

88 #i‚de‡
__USE_FILE_OFFSET64


89 
	#F_GETLK
 5

	)

90 
	#F_SETLK
 6

	)

91 
	#F_SETLKW
 7

	)

93 
	#F_GETLK
 
F_GETLK64


	)

94 
	#F_SETLK
 
F_SETLK64


	)

95 
	#F_SETLKW
 
F_SETLKW64


	)

97 
	#F_GETLK64
 12

	)

98 
	#F_SETLK64
 13

	)

99 
	#F_SETLKW64
 14

	)

102 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


103 
	#F_SETOWN
 8

	)

104 
	#F_GETOWN
 9

	)

107 #ifde‡
__USE_GNU


108 
	#F_SETSIG
 10

	)

109 
	#F_GETSIG
 11

	)

110 
	#F_SETOWN_EX
 15

	)

111 
	#F_GETOWN_EX
 16

	)

114 #ifde‡
__USE_GNU


115 
	#F_SETLEASE
 1024

	)

116 
	#F_GETLEASE
 1025

	)

117 
	#F_NOTIFY
 1026

	)

118 
	#F_SETPIPE_SZ
 1031

	)

119 
	#F_GETPIPE_SZ
 1032

	)

121 #ifde‡
__USE_XOPEN2K8


122 
	#F_DUPFD_CLOEXEC
 1030

	)

127 
	#FD_CLOEXEC
 1

	)

130 
	#F_RDLCK
 0

	)

131 
	#F_WRLCK
 1

	)

132 
	#F_UNLCK
 2

	)

135 
	#F_EXLCK
 4

	)

136 
	#F_SHLCK
 8

	)

138 #ifde‡
__USE_BSD


140 
	#LOCK_SH
 1

	)

141 
	#LOCK_EX
 2

	)

142 
	#LOCK_NB
 4

	)

144 
	#LOCK_UN
 8

	)

147 #ifde‡
__USE_GNU


148 
	#LOCK_MAND
 32

	)

149 
	#LOCK_READ
 64

	)

150 
	#LOCK_WRITE
 128

	)

151 
	#LOCK_RW
 192

	)

154 #ifde‡
__USE_GNU


156 
	#DN_ACCESS
 0x00000001

	)

157 
	#DN_MODIFY
 0x00000002

	)

158 
	#DN_CREATE
 0x00000004

	)

159 
	#DN_DELETE
 0x00000008

	)

160 
	#DN_RENAME
 0x00000010

	)

161 
	#DN_ATTRIB
 0x00000020

	)

162 
	#DN_MULTISHOT
 0x80000000

	)

165 
	sÊock


167 
	ml_ty≥
;

168 
	ml_whí˚
;

169 #i‚de‡
__USE_FILE_OFFSET64


170 
__off_t
 
	ml_°¨t
;

171 
__off_t
 
	ml_Àn
;

173 
__off64_t
 
	ml_°¨t
;

174 
__off64_t
 
	ml_Àn
;

176 
__pid_t
 
	ml_pid
;

179 #ifde‡
__USE_LARGEFILE64


180 
	sÊock64


182 
	ml_ty≥
;

183 
	ml_whí˚
;

184 
__off64_t
 
	ml_°¨t
;

185 
__off64_t
 
	ml_Àn
;

186 
__pid_t
 
	ml_pid
;

190 #ifde‡
__USE_GNU


192 
	e__pid_ty≥


194 
	mF_OWNER_TID
 = 0,

195 
	mF_OWNER_PID
,

196 
	mF_OWNER_PGRP
,

197 
	mF_OWNER_GID
 = 
F_OWNER_PGRP


201 
	sf_ow√r_ex


203 
__pid_ty≥
 
	mty≥
;

204 
__pid_t
 
	mpid
;

210 #ifdef 
__USE_BSD


211 
	#FAPPEND
 
O_APPEND


	)

212 
	#FFSYNC
 
O_FSYNC


	)

213 
	#FASYNC
 
O_ASYNC


	)

214 
	#FNONBLOCK
 
O_NONBLOCK


	)

215 
	#FNDELAY
 
O_NDELAY


	)

219 #ifde‡
__USE_XOPEN2K


220 
	#POSIX_FADV_NORMAL
 0

	)

221 
	#POSIX_FADV_RANDOM
 1

	)

222 
	#POSIX_FADV_SEQUENTIAL
 2

	)

223 
	#POSIX_FADV_WILLNEED
 3

	)

224 
	#POSIX_FADV_DONTNEED
 4

	)

225 
	#POSIX_FADV_NOREUSE
 5

	)

229 #ifde‡
__USE_GNU


231 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

234 
	#SYNC_FILE_RANGE_WRITE
 2

	)

237 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

242 
	#SPLICE_F_MOVE
 1

	)

243 
	#SPLICE_F_NONBLOCK
 2

	)

246 
	#SPLICE_F_MORE
 4

	)

247 
	#SPLICE_F_GIFT
 8

	)

251 
	sfûe_h™dÀ


253 
	mh™dÀ_byãs
;

254 
	mh™dÀ_ty≥
;

256 
	mf_h™dÀ
[0];

260 
	#MAX_HANDLE_SZ
 128

	)

263 
	g__BEGIN_DECLS


265 #ifde‡
__USE_GNU


268 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

269 
__THROW
;

276 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__cou¡
,

277 
__Êags
);

284 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

285 
size_t
 
__cou¡
, 
__Êags
);

291 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

292 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

293 
__Êags
);

299 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

300 
__Êags
);

306 #i‚de‡
__USE_FILE_OFFSET64


307 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

309 #ifde‡
__REDIRECT


310 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

311 
__off64_t
 
__Àn
),

312 
ÁŒoˇã64
);

314 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

317 #ifde‡
__USE_LARGEFILE64


318 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

319 
__off64_t
 
__Àn
);

324 
	$«me_to_h™dÀ_©
 (
__dfd
, c⁄° *
__«me
,

325 
fûe_h™dÀ
 *
__h™dÀ
, *
__m¡_id
,

326 
__Êags
Ë
__THROW
;

332 
	`›í_by_h™dÀ_©
 (
__mou¡dúfd
, 
fûe_h™dÀ
 *
__h™dÀ
,

333 
__Êags
);

337 
__END_DECLS


	@/usr/include/bits/fcntl2.h

19 #i‚def 
_FCNTL_H


25 #i‚de‡
__USE_FILE_OFFSET64


26 
	$__›í_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

27 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

28 
›í
Ë
	`__n⁄nuŒ
 ((1));

30 
	`__REDIRECT
 (
__›í_2
, (c⁄° *
__∑th
, 
__oÊag
),

31 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

32 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

33 
›í64
Ë
	`__n⁄nuŒ
 ((1));

35 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

37 
	`__îr‹de˛
 (
__›í_missög_mode
,

40 
__f‹tify_fun˘i⁄
 

41 
	$›í
 (c⁄° *
__∑th
, 
__oÊag
, ...)

43 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

44 
	`__›í_too_m™y_¨gs
 ();

46 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

48 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

50 
	`__›í_missög_mode
 ();

51  
	`__›í_2
 (
__∑th
, 
__oÊag
);

53  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

56 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

57  
	`__›í_2
 (
__∑th
, 
__oÊag
);

59  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

60 
	}
}

63 #ifde‡
__USE_LARGEFILE64


64 
	$__›í64_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

65 
	`__REDIRECT
 (
__›í64_Æüs
, (c⁄° *
__∑th
, 
__oÊag
,

66 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

67 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

69 
	`__îr‹de˛
 (
__›í64_missög_mode
,

72 
__f‹tify_fun˘i⁄
 

73 
	$›í64
 (c⁄° *
__∑th
, 
__oÊag
, ...)

75 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

76 
	`__›í64_too_m™y_¨gs
 ();

78 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

80 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

82 
	`__›í64_missög_mode
 ();

83  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

85  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

88 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

89  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

91  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

92 
	}
}

96 #ifde‡
__USE_ATFILE


97 #i‚de‡
__USE_FILE_OFFSET64


98 
	$__›í©_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

99 
	`__n⁄nuŒ
 ((2));

100 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

101 
__oÊag
, ...), 
›í©
)

102 
	`__n⁄nuŒ
 ((2));

104 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, c⁄° *
__∑th
,

105 
__oÊag
), 
__›í©64_2
)

106 
	`__n⁄nuŒ
 ((2));

107 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

108 
__oÊag
, ...), 
›í©64
)

109 
	`__n⁄nuŒ
 ((2));

111 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

113 
	`__îr‹de˛
 (
__›í©_missög_mode
,

116 
__f‹tify_fun˘i⁄
 

117 
	$›í©
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

119 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

120 
	`__›í©_too_m™y_¨gs
 ();

122 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

124 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

126 
	`__›í©_missög_mode
 ();

127  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

129  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

132 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

133  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

135  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

136 
	}
}

139 #ifde‡
__USE_LARGEFILE64


140 
	$__›í©64_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

141 
	`__n⁄nuŒ
 ((2));

142 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, c⁄° *
__∑th
,

143 
__oÊag
, ...), 
›í©64
)

144 
	`__n⁄nuŒ
 ((2));

145 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

147 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

150 
__f‹tify_fun˘i⁄
 

151 
	$›í©64
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

153 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

154 
	`__›í©64_too_m™y_¨gs
 ();

156 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

158 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

160 
	`__›í©64_missög_mode
 ();

161  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

163  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

166 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

167  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

169  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

170 
	}
}

	@/usr/include/bits/mman.h

19 #i‚de‡
_SYS_MMAN_H


32 
	#PROT_READ
 0x1

	)

33 
	#PROT_WRITE
 0x2

	)

34 
	#PROT_EXEC
 0x4

	)

35 
	#PROT_NONE
 0x0

	)

36 
	#PROT_GROWSDOWN
 0x01000000

	)

38 
	#PROT_GROWSUP
 0x02000000

	)

42 
	#MAP_SHARED
 0x01

	)

43 
	#MAP_PRIVATE
 0x02

	)

44 #ifde‡
__USE_MISC


45 
	#MAP_TYPE
 0x0‡

	)

49 
	#MAP_FIXED
 0x10

	)

50 #ifde‡
__USE_MISC


51 
	#MAP_FILE
 0

	)

52 
	#MAP_ANONYMOUS
 0x20

	)

53 
	#MAP_ANON
 
MAP_ANONYMOUS


	)

54 
	#MAP_32BIT
 0x40

	)

58 #ifde‡
__USE_MISC


59 
	#MAP_GROWSDOWN
 0x00100

	)

60 
	#MAP_DENYWRITE
 0x00800

	)

61 
	#MAP_EXECUTABLE
 0x01000

	)

62 
	#MAP_LOCKED
 0x02000

	)

63 
	#MAP_NORESERVE
 0x04000

	)

64 
	#MAP_POPULATE
 0x08000

	)

65 
	#MAP_NONBLOCK
 0x10000

	)

66 
	#MAP_STACK
 0x20000

	)

67 
	#MAP_HUGETLB
 0x40000

	)

71 
	#MS_ASYNC
 1

	)

72 
	#MS_SYNC
 4

	)

73 
	#MS_INVALIDATE
 2

	)

76 
	#MCL_CURRENT
 1

	)

77 
	#MCL_FUTURE
 2

	)

81 #ifde‡
__USE_GNU


82 
	#MREMAP_MAYMOVE
 1

	)

83 
	#MREMAP_FIXED
 2

	)

87 #ifde‡
__USE_BSD


88 
	#MADV_NORMAL
 0

	)

89 
	#MADV_RANDOM
 1

	)

90 
	#MADV_SEQUENTIAL
 2

	)

91 
	#MADV_WILLNEED
 3

	)

92 
	#MADV_DONTNEED
 4

	)

93 
	#MADV_REMOVE
 9

	)

94 
	#MADV_DONTFORK
 10

	)

95 
	#MADV_DOFORK
 11

	)

96 
	#MADV_MERGEABLE
 12

	)

97 
	#MADV_UNMERGEABLE
 13

	)

98 
	#MADV_HUGEPAGE
 14

	)

99 
	#MADV_NOHUGEPAGE
 15

	)

100 
	#MADV_DONTDUMP
 16

	)

102 
	#MADV_DODUMP
 17

	)

103 
	#MADV_HWPOISON
 100

	)

107 #ifde‡
__USE_XOPEN2K


108 
	#POSIX_MADV_NORMAL
 0

	)

109 
	#POSIX_MADV_RANDOM
 1

	)

110 
	#POSIX_MADV_SEQUENTIAL
 2

	)

111 
	#POSIX_MADV_WILLNEED
 3

	)

112 
	#POSIX_MADV_DONTNEED
 4

	)

	@/usr/include/bits/posix_opt.h

19 #i‚def 
_BITS_POSIX_OPT_H


20 
	#_BITS_POSIX_OPT_H
 1

	)

23 
	#_POSIX_JOB_CONTROL
 1

	)

26 
	#_POSIX_SAVED_IDS
 1

	)

29 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

32 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

35 
	#_POSIX_FSYNC
 200809L

	)

38 
	#_POSIX_MAPPED_FILES
 200809L

	)

41 
	#_POSIX_MEMLOCK
 200809L

	)

44 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

47 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

50 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

54 
	#_POSIX_VDISABLE
 '\0'

	)

57 
	#_POSIX_NO_TRUNC
 1

	)

60 
	#_XOPEN_REALTIME
 1

	)

63 
	#_XOPEN_REALTIME_THREADS
 1

	)

66 
	#_XOPEN_SHM
 1

	)

69 
	#_POSIX_THREADS
 200809L

	)

72 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

73 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

76 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

79 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

82 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

85 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

89 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

91 #ifde‡
__USE_XOPEN2K8


93 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

96 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

100 
	#_POSIX_SEMAPHORES
 200809L

	)

103 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

106 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

107 
	#_POSIX_ASYNC_IO
 1

	)

109 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

111 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

114 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

117 
	#_LFS_LARGEFILE
 1

	)

118 
	#_LFS64_LARGEFILE
 1

	)

119 
	#_LFS64_STDIO
 1

	)

122 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

125 
	#_POSIX_CPUTIME
 0

	)

128 
	#_POSIX_THREAD_CPUTIME
 0

	)

131 
	#_POSIX_REGEXP
 1

	)

134 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

137 
	#_POSIX_SHELL
 1

	)

140 
	#_POSIX_TIMEOUTS
 200809L

	)

143 
	#_POSIX_SPIN_LOCKS
 200809L

	)

146 
	#_POSIX_SPAWN
 200809L

	)

149 
	#_POSIX_TIMERS
 200809L

	)

152 
	#_POSIX_BARRIERS
 200809L

	)

155 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

158 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

161 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

164 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

167 
	#_POSIX_ADVISORY_INFO
 200809L

	)

170 
	#_POSIX_IPV6
 200809L

	)

173 
	#_POSIX_RAW_SOCKETS
 200809L

	)

176 
	#_POSIX2_CHAR_TERM
 200809L

	)

179 
	#_POSIX_SPORADIC_SERVER
 -1

	)

180 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

183 
	#_POSIX_TRACE
 -1

	)

184 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

185 
	#_POSIX_TRACE_INHERIT
 -1

	)

186 
	#_POSIX_TRACE_LOG
 -1

	)

189 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

192 
	#_XOPEN_STREAMS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

18 #i‚de‡
_BITS_PTHREADTYPES_H


19 
	#_BITS_PTHREADTYPES_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

26 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

27 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

28 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

29 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

30 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

31 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

32 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

33 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

35 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

36 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

37 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

38 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

39 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

40 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

41 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

42 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

43 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

46 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

47 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

48 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

49 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

50 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

51 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

52 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

53 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

54 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

60 
	t±hªad_t
;

63 
	u±hªad_©å_t


65 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

66 
	m__Æign
;

68 #i‚de‡
__have_±hªad_©å_t


69 
±hªad_©å_t
 
	t±hªad_©å_t
;

70 
	#__have_±hªad_©å_t
 1

	)

74 #ifde‡
__x86_64__


75 
	s__±hªad_öã∫Æ_li°


77 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

78 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

79 } 
	t__±hªad_li°_t
;

81 
	s__±hªad_öã∫Æ_¶i°


83 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

84 } 
	t__±hªad_¶i°_t
;

92 
	s__±hªad_muãx_s


94 
	m__lock
;

95 
	m__cou¡
;

96 
	m__ow√r
;

97 #ifde‡
__x86_64__


98 
	m__nu£rs
;

102 
	m__köd
;

103 #ifde‡
__x86_64__


104 
	m__•ös
;

105 
__±hªad_li°_t
 
	m__li°
;

106 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

108 
	m__nu£rs
;

109 
__exãnsi⁄__
 union

111 
	m__•ös
;

112 
__±hªad_¶i°_t
 
	m__li°
;

115 } 
	m__d©a
;

116 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

117 
	m__Æign
;

118 } 
	t±hªad_muãx_t
;

122 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

123 
	m__Æign
;

124 } 
	t±hªad_muãx©å_t
;

133 
	m__lock
;

134 
	m__fuãx
;

135 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

136 
__exãnsi⁄__
 
	m__wakeup_£q
;

137 
__exãnsi⁄__
 
	m__wokí_£q
;

138 *
	m__muãx
;

139 
	m__nwaôîs
;

140 
	m__brﬂdˇ°_£q
;

141 } 
	m__d©a
;

142 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

143 
__exãnsi⁄__
 
	m__Æign
;

144 } 
	t±hªad_c⁄d_t
;

148 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

149 
	m__Æign
;

150 } 
	t±hªad_c⁄d©å_t
;

154 
	t±hªad_key_t
;

158 
	t±hªad_⁄˚_t
;

161 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


166 #ifde‡
__x86_64__


169 
	m__lock
;

170 
	m__ƒ_ªadîs
;

171 
	m__ªadîs_wakeup
;

172 
	m__wrôî_wakeup
;

173 
	m__ƒ_ªadîs_queued
;

174 
	m__ƒ_wrôîs_queued
;

175 
	m__wrôî
;

176 
	m__sh¨ed
;

177 
	m__∑d1
;

178 
	m__∑d2
;

181 
	m__Êags
;

182 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

183 } 
	m__d©a
;

187 
	m__lock
;

188 
	m__ƒ_ªadîs
;

189 
	m__ªadîs_wakeup
;

190 
	m__wrôî_wakeup
;

191 
	m__ƒ_ªadîs_queued
;

192 
	m__ƒ_wrôîs_queued
;

195 
	m__Êags
;

196 
	m__sh¨ed
;

197 
	m__∑d1
;

198 
	m__∑d2
;

199 
	m__wrôî
;

200 } 
	m__d©a
;

202 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

203 
	m__Æign
;

204 } 
	t±hªad_rwlock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

209 
	m__Æign
;

210 } 
	t±hªad_rwlock©å_t
;

214 #ifde‡
__USE_XOPEN2K


216 vﬁ©ûê
	t±hªad_•ölock_t
;

223 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

224 
	m__Æign
;

225 } 
	t±hªad_b¨rõr_t
;

229 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

230 
	m__Æign
;

231 } 
	t±hªad_b¨rõøâr_t
;

235 #i‚de‡
__x86_64__


237 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/stat.h

18 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


22 #i‚de‡
_BITS_STAT_H


23 
	#_BITS_STAT_H
 1

	)

26 #i‚de‡
__x86_64__


27 
	#_STAT_VER_LINUX_OLD
 1

	)

28 
	#_STAT_VER_KERNEL
 1

	)

29 
	#_STAT_VER_SVR4
 2

	)

30 
	#_STAT_VER_LINUX
 3

	)

33 
	#_MKNOD_VER_LINUX
 1

	)

34 
	#_MKNOD_VER_SVR4
 2

	)

35 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

37 
	#_STAT_VER_KERNEL
 0

	)

38 
	#_STAT_VER_LINUX
 1

	)

41 
	#_MKNOD_VER_LINUX
 0

	)

44 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

46 
	s°©


48 
__dev_t
 
	m°_dev
;

49 #i‚de‡
__x86_64__


50 
	m__∑d1
;

52 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


53 
__öo_t
 
	m°_öo
;

55 
__öo_t
 
	m__°_öo
;

57 #i‚de‡
__x86_64__


58 
__mode_t
 
	m°_mode
;

59 
__∆ök_t
 
	m°_∆ök
;

61 
__∆ök_t
 
	m°_∆ök
;

62 
__mode_t
 
	m°_mode
;

64 
__uid_t
 
	m°_uid
;

65 
__gid_t
 
	m°_gid
;

66 #ifde‡
__x86_64__


67 
	m__∑d0
;

69 
__dev_t
 
	m°_rdev
;

70 #i‚de‡
__x86_64__


71 
	m__∑d2
;

73 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


74 
__off_t
 
	m°_size
;

76 
__off64_t
 
	m°_size
;

78 
__blksize_t
 
	m°_blksize
;

79 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


80 
__blk˙t_t
 
	m°_blocks
;

82 
__blk˙t64_t
 
	m°_blocks
;

84 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


91 
time•ec
 
	m°_©im
;

92 
time•ec
 
	m°_mtim
;

93 
time•ec
 
	m°_˘im
;

94 
	#°_©ime
 
°_©im
.
tv_£c


	)

95 
	#°_mtime
 
°_mtim
.
tv_£c


	)

96 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

98 
__time_t
 
	m°_©ime
;

99 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

100 
__time_t
 
	m°_mtime
;

101 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

102 
__time_t
 
	m°_˘ime
;

103 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

105 #ifde‡
__x86_64__


106 
__sysˇŒ_¶⁄g_t
 
	m__unu£d
[3];

108 #i‚de‡
__USE_FILE_OFFSET64


109 
	m__unu£d4
;

110 
	m__unu£d5
;

112 
__öo64_t
 
	m°_öo
;

117 #ifde‡
__USE_LARGEFILE64


119 
	s°©64


121 
__dev_t
 
	m°_dev
;

122 #ifde‡
__x86_64__


123 
__öo64_t
 
	m°_öo
;

124 
__∆ök_t
 
	m°_∆ök
;

125 
__mode_t
 
	m°_mode
;

127 
	m__∑d1
;

128 
__öo_t
 
	m__°_öo
;

129 
__mode_t
 
	m°_mode
;

130 
__∆ök_t
 
	m°_∆ök
;

132 
__uid_t
 
	m°_uid
;

133 
__gid_t
 
	m°_gid
;

134 #ifde‡
__x86_64__


135 
	m__∑d0
;

136 
__dev_t
 
	m°_rdev
;

137 
__off_t
 
	m°_size
;

139 
__dev_t
 
	m°_rdev
;

140 
	m__∑d2
;

141 
__off64_t
 
	m°_size
;

143 
__blksize_t
 
	m°_blksize
;

144 
__blk˙t64_t
 
	m°_blocks
;

145 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


152 
time•ec
 
	m°_©im
;

153 
time•ec
 
	m°_mtim
;

154 
time•ec
 
	m°_˘im
;

156 
__time_t
 
	m°_©ime
;

157 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

158 
__time_t
 
	m°_mtime
;

159 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

160 
__time_t
 
	m°_˘ime
;

161 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

163 #ifde‡
__x86_64__


164 
__sysˇŒ_¶⁄g_t
 
	m__unu£d
[3];

166 
__öo64_t
 
	m°_öo
;

172 
	#_STATBUF_ST_BLKSIZE


	)

173 
	#_STATBUF_ST_RDEV


	)

175 
	#_STATBUF_ST_NSEC


	)

179 
	#__S_IFMT
 0170000

	)

182 
	#__S_IFDIR
 0040000

	)

183 
	#__S_IFCHR
 0020000

	)

184 
	#__S_IFBLK
 0060000

	)

185 
	#__S_IFREG
 0100000

	)

186 
	#__S_IFIFO
 0010000

	)

187 
	#__S_IFLNK
 0120000

	)

188 
	#__S_IFSOCK
 0140000

	)

192 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

193 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

194 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

198 
	#__S_ISUID
 04000

	)

199 
	#__S_ISGID
 02000

	)

200 
	#__S_ISVTX
 01000

	)

201 
	#__S_IREAD
 0400

	)

202 
	#__S_IWRITE
 0200

	)

203 
	#__S_IEXEC
 0100

	)

205 #ifde‡
__USE_ATFILE


206 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

207 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-ldbl.h

19 #i‚de‡
_STDIO_H


23 
__BEGIN_NAMESPACE_STD


24 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

25 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

26 
	$__LDBL_REDIR_DECL
 (
•rötf
)

27 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

28 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

29 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

30 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

31 && !
deföed
 
__REDIRECT
 \

32 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

33 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

34 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

37 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

41 
__END_NAMESPACE_STD


43 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


44 
__BEGIN_NAMESPACE_C99


45 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

46 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

47 
__END_NAMESPACE_C99


50 #ifdef 
__USE_ISOC99


51 
__BEGIN_NAMESPACE_C99


52 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

53 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

54 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

55 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

58 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

62 
__END_NAMESPACE_C99


65 #ifde‡
__USE_XOPEN2K8


66 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

67 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

70 #ifde‡
__USE_GNU


71 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

73 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

74 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

75 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

78 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


79 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

80 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

81 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


82 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

83 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

85 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

88 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

89 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

90 #ifde‡
__USE_XOPEN2K8


91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

94 #ifde‡
__USE_GNU


95 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

96 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

97 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

98 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

19 #i‚de‡
_STDIO_H


23 #i‚de‡
__exã∫_ölöe


24 
	#__STDIO_INLINE
 
ölöe


	)

26 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

30 #ifde‡
__USE_EXTERN_INLINES


33 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
)

35 
__STDIO_INLINE
 

36 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

38  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

39 
	}
}

43 
__STDIO_INLINE
 

44 
	$gëch¨
 ()

46  
	`_IO_gëc
 (
°dö
);

47 
	}
}

50 #ifde‡
__USE_MISC


52 
__STDIO_INLINE
 

53 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

55  
	`_IO_gëc_u∆ocked
 (
__Â
);

56 
	}
}

60 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


62 
__STDIO_INLINE
 

63 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

65  
	`_IO_gëc_u∆ocked
 (
__Â
);

66 
	}
}

69 
__STDIO_INLINE
 

70 
	$gëch¨_u∆ocked
 ()

72  
	`_IO_gëc_u∆ocked
 (
°dö
);

73 
	}
}

78 
__STDIO_INLINE
 

79 
	$putch¨
 (
__c
)

81  
	`_IO_putc
 (
__c
, 
°dout
);

82 
	}
}

85 #ifde‡
__USE_MISC


87 
__STDIO_INLINE
 

88 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

90  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

91 
	}
}

95 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


97 
__STDIO_INLINE
 

98 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

100  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

101 
	}
}

104 
__STDIO_INLINE
 

105 
	$putch¨_u∆ocked
 (
__c
)

107  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

108 
	}
}

112 #ifdef 
__USE_GNU


114 
__STDIO_INLINE
 
_IO_ssize_t


115 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

117  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

118 
	}
}

122 #ifde‡
__USE_MISC


124 
__STDIO_INLINE
 

125 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

127  
	`_IO_„of_u∆ocked
 (
__°ªam
);

128 
	}
}

131 
__STDIO_INLINE
 

132 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

134  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

135 
	}
}

141 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

142 && !
deföed
 
	g__˝lu•lus


144 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

145 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

146 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

147 && (
size_t
Ë(
size
) != 0) \

148 ? ({ *
__±r
 = (*Ë(
±r
); \

149 
FILE
 *
__°ªam
 = (
°ªam
); \

150 
size_t
 
__˙t
; \

151 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

152 
__˙t
 > 0; --__cnt) \

154 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

155 i‡(
__c
 =
EOF
) \

157 *
__±r
++ = 
__c
; \

159 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

160 / (
size_t
Ë(
size
); }) \

161 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

162 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

164 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

165 (Ë(
n
), (
size_t
) 0) \

166 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

168 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

169 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

170 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

171 && (
size_t
Ë(
size
) != 0) \

172 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

173 
FILE
 *
__°ªam
 = (
°ªam
); \

174 
size_t
 
__˙t
; \

175 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

176 
__˙t
 > 0; --__cnt) \

177 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

179 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

180 / (
size_t
Ë(
size
); }) \

181 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

182 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

184 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

185 (Ë(
n
), (
size_t
) 0) \

186 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

190 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

19 #i‚de‡
_STDIO_H


23 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

24 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

25 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

26 c⁄° *
__ª°ri˘
 
__f‹m©
,

27 
_G_va_li°
 
__≠
Ë
__THROW
;

29 #ifde‡
__va_¨g_∑ck


30 
__f‹tify_fun˘i⁄
 

31 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
, ...))

33  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

34 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

35 
	}
}

36 #ñi‡!
deföed
 
__˝lu•lus


37 
	#•rötf
(
°r
, ...) \

38 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

39 
__VA_ARGS__
)

	)

42 
__f‹tify_fun˘i⁄
 

43 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
,

44 
_G_va_li°
 
__≠
))

46  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

47 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

48 
	}
}

50 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


52 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

53 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

54 ...Ë
__THROW
;

55 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

56 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

57 
_G_va_li°
 
__≠
Ë
__THROW
;

59 #ifde‡
__va_¨g_∑ck


60 
__f‹tify_fun˘i⁄
 

61 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

62 c⁄° *
__ª°ri˘
 
__fmt
, ...))

64  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

65 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

66 
	}
}

67 #ñi‡!
deföed
 
__˝lu•lus


68 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

69 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

70 
__VA_ARGS__
)

	)

73 
__f‹tify_fun˘i⁄
 

74 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

75 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

77  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

78 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

79 
	}
}

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

85 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

86 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

87 
__¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

88 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

90 
__v¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

91 
_G_va_li°
 
__≠
);

93 #ifde‡
__va_¨g_∑ck


94 
__f‹tify_fun˘i⁄
 

95 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° *__ª°ri˘ 
__fmt
, ...)

97  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

98 
	`__va_¨g_∑ck
 ());

99 
	}
}

101 
__f‹tify_fun˘i⁄
 

102 
	$¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, ...)

104  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

105 
	}
}

106 #ñi‡!
deföed
 
__˝lu•lus


107 
	#¥ötf
(...) \

108 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

109 
	#Ârötf
(
°ªam
, ...) \

110 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

113 
__f‹tify_fun˘i⁄
 

114 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

116 #ifde‡
__USE_EXTERN_INLINES


117  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

119  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

121 
	}
}

123 
__f‹tify_fun˘i⁄
 

124 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

125 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

127  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

128 
	}
}

130 #ifde‡
__USE_XOPEN2K8


131 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, c⁄° *
__ª°ri˘
 
__fmt
,

132 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

133 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

134 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

135 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

137 #ifde‡
__va_¨g_∑ck


138 
__f‹tify_fun˘i⁄
 

139 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

141  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

142 
	`__va_¨g_∑ck
 ());

143 
	}
}

144 #ñi‡!
deföed
 
__˝lu•lus


145 
	#d¥ötf
(
fd
, ...) \

146 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

149 
__f‹tify_fun˘i⁄
 

150 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

152  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

153 
	}
}

156 #ifde‡
__USE_GNU


158 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

159 c⁄° *
__ª°ri˘
 
__fmt
, ...)

160 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

161 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

162 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

163 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

164 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

165 
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

167 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

168 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

169 
__Êag
,

170 c⁄° *
__ª°ri˘
 
__f‹m©
,

171 
_G_va_li°
 
__¨gs
)

172 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

174 #ifde‡
__va_¨g_∑ck


175 
__f‹tify_fun˘i⁄
 

176 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
, ...))

178  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

179 
	`__va_¨g_∑ck
 ());

180 
	}
}

182 
__f‹tify_fun˘i⁄
 

183 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

186  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

187 
	`__va_¨g_∑ck
 ());

188 
	}
}

190 
__f‹tify_fun˘i⁄
 

191 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

192 c⁄° *
__ª°ri˘
 
__fmt
, ...))

194  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

195 
	`__va_¨g_∑ck
 ());

196 
	}
}

197 #ñi‡!
deföed
 
__˝lu•lus


198 
	#a•rötf
(
±r
, ...) \

199 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

200 
	#__a•rötf
(
±r
, ...) \

201 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

202 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

203 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

206 
__f‹tify_fun˘i⁄
 

207 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

208 
_G_va_li°
 
__≠
))

210  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

211 
	}
}

213 
__f‹tify_fun˘i⁄
 

214 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

215 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

217  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

218 
__≠
);

219 
	}
}

225 #i‡!
deföed
 
__USE_ISOC11
 \

226 || (
deföed
 
	g__˝lu•lus
 && __˝lu•lu†<201103L && !deföed 
__USE_GNU
)

227 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

228 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

229 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

232 
__f‹tify_fun˘i⁄
 
__wur
 *

233 
	$gës
 (*
__°r
)

235 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

236  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

237  
	`__gës_w¨n
 (
__°r
);

238 
	}
}

241 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

242 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

243 *
	`__REDIRECT
 (
__fgës_Æüs
,

244 (*
__ª°ri˘
 
__s
, 
__n
,

245 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

246 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

247 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

248 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

249 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

252 
__f‹tify_fun˘i⁄
 
__wur
 *

253 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

255 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

257 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

258  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

260 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

261  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

263  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

264 
	}
}

266 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

269 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

270 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

271 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

272 
‰ód
Ë
__wur
;

273 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

274 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

275 
size_t
 
__size
, size_à
__n
,

276 
FILE
 *
__ª°ri˘
 
__°ªam
),

277 
__‰ód_chk
)

278 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

281 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


282 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

283 
FILE
 *
__ª°ri˘
 
__°ªam
)

285 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

287 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

288 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

289 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

290  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

292 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

293  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

295  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

296 
	}
}

298 #ifde‡
__USE_GNU


299 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

300 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

301 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

302 (*
__ª°ri˘
 
__s
, 
__n
,

303 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

304 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

305 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

306 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

307 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

310 
__f‹tify_fun˘i⁄
 
__wur
 *

311 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

313 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

315 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

316  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

318 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

319  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

321  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

322 
	}
}

325 #ifde‡
__USE_MISC


326 #unde‡
‰ód_u∆ocked


327 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

330 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

331 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

332 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

333 
‰ód_u∆ocked
Ë
__wur
;

334 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

335 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

336 
size_t
 
__size
, size_à
__n
,

337 
FILE
 *
__ª°ri˘
 
__°ªam
),

338 
__‰ód_u∆ocked_chk
)

339 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

342 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


343 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

344 
FILE
 *
__ª°ri˘
 
__°ªam
)

346 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

349 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

350 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

351  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

352 
__°ªam
);

354 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

355  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

356 
__°ªam
);

359 #ifde‡
__USE_EXTERN_INLINES


360 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

361 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

362 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

363 && 
__size
 * 
__n
 <= 8)

365 
size_t
 
__˙t
 = 
__size
 * 
__n
;

366 *
__˝å
 = (*Ë
__±r
;

367 i‡(
__˙t
 == 0)

370 ; 
__˙t
 > 0; --__cnt)

372 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

373 i‡(
__c
 =
EOF
)

375 *
__˝å
++ = 
__c
;

377  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

380  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

381 
	}
}

	@/usr/include/bits/stdio_lim.h

18 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


22 #ifde‡
_STDIO_H


23 
	#L_tm≤am
 20

	)

24 
	#TMP_MAX
 238328

	)

25 
	#FILENAME_MAX
 4096

	)

27 #ifde‡
__USE_POSIX


28 
	#L_˘îmid
 9

	)

29 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


30 
	#L_cu£rid
 9

	)

35 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


36 #unde‡
FOPEN_MAX


37 
	#FOPEN_MAX
 16

	)

40 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


41 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 
__BEGIN_NAMESPACE_C99


25 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

26 
__END_NAMESPACE_C99


29 #ifde‡
__USE_GNU


30 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

33 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


34 #ifde‡
__USE_MISC


35 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

36 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

39 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

41 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


42 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

43  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

45  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

48  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

54 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

55 
size_t
 
__buÊí
), 
±¢ame_r
)

56 
	`__n⁄nuŒ
 ((2));

57 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

58 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

59 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

60 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

66 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

68 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

69  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

70 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

71  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

73  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

74 
	}
}

77 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

78 
__THROW
 
__wur
;

79 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

80 
w˘omb
Ë
__wur
;

82 
__f‹tify_fun˘i⁄
 
__wur
 

83 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

88 
	#__STDLIB_MB_LEN_MAX
 16

	)

89 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


92 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

93  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

94  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

95 
	}
}

98 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

99 c⁄° *
__ª°ri˘
 
__§c
,

100 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

101 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

102 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

103 c⁄° *
__ª°ri˘
 
__§c
,

104 
size_t
 
__Àn
), 
mb°owcs
);

105 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

106 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

107 c⁄° *
__ª°ri˘
 
__§c
,

108 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

109 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

112 
__f‹tify_fun˘i⁄
 
size_t


113 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

114 
size_t
 
__Àn
))

116 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

118 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

119  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

120 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

122 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

123  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

124 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

126  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

127 
	}
}

130 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

131 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

132 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

133 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

134 (*
__ª°ri˘
 
__d°
,

135 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

136 
size_t
 
__Àn
), 
wc°ombs
);

137 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

138 (*
__ª°ri˘
 
__d°
,

139 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

140 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

141 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

143 
__f‹tify_fun˘i⁄
 
size_t


144 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

145 
size_t
 
__Àn
))

147 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

149 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

150  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

151 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

152  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

154  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

155 
	}
}

	@/usr/include/bits/string.h

19 #i‚de‡
_STRING_H


24 
	#_STRING_ARCH_u«lig√d
 1

	)

28 #i‡!
deföed
 
__x86_64__
 && (deföed 
__i486__
 || deföed 
__≥¡ium__
 \

29 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

30 || 
deföed
 
	g__noc⁄a__
 || deföed 
	g__©om__
 \

31 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__c‹ei7__
 \

32 || 
deföed
 
	g__k6__
 || deföed 
	g__geode__
 \

33 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

34 || 
deföed
 
	g__amdÁm10__
)

38 #i‡!
deföed
 
__NO_STRING_INLINES
 && deföed 
__USE_STRING_INLINES
 \

39 && 
deföed
 
	g__GNUC__
 && __GNUC__ >2 && !
__BOUNDED_POINTERS__


41 #i‚de‡
__STRING_INLINE


42 #i‚de‡
__exã∫_ölöe


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 
	#__STRING_SMALL_GET16
(
§c
, 
idx
) \

51 ((((c⁄° *Ë(
§c
))[
idx
 + 1] << 8) \

52 | ((c⁄° *Ë(
§c
))[
idx
])

	)

53 
	#__STRING_SMALL_GET32
(
§c
, 
idx
) \

54 (((((c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

55 | ((c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

56 | ((c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

57 | ((c⁄° *Ë(
§c
))[
idx
])

	)

61 
	#_HAVE_STRING_ARCH_mem˝y
 1

	)

62 
	#mem˝y
(
de°
, 
§c
, 
n
) \

63 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

64 ? 
	`__mem˝y_c
 ((
de°
), (
§c
), (
n
)) \

65 : 
	`__mem˝y_g
 ((
de°
), (
§c
), (
n
))))

	)

66 
	#__mem˝y_c
(
de°
, 
§c
, 
n
) \

67 ((
n
) == 0 \

68 ? (
de°
) \

69 : (((
n
) % 4 == 0) \

70 ? 
	`__mem˝y_by4
 (
de°
, 
§c
, 
n
) \

71 : (((
n
) % 2 == 0) \

72 ? 
	`__mem˝y_by2
 (
de°
, 
§c
, 
n
) \

73 : 
	`__mem˝y_g
 (
de°
, 
§c
, 
n
))))

	)

75 
__STRING_INLINE
 *
__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
,

76 
size_t
 
__n
);

78 
__STRING_INLINE
 *

79 
	$__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

81 
__d0
, 
__d1
;

82 *
__tmp
 = 
__de°
;

83 
__asm__
 
__vﬁ©ûe__


91 : "=&r" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

92 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 4)

94  
__de°
;

95 
	}
}

97 
__STRING_INLINE
 *
__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
,

98 
size_t
 
__n
);

100 
__STRING_INLINE
 *

101 
	$__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

103 
__d0
, 
__d1
;

104 *
__tmp
 = 
__de°
;

105 
__asm__
 
__vﬁ©ûe__


118 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

119 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 2)

121  
__de°
;

122 
	}
}

124 
__STRING_INLINE
 *
__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
);

126 
__STRING_INLINE
 *

127 
	$__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

129 
__d0
, 
__d1
, 
__d2
;

130 *
__tmp
 = 
__de°
;

131 
__asm__
 
__vﬁ©ûe__


142 : "=&c" (
__d0
), "=&D" (
__d1
), "=&S" (
__d2
),

143 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

144 : "0" (
__n
), "1" (
__tmp
), "2" (
__§c
),

145 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
)

147  
__de°
;

148 
	}
}

150 
	#_HAVE_STRING_ARCH_memmove
 1

	)

151 #i‚de‡
_FORCE_INLINES


154 
	#memmove
(
de°
, 
§c
, 
n
Ë
	`__memmove_g
 (de°, src,Ç)

	)

156 
__STRING_INLINE
 *
	$__memmove_g
 (*, c⁄° *, 
size_t
)

157 
	`__asm__
 ("memmove");

159 
__STRING_INLINE
 *

160 
	$__memmove_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

162 
__d0
, 
__d1
, 
__d2
;

163 *
__tmp
 = 
__de°
;

164 i‡(
__de°
 < 
__§c
)

165 
__asm__
 
__vﬁ©ûe__


168 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

169 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

170 : "0" (
__n
), "1" (
__§c
), "2" (
__tmp
),

171 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

173 
__asm__
 
__vﬁ©ûe__


177 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

178 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

179 : "0" (
__n
), "1" (__¿- 1 + (c⁄° *Ë
__§c
),

180 "2" (
__n
 - 1 + (*Ë
__tmp
),

181 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

182  
__de°
;

183 
	}
}

187 
	#_HAVE_STRING_ARCH_memcmp
 1

	)

188 #i‚de‡
_FORCE_INLINES


189 #i‚de‡
__PIC__


191 
__STRING_INLINE
 

192 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

194 
__d0
, 
__d1
, 
__d2
;

195 
__ªs
;

196 
__asm__
 
__vﬁ©ûe__


204 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

205 : "0" (0), "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

206 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

207 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

209  
__ªs
;

210 
	}
}

215 
	#_HAVE_STRING_ARCH_mem£t
 1

	)

216 
	#_USE_STRING_ARCH_mem£t
 1

	)

217 
	#mem£t
(
s
, 
c
, 
n
) \

218 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

219 ? ((
n
) == 1 \

220 ? 
	`__mem£t_c1
 ((
s
), (
c
)) \

221 : 
	`__mem£t_gc
 ((
s
), (
c
), (
n
))) \

222 : (
	`__buûtö_c⁄°™t_p
 (
c
) \

223 ? (
	`__buûtö_c⁄°™t_p
 (
n
) \

224 ? 
	`__mem£t_c˙
 ((
s
), (
c
), (
n
)) \

225 : 
	`mem£t
 ((
s
), (
c
), (
n
))) \

226 : (
	`__buûtö_c⁄°™t_p
 (
n
) \

227 ? 
	`__mem£t_g˙
 ((
s
), (
c
), (
n
)) \

228 : 
	`mem£t
 ((
s
), (
c
), (
n
))))))

	)

230 
	#__mem£t_c1
(
s
, 
c
Ë({ *
__s
 = (s); \

231 *((*Ë
__s
Ë(Ë(
c
); \

232 
__s
; })

	)

234 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

235 ({ *
__s
 = (
s
); \

237 
__ui
; \

238 
__usi
; \

239 
__uc
; \

240 } *
__u
 = 
__s
; \

241 
__c
 = ((Ë((Ë(
c
))) * 0x01010101; \

247 i‡((
n
) == 3 || (n) >= 5) \

248 
__asm__
 
	`__vﬁ©ûe__
 ("" : "Ù" (
__c
) : "0" (__c)); \

251 
n
) \

254 
__u
->
__ui
 = 
__c
; \

255 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

257 
__u
->
__ui
 = 
__c
; \

258 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

260 
__u
->
__ui
 = 
__c
; \

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

263 
__u
->
__usi
 = (Ë
__c
; \

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

265 
__u
->
__uc
 = (Ë
__c
; \

269 
__u
->
__ui
 = 
__c
; \

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

272 
__u
->
__ui
 = 
__c
; \

273 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

275 
__u
->
__ui
 = 
__c
; \

276 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

278 
__u
->
__usi
 = (Ë
__c
; \

282 
__u
->
__ui
 = 
__c
; \

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

285 
__u
->
__ui
 = 
__c
; \

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

288 
__u
->
__ui
 = 
__c
; \

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

291 
__u
->
__uc
 = (Ë
__c
; \

295 
__u
->
__ui
 = 
__c
; \

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

298 
__u
->
__ui
 = 
__c
; \

299 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

301 
__u
->
__ui
 = 
__c
; \

302 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

304 
__u
->
__ui
 = 
__c
; \

309 
__s
; })

	)

311 
	#__mem£t_c˙
(
s
, 
c
, 
n
) \

312 (((
n
) % 4 == 0) \

313 ? 
	`__mem£t_c˙_by4
 (
s
, ((Ë((Ë(
c
))) * 0x01010101,\

314 
n
) \

315 : (((
n
) % 2 == 0) \

316 ? 
	`__mem£t_c˙_by2
 (
s
, \

317 ((Ë((Ë(
c
))) * 0x01010101,\

318 
n
) \

319 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

321 
__STRING_INLINE
 *
__mem£t_c˙_by4
 (*
__s
, 
__c
,

322 
size_t
 
__n
);

324 
__STRING_INLINE
 *

325 
	$__mem£t_c˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

327 *
__tmp
 = 
__s
;

328 
__d0
;

329 #ifde‡
__i686__


330 
__asm__
 
__vﬁ©ûe__


333 : "=&a" (
__c
), "=&D" (
__tmp
), "=&c" (
__d0
),

334 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

335 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

338 
__asm__
 
__vﬁ©ûe__


344 : "=&r" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

345 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

346 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

349  
__s
;

350 
	}
}

352 
__STRING_INLINE
 *
__mem£t_c˙_by2
 (*
__s
, 
__c
,

353 
size_t
 
__n
);

355 
__STRING_INLINE
 *

356 
	$__mem£t_c˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

358 
__d0
, 
__d1
;

359 *
__tmp
 = 
__s
;

360 #ifde‡
__i686__


361 
__asm__
 
__vﬁ©ûe__


365 : "=&a" (
__d0
), "=&D" (
__tmp
), "=&c" (
__d1
),

366 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

367 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

370 
__asm__
 
__vﬁ©ûe__


376 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

377 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

378 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

381  
__s
;

382 
	}
}

384 
	#__mem£t_g˙
(
s
, 
c
, 
n
) \

385 (((
n
) % 4 == 0) \

386 ? 
	`__mem£t_g˙_by4
 (
s
, 
c
, 
n
) \

387 : (((
n
) % 2 == 0) \

388 ? 
	`__mem£t_g˙_by2
 (
s
, 
c
, 
n
) \

389 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

391 
__STRING_INLINE
 *
__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
);

393 
__STRING_INLINE
 *

394 
	$__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

396 *
__tmp
 = 
__s
;

397 
__d0
;

398 
__asm__
 
__vﬁ©ûe__


408 : "=&q" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

409 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

410 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

412  
__s
;

413 
	}
}

415 
__STRING_INLINE
 *
__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
);

417 
__STRING_INLINE
 *

418 
	$__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

420 
__d0
, 
__d1
;

421 *
__tmp
 = 
__s
;

422 
__asm__
 
__vﬁ©ûe__


433 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

434 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

435 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

437  
__s
;

438 
	}
}

442 
	#_HAVE_STRING_ARCH_memchr
 1

	)

443 #i‚de‡
_FORCE_INLINES


444 
__STRING_INLINE
 *

445 
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

447 
__d0
;

448 #ifde‡
__i686__


449 
__d1
;

451 *
__ªs
;

452 i‡(
__n
 == 0)

453  
NULL
;

454 #ifde‡
__i686__


455 
__asm__
 
__vﬁ©ûe__


459 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

460 : "a" (
__c
), "0" (
__s
), "1" (
__n
), "2" (1),

461 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

464 
__asm__
 
__vﬁ©ûe__


470 : "=D" (
__ªs
), "=&c" (
__d0
)

471 : "a" (
__c
), "0" (
__s
), "1" (
__n
),

472 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

475  
__ªs
 - 1;

476 
	}
}

479 
	#_HAVE_STRING_ARCH_memrchr
 1

	)

480 #i‚de‡
_FORCE_INLINES


481 
__STRING_INLINE
 *
__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
);

483 
__STRING_INLINE
 *

484 
	$__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

486 
__d0
;

487 #ifde‡
__i686__


488 
__d1
;

490 *
__ªs
;

491 i‡(
__n
 == 0)

492  
NULL
;

493 #ifde‡
__i686__


494 
__asm__
 
__vﬁ©ûe__


500 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

501 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n), "2" (-1),

502 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

505 
__asm__
 
__vﬁ©ûe__


512 : "=D" (
__ªs
), "=&c" (
__d0
)

513 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n),

514 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

517  
__ªs
;

518 
	}
}

519 #ifde‡
__USE_GNU


520 
	#memrchr
(
s
, 
c
, 
n
Ë
	`__memrchr
 ((s), (c), (n))

	)

525 
	#_HAVE_STRING_ARCH_øwmemchr
 1

	)

526 
__STRING_INLINE
 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

528 #i‚de‡
_FORCE_INLINES


529 
__STRING_INLINE
 *

530 
	$__øwmemchr
 (c⁄° *
__s
, 
__c
)

532 
__d0
;

533 *
__ªs
;

534 
__asm__
 
__vﬁ©ûe__


537 : "=D" (
__ªs
), "=&c" (
__d0
)

538 : "a" (
__c
), "0" (
__s
), "1" (0xffffffff),

539 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

541  
__ªs
 - 1;

542 
	}
}

543 #ifde‡
__USE_GNU


544 
__STRING_INLINE
 *

545 
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

547  
	`__øwmemchr
 (
__s
, 
__c
);

548 
	}
}

554 
	#_HAVE_STRING_ARCH_°æí
 1

	)

555 
	#°æí
(
°r
) \

556 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
°r
) \

557 ? 
	`__buûtö_°æí
 (
°r
) \

558 : 
	`__°æí_g
 (
°r
)))

	)

559 
__STRING_INLINE
 
size_t
 
__°æí_g
 (c⁄° *
__°r
);

561 
__STRING_INLINE
 
size_t


562 
	$__°æí_g
 (c⁄° *
__°r
)

564 
__dummy
;

565 c⁄° *
__tmp
 = 
__°r
;

566 
__asm__
 
__vﬁ©ûe__


572 : "Ù" (
__tmp
), "=&q" (
__dummy
)

573 : "0" (
__°r
),

574 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__°r
)

576  
__tmp
 - 
__°r
 - 1;

577 
	}
}

581 
	#_HAVE_STRING_ARCH_°r˝y
 1

	)

582 
	#°r˝y
(
de°
, 
§c
) \

583 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

584 ? ( ((
§c
)[0]Ë=1 && 
	`°æí
 (src) + 1 <= 8 \

585 ? 
	`__°r˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

586 : (*Ë
	`mem˝y
 ((*Ë(
de°
), \

587 (c⁄° *Ë(
§c
), \

588 
	`°æí
 (
§c
) + 1)) \

589 : 
	`__°r˝y_g
 ((
de°
), (
§c
))))

	)

591 
	#__°r˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

592 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

594 
__ui
; \

595 
__usi
; \

596 
__uc
; \

597 
__c
; \

598 } *
__u
 = (*Ë
__de°
; \

599 
§˛í
) \

602 
__u
->
__uc
 = '\0'; \

605 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

608 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

609 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

610 
__u
->
__uc
 = '\0'; \

613 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

616 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

617 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

618 
__u
->
__uc
 = '\0'; \

621 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

622 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

623 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

626 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

627 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

628 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

629 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

630 
__u
->
__uc
 = '\0'; \

633 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

635 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

638 (*Ë
__de°
; }))

	)

640 
__STRING_INLINE
 *
__°r˝y_g
 (*
__de°
, c⁄° *
__§c
);

642 
__STRING_INLINE
 *

643 
	$__°r˝y_g
 (*
__de°
, c⁄° *
__§c
)

645 *
__tmp
 = 
__de°
;

646 
__dummy
;

647 
__asm__
 
__vﬁ©ûe__


656 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
),

657 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

658 : "0" (
__§c
), "1" (
__tmp
),

659 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

661  
__de°
;

662 
	}
}

665 #ifde‡
__USE_GNU


666 
	#_HAVE_STRING_ARCH_°p˝y
 1

	)

668 
	#__°p˝y
(
de°
, 
§c
) \

669 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

670 ? (
	`°æí
 (
§c
) + 1 <= 8 \

671 ? 
	`__°p˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

672 : 
	`__°p˝y_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1)) \

673 : 
	`__°p˝y_g
 ((
de°
), (
§c
))))

	)

674 
	#__°p˝y_c
(
de°
, 
§c
, 
§˛í
) \

675 ((
§˛í
) % 4 == 0 \

676 ? 
	`__memp˝y_by4
 (
de°
, 
§c
, 
§˛í
) - 1 \

677 : ((
§˛í
) % 2 == 0 \

678 ? 
	`__memp˝y_by2
 (
de°
, 
§c
, 
§˛í
) - 1 \

679 : 
	`__memp˝y_byn
 (
de°
, 
§c
, 
§˛í
Ë- 1))

	)

682 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 ((de°), (§c))

	)

684 
	#__°p˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

685 (
	`__exãnsi⁄__
 ({ union { \

686 
__ui
; \

687 
__usi
; \

688 
__uc
; \

689 
__c
; \

690 } *
__u
 = (*Ë(
de°
); \

691 
§˛í
) \

694 
__u
->
__uc
 = '\0'; \

697 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

698 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

701 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

702 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

703 
__u
->
__uc
 = '\0'; \

706 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

707 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

710 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

711 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

712 
__u
->
__uc
 = '\0'; \

715 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

716 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

717 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

718 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

721 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

722 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

723 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

724 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

725 
__u
->
__uc
 = '\0'; \

728 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

729 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

730 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

731 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

734 (*Ë
__u
; }))

	)

736 
__STRING_INLINE
 *
__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
,

737 
size_t
 
__§˛í
);

739 
__STRING_INLINE
 *

740 
	$__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

742 *
__tmp
 = 
__de°
;

743 
__d0
, 
__d1
;

744 
__asm__
 
__vﬁ©ûe__


752 : "=&r" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

753 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4)

755  
__tmp
;

756 
	}
}

758 
__STRING_INLINE
 *
__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
,

759 
size_t
 
__§˛í
);

761 
__STRING_INLINE
 *

762 
	$__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

764 *
__tmp
 = 
__de°
;

765 
__d0
, 
__d1
;

766 
__asm__
 
__vﬁ©ûe__


779 : "=&q" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
),

780 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

781 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

782 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

784  
__tmp
 + 2;

785 
	}
}

787 
__STRING_INLINE
 *
__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
,

788 
size_t
 
__§˛í
);

790 
__STRING_INLINE
 *

791 
	$__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

793 
__d0
, 
__d1
;

794 *
__tmp
 = 
__de°
;

795 
__asm__
 
__vﬁ©ûe__


806 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

807 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

808 : "0" (
__tmp
), "1" (
__§˛í
), "2" (
__§c
),

809 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

811  
__tmp
;

812 
	}
}

814 
__STRING_INLINE
 *
__°p˝y_g
 (*
__de°
, c⁄° *
__§c
);

816 
__STRING_INLINE
 *

817 
	$__°p˝y_g
 (*
__de°
, c⁄° *
__§c
)

819 *
__tmp
 = 
__de°
;

820 
__dummy
;

821 
__asm__
 
__vﬁ©ûe__


830 : "=&r" (
__§c
), "Ù" (
__tmp
), "=&q" (
__dummy
),

831 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

832 : "0" (
__§c
), "1" (
__tmp
),

833 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

835  
__tmp
 - 1;

836 
	}
}

841 
	#_HAVE_STRING_ARCH_°∫˝y
 1

	)

842 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

843 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

844 ? ((
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

845 ? (*Ë
	`mem˝y
 ((*Ë(
de°
), \

846 (c⁄° *Ë(
§c
), 
n
) \

847 : 
	`__°∫˝y_cg
 ((
de°
), (
§c
), 
	`°æí
 (§cË+ 1, 
n
))) \

848 : 
	`__°∫˝y_gg
 ((
de°
), (
§c
), 
n
)))

	)

849 
	#__°∫˝y_cg
(
de°
, 
§c
, 
§˛í
, 
n
) \

850 (((
§˛í
) % 4 == 0) \

851 ? 
	`__°∫˝y_by4
 (
de°
, 
§c
, 
§˛í
, 
n
) \

852 : (((
§˛í
) % 2 == 0) \

853 ? 
	`__°∫˝y_by2
 (
de°
, 
§c
, 
§˛í
, 
n
) \

854 : 
	`__°∫˝y_byn
 (
de°
, 
§c
, 
§˛í
, 
n
)))

	)

856 
__STRING_INLINE
 *
__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[],

857 
size_t
 
__§˛í
, size_à
__n
);

859 
__STRING_INLINE
 *

860 
	$__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

862 *
__tmp
 = 
__de°
;

863 
__dummy1
, 
__dummy2
;

864 
__asm__
 
__vﬁ©ûe__


872 : "=&r" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

873 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

874 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4),

875 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

877 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

878  
__de°
;

879 
	}
}

881 
__STRING_INLINE
 *
__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[],

882 
size_t
 
__§˛í
, size_à
__n
);

884 
__STRING_INLINE
 *

885 
	$__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

887 *
__tmp
 = 
__de°
;

888 
__dummy1
, 
__dummy2
;

889 
__asm__
 
__vﬁ©ûe__


902 : "=&q" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

903 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

904 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

905 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

907 (Ë
	`mem£t
 (
__tmp
 + 2, '\0', 
__n
 - 
__§˛í
);

908  
__de°
;

909 
	}
}

911 
__STRING_INLINE
 *
__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[],

912 
size_t
 
__§˛í
, size_à
__n
);

914 
__STRING_INLINE
 *

915 
	$__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

917 
__d0
, 
__d1
;

918 *
__tmp
 = 
__de°
;

919 
__asm__
 
__vﬁ©ûe__


930 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

931 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

932 : "1" (
__§˛í
), "0" (
__tmp
),"2" (
__§c
),

933 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

935 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

936  
__de°
;

937 
	}
}

939 
__STRING_INLINE
 *
__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
,

940 
size_t
 
__n
);

942 
__STRING_INLINE
 *

943 
	$__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

945 *
__tmp
 = 
__de°
;

946 
__dummy
;

947 i‡(
__n
 > 0)

948 
__asm__
 
__vﬁ©ûe__


964 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
), "=&r" (
__n
)

965 : "0" (
__§c
), "1" (
__tmp
), "3" (
__n
)

968  
__de°
;

969 
	}
}

973 
	#_HAVE_STRING_ARCH_°rˇt
 1

	)

974 
	#°rˇt
(
de°
, 
§c
) \

975 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

976 ? 
	`__°rˇt_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

977 : 
	`__°rˇt_g
 ((
de°
), (
§c
))))

	)

979 
__STRING_INLINE
 *
__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[],

980 
size_t
 
__§˛í
);

982 
__STRING_INLINE
 *

983 
	$__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
)

985 #ifde‡
__i686__


986 
__d0
;

987 *
__tmp
;

988 
__asm__
 
__vﬁ©ûe__


990 : "=D" (
__tmp
), "=&c" (
__d0
),

991 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

992 : "0" (
__de°
), "1" (0xffffffff), "a" (0),

993 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

995 --
__tmp
;

997 *
__tmp
 = 
__de°
 - 1;

998 
__asm__
 
__vﬁ©ûe__


1003 : "Ù" (
__tmp
),

1004 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1005 : "0" (
__tmp
),

1006 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

1009 (Ë
	`mem˝y
 (
__tmp
, 
__§c
, 
__§˛í
);

1010  
__de°
;

1011 
	}
}

1013 
__STRING_INLINE
 *
__°rˇt_g
 (*
__de°
, c⁄° *
__§c
);

1015 
__STRING_INLINE
 *

1016 
	$__°rˇt_g
 (*
__de°
, c⁄° *
__§c
)

1018 *
__tmp
 = 
__de°
 - 1;

1019 
__dummy
;

1020 
__asm__
 
__vﬁ©ûe__


1032 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
),

1033 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1034 : "1" (
__tmp
), "2" (
__§c
),

1035 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

1037  
__de°
;

1038 
	}
}

1042 
	#_HAVE_STRING_ARCH_°∫ˇt
 1

	)

1043 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

1044 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

1045 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

1046 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

1047 ? 
	`°rˇt
 (
__de°
, (
§c
)) \

1048 : (*(*)
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

1049 (c⁄° *Ë(
§c
), \

1050 (
n
)Ë0, 
__de°
)) \

1051 : 
	`__°∫ˇt_g
 (
__de°
, (
§c
), (
n
)); }))

	)

1053 
__STRING_INLINE
 *
__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[],

1054 
size_t
 
__n
);

1056 
__STRING_INLINE
 *

1057 
	$__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__n
)

1059 *
__tmp
 = 
__de°
;

1060 
__dummy
;

1061 #ifde‡
__i686__


1062 
__asm__
 
__vﬁ©ûe__


1076 : "=&a" (
__dummy
), "=&D" (
__tmp
), "=&S" (
__§c
), "=&c" (
__n
)

1077 : "g" (
__n
), "0" (0), "1" (
__tmp
), "2" (
__§c
), "3" (0xffffffff)

1080 --
__tmp
;

1081 
__asm__
 
__vﬁ©ûe__


1098 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__n
)

1099 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
)

1102  
__de°
;

1103 
	}
}

1107 
	#_HAVE_STRING_ARCH_°rcmp
 1

	)

1108 
	#°rcmp
(
s1
, 
s2
) \

1109 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

1110 && ( ((
s1
)[0]Ë!1 || 
	`°æí
 (s1) >= 4) \

1111 && ( ((
s2
)[0]Ë!1 || 
	`°æí
 (s2) >= 4) \

1112 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

1113 (
	`°æí
 (
s1
Ë< såÀ¿(
s2
) \

1114 ? 
	`°æí
 (
s1
Ë: såÀ¿(
s2
)) + 1) \

1115 : (
	`__buûtö_c⁄°™t_p
 (
s1
) &&  ((s1)[0]) == 1 \

1116 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (
s1
) < 4 \

1117 ? (
	`__buûtö_c⁄°™t_p
 (
s2
) &&  ((s2)[0]) == 1 \

1118 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1119 (c⁄° *Ë(
s2
), \

1120 
	`°æí
 (
s1
)) \

1121 : 
	`__°rcmp_cg
 ((c⁄° *Ë(
s1
), \

1122 (c⁄° *Ë(
s2
), \

1123 
	`°æí
 (
s1
))) \

1124 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&&  ((
s1
)[0]) == 1 \

1125 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (s2) < 4 \

1126 ? (
	`__buûtö_c⁄°™t_p
 (
s1
) \

1127 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1128 (c⁄° *Ë(
s2
), \

1129 
	`°æí
 (
s2
)) \

1130 : 
	`__°rcmp_gc
 ((c⁄° *Ë(
s1
), \

1131 (c⁄° *Ë(
s2
), \

1132 
	`°æí
 (
s2
))) \

1133 : 
	`__°rcmp_gg
 ((
s1
), (
s2
))))))

	)

1135 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

1136 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = (
s1
)[0] - (
s2
)[0]; \

1137 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

1139 
__ªsu…
 = (
s1
)[1] - (
s2
)[1]; \

1140 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

1142 
__ªsu…
 = (
s1
)[2] - (
s2
)[2]; \

1143 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

1144 
__ªsu…
 = (
s1
)[3] - (
s2
)[3]; \

1147 
__ªsu…
; }))

	)

1149 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

1150 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = (
s2
); \

1151 
__ªsu…
 = (
s1
)[0] - 
__s2
[0]; \

1152 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

1154 
__ªsu…
 = (
s1
)[1] - 
__s2
[1]; \

1155 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

1157 
__ªsu…
 = (
s1
)[2] - 
__s2
[2]; \

1158 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

1159 
__ªsu…
 = (
s1
)[3] - 
__s2
[3]; \

1162 
__ªsu…
; }))

	)

1164 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

1165 (
	`__exãnsi⁄__
 ({ c⁄° *
__s1
 = (
s1
); \

1166 
__ªsu…
 = 
__s1
[0] - (
s2
)[0]; \

1167 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

1169 
__ªsu…
 = 
__s1
[1] - (
s2
)[1]; \

1170 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

1172 
__ªsu…
 = 
__s1
[2] - (
s2
)[2]; \

1173 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

1174 
__ªsu…
 = 
__s1
[3] - (
s2
)[3]; \

1177 
__ªsu…
; }))

	)

1179 
__STRING_INLINE
 
__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
);

1181 
__STRING_INLINE
 

1182 
	$__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
)

1184 
__ªs
;

1185 
__asm__
 
__vﬁ©ûe__


1201 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
)

1202 : "1" (
__s1
), "2" (
__s2
),

1203 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s1
),

1204 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s2
)

1206  
__ªs
;

1207 
	}
}

1211 
	#_HAVE_STRING_ARCH_°∫cmp
 1

	)

1212 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

1213 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`°æí
 (s1Ë< ((
size_t
Ë(
n
)) \

1214 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1215 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`°æí
 (s2Ë< ((
size_t
Ë(
n
))\

1216 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1217 : 
	`__°∫cmp_g
 ((
s1
), (
s2
), (
n
)))))

	)

1219 
__STRING_INLINE
 
__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
,

1220 
size_t
 
__n
);

1222 
__STRING_INLINE
 

1223 
	$__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

1225 
__ªs
;

1226 
__asm__
 
__vﬁ©ûe__


1245 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
), "=&r" (
__n
)

1246 : "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

1247 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

1248 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

1250  
__ªs
;

1251 
	}
}

1255 
	#_HAVE_STRING_ARCH_°rchr
 1

	)

1256 
	#_USE_STRING_ARCH_°rchr
 1

	)

1257 
	#°rchr
(
s
, 
c
) \

1258 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1259 ? ((
c
) == '\0' \

1260 ? (*Ë
	`__øwmemchr
 ((
s
), (
c
)) \

1261 : 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1262 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1264 
__STRING_INLINE
 *
__°rchr_c
 (c⁄° *
__s
, 
__c
);

1266 
__STRING_INLINE
 *

1267 
	$__°rchr_c
 (c⁄° *
__s
, 
__c
)

1269 
__d0
;

1270 *
__ªs
;

1271 
__asm__
 
__vﬁ©ûe__


1281 : "Ù" (
__ªs
), "=&a" (
__d0
)

1282 : "0" (
__s
), "1" (
__c
),

1283 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1285  
__ªs
;

1286 
	}
}

1288 
__STRING_INLINE
 *
__°rchr_g
 (c⁄° *
__s
, 
__c
);

1290 
__STRING_INLINE
 *

1291 
	$__°rchr_g
 (c⁄° *
__s
, 
__c
)

1293 
__d0
;

1294 *
__ªs
;

1295 
__asm__
 
__vﬁ©ûe__


1306 : "Ù" (
__ªs
), "=&a" (
__d0
)

1307 : "0" (
__s
), "1" (
__c
),

1308 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1310  
__ªs
;

1311 
	}
}

1315 
	#_HAVE_STRING_ARCH_°rch∫ul
 1

	)

1316 
	#__°rch∫ul
(
s
, 
c
) \

1317 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1318 ? ((
c
) == '\0' \

1319 ? (*Ë
	`__øwmemchr
 ((
s
), 
c
) \

1320 : 
	`__°rch∫ul_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1321 : 
	`__°rch∫ul_g
 ((
s
), 
c
)))

	)

1323 
__STRING_INLINE
 *
__°rch∫ul_c
 (c⁄° *
__s
, 
__c
);

1325 
__STRING_INLINE
 *

1326 
	$__°rch∫ul_c
 (c⁄° *
__s
, 
__c
)

1328 
__d0
;

1329 *
__ªs
;

1330 
__asm__
 
__vﬁ©ûe__


1340 : "Ù" (
__ªs
), "=&a" (
__d0
)

1341 : "0" (
__s
), "1" (
__c
),

1342 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1344  
__ªs
;

1345 
	}
}

1347 
__STRING_INLINE
 *
__°rch∫ul_g
 (c⁄° *
__s
, 
__c
);

1349 
__STRING_INLINE
 *

1350 
	$__°rch∫ul_g
 (c⁄° *
__s
, 
__c
)

1352 
__d0
;

1353 *
__ªs
;

1354 
__asm__
 
__vﬁ©ûe__


1365 : "Ù" (
__ªs
), "=&a" (
__d0
)

1366 : "0" (
__s
), "1" (
__c
),

1367 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1369  
__ªs
;

1370 
	}
}

1371 #ifde‡
__USE_GNU


1372 
	#°rch∫ul
(
s
, 
c
Ë
	`__°rch∫ul
 ((s), (c))

	)

1376 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1378 
	#_HAVE_STRING_ARCH_ödex
 1

	)

1379 
	#ödex
(
s
, 
c
) \

1380 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1381 ? 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1382 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1387 
	#_HAVE_STRING_ARCH_°ºchr
 1

	)

1388 
	#°ºchr
(
s
, 
c
) \

1389 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1390 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1391 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1393 #ifde‡
__i686__


1394 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1396 
__STRING_INLINE
 *

1397 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1399 
__d0
, 
__d1
;

1400 *
__ªs
;

1401 
__asm__
 
__vﬁ©ûe__


1409 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1410 : "0" (1), "1" (
__s
), "2" (
__c
),

1411 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1413  
__ªs
 - 1;

1414 
	}
}

1416 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1418 
__STRING_INLINE
 *

1419 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1421 
__d0
, 
__d1
;

1422 *
__ªs
;

1423 
__asm__
 
__vﬁ©ûe__


1432 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1433 : "0" (1), "1" (
__s
), "2" (
__c
),

1434 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1436  
__ªs
 - 1;

1437 
	}
}

1439 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1441 
__STRING_INLINE
 *

1442 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1444 
__d0
, 
__d1
;

1445 *
__ªs
;

1446 
__asm__
 
__vﬁ©ûe__


1456 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1457 : "0" (0), "1" (
__s
), "2" (
__c
),

1458 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1460  
__ªs
;

1461 
	}
}

1463 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1465 
__STRING_INLINE
 *

1466 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1468 
__d0
, 
__d1
;

1469 *
__ªs
;

1470 
__asm__
 
__vﬁ©ûe__


1481 : "Ù" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1482 : "0" (0), "1" (
__s
), "2" (
__c
),

1483 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1485  
__ªs
;

1486 
	}
}

1490 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1492 
	#_HAVE_STRING_ARCH_rödex
 1

	)

1493 
	#rödex
(
s
, 
c
) \

1494 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1495 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1496 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1502 
	#_HAVE_STRING_ARCH_°rc•n
 1

	)

1503 
	#°rc•n
(
s
, 
ªje˘
) \

1504 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
) &&  ((reject)[0]) == 1 \

1505 ? ((
ªje˘
)[0] == '\0' \

1506 ? 
	`°æí
 (
s
) \

1507 : ((
ªje˘
)[1] == '\0' \

1508 ? 
	`__°rc•n_c1
 ((
s
), (((
ªje˘
)[0] << 8) & 0xff00)) \

1509 : 
	`__°rc•n_cg
 ((
s
), (
ªje˘
), 
	`°æí
 (reject)))) \

1510 : 
	`__°rc•n_g
 ((
s
), (
ªje˘
))))

	)

1512 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

1514 #i‚de‡
_FORCE_INLINES


1515 
__STRING_INLINE
 
size_t


1516 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

1518 
__d0
;

1519 *
__ªs
;

1520 
__asm__
 
__vﬁ©ûe__


1529 : "Ù" (
__ªs
), "=&a" (
__d0
)

1530 : "0" (
__s
), "1" (
__ªje˘
),

1531 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1533  (
__ªs
 - 1Ë- 
__s
;

1534 
	}
}

1537 
__STRING_INLINE
 
size_t
 
__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[],

1538 
size_t
 
__ªje˘_Àn
);

1540 
__STRING_INLINE
 
size_t


1541 
	$__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[], 
size_t
 
__ªje˘_Àn
)

1543 
__d0
, 
__d1
, 
__d2
;

1544 c⁄° *
__ªs
;

1545 
__asm__
 
__vﬁ©ûe__


1556 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1557 : "0" (
__s
), "d" (
__ªje˘
), "g" (
__ªje˘_Àn
)

1559  (
__ªs
 - 1Ë- 
__s
;

1560 
	}
}

1562 
__STRING_INLINE
 
size_t
 
__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
);

1563 #ifde‡
__PIC__


1565 
__STRING_INLINE
 
size_t


1566 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1568 
__d0
, 
__d1
, 
__d2
;

1569 c⁄° *
__ªs
;

1570 
__asm__
 
__vﬁ©ûe__


1587 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1588 : "r" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1590  (
__ªs
 - 1Ë- 
__s
;

1591 
	}
}

1593 
__STRING_INLINE
 
size_t


1594 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1596 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1597 c⁄° *
__ªs
;

1598 
__asm__
 
__vﬁ©ûe__


1612 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1613 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ªje˘
), "b" (__reject)

1616  (
__ªs
 - 1Ë- 
__s
;

1617 
	}
}

1623 
	#_HAVE_STRING_ARCH_°r•n
 1

	)

1624 
	#°r•n
(
s
, 
ac˚±
) \

1625 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1626 ? ((
ac˚±
)[0] == '\0' \

1627 ? ((Ë(
s
), 0) \

1628 : ((
ac˚±
)[1] == '\0' \

1629 ? 
	`__°r•n_c1
 ((
s
), (((
ac˚±
)[0] << 8 ) & 0xff00)) \

1630 : 
	`__°r•n_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1631 : 
	`__°r•n_g
 ((
s
), (
ac˚±
))))

	)

1633 #i‚de‡
_FORCE_INLINES


1634 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1636 
__STRING_INLINE
 
size_t


1637 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1639 
__d0
;

1640 *
__ªs
;

1642 
__asm__
 
__vﬁ©ûe__


1648 : "Ù" (
__ªs
), "=&q" (
__d0
)

1649 : "0" (
__s
), "1" (
__ac˚±
),

1650 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1652  (
__ªs
 - 1Ë- 
__s
;

1653 
	}
}

1656 
__STRING_INLINE
 
size_t
 
__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1657 
size_t
 
__ac˚±_Àn
);

1659 
__STRING_INLINE
 
size_t


1660 
	$__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1662 
__d0
, 
__d1
, 
__d2
;

1663 c⁄° *
__ªs
;

1664 
__asm__
 
__vﬁ©ûe__


1675 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1676 : "0" (
__s
), "g" (
__ac˚±
), "g" (
__ac˚±_Àn
),

1679 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
),

1680 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__ac˚±_Àn
]; } *)
__ac˚±
)

1682  (
__ªs
 - 1Ë- 
__s
;

1683 
	}
}

1685 
__STRING_INLINE
 
size_t
 
__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1686 #ifde‡
__PIC__


1688 
__STRING_INLINE
 
size_t


1689 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1691 
__d0
, 
__d1
, 
__d2
;

1692 c⁄° *
__ªs
;

1693 
__asm__
 
__vﬁ©ûe__


1709 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1710 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (__accept)

1712  (
__ªs
 - 1Ë- 
__s
;

1713 
	}
}

1715 
__STRING_INLINE
 
size_t


1716 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1718 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1719 c⁄° *
__ªs
;

1720 
__asm__
 
__vﬁ©ûe__


1734 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1735 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ac˚±
), "b" (__accept)

1737  (
__ªs
 - 1Ë- 
__s
;

1738 
	}
}

1743 
	#_HAVE_STRING_ARCH_°Ωbrk
 1

	)

1744 
	#°Ωbrk
(
s
, 
ac˚±
) \

1745 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1746 ? ((
ac˚±
)[0] == '\0' \

1747 ? ((Ë(
s
), (*) 0) \

1748 : ((
ac˚±
)[1] == '\0' \

1749 ? 
	`°rchr
 ((
s
), (
ac˚±
)[0]) \

1750 : 
	`__°Ωbrk_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1751 : 
	`__°Ωbrk_g
 ((
s
), (
ac˚±
))))

	)

1753 
__STRING_INLINE
 *
__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1754 
size_t
 
__ac˚±_Àn
);

1756 
__STRING_INLINE
 *

1757 
	$__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1759 
__d0
, 
__d1
, 
__d2
;

1760 *
__ªs
;

1761 
__asm__
 
__vﬁ©ûe__


1776 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1777 : "0" (
__s
), "d" (
__ac˚±
), "g" (
__ac˚±_Àn
)

1779  
__ªs
;

1780 
	}
}

1782 
__STRING_INLINE
 *
__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1783 #ifde‡
__PIC__


1785 
__STRING_INLINE
 *

1786 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1788 
__d0
, 
__d1
, 
__d2
;

1789 *
__ªs
;

1790 
__asm__
 
__vﬁ©ûe__


1811 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1812 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1814  
__ªs
;

1815 
	}
}

1817 
__STRING_INLINE
 *

1818 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1820 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1821 *
__ªs
;

1822 
__asm__
 
__vﬁ©ûe__


1841 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

1842 : "0" (
__s
), "1" (0), "2" (0xffffffff), "b" (
__ac˚±
)

1844  
__ªs
;

1845 
	}
}

1850 
	#_HAVE_STRING_ARCH_°r°r
 1

	)

1851 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1852 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
) &&  ((needle)[0]) == 1 \

1853 ? ((
√edÀ
)[0] == '\0' \

1854 ? (
hay°ack
) \

1855 : ((
√edÀ
)[1] == '\0' \

1856 ? 
	`°rchr
 ((
hay°ack
), (
√edÀ
)[0]) \

1857 : 
	`__°r°r_cg
 ((
hay°ack
), (
√edÀ
), \

1858 
	`°æí
 (
√edÀ
)))) \

1859 : 
	`__°r°r_g
 ((
hay°ack
), (
√edÀ
))))

	)

1863 
__STRING_INLINE
 *
__°r°r_cg
 (c⁄° *
__hay°ack
,

1864 c⁄° 
__√edÀ
[],

1865 
size_t
 
__√edÀ_Àn
);

1867 
__STRING_INLINE
 *

1868 
	$__°r°r_cg
 (c⁄° *
__hay°ack
, c⁄° 
__√edÀ
[],

1869 
size_t
 
__√edÀ_Àn
)

1871 
__d0
, 
__d1
, 
__d2
;

1872 *
__ªs
;

1873 
__asm__
 
__vﬁ©ûe__


1886 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

1887 : "g" (
__√edÀ_Àn
), "1" (
__hay°ack
), "d" (
__√edÀ
)

1889  
__ªs
;

1890 
	}
}

1892 
__STRING_INLINE
 *
__°r°r_g
 (c⁄° *
__hay°ack
,

1893 c⁄° *
__√edÀ
);

1894 #ifde‡
__PIC__


1896 
__STRING_INLINE
 *

1897 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1899 
__d0
, 
__d1
, 
__d2
;

1900 *
__ªs
;

1901 
__asm__
 
__vﬁ©ûe__


1920 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

1921 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1922 "d" (
__√edÀ
)

1924  
__ªs
;

1925 
	}
}

1927 
__STRING_INLINE
 *

1928 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1930 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1931 *
__ªs
;

1932 
__asm__
 
__vﬁ©ûe__


1949 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1950 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1951 "b" (
__√edÀ
)

1953  
__ªs
;

1954 
	}
}

1960 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1961 #ifde‡
__i686__


1962 
	#_HAVE_STRING_ARCH_ffs
 1

	)

1963 
	#ffs
(
w‹d
Ë(
	`__buûtö_c⁄°™t_p
 (word) \

1964 ? 
	`__buûtö_ffs
 (
w‹d
) \

1965 : ({ 
__˙t
, 
__tmp
; \

1966 
__asm__
 
__vﬁ©ûe__
 \

1969 : "=&r" (
__˙t
), "Ù" (
__tmp
) \

1970 : "rm" (
w‹d
), "1" (-1)); \

1971 
__˙t
 + 1; }))

	)

1973 #i‚de‡
ff¶


1974 
	#ff¶
(
w‹d
Ë
	`ffs
(w‹d)

	)

1979 #i‚de‡
_FORCE_INLINES


1980 #unde‡
__STRING_INLINE


	@/usr/include/bits/string2.h

20 #i‚de‡
_STRING_H


24 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


41 #i‚de‡
__STRING_INLINE


42 #ifde‡
__˝lu•lus


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

49 #i‡
_STRING_ARCH_u«lig√d


51 
	~<ídün.h
>

52 
	~<bôs/ty≥s.h
>

54 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


55 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

56 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

57 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

58 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

59 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

60 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

61 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

62 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

64 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

65 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

66 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1])

	)

67 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

68 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

69 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

70 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

71 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3])

	)

76 
	#__STRING2_COPY_TYPE
(
N
) \

77 °ru˘ { 
__¨r
[
N
]; } \

78 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

79 
	t__STRING2_COPY_TYPE
 (2);

80 
__STRING2_COPY_TYPE
 (3);

81 
__STRING2_COPY_TYPE
 (4);

82 
__STRING2_COPY_TYPE
 (5);

83 
__STRING2_COPY_TYPE
 (6);

84 
__STRING2_COPY_TYPE
 (7);

85 
__STRING2_COPY_TYPE
 (8);

86 #unde‡
__STRING2_COPY_TYPE


92 
	#__°rög2_1b±r_p
(
__x
) \

93 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

96 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


97 #i‡!
__GNUC_PREREQ
 (3, 0)

98 #i‡
_STRING_ARCH_u«lig√d


99 
	#mem£t
(
s
, 
c
, 
n
) \

100 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

101 ? ((
n
) == 1 \

102 ? 
	`__mem£t_1
 (
s
, 
c
) \

103 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

104 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

105 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

106 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

108 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

109 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

111 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

112 ({ *
__s
 = (
s
); \

114 
__ui
; \

115 
__usi
; \

116 
__uc
; \

117 } *
__u
 = 
__s
; \

118 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

121 (Ë(
n
)) \

124 
__u
->
__ui
 = 
__c
 * 0x01010101; \

125 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

127 
__u
->
__ui
 = 
__c
 * 0x01010101; \

128 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

130 
__u
->
__ui
 = 
__c
 * 0x01010101; \

131 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

133 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

134 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

135 
__u
->
__uc
 = (Ë
__c
; \

139 
__u
->
__ui
 = 
__c
 * 0x01010101; \

140 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

142 
__u
->
__ui
 = 
__c
 * 0x01010101; \

143 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

145 
__u
->
__ui
 = 
__c
 * 0x01010101; \

146 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

148 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

152 
__u
->
__ui
 = 
__c
 * 0x01010101; \

153 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

155 
__u
->
__ui
 = 
__c
 * 0x01010101; \

156 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

158 
__u
->
__ui
 = 
__c
 * 0x01010101; \

159 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

161 
__u
->
__uc
 = (Ë
__c
; \

165 
__u
->
__ui
 = 
__c
 * 0x01010101; \

166 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

168 
__u
->
__ui
 = 
__c
 * 0x01010101; \

169 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

171 
__u
->
__ui
 = 
__c
 * 0x01010101; \

172 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

174 
__u
->
__ui
 = 
__c
 * 0x01010101; \

179 
__s
; })

	)

181 
	#mem£t
(
s
, 
c
, 
n
) \

182 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

183 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

184 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

193 #i‡
__GNUC_PREREQ
 (2, 91)

194 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

202 #ifde‡
__USE_GNU


203 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


204 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


205 #i‡
__GNUC_PREREQ
 (3, 4)

206 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

207 #ñi‡
__GNUC_PREREQ
 (3, 0)

208 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

209 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

210 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

211 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

212 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

214 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

215 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

216 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

217 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

218 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

222 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

225 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


226 #i‡
_STRING_ARCH_u«lig√d


227 #i‚de‡
_FORCE_INLINES


228 
	#__memp˝y_¨gs
(
§c
) \

229 ((c⁄° *Ë(
§c
))[0], ((const *) (src))[2], \

230 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[6], \

231 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

236 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

237 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

238 
__uöt32_t
, 
size_t
);

239 
__STRING_INLINE
 *

240 
	$__memp˝y_smÆl
 (*
__de°1
,

241 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

242 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

243 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

244 
size_t
 
__§˛í
)

247 
__uöt32_t
 
__ui
;

248 
__uöt16_t
 
__usi
;

249 
__uc
;

250 
__c
;

251 } *
__u
 = 
__de°1
;

252 (Ë
__§˛í
)

255 
__u
->
__c
 = 
__§c0_1
;

256 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

259 
__u
->
__usi
 = 
__§c0_2
;

260 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

263 
__u
->
__usi
 = 
__§c0_2
;

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

265 
__u
->
__c
 = 
__§c2_1
;

266 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

269 
__u
->
__ui
 = 
__§c0_4
;

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

273 
__u
->
__ui
 = 
__§c0_4
;

274 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

275 
__u
->
__c
 = 
__§c4_1
;

276 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

279 
__u
->
__ui
 = 
__§c0_4
;

280 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

281 
__u
->
__usi
 = 
__§c4_2
;

282 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

285 
__u
->
__ui
 = 
__§c0_4
;

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

287 
__u
->
__usi
 = 
__§c4_2
;

288 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

289 
__u
->
__c
 = 
__§c6_1
;

290 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

293 
__u
->
__ui
 = 
__§c0_4
;

294 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

295 
__u
->
__ui
 = 
__§c4_4
;

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

299  (*Ë
__u
;

300 
	}
}

302 #i‚de‡
_FORCE_INLINES


303 
	#__memp˝y_¨gs
(
§c
) \

304 ((c⁄° *Ë(
§c
))[0], \

305 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

306 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1] } }), \

307 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

308 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

309 ((c⁄° *Ë(
§c
))[2] } }), \

310 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

311 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

312 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3] } }), \

313 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

314 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

315 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

316 ((c⁄° *Ë(
§c
))[4] } }), \

317 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

318 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

319 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

320 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5] } }), \

321 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

322 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

323 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

324 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

325 ((c⁄° *Ë(
§c
))[6] } }), \

326 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

327 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

328 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

329 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

330 ((c⁄° *Ë(
§c
))[6], ((c⁄° *Ë(§c))[7] } })

	)

332 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

333 
__STRING2_COPY_ARR3
,

334 
__STRING2_COPY_ARR4
,

335 
__STRING2_COPY_ARR5
,

336 
__STRING2_COPY_ARR6
,

337 
__STRING2_COPY_ARR7
,

338 
__STRING2_COPY_ARR8
, 
size_t
);

339 
__STRING_INLINE
 *

340 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

341 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

342 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

343 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

344 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

347 
__c
;

348 
__STRING2_COPY_ARR2
 
__sˇ2
;

349 
__STRING2_COPY_ARR3
 
__sˇ3
;

350 
__STRING2_COPY_ARR4
 
__sˇ4
;

351 
__STRING2_COPY_ARR5
 
__sˇ5
;

352 
__STRING2_COPY_ARR6
 
__sˇ6
;

353 
__STRING2_COPY_ARR7
 
__sˇ7
;

354 
__STRING2_COPY_ARR8
 
__sˇ8
;

355 } *
__u
 = 
__de°
;

356 (Ë
__§˛í
)

359 
__u
->
__c
 = 
__§c1
;

362 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

365 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

368 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

371 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

374 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

377 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

380 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

383  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

384 
	}
}

392 #i‚de‡
_HAVE_STRING_ARCH_°rchr


393 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

394 #i‡
__GNUC_PREREQ
 (3, 2)

395 
	#°rchr
(
s
, 
c
) \

396 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

397 && (
c
) == '\0' \

398 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

399 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

401 
	#°rchr
(
s
, 
c
) \

402 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

403 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

404 : 
	`°rchr
 (
s
, 
c
)))

	)

410 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

411 || 
deföed
 
	g_FORCE_INLINES


412 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

413 
	#°r˝y
(
de°
, 
§c
) \

414 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

415 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

416 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

417 
	`°æí
 (
§c
) + 1) \

418 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

419 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

422 #i‡
_STRING_ARCH_u«lig√d


423 #i‚de‡
_FORCE_INLINES


424 
	#__°r˝y_¨gs
(
§c
) \

425 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

430 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

431 
__uöt32_t
, __uöt32_t, 
size_t
);

432 
__STRING_INLINE
 *

433 
	$__°r˝y_smÆl
 (*
__de°
,

434 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

435 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

436 
size_t
 
__§˛í
)

439 
__uöt32_t
 
__ui
;

440 
__uöt16_t
 
__usi
;

441 
__uc
;

442 } *
__u
 = (*Ë
__de°
;

443 (Ë
__§˛í
)

446 
__u
->
__uc
 = '\0';

449 
__u
->
__usi
 = 
__§c0_2
;

452 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

454 
__u
->
__uc
 = '\0';

457 
__u
->
__ui
 = 
__§c0_4
;

460 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

462 
__u
->
__uc
 = '\0';

465 
__u
->
__ui
 = 
__§c0_4
;

466 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

467 
__u
->
__usi
 = 
__§c4_2
;

470 
__u
->
__ui
 = 
__§c0_4
;

471 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

472 
__u
->
__usi
 = 
__§c4_2
;

473 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

474 
__u
->
__uc
 = '\0';

477 
__u
->
__ui
 = 
__§c0_4
;

478 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

479 
__u
->
__ui
 = 
__§c4_4
;

482  
__de°
;

483 
	}
}

485 #i‚de‡
_FORCE_INLINES


486 
	#__°r˝y_¨gs
(
§c
) \

487 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

488 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

489 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

490 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

492 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

493 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

494 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

495 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

496 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

497 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

499 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

500 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

501 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

502 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

503 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

504 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

505 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

506 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

508 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

509 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

510 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

511 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

512 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

514 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

515 
__STRING2_COPY_ARR3
,

516 
__STRING2_COPY_ARR4
,

517 
__STRING2_COPY_ARR5
,

518 
__STRING2_COPY_ARR6
,

519 
__STRING2_COPY_ARR7
,

520 
__STRING2_COPY_ARR8
, 
size_t
);

521 
__STRING_INLINE
 *

522 
	$__°r˝y_smÆl
 (*
__de°
,

523 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

524 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

525 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

526 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

529 
__c
;

530 
__STRING2_COPY_ARR2
 
__sˇ2
;

531 
__STRING2_COPY_ARR3
 
__sˇ3
;

532 
__STRING2_COPY_ARR4
 
__sˇ4
;

533 
__STRING2_COPY_ARR5
 
__sˇ5
;

534 
__STRING2_COPY_ARR6
 
__sˇ6
;

535 
__STRING2_COPY_ARR7
 
__sˇ7
;

536 
__STRING2_COPY_ARR8
 
__sˇ8
;

537 } *
__u
 = (*Ë
__de°
;

538 (Ë
__§˛í
)

541 
__u
->
__c
 = '\0';

544 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

547 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

550 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

553 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

556 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

559 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

562 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

565  
__de°
;

566 
	}
}

572 #ifde‡
__USE_GNU


573 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


574 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


575 #i‡
__GNUC_PREREQ
 (3, 4)

576 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

577 #ñi‡
__GNUC_PREREQ
 (3, 0)

578 
	#__°p˝y
(
de°
, 
§c
) \

579 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

580 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

581 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

582 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

584 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

586 
	#__°p˝y
(
de°
, 
§c
) \

587 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

588 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

589 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

590 
	`°æí
 (
§c
) + 1) \

591 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

593 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

597 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

600 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


601 #i‡
_STRING_ARCH_u«lig√d


602 #i‚de‡
_FORCE_INLINES


603 
	#__°p˝y_¨gs
(
§c
) \

604 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

609 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

610 
__uöt32_t
, __uöt32_t, 
size_t
);

611 
__STRING_INLINE
 *

612 
	$__°p˝y_smÆl
 (*
__de°
,

613 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

614 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

615 
size_t
 
__§˛í
)

618 
__ui
;

619 
__usi
;

620 
__uc
;

621 
__c
;

622 } *
__u
 = (*Ë
__de°
;

623 (Ë
__§˛í
)

626 
__u
->
__uc
 = '\0';

629 
__u
->
__usi
 = 
__§c0_2
;

630 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

633 
__u
->
__usi
 = 
__§c0_2
;

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

635 
__u
->
__uc
 = '\0';

638 
__u
->
__ui
 = 
__§c0_4
;

639 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

642 
__u
->
__ui
 = 
__§c0_4
;

643 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

644 
__u
->
__uc
 = '\0';

647 
__u
->
__ui
 = 
__§c0_4
;

648 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

649 
__u
->
__usi
 = 
__§c4_2
;

650 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

653 
__u
->
__ui
 = 
__§c0_4
;

654 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

655 
__u
->
__usi
 = 
__§c4_2
;

656 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

657 
__u
->
__uc
 = '\0';

660 
__u
->
__ui
 = 
__§c0_4
;

661 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

662 
__u
->
__ui
 = 
__§c4_4
;

663 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

666  &
__u
->
__c
;

667 
	}
}

669 #i‚de‡
_FORCE_INLINES


670 
	#__°p˝y_¨gs
(
§c
) \

671 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

672 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

673 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

674 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

676 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

677 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

678 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

679 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

680 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

681 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

683 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

684 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

685 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

686 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

687 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

688 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

689 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

690 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

692 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

693 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

694 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

695 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

696 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

698 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

699 
__STRING2_COPY_ARR3
,

700 
__STRING2_COPY_ARR4
,

701 
__STRING2_COPY_ARR5
,

702 
__STRING2_COPY_ARR6
,

703 
__STRING2_COPY_ARR7
,

704 
__STRING2_COPY_ARR8
, 
size_t
);

705 
__STRING_INLINE
 *

706 
	$__°p˝y_smÆl
 (*
__de°
,

707 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

708 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

709 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

710 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

713 
__c
;

714 
__STRING2_COPY_ARR2
 
__sˇ2
;

715 
__STRING2_COPY_ARR3
 
__sˇ3
;

716 
__STRING2_COPY_ARR4
 
__sˇ4
;

717 
__STRING2_COPY_ARR5
 
__sˇ5
;

718 
__STRING2_COPY_ARR6
 
__sˇ6
;

719 
__STRING2_COPY_ARR7
 
__sˇ7
;

720 
__STRING2_COPY_ARR8
 
__sˇ8
;

721 } *
__u
 = (*Ë
__de°
;

722 (Ë
__§˛í
)

725 
__u
->
__c
 = '\0';

728 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

731 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

734 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

737 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

740 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

743 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

746 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

749  
__de°
 + 
__§˛í
 - 1;

750 
	}
}

758 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


759 #i‡
__GNUC_PREREQ
 (3, 2)

760 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

762 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

763 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

764 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

765 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

766 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

773 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


774 #ifde‡
_USE_STRING_ARCH_°rchr


775 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

776 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

777 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

778 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

779 ? 
	`°rˇt
 (
__de°
, 
§c
) \

780 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

781 
§c
, 
n
)Ë'\0', 
__de°
)) \

782 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

783 #ñi‡
__GNUC_PREREQ
 (3, 2)

784 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

786 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

787 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

788 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

789 ? 
	`°rˇt
 (
de°
, 
§c
) \

790 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

797 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


798 #i‡
__GNUC_PREREQ
 (3, 2)

799 
	#°rcmp
(
s1
, 
s2
) \

800 
__exãnsi⁄__
 \

801 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

802 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

803 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

804 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

805 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

806 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

807 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

808 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

809 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

810 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

811 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

812 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

813 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

814 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

815 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

816 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

817 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

819 
	#°rcmp
(
s1
, 
s2
) \

820 
__exãnsi⁄__
 \

821 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

822 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

823 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

824 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

825 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

826 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

827 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

828 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

829 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

830 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

831 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

832 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

833 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

834 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

835 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

836 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

837 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

838 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

841 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

842 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

843 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

844 - ((c⁄° *Ë(c⁄° *)(
s2
))[0]); \

845 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

847 
__ªsu…
 = (((const *) \

848 (c⁄° *Ë(
s1
))[1] \

850 (c⁄° *Ë(
s2
))[1]); \

851 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

853 
__ªsu…
 = \

855 (c⁄° *Ë(
s1
))[2] \

857 (c⁄° *Ë(
s2
))[2]); \

858 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

859 
__ªsu…
 = \

861 (c⁄° *Ë(
s1
))[3] \

863 (c⁄° *Ë(
s2
))[3]); \

866 
__ªsu…
; }))

	)

868 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

869 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = \

870 (c⁄° *Ë(c⁄° *Ë(
s2
); \

871 
__ªsu…
 = \

872 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

873 - 
__s2
[0]); \

874 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

876 
__ªsu…
 = (((const *) \

877 (c⁄° *Ë(
s1
))[1] - 
__s2
[1]); \

878 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

880 
__ªsu…
 = (((const *) \

881 (c⁄° *Ë(
s1
))[2] - 
__s2
[2]); \

882 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

883 
__ªsu…
 = (((const *) \

884 (c⁄° *Ë(
s1
))[3] \

885 - 
__s2
[3]); \

888 
__ªsu…
; }))

	)

890 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

891 (
	`__exãnsi⁄__
 ({ c⁄° *
__s1
 = \

892 (c⁄° *Ë(c⁄° *Ë(
s1
); \

893 
__ªsu…
 = \

894 
__s1
[0] - ((const *) \

895 (c⁄° *Ë(
s2
))[0]; \

896 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

898 
__ªsu…
 = (
__s1
[1] \

900 (c⁄° *Ë(
s2
))[1]); \

901 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

903 
__ªsu…
 = \

904 (
__s1
[2] - ((const *) \

905 (c⁄° *Ë(
s2
))[2]); \

906 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

907 
__ªsu…
 = \

908 (
__s1
[3] \

910 (c⁄° *Ë(
s2
))[3]); \

913 
__ªsu…
; }))

	)

918 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


919 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

920 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

921 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

922 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

923 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

924 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

925 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

931 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


932 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


933 #i‡
__GNUC_PREREQ
 (3, 2)

934 
	#°rc•n
(
s
, 
ªje˘
) \

935 
__exãnsi⁄__
 \

936 ({ 
__r0
, 
__r1
, 
__r2
; \

937 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

938 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

939 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

940 : ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

941 ? 
	`°æí
 (
s
) \

942 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

943 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

944 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

945 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

946 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

947 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

948 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

951 
	#°rc•n
(
s
, 
ªje˘
) \

952 
__exãnsi⁄__
 \

953 ({ 
__r0
, 
__r1
, 
__r2
; \

954 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

955 ? ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

956 ? 
	`°æí
 (
s
) \

957 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

958 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

959 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

960 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

961 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

962 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

963 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

968 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

969 
__STRING_INLINE
 
size_t


970 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

972 
size_t
 
__ªsu…
 = 0;

973 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

974 ++
__ªsu…
;

975  
__ªsu…
;

976 
	}
}

978 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
,

979 
__ªje˘2
);

980 
__STRING_INLINE
 
size_t


981 
	$__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
)

983 
size_t
 
__ªsu…
 = 0;

984 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


985 && 
__s
[
__ªsu…
] !
__ªje˘2
)

986 ++
__ªsu…
;

987  
__ªsu…
;

988 
	}
}

990 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
,

991 
__ªje˘2
, 
__ªje˘3
);

992 
__STRING_INLINE
 
size_t


993 
	$__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
,

994 
__ªje˘3
)

996 
size_t
 
__ªsu…
 = 0;

997 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


998 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

999 ++
__ªsu…
;

1000  
__ªsu…
;

1001 
	}
}

1007 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1008 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1009 #i‡
__GNUC_PREREQ
 (3, 2)

1010 
	#°r•n
(
s
, 
ac˚±
) \

1011 
__exãnsi⁄__
 \

1012 ({ 
__a0
, 
__a1
, 
__a2
; \

1013 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1014 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1015 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1016 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1017 ? ((Ë(
s
), (
size_t
) 0) \

1018 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1019 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1020 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1021 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1022 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1023 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1024 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1027 
	#°r•n
(
s
, 
ac˚±
) \

1028 
__exãnsi⁄__
 \

1029 ({ 
__a0
, 
__a1
, 
__a2
; \

1030 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1031 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1032 ? ((Ë(
s
), (
size_t
) 0) \

1033 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1034 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1035 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1036 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1037 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1038 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1039 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1044 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1045 
__STRING_INLINE
 
size_t


1046 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1048 
size_t
 
__ªsu…
 = 0;

1050 
__s
[
__ªsu…
] =
__ac˚±
)

1051 ++
__ªsu…
;

1052  
__ªsu…
;

1053 
	}
}

1055 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1056 
__ac˚±2
);

1057 
__STRING_INLINE
 
size_t


1058 
	$__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1060 
size_t
 
__ªsu…
 = 0;

1062 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1063 ++
__ªsu…
;

1064  
__ªsu…
;

1065 
	}
}

1067 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1068 
__ac˚±2
, 
__ac˚±3
);

1069 
__STRING_INLINE
 
size_t


1070 
	$__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1072 
size_t
 
__ªsu…
 = 0;

1074 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1075 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1076 ++
__ªsu…
;

1077  
__ªsu…
;

1078 
	}
}

1083 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1084 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1085 #i‡
__GNUC_PREREQ
 (3, 2)

1086 
	#°Ωbrk
(
s
, 
ac˚±
) \

1087 
__exãnsi⁄__
 \

1088 ({ 
__a0
, 
__a1
, 
__a2
; \

1089 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1090 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1091 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1092 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1093 ? ((Ë(
s
), (*Ë
NULL
) \

1094 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1095 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1096 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1097 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1098 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1099 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1100 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1103 
	#°Ωbrk
(
s
, 
ac˚±
) \

1104 
__exãnsi⁄__
 \

1105 ({ 
__a0
, 
__a1
, 
__a2
; \

1106 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1107 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1108 ? ((Ë(
s
), (*Ë
NULL
) \

1109 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1110 ? 
	`°rchr
 (
s
, 
__a0
) \

1111 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1112 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1113 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1114 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1115 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1120 
__STRING_INLINE
 *
__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1121 
__ac˚±2
);

1122 
__STRING_INLINE
 *

1123 
	$__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1126 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1127 ++
__s
;

1128  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1129 
	}
}

1131 
__STRING_INLINE
 *
__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1132 
__ac˚±2
, 
__ac˚±3
);

1133 
__STRING_INLINE
 *

1134 
	$__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1137 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1138 && *
__s
 !
__ac˚±3
)

1139 ++
__s
;

1140  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1141 
	}
}

1147 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1148 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1149 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1150 ? (((c⁄° *Ë(
√edÀ
))[0] == '\0' \

1151 ? (*Ë(
size_t
Ë(
hay°ack
) \

1152 : (((c⁄° *Ë(
√edÀ
))[1] == '\0' \

1153 ? 
	`°rchr
 (
hay°ack
, \

1154 ((c⁄° *Ë(
√edÀ
))[0]) \

1155 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1156 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1160 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1161 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1162 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1163 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1164 && ((c⁄° *Ë(
£p
))[0] != '\0' \

1165 && ((c⁄° *Ë(
£p
))[1] == '\0' \

1166 ? 
	`__°πok_r_1c
 (
s
, ((c⁄° *Ë(
£p
))[0], 
√xç
) \

1167 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1170 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1171 
__STRING_INLINE
 *

1172 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1174 *
__ªsu…
;

1175 i‡(
__s
 =
NULL
)

1176 
__s
 = *
__√xç
;

1177 *
__s
 =
__£p
)

1178 ++
__s
;

1179 
__ªsu…
 = 
NULL
;

1180 i‡(*
__s
 != '\0')

1182 
__ªsu…
 = 
__s
++;

1183 *
__s
 != '\0')

1184 i‡(*
__s
++ =
__£p
)

1186 
__s
[-1] = '\0';

1190 *
__√xç
 = 
__s
;

1191  
__ªsu…
;

1192 
	}
}

1193 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1194 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1199 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1200 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1202 *
__°r£p_g
 (**
__°rögp
, c⁄° *
__dñim
);

1203 
	#__°r£p
(
s
, 
ªje˘
) \

1204 
__exãnsi⁄__
 \

1205 ({ 
__r0
, 
__r1
, 
__r2
; \

1206 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1207 && (
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], \

1208 ((c⁄° *Ë(
ªje˘
))[0] != '\0') \

1209 ? ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], \

1210 ((c⁄° *Ë(
ªje˘
))[1] == '\0') \

1211 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1212 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

1213 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1214 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

1215 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1216 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1217 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1220 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1221 
__STRING_INLINE
 *

1222 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1224 *
__ªtvÆ
 = *
__s
;

1225 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1226 *(*
__s
)++ = '\0';

1227  
__ªtvÆ
;

1228 
	}
}

1230 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1231 
__STRING_INLINE
 *

1232 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1234 *
__ªtvÆ
 = *
__s
;

1235 i‡(
__ªtvÆ
 !
NULL
)

1237 *
__˝
 = 
__ªtvÆ
;

1240 i‡(*
__˝
 == '\0')

1242 
__˝
 = 
NULL
;

1245 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1247 *
__˝
++ = '\0';

1250 ++
__˝
;

1252 *
__s
 = 
__˝
;

1254  
__ªtvÆ
;

1255 
	}
}

1257 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1258 
__ªje˘3
);

1259 
__STRING_INLINE
 *

1260 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1262 *
__ªtvÆ
 = *
__s
;

1263 i‡(
__ªtvÆ
 !
NULL
)

1265 *
__˝
 = 
__ªtvÆ
;

1268 i‡(*
__˝
 == '\0')

1270 
__˝
 = 
NULL
;

1273 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1275 *
__˝
++ = '\0';

1278 ++
__˝
;

1280 *
__s
 = 
__˝
;

1282  
__ªtvÆ
;

1283 
	}
}

1284 #ifde‡
__USE_BSD


1285 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1292 #ifde‡
__USE_MISC


1294 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1295 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1296 
	~<°dlib.h
>

1299 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1301 *
	$__°rdup
 (c⁄° *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1302 
	#__°rdup
(
s
) \

1303 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1304 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1305 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1306 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1307 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1308 i‡(
__ªtvÆ
 !
NULL
) \

1309 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1310 
__ªtvÆ
; 
	}
})) \

1311 : 
	`__°rdup
 (
s
)))

	)

1313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1314 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1318 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1320 *
	$__°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

1321 
__THROW
 
__©åibuã_mÆloc__
;

1322 
	#__°∫dup
(
s
, 
n
) \

1323 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1324 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1325 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1326 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1327 
size_t
 
__n
 = (
n
); \

1328 *
__ªtvÆ
; \

1329 i‡(
__n
 < 
__Àn
) \

1330 
__Àn
 = 
__n
 + 1; \

1331 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1332 i‡(
__ªtvÆ
 !
NULL
) \

1334 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1335 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1336 
__Àn
 - 1); \

1338 
__ªtvÆ
; 
	}
})) \

1339 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1341 #ifde‡
__USE_GNU


1342 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1348 #i‚de‡
_FORCE_INLINES


1349 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

18 #i‚de‡
_STRING_H


22 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

25 #i‚de‡
__˝lu•lus


29 #unde‡
mem˝y


30 #unde‡
memmove


31 #unde‡
mem£t


32 #unde‡
°rˇt


33 #unde‡
°r˝y


34 #unde‡
°∫ˇt


35 #unde‡
°∫˝y


36 #ifde‡
__USE_GNU


37 #unde‡
memp˝y


38 #unde‡
°p˝y


40 #ifde‡
__USE_BSD


41 #unde‡
bc›y


42 #unde‡
bzîo


47 
__f‹tify_fun˘i⁄
 *

48 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

49 
size_t
 
__Àn
))

51  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

52 
	}
}

54 
__f‹tify_fun˘i⁄
 *

55 
__NTH
 (
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
))

57  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

58 
	}
}

60 #ifde‡
__USE_GNU


61 
__f‹tify_fun˘i⁄
 *

62 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

63 
size_t
 
__Àn
))

65  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

66 
	}
}

75 
__f‹tify_fun˘i⁄
 *

76 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

78 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

79 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

81 
	`__w¨n_mem£t_zîo_Àn
 ();

82  
__de°
;

84  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

85 
	}
}

87 #ifde‡
__USE_BSD


88 
__f‹tify_fun˘i⁄
 

89 
__NTH
 (
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__Àn
))

91 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

92 
	}
}

94 
__f‹tify_fun˘i⁄
 

95 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

97 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

98 
	}
}

101 
__f‹tify_fun˘i⁄
 *

102 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

104  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

105 
	}
}

107 #ifde‡
__USE_GNU


108 
__f‹tify_fun˘i⁄
 *

109 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

111  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

112 
	}
}

116 
__f‹tify_fun˘i⁄
 *

117 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

118 
size_t
 
__Àn
))

120  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

121 
	}
}

124 *
	$__°≤˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

125 
size_t
 
__de°Àn
Ë
__THROW
;

126 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
, c⁄° *
__§c
,

127 
size_t
 
__n
), 
°≤˝y
);

129 
__f‹tify_fun˘i⁄
 *

130 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

132 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

133 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

134  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

135  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

136 
	}
}

139 
__f‹tify_fun˘i⁄
 *

140 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

142  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

143 
	}
}

146 
__f‹tify_fun˘i⁄
 *

147 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

148 
size_t
 
__Àn
))

150  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

151 
	}
}

	@/usr/include/bits/sys_errlist.h

19 #i‚de‡
_STDIO_H


25 #ifde‡ 
__USE_BSD


26 
sys_√º
;

27 c⁄° *c⁄° 
sys_îæi°
[];

29 #ifde‡ 
__USE_GNU


30 
_sys_√º
;

31 c⁄° *c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

30 
	t__u_ch¨
;

31 
	t__u_sh‹t
;

32 
	t__u_öt
;

33 
	t__u_l⁄g
;

36 sig√d 
	t__öt8_t
;

37 
	t__uöt8_t
;

38 sig√d 
	t__öt16_t
;

39 
	t__uöt16_t
;

40 sig√d 
	t__öt32_t
;

41 
	t__uöt32_t
;

42 #i‡
__WORDSIZE
 == 64

43 sig√d 
	t__öt64_t
;

44 
	t__uöt64_t
;

45 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


46 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

47 
__exãnsi⁄__
 
	t__uöt64_t
;

51 #i‡
__WORDSIZE
 == 64

52 
	t__quad_t
;

53 
	t__u_quad_t
;

54 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


55 
__exãnsi⁄__
 
	t__quad_t
;

56 
__exãnsi⁄__
 
	t__u_quad_t
;

60 
	m__vÆ
[2];

61 } 
	t__quad_t
;

64 
__u_l⁄g
 
	m__vÆ
[2];

65 } 
	t__u_quad_t
;

98 
	#__S16_TYPE
 

	)

99 
	#__U16_TYPE
 

	)

100 
	#__S32_TYPE
 

	)

101 
	#__U32_TYPE
 

	)

102 
	#__SLONGWORD_TYPE
 

	)

103 
	#__ULONGWORD_TYPE
 

	)

104 #i‡
__WORDSIZE
 == 32

105 
	#__SQUAD_TYPE
 
__quad_t


	)

106 
	#__UQUAD_TYPE
 
__u_quad_t


	)

107 
	#__SWORD_TYPE
 

	)

108 
	#__UWORD_TYPE
 

	)

109 
	#__SLONG32_TYPE
 

	)

110 
	#__ULONG32_TYPE
 

	)

111 
	#__S64_TYPE
 
__quad_t


	)

112 
	#__U64_TYPE
 
__u_quad_t


	)

115 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

116 #ñi‡
__WORDSIZE
 == 64

117 
	t__SQUAD_TYPE
 

	)

118 
	t__UQUAD_TYPE
 

	)

119 
	t__SWORD_TYPE
 

	)

120 
	t__UWORD_TYPE
 

	)

121 
	t__SLONG32_TYPE
 

	)

122 
	t__ULONG32_TYPE
 

	)

123 
	t__S64_TYPE
 

	)

124 
	t__U64_TYPE
 

	)

126 
	t__STD_TYPE
 

	)

130 
	~<bôs/ty≥sizes.h
>

133 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

134 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

135 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

136 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

137 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

138 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

139 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

140 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

141 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

142 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

143 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

144 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

145 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

146 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

147 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

148 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

149 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

150 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

152 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

153 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

154 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

157 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

160 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

163 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

168 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

169 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

172 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

173 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

176 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

177 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

182 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

185 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

187 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

191 
__off64_t
 
	t__loff_t
;

192 
__quad_t
 *
	t__qaddr_t
;

193 *
	t__ˇddr_t
;

196 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

199 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

202 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

19 #i‚de‡
_UNISTD_H


23 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

24 
size_t
 
__buÊí
Ë
__wur
;

25 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

26 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

27 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

29 
size_t
 
__buÊí
), 
__ªad_chk
)

30 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

33 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


34 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

39  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

41 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

42  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

44  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

45 
	}
}

47 #ifde‡
__USE_UNIX98


48 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

49 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

50 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

51 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

52 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

53 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

54 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

55 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

56 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

57 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

58 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

60 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

61 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

63 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

64 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

65 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

66 
__¥ód64_chk
)

67 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

70 #i‚de‡
__USE_FILE_OFFSET64


71 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


72 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

74 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

76 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

77  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

79 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

80  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

81 
	`__bos0
 (
__buf
));

83  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

84 
	}
}

86 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


87 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

89 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

91 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

92  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

94 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

95  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

96 
	`__bos0
 (
__buf
));

99  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

100 
	}
}

103 #ifde‡
__USE_LARGEFILE64


104 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


105 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

107 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

109 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

110  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

112 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

113  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

114 
	`__bos0
 (
__buf
));

117  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

118 
	}
}

122 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


123 
ssize_t
 
	$__ªadlök_chk
 (c⁄° *
__ª°ri˘
 
__∑th
,

124 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

125 
size_t
 
__buÊí
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

127 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

128 (c⁄° *
__ª°ri˘
 
__∑th
,

129 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

130 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

131 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

132 (c⁄° *
__ª°ri˘
 
__∑th
,

133 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

134 
size_t
 
__buÊí
), 
__ªadlök_chk
)

135 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

138 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


139 
	`__NTH
 (
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

140 
size_t
 
__Àn
))

142 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

144 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

145  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

147 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

148  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

150  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

151 
	}
}

154 #ifde‡
__USE_ATFILE


155 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

156 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

157 
size_t
 
__buÊí
)

158 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

159 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

160 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

161 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

162 
ªadlök©
)

163 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

164 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

165 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

166 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

167 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

168 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

172 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


173 
	`__NTH
 (
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

174 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

176 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

178 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

179  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

181 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

182  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

183 
	`__bos
 (
__buf
));

185  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

186 
	}
}

189 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

190 
__THROW
 
__wur
;

191 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

192 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

193 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

194 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

195 
__gëcwd_chk
)

196 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

199 
__f‹tify_fun˘i⁄
 
__wur
 *

200 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

202 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

204 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

205  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

207 i‡(
__size
 > 
	`__bos
 (
__buf
))

208  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

210  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

211 
	}
}

213 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


214 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

215 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

216 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

217 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

220 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

221 
	`__NTH
 (
	$gëwd
 (*
__buf
))

223 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

224  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

225  
	`__gëwd_w¨n
 (
__buf
);

226 
	}
}

229 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

230 
size_t
 
__buÊí
Ë
__THROW
;

231 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

232 
size_t
 
__Àn
), 
c⁄f°r
);

233 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

234 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

235 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

236 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

239 
__f‹tify_fun˘i⁄
 
size_t


240 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

242 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

244 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

245  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

247 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

248  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

250  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

251 
	}
}

254 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

255 
__THROW
 
__wur
;

256 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

257 
gëgroups
Ë
__wur
;

258 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

259 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

260 
__gëgroups_chk
)

261 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

264 
__f‹tify_fun˘i⁄
 

265 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

267 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

269 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

270  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

272 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

273  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

275  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

276 
	}
}

279 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

280 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

281 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

282 
size_t
 
__buÊí
), 
ây«me_r
)

283 
	`__n⁄nuŒ
 ((2));

284 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

285 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

286 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

287 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

290 
__f‹tify_fun˘i⁄
 

291 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

293 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

295 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

296  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

298 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

299  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

301  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

302 
	}
}

305 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


306 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

307 
	`__n⁄nuŒ
 ((1));

308 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

309 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

310 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

311 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

312 
__gëlogö_r_chk
)

313 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

316 
__f‹tify_fun˘i⁄
 

317 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

319 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

321 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

322  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

324 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

325  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

327  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

328 
	}
}

332 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


333 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

336 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

337 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

338 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

339 
__gëho°«me_chk
)

340 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

343 
__f‹tify_fun˘i⁄
 

344 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

346 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

349  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

351 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

352  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

354  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

355 
	}
}

359 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

360 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

361 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

362 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

363 
size_t
 
__buÊí
),

364 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

365 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

366 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

367 
__gëdomaö«me_chk
)

368 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

372 
__f‹tify_fun˘i⁄
 

373 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

375 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

377 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

378  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

380 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

381  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

383  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

384 
	}
}

	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 
	#WSTOPPED
 2

	)

30 
	#WEXITED
 4

	)

31 
	#WCONTINUED
 8

	)

32 
	#WNOWAIT
 0x01000000

	)

34 
	#__WNOTHREAD
 0x20000000

	)

36 
	#__WALL
 0x40000000

	)

37 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

62 #ifdef 
__USE_BSD


64 
	~<ídün.h
>

66 
	uwaô


68 
	mw_°©us
;

71 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


72 
	m__w_ãrmsig
:7;

73 
	m__w_c‹edump
:1;

74 
	m__w_ªtcode
:8;

77 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


79 
	m__w_ªtcode
:8;

80 
	m__w_c‹edump
:1;

81 
	m__w_ãrmsig
:7;

83 } 
	m__waô_ãrmö©ed
;

86 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


87 
	m__w_°›vÆ
:8;

88 
	m__w_°›sig
:8;

91 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


93 
	m__w_°›sig
:8;

94 
	m__w_°›vÆ
:8;

96 } 
	m__waô_°›≥d
;

99 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

100 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

101 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

102 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

103 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 #i‡
__GLIBC_HAVE_LONG_LONG


74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

81 
	#htobe16
(
x
Ë(x)

	)

82 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

83 
	#be16toh
(
x
Ë(x)

	)

84 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

86 
	#htobe32
(
x
Ë(x)

	)

87 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

88 
	#be32toh
(
x
Ë(x)

	)

89 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

91 #i‡
__GLIBC_HAVE_LONG_LONG


92 
	#htobe64
(
x
Ë(x)

	)

93 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

94 
	#be64toh
(
x
Ë(x)

	)

95 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC11


99 #unde‡
__USE_ISOC99


100 #unde‡
__USE_ISOC95


101 #unde‡
__USE_ISOCXX11


102 #unde‡
__USE_POSIX


103 #unde‡
__USE_POSIX2


104 #unde‡
__USE_POSIX199309


105 #unde‡
__USE_POSIX199506


106 #unde‡
__USE_XOPEN


107 #unde‡
__USE_XOPEN_EXTENDED


108 #unde‡
__USE_UNIX98


109 #unde‡
__USE_XOPEN2K


110 #unde‡
__USE_XOPEN2KXSI


111 #unde‡
__USE_XOPEN2K8


112 #unde‡
__USE_XOPEN2K8XSI


113 #unde‡
__USE_LARGEFILE


114 #unde‡
__USE_LARGEFILE64


115 #unde‡
__USE_FILE_OFFSET64


116 #unde‡
__USE_BSD


117 #unde‡
__USE_SVID


118 #unde‡
__USE_MISC


119 #unde‡
__USE_ATFILE


120 #unde‡
__USE_GNU


121 #unde‡
__USE_REENTRANT


122 #unde‡
__USE_FORTIFY_LEVEL


123 #unde‡
__FAVOR_BSD


124 #unde‡
__KERNEL_STRICT_NAMES


128 #i‚de‡
_LOOSE_KERNEL_NAMES


129 
	#__KERNEL_STRICT_NAMES


	)

133 
	#__USE_ANSI
 1

	)

142 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


143 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

144 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

146 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

151 #i‡
deföed
 
_BSD_SOURCE
 && \

152 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

153 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

154 
	#__FAVOR_BSD
 1

	)

158 #ifde‡
_GNU_SOURCE


159 #unde‡
_ISOC95_SOURCE


160 
	#_ISOC95_SOURCE
 1

	)

161 #unde‡
_ISOC99_SOURCE


162 
	#_ISOC99_SOURCE
 1

	)

163 #unde‡
_ISOC11_SOURCE


164 
	#_ISOC11_SOURCE
 1

	)

165 #unde‡
_POSIX_SOURCE


166 
	#_POSIX_SOURCE
 1

	)

167 #unde‡
_POSIX_C_SOURCE


168 
	#_POSIX_C_SOURCE
 200809L

	)

169 #unde‡
_XOPEN_SOURCE


170 
	#_XOPEN_SOURCE
 700

	)

171 #unde‡
_XOPEN_SOURCE_EXTENDED


172 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

173 #unde‡
_LARGEFILE64_SOURCE


174 
	#_LARGEFILE64_SOURCE
 1

	)

175 #unde‡
_BSD_SOURCE


176 
	#_BSD_SOURCE
 1

	)

177 #unde‡
_SVID_SOURCE


178 
	#_SVID_SOURCE
 1

	)

179 #unde‡
_ATFILE_SOURCE


180 
	#_ATFILE_SOURCE
 1

	)

185 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

186 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

187 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

188 
	#_BSD_SOURCE
 1

	)

189 
	#_SVID_SOURCE
 1

	)

193 #i‡(
deföed
 
_ISOC11_SOURCE
 \

194 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

195 
	#__USE_ISOC11
 1

	)

199 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

200 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

201 
	#__USE_ISOC99
 1

	)

205 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

206 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

207 
	#__USE_ISOC95
 1

	)

214 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

215 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

216 
	#__USE_ISOCXX11
 1

	)

221 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

222 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

223 
	#_POSIX_SOURCE
 1

	)

224 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

225 
	#_POSIX_C_SOURCE
 2

	)

226 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

227 
	#_POSIX_C_SOURCE
 199506L

	)

228 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

229 
	#_POSIX_C_SOURCE
 200112L

	)

231 
	#_POSIX_C_SOURCE
 200809L

	)

233 
	#__USE_POSIX_IMPLICITLY
 1

	)

236 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


237 
	#__USE_POSIX
 1

	)

240 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


241 
	#__USE_POSIX2
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

245 
	#__USE_POSIX199309
 1

	)

248 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

249 
	#__USE_POSIX199506
 1

	)

252 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

253 
	#__USE_XOPEN2K
 1

	)

254 #unde‡
__USE_ISOC95


255 
	#__USE_ISOC95
 1

	)

256 #unde‡
__USE_ISOC99


257 
	#__USE_ISOC99
 1

	)

260 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

261 
	#__USE_XOPEN2K8
 1

	)

262 #unde‡
_ATFILE_SOURCE


263 
	#_ATFILE_SOURCE
 1

	)

266 #ifdef 
_XOPEN_SOURCE


267 
	#__USE_XOPEN
 1

	)

268 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

269 
	#__USE_XOPEN_EXTENDED
 1

	)

270 
	#__USE_UNIX98
 1

	)

271 #unde‡
_LARGEFILE_SOURCE


272 
	#_LARGEFILE_SOURCE
 1

	)

273 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

274 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

275 
	#__USE_XOPEN2K8
 1

	)

276 
	#__USE_XOPEN2K8XSI
 1

	)

278 
	#__USE_XOPEN2K
 1

	)

279 
	#__USE_XOPEN2KXSI
 1

	)

280 #unde‡
__USE_ISOC95


281 
	#__USE_ISOC95
 1

	)

282 #unde‡
__USE_ISOC99


283 
	#__USE_ISOC99
 1

	)

286 #ifde‡
_XOPEN_SOURCE_EXTENDED


287 
	#__USE_XOPEN_EXTENDED
 1

	)

292 #ifde‡
_LARGEFILE_SOURCE


293 
	#__USE_LARGEFILE
 1

	)

296 #ifde‡
_LARGEFILE64_SOURCE


297 
	#__USE_LARGEFILE64
 1

	)

300 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

301 
	#__USE_FILE_OFFSET64
 1

	)

304 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


305 
	#__USE_MISC
 1

	)

308 #ifdef 
_BSD_SOURCE


309 
	#__USE_BSD
 1

	)

312 #ifdef 
_SVID_SOURCE


313 
	#__USE_SVID
 1

	)

316 #ifdef 
_ATFILE_SOURCE


317 
	#__USE_ATFILE
 1

	)

320 #ifdef 
_GNU_SOURCE


321 
	#__USE_GNU
 1

	)

324 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


325 
	#__USE_REENTRANT
 1

	)

328 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0

329 #i‡!
deföed
 
__OPTIMIZE__
 || __OPTIMIZE__ <= 0

330 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
compûög
 
wôh
 
›timiz©i⁄
 (-
O
)

331 #ñi‡!
__GNUC_PREREQ
 (4, 1)

332 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
GCC
 4.1 
‹
 
œãr


333 #ñi‡
_FORTIFY_SOURCE
 > 1

334 
	#__USE_FORTIFY_LEVEL
 2

	)

336 
	#__USE_FORTIFY_LEVEL
 1

	)

339 #i‚de‡
__USE_FORTIFY_LEVEL


340 
	#__USE_FORTIFY_LEVEL
 0

	)

345 
	~<°dc-¥edef.h
>

353 #unde‡
__GNU_LIBRARY__


354 
	#__GNU_LIBRARY__
 6

	)

358 
	#__GLIBC__
 2

	)

359 
	#__GLIBC_MINOR__
 16

	)

361 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

362 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

365 #i‡
deföed
 
__GNUC__
 \

366 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

367 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

368 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

369 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

373 #i‚de‡
__ASSEMBLER__


374 #i‚de‡
_SYS_CDEFS_H


375 
	~<sys/cdefs.h
>

380 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


381 
	#__USE_LARGEFILE
 1

	)

382 
	#__USE_LARGEFILE64
 1

	)

388 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

389 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

390 && 
deföed
 
	g__exã∫_ölöe


391 
	#__USE_EXTERN_INLINES
 1

	)

399 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

20 #i‚de‡
_GETOPT_H


22 #i‚de‡
__√ed_gë›t


23 
	#_GETOPT_H
 1

	)

33 #i‡!
deföed
 
__GNU_LIBRARY__


34 
	~<˘y≥.h
>

37 #i‚de‡
__THROW


38 #i‚de‡
__GNUC_PREREQ


39 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

41 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

42 
	#__THROW
 
	`throw
 ()

	)

44 
	#__THROW


	)

48 #ifdef 
__˝lu•lus


58 *
›èrg
;

72 
›töd
;

77 
›ãº
;

81 
›t›t
;

83 #i‚de‡
__√ed_gë›t


105 
	s›ti⁄


107 c⁄° *
	g«me
;

110 
	ghas_¨g
;

111 *
	gÊag
;

112 
	gvÆ
;

117 
	#no_¨gumít
 0

	)

118 
	#ªquúed_¨gumít
 1

	)

119 
	#›ti⁄Æ_¨gumít
 2

	)

147 #ifde‡
__GNU_LIBRARY__


151 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

152 
__THROW
;

154 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

155 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


159 #ifde‡
__REDIRECT


160 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

161 c⁄° *
__sh‹t›ts
),

162 
__posix_gë›t
);

164 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

165 c⁄° *
__sh‹t›ts
Ë
__THROW
;

166 
	#gë›t
 
__posix_gë›t


	)

170 
gë›t
 ();

173 #i‚de‡
__√ed_gë›t


174 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

175 c⁄° *
__sh‹t›ts
,

176 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

177 
__THROW
;

178 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

179 c⁄° *
__sh‹t›ts
,

180 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

181 
__THROW
;

185 #ifdef 
__˝lu•lus


190 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 
	~<sys/cdefs.h
>

64 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

65 #i‚de‡
_G_HAVE_PRINTF_FP


66 
	#_IO_USE_DTOA
 1

	)

69 #i‚de‡
EOF


70 
	#EOF
 (-1)

	)

72 #i‚de‡
NULL


73 #i‡
deföed
 
__GNUG__
 && \

74 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

75 
	#NULL
 (
__nuŒ
)

	)

77 #i‡!
deföed
(
__˝lu•lus
)

78 
	#NULL
 ((*)0)

	)

80 
	#NULL
 (0)

	)

85 
	#_IOS_INPUT
 1

	)

86 
	#_IOS_OUTPUT
 2

	)

87 
	#_IOS_ATEND
 4

	)

88 
	#_IOS_APPEND
 8

	)

89 
	#_IOS_TRUNC
 16

	)

90 
	#_IOS_NOCREATE
 32

	)

91 
	#_IOS_NOREPLACE
 64

	)

92 
	#_IOS_BIN
 128

	)

100 
	#_IO_MAGIC
 0xFBAD0000

	)

101 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

102 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

103 
	#_IO_USER_BUF
 1

	)

104 
	#_IO_UNBUFFERED
 2

	)

105 
	#_IO_NO_READS
 4

	)

106 
	#_IO_NO_WRITES
 8

	)

107 
	#_IO_EOF_SEEN
 0x10

	)

108 
	#_IO_ERR_SEEN
 0x20

	)

109 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

110 
	#_IO_LINKED
 0x80

	)

111 
	#_IO_IN_BACKUP
 0x100

	)

112 
	#_IO_LINE_BUF
 0x200

	)

113 
	#_IO_TIED_PUT_GET
 0x400

	)

114 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

115 
	#_IO_IS_APPENDING
 0x1000

	)

116 
	#_IO_IS_FILEBUF
 0x2000

	)

117 
	#_IO_BAD_SEEN
 0x4000

	)

118 
	#_IO_USER_LOCK
 0x8000

	)

120 
	#_IO_FLAGS2_MMAP
 1

	)

121 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

122 #ifde‡
_LIBC


123 
	#_IO_FLAGS2_FORTIFY
 4

	)

125 
	#_IO_FLAGS2_USER_WBUF
 8

	)

126 #ifde‡
_LIBC


127 
	#_IO_FLAGS2_SCANF_STD
 16

	)

128 
	#_IO_FLAGS2_NOCLOSE
 32

	)

129 
	#_IO_FLAGS2_CLOEXEC
 64

	)

133 
	#_IO_SKIPWS
 01

	)

134 
	#_IO_LEFT
 02

	)

135 
	#_IO_RIGHT
 04

	)

136 
	#_IO_INTERNAL
 010

	)

137 
	#_IO_DEC
 020

	)

138 
	#_IO_OCT
 040

	)

139 
	#_IO_HEX
 0100

	)

140 
	#_IO_SHOWBASE
 0200

	)

141 
	#_IO_SHOWPOINT
 0400

	)

142 
	#_IO_UPPERCASE
 01000

	)

143 
	#_IO_SHOWPOS
 02000

	)

144 
	#_IO_SCIENTIFIC
 04000

	)

145 
	#_IO_FIXED
 010000

	)

146 
	#_IO_UNITBUF
 020000

	)

147 
	#_IO_STDIO
 040000

	)

148 
	#_IO_DONT_CLOSE
 0100000

	)

149 
	#_IO_BOOLALPHA
 0200000

	)

152 
_IO_jump_t
; 
	g_IO_FILE
;

155 #ifde‡
_IO_MTSAFE_IO


156 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

157 
	~<bôs/°dio-lock.h
>

162 
	t_IO_lock_t
;

168 
	s_IO_m¨kî
 {

169 
_IO_m¨kî
 *
	m_√xt
;

170 
_IO_FILE
 *
	m_sbuf
;

174 
	m_pos
;

176 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

177 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

178 
	mpublic
:

179 
°ªamm¨kî
(
°ªambuf
 *
sb
);

180 ~
°ªamm¨kî
();

181 
ßvög
(Ë{  
	m_•os
 == -2; }

182 
dñè
(
°ªamm¨kî
&);

183 
dñè
();

188 
	e__codecvt_ªsu…


190 
	m__codecvt_ok
,

191 
	m__codecvt_∑πül
,

192 
	m__codecvt_îr‹
,

193 
	m__codecvt_noc⁄v


196 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


199 
	s_IO_codecvt


201 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

202 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

203 
	m__mb°©e_t
 *,

204 c⁄° 
	mwch¨_t
 *,

205 c⁄° 
	mwch¨_t
 *,

206 c⁄° 
	mwch¨_t
 **, *,

208 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

209 
	m__mb°©e_t
 *, *,

211 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

212 
	m__mb°©e_t
 *,

214 c⁄° **, 
	mwch¨_t
 *,

215 
	mwch¨_t
 *, wchar_t **);

216 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

217 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

218 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

219 c⁄° *, c⁄° *, 
	m_IO_size_t
);

220 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

222 
_IO_ic⁄v_t
 
	m__cd_ö
;

223 
_IO_ic⁄v_t
 
	m__cd_out
;

227 
	s_IO_wide_d©a


229 
wch¨_t
 *
	m_IO_ªad_±r
;

230 
wch¨_t
 *
	m_IO_ªad_íd
;

231 
wch¨_t
 *
	m_IO_ªad_ba£
;

232 
wch¨_t
 *
	m_IO_wrôe_ba£
;

233 
wch¨_t
 *
	m_IO_wrôe_±r
;

234 
wch¨_t
 *
	m_IO_wrôe_íd
;

235 
wch¨_t
 *
	m_IO_buf_ba£
;

236 
wch¨_t
 *
	m_IO_buf_íd
;

238 
wch¨_t
 *
	m_IO_ßve_ba£
;

239 
wch¨_t
 *
	m_IO_backup_ba£
;

241 
wch¨_t
 *
	m_IO_ßve_íd
;

243 
__mb°©e_t
 
	m_IO_°©e
;

244 
__mb°©e_t
 
	m_IO_œ°_°©e
;

245 
_IO_codecvt
 
	m_codecvt
;

247 
wch¨_t
 
	m_sh‹tbuf
[1];

249 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

253 
	s_IO_FILE
 {

254 
	m_Êags
;

255 
	#_IO_fûe_Êags
 
_Êags


	)

259 * 
	m_IO_ªad_±r
;

260 * 
	m_IO_ªad_íd
;

261 * 
	m_IO_ªad_ba£
;

262 * 
	m_IO_wrôe_ba£
;

263 * 
	m_IO_wrôe_±r
;

264 * 
	m_IO_wrôe_íd
;

265 * 
	m_IO_buf_ba£
;

266 * 
	m_IO_buf_íd
;

268 *
	m_IO_ßve_ba£
;

269 *
	m_IO_backup_ba£
;

270 *
	m_IO_ßve_íd
;

272 
_IO_m¨kî
 *
	m_m¨kîs
;

274 
_IO_FILE
 *
	m_chaö
;

276 
	m_fûío
;

278 
	m_blksize
;

280 
	m_Êags2
;

282 
_IO_off_t
 
	m_ﬁd_off£t
;

284 
	#__HAVE_COLUMN


	)

286 
	m_cur_cﬁumn
;

287 sig√d 
	m_vèbÀ_off£t
;

288 
	m_sh‹tbuf
[1];

292 
_IO_lock_t
 *
	m_lock
;

293 #ifde‡
_IO_USE_OLD_IO_FILE


296 
	s_IO_FILE_com∂ëe


298 
_IO_FILE
 
	m_fûe
;

300 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

301 
_IO_off64_t
 
	m_off£t
;

302 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


304 
_IO_codecvt
 *
	m_codecvt
;

305 
_IO_wide_d©a
 *
	m_wide_d©a
;

306 
_IO_FILE
 *
	m_‰ìªs_li°
;

307 *
	m_‰ìªs_buf
;

308 
size_t
 
	m_‰ìªs_size
;

310 *
	m__∑d1
;

311 *
	m__∑d2
;

312 *
	m__∑d3
;

313 *
	m__∑d4
;

314 
size_t
 
	m__∑d5
;

316 
	m_mode
;

318 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

322 #i‚de‡
__˝lu•lus


323 
_IO_FILE
 
	t_IO_FILE
;

326 
	g_IO_FILE_∂us
;

328 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

329 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

330 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

331 #i‚de‡
_LIBC


332 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

333 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

334 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

336 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

337 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

338 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

346 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

354 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

355 
	tsize_t
 
	t__n
);

363 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

366 
	t__io_˛o£_‚
 (*
	t__cookõ
);

369 #ifde‡
_GNU_SOURCE


371 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

372 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

373 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

374 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

379 
__io_ªad_‚
 *
	mªad
;

380 
__io_wrôe_‚
 *
	mwrôe
;

381 
__io_£ek_‚
 *
	m£ek
;

382 
__io_˛o£_‚
 *
	m˛o£
;

383 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

384 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

386 
	g_IO_cookõ_fûe
;

389 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

390 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

394 #ifde‡
__˝lu•lus


398 
__undîÊow
 (
_IO_FILE
 *);

399 
__uÊow
 (
_IO_FILE
 *);

400 
__ovîÊow
 (
_IO_FILE
 *, );

401 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


402 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

403 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

404 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

407 #i‡ 
__GNUC__
 >= 3

408 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

410 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

413 
	#_IO_gëc_u∆ocked
(
_Â
) \

414 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

415 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

416 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

417 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

418 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

419 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

420 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

421 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

422 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

423 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

425 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


426 
	#_IO_gëwc_u∆ocked
(
_Â
) \

427 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

428 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

429 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

430 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

431 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

433 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

434 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

435 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

436 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

439 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

440 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

442 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

443 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

444 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

445 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

447 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

450 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

451 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

453 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

454 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

455 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

457 #ifde‡
_IO_MTSAFE_IO


458 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

459 
	#_IO_Êockfûe
(
_Â
) \

460 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

461 
	#_IO_fu∆ockfûe
(
_Â
) \

462 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

464 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

465 
	#_IO_Êockfûe
(
_Â
Ë

	)

466 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

467 
	#_IO_·rylockfûe
(
_Â
Ë

	)

468 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

469 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

472 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

473 
_IO_va_li°
, *
__ª°ri˘
);

474 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

475 
_IO_va_li°
);

476 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

477 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

479 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

480 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

482 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

484 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


485 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

486 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

487 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

488 #i‡
__GNUC__
 >= 2

491 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


492 
	~<shlib-com∑t.h
>

493 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

494 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

495 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

496 c⁄° 
_IO_°dö_u£d
;

497 
wók_exã∫
 (
_IO_°dö_u£d
);

500 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


501 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

505 
	#_IO_fwide
(
__Â
, 
__mode
) \

506 ({ 
__ªsu…
 = (
__mode
); \

507 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

509 i‡((
__Â
)->
_mode
 == 0) \

511 (
__Â
)->
_mode
 = -1; \

512 
__ªsu…
 = (
__Â
)->
_mode
; \

514 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

515 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

517 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

518 
__ªsu…
; })

	)

521 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

522 
_IO_va_li°
, *
__ª°ri˘
);

523 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

524 
_IO_va_li°
);

525 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

526 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

529 #ifde‡
__LDBL_COMPAT


530 
	~<bôs/libio-ldbl.h
>

533 #ifde‡
__˝lu•lus


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

146 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


148 #i‡
__WORDSIZE
 == 64

149 
	#__INT64_C
(
c
Ë¯## 
L


	)

150 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

152 
	#__INT64_C
(
c
Ë¯## 
LL


	)

153 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

159 
	#INT8_MIN
 (-128)

	)

160 
	#INT16_MIN
 (-32767-1)

	)

161 
	#INT32_MIN
 (-2147483647-1)

	)

162 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

164 
	#INT8_MAX
 (127)

	)

165 
	#INT16_MAX
 (32767)

	)

166 
	#INT32_MAX
 (2147483647)

	)

167 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

170 
	#UINT8_MAX
 (255)

	)

171 
	#UINT16_MAX
 (65535)

	)

172 
	#UINT32_MAX
 (4294967295U)

	)

173 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

177 
	#INT_LEAST8_MIN
 (-128)

	)

178 
	#INT_LEAST16_MIN
 (-32767-1)

	)

179 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

180 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

182 
	#INT_LEAST8_MAX
 (127)

	)

183 
	#INT_LEAST16_MAX
 (32767)

	)

184 
	#INT_LEAST32_MAX
 (2147483647)

	)

185 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

188 
	#UINT_LEAST8_MAX
 (255)

	)

189 
	#UINT_LEAST16_MAX
 (65535)

	)

190 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

191 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

195 
	#INT_FAST8_MIN
 (-128)

	)

196 #i‡
__WORDSIZE
 == 64

197 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

198 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

200 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

201 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

203 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

205 
	#INT_FAST8_MAX
 (127)

	)

206 #i‡
__WORDSIZE
 == 64

207 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

208 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

210 
	#INT_FAST16_MAX
 (2147483647)

	)

211 
	#INT_FAST32_MAX
 (2147483647)

	)

213 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

216 
	#UINT_FAST8_MAX
 (255)

	)

217 #i‡
__WORDSIZE
 == 64

218 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

219 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

221 
	#UINT_FAST16_MAX
 (4294967295U)

	)

222 
	#UINT_FAST32_MAX
 (4294967295U)

	)

224 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

228 #i‡
__WORDSIZE
 == 64

229 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

230 
	#INTPTR_MAX
 (9223372036854775807L)

	)

231 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

233 
	#INTPTR_MIN
 (-2147483647-1)

	)

234 
	#INTPTR_MAX
 (2147483647)

	)

235 
	#UINTPTR_MAX
 (4294967295U)

	)

240 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

242 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

245 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

251 #i‡
__WORDSIZE
 == 64

252 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

253 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

255 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

256 
	#PTRDIFF_MAX
 (2147483647)

	)

260 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

261 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

264 #i‡
__WORDSIZE
 == 64

265 
	#SIZE_MAX
 (18446744073709551615UL)

	)

267 
	#SIZE_MAX
 (4294967295U)

	)

271 #i‚de‡
WCHAR_MIN


273 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

274 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

278 
	#WINT_MIN
 (0u)

	)

279 
	#WINT_MAX
 (4294967295u)

	)

286 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


289 
	#INT8_C
(
c
Ë
	)
c

290 
	#INT16_C
(
c
Ë
	)
c

291 
	#INT32_C
(
c
Ë
	)
c

292 #i‡
__WORDSIZE
 == 64

293 
	#INT64_C
(
c
Ë¯## 
L


	)

295 
	#INT64_C
(
c
Ë¯## 
LL


	)

299 
	#UINT8_C
(
c
Ë
	)
c

300 
	#UINT16_C
(
c
Ë
	)
c

301 
	#UINT32_C
(
c
Ë¯## 
U


	)

302 #i‡
__WORDSIZE
 == 64

303 
	#UINT64_C
(
c
Ë¯## 
UL


	)

305 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

309 #i‡
__WORDSIZE
 == 64

310 
	#INTMAX_C
(
c
Ë¯## 
L


	)

311 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

313 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

314 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/sig£t.h
>

35 #i‚de‡
__sig£t_t_deföed


36 
	#__sig£t_t_deföed


	)

37 
__sig£t_t
 
	tsig£t_t
;

41 
	#__√ed_time_t


	)

42 
	#__√ed_time•ec


	)

43 
	~<time.h
>

44 
	#__√ed_timevÆ


	)

45 
	~<bôs/time.h
>

47 #i‚de‡
__su£c⁄ds_t_deföed


48 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

49 
	#__su£c⁄ds_t_deföed


	)

54 
	t__fd_mask
;

57 #unde‡
__NFDBITS


59 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

60 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

61 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

68 #ifde‡
__USE_XOPEN


69 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

70 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

72 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

75 } 
	tfd_£t
;

78 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

80 #ifde‡
__USE_MISC


82 
__fd_mask
 
	tfd_mask
;

85 
	#NFDBITS
 
__NFDBITS


	)

90 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

91 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

92 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

93 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

96 
__BEGIN_DECLS


106 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

107 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

108 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

109 
timevÆ
 *
__ª°ri˘
 
__timeout
);

111 #ifde‡
__USE_XOPEN2K


118 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

119 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

120 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

121 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

122 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

127 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


128 
	~<bôs/£À˘2.h
>

131 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

20 #i‚de‡
_SYS_SYSMACROS_H


21 
	#_SYS_SYSMACROS_H
 1

	)

23 
	~<„©uªs.h
>

28 #ifde‡
__GLIBC_HAVE_LONG_LONG


29 
__BEGIN_DECLS


31 
__exãnsi⁄__


32 
	$gnu_dev_maj‹
 (
__dev
)

33 
__THROW
 
__©åibuã_c⁄°__
;

34 
__exãnsi⁄__


35 
	$gnu_dev_mö‹
 (
__dev
)

36 
__THROW
 
__©åibuã_c⁄°__
;

37 
__exãnsi⁄__


38 
	$gnu_dev_makedev
 (
__maj‹
,

39 
__mö‹
)

40 
__THROW
 
__©åibuã_c⁄°__
;

42 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


43 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

44 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

46  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

47 
	}
}

49 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

50 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

52  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

53 
	}
}

55 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

56 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

58  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

59 | (((Ë(
__mö‹
 & ~0xff)) << 12)

60 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

61 
	}
}

63 
	g__END_DECLS


66 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

67 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

68 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_SVID


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_WAIT
 1

	)

64 
	#_G_NEED_STDARG_H
 1

	)

65 
	#_G_va_li°
 
__gnuc_va_li°


	)

67 
	#_G_HAVE_PRINTF_FP
 1

	)

68 
	#_G_HAVE_MMAP
 1

	)

69 
	#_G_HAVE_MREMAP
 1

	)

70 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

71 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

72 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

74 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

76 
	#_G_OPEN64
 
__›í64


	)

77 
	#_G_LSEEK64
 
__l£ek64


	)

78 
	#_G_MMAP64
 
__mm≠64


	)

79 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

82 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

84 
	#_G_BUFSIZ
 8192

	)

87 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

88 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

89 
	#_G_USING_THUNKS
 1

	)

90 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

91 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

35 
	~<bôs/byãsw≠-16.h
>

38 
	#__bsw≠_c⁄°™t_32
(
x
) \

39 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

40 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

42 #ifde‡
__GNUC__


43 #i‡
__GNUC_PREREQ
 (4, 2)

44 
__ölöe
 

45 
	$__bsw≠_32
 (
__bsx
)

47  
	`__buûtö_bsw≠32
 (
__bsx
);

48 
	}
}

49 #ñi‡
__GNUC__
 >= 2

50 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

51 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

52 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

53 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

54 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

55 || 
deföed
 
	g__amdÁm10__
)

58 
	#__bsw≠_32
(
x
) \

59 (
__exãnsi⁄__
 \

60 ({ 
__v
, 
__x
 = (
x
); \

61 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

62 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

64 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

65 
__v
; }))

	)

67 
	#__bsw≠_32
(
x
) \

68 (
__exãnsi⁄__
 \

69 ({ 
__v
, 
__x
 = (
x
); \

70 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

71 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

73 
	`__asm__
 ("rorw $8, %w0;" \

76 : "Ù" (
__v
) \

77 : "0" (
__x
) \

79 
__v
; }))

	)

82 
	#__bsw≠_32
(
x
) \

83 (
__exãnsi⁄__
 \

84 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

87 
__ölöe
 

88 
	$__bsw≠_32
 (
__bsx
)

90  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

91 
	}
}

95 #i‡
__GNUC_PREREQ
 (2, 0)

97 
	#__bsw≠_c⁄°™t_64
(
x
) \

98 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

99 | (((
x
) & 0x00ff000000000000ull) >> 40) \

100 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

101 | (((
x
) & 0x000000ff00000000ull) >> 8) \

102 | (((
x
) & 0x00000000ff000000ull) << 8) \

103 | (((
x
) & 0x0000000000ff0000ull) << 24) \

104 | (((
x
) & 0x000000000000ff00ull) << 40) \

105 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

107 #i‡
__GNUC_PREREQ
 (4, 2)

108 
__ölöe
 
__uöt64_t


109 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

111  
	`__buûtö_bsw≠64
 (
__bsx
);

112 
	}
}

113 #ñi‡
__WORDSIZE
 == 64

114 
	#__bsw≠_64
(
x
) \

115 (
__exãnsi⁄__
 \

116 ({ 
__uöt64_t
 
__v
, 
__x
 = (
x
); \

117 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

118 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

120 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

121 
__v
; }))

	)

123 
	#__bsw≠_64
(
x
) \

124 (
__exãnsi⁄__
 \

125 ({ uni⁄ { 
__exãnsi⁄__
 
__uöt64_t
 
__Œ
; \

126 
__l
[2]; } 
__w
, 
__r
; \

127 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

128 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

131 
__w
.
__Œ
 = (
x
); \

132 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

133 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

135 
__r
.
__Œ
; }))

	)

137 #ñi‡
__GLIBC_HAVE_LONG_LONG


138 
	#__bsw≠_c⁄°™t_64
(
x
) \

139 ((((
x
) & 0xff00000000000000ull) >> 56) \

140 | (((
x
) & 0x00ff000000000000ull) >> 40) \

141 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

142 | (((
x
) & 0x000000ff00000000ull) >> 8) \

143 | (((
x
) & 0x00000000ff000000ull) << 8) \

144 | (((
x
) & 0x0000000000ff0000ull) << 24) \

145 | (((
x
) & 0x000000000000ff00ull) << 40) \

146 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

148 
__ölöe
 
__uöt64_t


149 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

151  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

152 
	}
}

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libio-ldbl.h

19 #i‚de‡
_IO_STDIO_H


23 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

24 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


22 
	~<bôs/w‹dsize.h
>

25 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

27 #i‡
__WORDSIZE
 == 64

28 
	#__FD_ZERO_STOS
 "°osq"

	)

30 
	#__FD_ZERO_STOS
 "°o¶"

	)

33 
	#__FD_ZERO
(
fd•
) \

35 
__d0
, 
__d1
; \

36 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

37 : "=c" (
__d0
), "=D" (
__d1
) \

38 : "a" (0), "0" ( (
fd_£t
) \

39 /  (
__fd_mask
)), \

40 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

42 } 0)

	)

48 
	#__FD_ZERO
(
£t
) \

50 
__i
; \

51 
fd_£t
 *
__¨r
 = (
£t
); \

52 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

53 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

54 } 0)

	)

58 
	#__FD_SET
(
d
, 
£t
) \

59 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

60 
	#__FD_CLR
(
d
, 
£t
) \

61 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

62 
	#__FD_ISSET
(
d
, 
£t
) \

63 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/sigset.h

20 #i‚def 
_SIGSET_H_ty≥s


21 
	#_SIGSET_H_ty≥s
 1

	)

23 
	t__sig_©omic_t
;

27 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

30 
	m__vÆ
[
_SIGSET_NWORDS
];

31 } 
	t__sig£t_t
;

42 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


43 
	#_SIGSET_H_‚s
 1

	)

45 #i‚de‡
_EXTERN_INLINE


46 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

50 
	#__sigmask
(
sig
) \

51 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

54 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

56 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

57 
	#__sigem±y£t
(
£t
) \

58 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

59 
sig£t_t
 *
__£t
 = (
£t
); \

60 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

61 0; }))

	)

62 
	#__sigfûl£t
(
£t
) \

63 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

64 
sig£t_t
 *
__£t
 = (
£t
); \

65 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

66 0; }))

	)

68 #ifde‡
__USE_GNU


72 
	#__sigi£m±y£t
(
£t
) \

73 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

74 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

75 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

76 !
__ªt
 && --
__˙t
 >= 0) \

77 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

78 
__ªt
 =0; }))

	)

79 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

80 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

81 
sig£t_t
 *
__de°
 = (
de°
); \

82 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

83 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

84 --
__˙t
 >= 0) \

85 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

86 & 
__right
->
__vÆ
[
__˙t
]); \

87 0; }))

	)

88 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

89 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

90 
sig£t_t
 *
__de°
 = (
de°
); \

91 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

92 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

93 --
__˙t
 >= 0) \

94 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

95 | 
__right
->
__vÆ
[
__˙t
]); \

96 0; }))

	)

103 
__sigismembî
 (c⁄° 
__sig£t_t
 *, );

104 
__sigadd£t
 (
__sig£t_t
 *, );

105 
__sigdñ£t
 (
__sig£t_t
 *, );

107 #ifde‡
__USE_EXTERN_INLINES


108 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

109 
_EXTERN_INLINE
 \

110 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

112 
__mask
 = 
	`__sigmask
 (
__sig
); \

113 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

114  
BODY
; \

115 }

	)

117 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
) ? 1 : 0, const)

118 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

119 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

121 #unde‡
__SIGSETFN


	@/usr/include/bits/stdio-lock.h

19 #i‚de‡
_BITS_STDIO_LOCK_H


20 
	#_BITS_STDIO_LOCK_H
 1

	)

22 
	~<bôs/libc-lock.h
>

24 
	$__libc_lock_deföe_ªcursive
 (, 
_IO_lock_t
)

27 #ifde‡
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


28 
	t_IO_lock_öôülizî
 
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


	)

29 #ñi‡
	t_IO_MTSAFE_IO


30 #îr‹ 
	tlibio
 
	t√eds
 
	tªcursive
 
	tmuãxes
 
	t_IO_MTSAFE_IO


33 
	t_IO_lock_öô
(
	t_«me
Ë
	t__libc_lock_öô_ªcursive
 (_«me)

	)

34 
	t_IO_lock_föi
(
	t_«me
Ë
	t__libc_lock_föi_ªcursive
 (_«me)

	)

35 
	t_IO_lock_lock
(
	t_«me
Ë
	t__libc_lock_lock_ªcursive
 (_«me)

	)

36 
	t_IO_lock_åylock
(
	t_«me
Ë
	t__libc_lock_åylock_ªcursive
 (_«me)

	)

37 
	t_IO_lock_u∆ock
(
	t_«me
Ë
	t__libc_lock_u∆ock_ªcursive
 (_«me)

	)

40 
	t_IO_˛ónup_ªgi⁄_°¨t
(
	t_f˘
, 
	t_Â
) \

41 
	t__libc_˛ónup_ªgi⁄_°¨t
 (((
	t_Â
)->
	t_Êags
 & 
	t_IO_USER_LOCK
Ë=0, 
	t_f˘
, _Â)

	)

42 
	t_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
	t_f˘
) \

43 
	t__libc_˛ónup_ªgi⁄_°¨t
 (1, 
	t_f˘
, 
	tNULL
)

	)

44 
	t_IO_˛ónup_ªgi⁄_íd
(
	t_doô
) \

45 
	t__libc_˛ónup_ªgi⁄_íd
 (
	t_doô
)

	)

47 #i‡
	tdeföed
 
	t_LIBC
 && !deföed 
	tNOT_IN_libc


48 
	t_IO_acquúe_lock
(
	t_Â
) \

49 
	t_IO_˛ónup_ªgi⁄_°¨t
 (((*Ë(*)Ë
	t_IO_fu∆ockfûe
, (
	t_Â
)); \

50 
	`_IO_Êockfûe
 (
_Â
)

	)

52 
	#_IO_ªÀa£_lock
(
_Â
) \

53 
	`_IO_fu∆ockfûe
 (
_Â
); \

54 
	`_IO_˛ónup_ªgi⁄_íd
 (0)

	)

	@/usr/include/bits/time.h

23 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


24 #i‚de‡
_STRUCT_TIMEVAL


25 
	#_STRUCT_TIMEVAL
 1

	)

26 
	~<bôs/ty≥s.h
>

30 
	stimevÆ


32 
__time_t
 
	mtv_£c
;

33 
__su£c⁄ds_t
 
	mtv_u£c
;

38 #i‚de‡
__√ed_timevÆ


39 #i‚de‡
_BITS_TIME_H


40 
	#_BITS_TIME_H
 1

	)

48 
	#CLOCKS_PER_SEC
 1000000l

	)

50 #i‡(!
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_POSIX
) \

51 && !
deföed
 
	g__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

82 
	#TIMER_ABSTIME
 1

	)

85 #ifde‡
__USE_GNU


86 
	~<bôs/timex.h
>

88 
__BEGIN_DECLS


91 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

93 
__END_DECLS


99 #unde‡
__√ed_timevÆ


	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

68 
	#__SWBLK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

69 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

70 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

71 
	#__TIMER_T_TYPE
 *

	)

72 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

73 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

74 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

77 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio.h

18 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


22 #i‚de‡
_BITS_UIO_H


23 
	#_BITS_UIO_H
 1

	)

25 
	~<sys/ty≥s.h
>

39 
	#UIO_MAXIOV
 1024

	)

43 
	siovec


45 *
	miov_ba£
;

46 
size_t
 
	miov_Àn
;

52 #ifde‡
__USE_GNU


53 #i‡
deföed
 
_SYS_UIO_H
 && !deföed 
_BITS_UIO_H_FOR_SYS_UIO_H


54 
	#_BITS_UIO_H_FOR_SYS_UIO_H
 1

	)

56 
__BEGIN_DECLS


59 
ssize_t
 
	$¥o˚ss_vm_ªadv
 (
pid_t
 
__pid
, c⁄° 
iovec
 *
__lvec
,

60 
__liov˙t
,

61 c⁄° 
iovec
 *
__rvec
,

62 
__riov˙t
,

63 
__Êags
)

64 
__THROW
;

67 
ssize_t
 
	$¥o˚ss_vm_wrôev
 (
pid_t
 
__pid
, c⁄° 
iovec
 *
__lvec
,

68 
__liov˙t
,

69 c⁄° 
iovec
 *
__rvec
,

70 
__riov˙t
,

71 
__Êags
)

72 
__THROW
;

74 
__END_DECLS


	@/usr/include/bits/wchar.h

19 #i‚de‡
_BITS_WCHAR_H


20 
	#_BITS_WCHAR_H
 1

	)

22 
	~<bôs/w‹dsize.h
>

24 #i‡
__WORDSIZE
 == 64

25 
	#__WCHAR_MIN
 (-2147483647 - 1)

	)

26 
	#__WCHAR_MAX
 (2147483647)

	)

28 
	#__WCHAR_MIN
 (-2147483647»- 1l)

	)

29 
	#__WCHAR_MAX
 (2147483647l)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

9 #ifde‡
__x86_64__


10 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

12 
	#__SYSCALL_WORDSIZE
 64

	)

	@/usr/include/ctype.h

23 #i‚def 
_CTYPE_H


24 
	#_CTYPE_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	g__BEGIN_DECLS


31 #i‚de‡
_ISbô


40 
	~<ídün.h
>

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

44 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

49 
	m_ISuµî
 = 
_ISbô
 (0),

50 
	m_ISlowî
 = 
_ISbô
 (1),

51 
	m_ISÆpha
 = 
_ISbô
 (2),

52 
	m_ISdigô
 = 
_ISbô
 (3),

53 
	m_ISxdigô
 = 
_ISbô
 (4),

54 
	m_IS•a˚
 = 
_ISbô
 (5),

55 
	m_IS¥öt
 = 
_ISbô
 (6),

56 
	m_ISgøph
 = 
_ISbô
 (7),

57 
	m_ISbœnk
 = 
_ISbô
 (8),

58 
	m_IS˙ål
 = 
_ISbô
 (9),

59 
	m_ISpun˘
 = 
_ISbô
 (10),

60 
	m_ISÆnum
 = 
_ISbô
 (11)

80 c⁄° **
	$__˘y≥_b_loc
 ()

81 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

82 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

83 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

84 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

85 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

88 #i‚de‡
__˝lu•lus


89 
	#__is˘y≥
(
c
, 
ty≥
) \

90 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 #ñi‡
deföed
 
__USE_EXTERN_INLINES


92 
	#__is˘y≥_f
(
ty≥
) \

93 
__exã∫_ölöe
 \

94 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

96  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

97 
	}

	)
}

100 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

101 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

103 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

105 
__BEGIN_NAMESPACE_STD


111 
__ex˘y≥
 (
iß um
);

112 
__ex˘y≥
 (
ißÕha
);

113 
__ex˘y≥
 (
is˙ål
);

114 
__ex˘y≥
 (
isdigô
);

115 
__ex˘y≥
 (
i¶owî
);

116 
__ex˘y≥
 (
isgøph
);

117 
__ex˘y≥
 (
i•röt
);

118 
__ex˘y≥
 (
i•un˘
);

119 
__ex˘y≥
 (
is•a˚
);

120 
__ex˘y≥
 (
isuµî
);

121 
__ex˘y≥
 (
isxdigô
);

125 
	$tﬁowî
 (
__c
Ë
__THROW
;

128 
	$touµî
 (
__c
Ë
__THROW
;

130 
__END_NAMESPACE_STD


134 #ifdef 
__USE_ISOC99


135 
__BEGIN_NAMESPACE_C99


137 
	`__ex˘y≥
 (
isbœnk
);

139 
__END_NAMESPACE_C99


142 #ifde‡
__USE_GNU


144 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

147 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


151 
	$ißscii
 (
__c
Ë
__THROW
;

155 
	$tﬂscii
 (
__c
Ë
__THROW
;

159 
	`__ex˘y≥
 (
_touµî
);

160 
	`__ex˘y≥
 (
_tﬁowî
);

164 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

165 (
__exãnsi⁄__
 \

166 ({ 
__ªs
; \

167 i‡( (
c
) > 1) \

169 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

171 
__c
 = (
c
); \

172 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

175 
__ªs
 = 
f
 
¨gs
; \

178 
__ªs
 = (
a
)[(Ë(
c
)]; \

179 
__ªs
; 
	}
}))

	)

181 #i‡!
deföed
 
__NO_CTYPE


182 #ifde‡
__is˘y≥_f


183 
	$__is˘y≥_f
 (
Ænum
)

184 
	$__is˘y≥_f
 (
Æpha
)

185 
	$__is˘y≥_f
 (
˙ål
)

186 
	$__is˘y≥_f
 (
digô
)

187 
	$__is˘y≥_f
 (
lowî
)

188 
	$__is˘y≥_f
 (
gøph
)

189 
	$__is˘y≥_f
 (
¥öt
)

190 
	$__is˘y≥_f
 (
pun˘
)

191 
	$__is˘y≥_f
 (
•a˚
)

192 
	$__is˘y≥_f
 (
uµî
)

193 
	$__is˘y≥_f
 (
xdigô
)

194 #ifde‡
__USE_ISOC99


195 
	$__is˘y≥_f
 (
bœnk
)

197 #ñi‡
deföed
 
__is˘y≥


198 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

199 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

200 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

201 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

202 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

203 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

204 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

205 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

206 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

207 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

208 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

209 #ifde‡
__USE_ISOC99


210 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

214 #ifde‡
__USE_EXTERN_INLINES


215 
__exã∫_ölöe
 

216 
	`__NTH
 (
	$tﬁowî
 (
__c
))

218  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

219 
	}
}

221 
__exã∫_ölöe
 

222 
__NTH
 (
	$touµî
 (
__c
))

224  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

225 
	}
}

228 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


229 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

230 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

233 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


234 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

235 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

237 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

238 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

244 #ifde‡
__USE_XOPEN2K8


258 
	~<xloˇÀ.h
>

262 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

263 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

265 
	#__ex˘y≥_l
(
«me
) \

266 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

272 
__ex˘y≥_l
 (
iß um_l
);

273 
__ex˘y≥_l
 (
ißÕha_l
);

274 
__ex˘y≥_l
 (
is˙ål_l
);

275 
__ex˘y≥_l
 (
isdigô_l
);

276 
__ex˘y≥_l
 (
i¶owî_l
);

277 
__ex˘y≥_l
 (
isgøph_l
);

278 
__ex˘y≥_l
 (
i•röt_l
);

279 
__ex˘y≥_l
 (
i•un˘_l
);

280 
__ex˘y≥_l
 (
is•a˚_l
);

281 
__ex˘y≥_l
 (
isuµî_l
);

282 
__ex˘y≥_l
 (
isxdigô_l
);

284 
__ex˘y≥_l
 (
isbœnk_l
);

288 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

289 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

293 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

295 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


296 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

297 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

298 
	#__touµî_l
(
c
, 
loˇÀ
) \

299 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

300 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

301 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

305 #i‚de‡
__NO_CTYPE


306 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

307 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

308 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

309 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

310 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

311 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

312 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

313 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

314 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

315 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

316 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

318 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

320 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


321 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

322 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

325 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

326 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

327 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

328 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

329 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

330 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

331 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

332 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

333 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

334 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

335 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

337 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

339 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


340 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

341 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

348 
__END_DECLS


	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/linux/errno.h

1 
	~<asm/î∫o.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

30 
	#__STDC_IEC_559__
 1

	)

31 
	#__STDC_IEC_559_COMPLEX__
 1

	)

35 
	#__STDC_ISO_10646__
 201103L

	)

38 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/sys/cdefs.h

19 #i‚def 
_SYS_CDEFS_H


20 
	#_SYS_CDEFS_H
 1

	)

23 #i‚de‡
_FEATURES_H


24 
	~<„©uªs.h
>

30 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


35 #unde‡
__P


36 #unde‡
__PMT


38 #ifde‡
__GNUC__


42 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


43 
	#__LEAF
 , 
__Àaf__


	)

44 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

46 
	#__LEAF


	)

47 
	#__LEAF_ATTR


	)

55 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

56 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

57 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

58 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

60 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

61 
	#__THROW
 
	`throw
 ()

	)

62 
	#__THROWNL
 
	`throw
 ()

	)

63 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

65 
	#__THROW


	)

66 
	#__THROWNL


	)

67 
	#__NTH
(
f˘
Ë
	)
fct

73 
	#__ölöe


	)

75 
	#__THROW


	)

76 
	#__THROWNL


	)

77 
	#__NTH
(
f˘
Ë
	)
fct

83 
	#__P
(
¨gs
Ë
	)
args

84 
	#__PMT
(
¨gs
Ë
	)
args

89 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

90 
	#__STRING
(
x
Ë#x

	)

93 
	#__±r_t
 *

	)

94 
	#__l⁄g_doubÀ_t
 

	)

98 #ifdef 
__˝lu•lus


99 
	#__BEGIN_DECLS
 "C" {

	)

100 
	#__END_DECLS
 }

	)

102 
	#__BEGIN_DECLS


	)

103 
	#__END_DECLS


	)

112 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


113 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

114 
	#__END_NAMESPACE_STD
 }

	)

115 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

116 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

117 
	#__END_NAMESPACE_C99
 }

	)

118 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

123 
	#__BEGIN_NAMESPACE_STD


	)

124 
	#__END_NAMESPACE_STD


	)

125 
	#__USING_NAMESPACE_STD
(
«me
)

	)

126 
	#__BEGIN_NAMESPACE_C99


	)

127 
	#__END_NAMESPACE_C99


	)

128 
	#__USING_NAMESPACE_C99
(
«me
)

	)

133 #i‚de‡
__BOUNDED_POINTERS__


134 
	#__bounded


	)

135 
	#__unbounded


	)

136 
	#__±rvÆue


	)

141 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

142 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

143 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

145 #i‡
__GNUC_PREREQ
 (4,3) \

146 || (
deföed
 
	g__GNUC_RH_RELEASE__
 && 
	g__GNUC__
 == 4 \

147 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

148 && 
__GNUC_RH_RELEASE__
 >= 31)

149 
	#__w¨nde˛
(
«me
, 
msg
) \

150 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

151 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

152 
	#__îr‹de˛
(
«me
, 
msg
) \

153 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

155 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

156 
	#__w¨«âr
(
msg
)

	)

157 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

161 #i‡
__GNUC_PREREQ
 (2,97)

163 
	#__Êex¨r
 []

	)

165 #ifde‡
__GNUC__


166 
	#__Êex¨r
 [0]

	)

168 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

169 
	#__Êex¨r
 []

	)

172 
	#__Êex¨r
 [1]

	)

188 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

190 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

191 #ifde‡
__˝lu•lus


192 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

193 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

194 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

195 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

197 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

198 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

199 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

200 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

202 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

203 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

216 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

217 
	#__©åibuã__
(
xyz
Ë

	)

223 #i‡
__GNUC_PREREQ
 (2,96)

224 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

226 
	#__©åibuã_mÆloc__


	)

232 #i‡
__GNUC_PREREQ
 (2,96)

233 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

235 
	#__©åibuã_puª__


	)

239 #i‡
__GNUC_PREREQ
 (2,5)

240 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

242 
	#__©åibuã_c⁄°__


	)

248 #i‡
__GNUC_PREREQ
 (3,1)

249 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

250 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

252 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

253 
	#__©åibuã_noölöe__


	)

257 #i‡
__GNUC_PREREQ
 (3,2)

258 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

260 
	#__©åibuã_dïªˇãd__


	)

269 #i‡
__GNUC_PREREQ
 (2,8)

270 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

272 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

279 #i‡
__GNUC_PREREQ
 (2,97)

280 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

281 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

283 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

288 #i‡
__GNUC_PREREQ
 (3,3)

289 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

291 
	#__n⁄nuŒ
(
∑øms
)

	)

296 #i‡
__GNUC_PREREQ
 (3,4)

297 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

298 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

299 #i‡
__USE_FORTIFY_LEVEL
 > 0

300 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

303 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

305 #i‚de‡
__wur


306 
	#__wur


	)

310 #i‡
__GNUC_PREREQ
 (3,2)

311 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

313 
	#__Æways_ölöe
 
__ölöe


	)

318 #i‡
__GNUC_PREREQ
 (4,3)

319 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

321 
	#__©åibuã_¨tificül__


	)

326 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3) \

327 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

328 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

329 && 
__GNUC_RH_RELEASE__
 >= 31)

330 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


331 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

332 
	#__exã∫_Æways_ölöe
 \

333 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

335 
	#__exã∫_ölöe
 
__ölöe


	)

336 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

342 #i‡
__GNUC_PREREQ
 (4,3) \

343 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

344 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

345 && 
__GNUC_RH_RELEASE__
 >= 31)

346 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

347 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

354 #i‡!
__GNUC_PREREQ
 (2,8)

355 
	#__exãnsi⁄__


	)

359 #i‡!
__GNUC_PREREQ
 (2,92)

360 
	#__ª°ri˘


	)

366 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


367 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

369 #ifde‡
__GNUC__


370 
	#__ª°ri˘_¨r


	)

372 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

373 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

376 
	#__ª°ri˘_¨r


	)

381 #i‡
__GNUC__
 >= 3

382 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
((c⁄d), 0)

	)

384 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

387 
	~<bôs/w‹dsize.h
>

389 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


390 
	#__LDBL_COMPAT
 1

	)

391 #ifde‡
__REDIRECT


392 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

393 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

394 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

395 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

396 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

397 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

398 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

399 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

400 
	#__LDBL_REDIR_DECL
(
«me
) \

401 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

402 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

403 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

404 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

405 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

408 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


409 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

410 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

411 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

412 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

413 
	#__LDBL_REDIR_DECL
(
«me
)

	)

414 #ifde‡
__REDIRECT


415 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

416 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

417 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/bits/byteswap-16.h

19 #i‚de‡
_BITS_BYTESWAP_H


23 #ifde‡
__GNUC__


24 #i‡
__GNUC__
 >= 2

25 
	#__bsw≠_16
(
x
) \

26 (
__exãnsi⁄__
 \

27 ({ 
__v
, 
__x
 = (Ë(
x
); \

28 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

29 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

31 
	`__asm__
 ("rorw $8, %w0" \

32 : "Ù" (
__v
) \

33 : "0" (
__x
) \

35 
__v
; }))

	)

38 
	#__bsw≠_16
(
x
) \

39 (
__exãnsi⁄__
 \

40 ({ 
__x
 = (Ë(
x
); \

41 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

44 
__ölöe
 

45 
	$__bsw≠_16
 (
__bsx
)

47  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

48 
	}
}

	@/usr/include/bits/libc-lock.h

21 #i‚de‡
_BITS_LIBC_LOCK_H


22 
	#_BITS_LIBC_LOCK_H
 1

	)

24 
	~<±hªad.h
>

27 #ifde‡
_IO_MTSAFE_IO


28 
±hªad_muãx_t
 
	t__libc_lock_t
;

29 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

30 #ifde‡
__USE_UNIX98


31 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

33 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

35 
__libc_lock_ªcursive_t
 
	t__πld_lock_ªcursive_t
;

37 
__libc_lock_›aque__
 
	t__libc_lock_t
;

38 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

39 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

43 
±hªad_key_t
 
	t__libc_key_t
;

52 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

53 
CLASS
 
__libc_lock_t
 
NAME
;

	)

54 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

55 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

56 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

57 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

58 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

59 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

70 #i‡
__LT_SPINLOCK_INIT
 == 0

71 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

72 
CLASS
 
__libc_lock_t
 
NAME
;

	)

74 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

75 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

78 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

79 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

83 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

84 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

85 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

86 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

88 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

89 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

90 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

91 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

93 #i‡
deföed
 
__PIC__


94 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

95 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

96 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

98 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

99 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

101 
	#__libc_maybe_ˇŒ2
(
FUNC
, 
ARGS
, 
ELSE
Ë
	`__libc_maybe_ˇŒ
 (
__
##FUNC, ARGS, ELSE)

	)

105 
	#__libc_lock_öô
(
NAME
) \

106 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0))

	)

107 
	#__libc_rwlock_öô
(
NAME
) \

108 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0));

	)

111 
	#__libc_lock_öô_ªcursive
(
NAME
) \

113 i‡(
__±hªad_muãx_öô
 !
NULL
) \

115 
±hªad_muãx©å_t
 
__©å
; \

116 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

117 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

118 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

119 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

121 } 0);

	)

122 
	#__πld_lock_öô_ªcursive
(
NAME
) \

123 
	`__libc_lock_öô_ªcursive
 (
NAME
)

	)

128 
	#__libc_lock_föi
(
NAME
) \

129 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_de°roy
, (&(
NAME
)), 0));

	)

130 
	#__libc_rwlock_föi
(
NAME
) \

131 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0));

	)

134 
	#__libc_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi
 ((NAME).
muãx
)

	)

135 
	#__πld_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi_ªcursive
 (NAME)

	)

138 
	#__libc_lock_lock
(
NAME
) \

139 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_lock
, (&(
NAME
)), 0));

	)

140 
	#__libc_rwlock_rdlock
(
NAME
) \

141 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0));

	)

142 
	#__libc_rwlock_wæock
(
NAME
) \

143 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0));

	)

146 
	#__libc_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock
 ((NAME).
muãx
)

	)

149 
	#__libc_lock_åylock
(
NAME
) \

150 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_åylock
, (&(
NAME
)), 0))

	)

151 
	#__libc_rwlock_åyrdlock
(
NAME
) \

152 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0))

	)

153 
	#__libc_rwlock_åywæock
(
NAME
) \

154 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0))

	)

157 
	#__libc_lock_åylock_ªcursive
(
NAME
Ë
	`__libc_lock_åylock
 ((NAME).
muãx
)

	)

158 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

159 
	`__libc_lock_åylock_ªcursive
 (
NAME
)

	)

162 
	#__libc_lock_u∆ock
(
NAME
) \

163 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_u∆ock
, (&(
NAME
)), 0));

	)

164 
	#__libc_rwlock_u∆ock
(
NAME
) \

165 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0));

	)

168 
	#__libc_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock
 ((NAME).
muãx
)

	)

170 
	#__πld_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock_ªcursive
 (NAME)

	)

171 
	#__πld_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock_ªcursive
 (NAME)

	)

174 #i‡
PTHREAD_ONCE_INIT
 == 0

177 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

178 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

180 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

181 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

185 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

187 i‡(
__±hªad_⁄˚
 !
NULL
) \

188 
	`__±hªad_⁄˚
 (&(
ONCE_CONTROL
), (
INIT_FUNCTION
)); \

189 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

190 
	`INIT_FUNCTION
 (); \

191 (
ONCE_CONTROL
) = 2; \

193 } 0)

	)

197 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

198 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

199 
_avaû
 = (
DOIT
Ë&& 
_±hªad_˛ónup_push_de„r
 !
NULL
; \

200 i‡(
_avaû
) { \

201 
	`_±hªad_˛ónup_push_de„r
 (&
_buf„r
, (
FCT
), (
ARG
)); \

202 }

	)

205 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

206 i‡(
_avaû
) { \

207 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

209 }

	)

212 
	#__libc_˛ónup_íd
(
DOIT
) \

213 i‡(
_avaû
) { \

214 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

215 }

	)

217 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

218 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

219 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_push
, (&
_buf„r
, (
f˘
), (
¨g
)), 0)

	)

221 
	#__libc_˛ónup_p›
(
execuã
) \

222 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_p›
, (&
_buf„r
, 
execuã
), 0); \

223 }

	)

226 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

227 (
	`__libc_maybe_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1))

	)

230 
	#__libc_gë•ecific
(
KEY
) \

231 (
	`__libc_maybe_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
))

	)

234 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

235 (
	`__libc_maybe_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0))

	)

239 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

240 (
	`__libc_maybe_ˇŒ
 (
__±hªad_©f‹k
, (
PREPARE
, 
PARENT
, 
CHILD
), 0))

	)

242 
__BEGIN_DECLS


244 
_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

245 (*
__routöe
) (*),

246 *
__¨g
Ë
__THROW
;

248 
	$_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

249 
__execuã
Ë
__THROW
;

255 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

256 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

258 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

260 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

262 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

264 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

266 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

268 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

270 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

271 
__köd
);

273 #ifde‡
__USE_UNIX98


274 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

275 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

277 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

279 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

281 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

283 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

285 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

287 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

290 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

291 (*
__de°r_fun˘i⁄
) (*));

293 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

294 
__c⁄°
 *
__poöãr
);

296 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

298 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

299 (*
__öô_routöe
) ());

301 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

302 (*
__∑ª¡
) (),

303 (*
__chûd
) ());

305 
__END_DECLS


309 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


310 #¥agm®
wók
 
__±hªad_muãx_öô


311 #¥agm®
wók
 
__±hªad_muãx_de°roy


312 #¥agm®
wók
 
__±hªad_muãx_lock


313 #¥agm®
wók
 
__±hªad_muãx_åylock


314 #¥agm®
wók
 
__±hªad_muãx_u∆ock


315 #¥agm®
wók
 
__±hªad_muãx©å_öô


316 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


317 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


318 #¥agm®
wók
 
__±hªad_rwlock_de°roy


319 #¥agm®
wók
 
__±hªad_rwlock_rdlock


320 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


321 #¥agm®
wók
 
__±hªad_rwlock_wæock


322 #¥agm®
wók
 
__±hªad_rwlock_åywæock


323 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


324 #¥agm®
wók
 
__±hªad_key_¸óã


325 #¥agm®
wók
 
__±hªad_£t•ecific


326 #¥agm®
wók
 
__±hªad_gë•ecific


327 #¥agm®
wók
 
__±hªad_⁄˚


328 #¥agm®
wók
 
__±hªad_öôülize


329 #¥agm®
wók
 
__±hªad_©f‹k


330 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


331 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


332 #¥agm®
wók
 
_±hªad_˛ónup_push


333 #¥agm®
wók
 
_±hªad_˛ónup_p›


338 
	#__libc_muãx_u∆ock
 
__±hªad_muãx_u∆ock


	)

	@/usr/include/bits/timex.h

18 #i‚def 
_BITS_TIMEX_H


19 
	#_BITS_TIMEX_H
 1

	)

21 
	~<bôs/ty≥s.h
>

25 
	stimex


27 
	mmodes
;

28 
__sysˇŒ_¶⁄g_t
 
	moff£t
;

29 
__sysˇŒ_¶⁄g_t
 
	m‰eq
;

30 
__sysˇŒ_¶⁄g_t
 
	mmaxîr‹
;

31 
__sysˇŒ_¶⁄g_t
 
	me°îr‹
;

32 
	m°©us
;

33 
__sysˇŒ_¶⁄g_t
 
	mc⁄°™t
;

34 
__sysˇŒ_¶⁄g_t
 
	m¥ecisi⁄
;

35 
__sysˇŒ_¶⁄g_t
 
	mtﬁî™˚
;

36 
timevÆ
 
	mtime
;

37 
__sysˇŒ_¶⁄g_t
 
	mtick
;

38 
__sysˇŒ_¶⁄g_t
 
	mµs‰eq
;

39 
__sysˇŒ_¶⁄g_t
 
	mjôãr
;

40 
	mshi·
;

41 
__sysˇŒ_¶⁄g_t
 
	m°abû
;

42 
__sysˇŒ_¶⁄g_t
 
	mjô˙t
;

43 
__sysˇŒ_¶⁄g_t
 
	mˇl˙t
;

44 
__sysˇŒ_¶⁄g_t
 
	mîr˙t
;

45 
__sysˇŒ_¶⁄g_t
 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_MICRO
 0x1000

	)

64 
	#ADJ_NANO
 0x2000

	)

65 
	#ADJ_TICK
 0x4000

	)

66 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

67 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

70 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

71 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

72 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

73 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

74 
	#MOD_STATUS
 
ADJ_STATUS


	)

75 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

76 
	#MOD_CLKB
 
ADJ_TICK


	)

77 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

78 
	#MOD_TAI
 
ADJ_TAI


	)

79 
	#MOD_MICRO
 
ADJ_MICRO


	)

80 
	#MOD_NANO
 
ADJ_NANO


	)

84 
	#STA_PLL
 0x0001

	)

85 
	#STA_PPSFREQ
 0x0002

	)

86 
	#STA_PPSTIME
 0x0004

	)

87 
	#STA_FLL
 0x0008

	)

89 
	#STA_INS
 0x0010

	)

90 
	#STA_DEL
 0x0020

	)

91 
	#STA_UNSYNC
 0x0040

	)

92 
	#STA_FREQHOLD
 0x0080

	)

94 
	#STA_PPSSIGNAL
 0x0100

	)

95 
	#STA_PPSJITTER
 0x0200

	)

96 
	#STA_PPSWANDER
 0x0400

	)

97 
	#STA_PPSERROR
 0x0800

	)

99 
	#STA_CLOCKERR
 0x1000

	)

100 
	#STA_NANO
 0x2000

	)

101 
	#STA_MODE
 0x4000

	)

102 
	#STA_CLK
 0x8000

	)

105 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

106 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_chÊags


	)

11 
	#__°ub_Áâach


	)

12 
	#__°ub_fchÊags


	)

13 
	#__°ub_fdëach


	)

14 
	#__°ub_gây


	)

15 
	#__°ub_lchmod


	)

16 
	#__°ub_ªvoke


	)

17 
	#__°ub_£éogö


	)

18 
	#__°ub_sigªtu∫


	)

19 
	#__°ub_s°k


	)

20 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

111 
	#EHWPOISON
 133

	)

	@/usr/include/bits/wchar-ldbl.h

19 #i‚de‡
_WCHAR_H


23 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


24 
__BEGIN_NAMESPACE_C99


25 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

26 
__LDBL_REDIR_DECL
 (
w¥ötf
);

27 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

28 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
	g__REDIRECT
 \

33 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

38 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

39 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

42 
__END_NAMESPACE_C99


45 #ifde‡
__USE_ISOC99


46 
__BEGIN_NAMESPACE_C99


47 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

48 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

49 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

50 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

51 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

54 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

55 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

58 
__END_NAMESPACE_C99


61 #ifde‡
__USE_GNU


62 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

65 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


66 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

67 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

68 #i‡
__USE_FORTIFY_LEVEL
 > 1

69 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

70 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

19 #i‚de‡
_WCHAR_H


24 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

25 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

26 
size_t
 
__ns1
Ë
__THROW
;

27 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

28 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

29 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

30 
wmem˝y
);

31 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

32 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

33 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

34 
size_t
 
__ns1
), 
__wmem˝y_chk
)

35 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

38 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

39 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

40 
size_t
 
__n
))

42 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

44 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

45  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

46 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

48 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

49  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

50 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

52  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

53 
	}
}

56 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

57 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

58 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

59 c⁄° 
wch¨_t
 *
__s2
,

60 
size_t
 
__n
), 
wmemmove
);

61 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

62 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

63 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

64 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

67 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

68 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
))

70 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

72 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

73  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

74 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

76 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

77  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

78 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

80  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

81 
	}
}

84 #ifde‡
__USE_GNU


85 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

86 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

87 
size_t
 
__ns1
Ë
__THROW
;

88 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

89 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

90 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
,

91 
size_t
 
__n
), 
wmemp˝y
);

92 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

93 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

94 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

95 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

96 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

99 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

100 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

101 
size_t
 
__n
))

103 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

105 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

106  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

107 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

109 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

110  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

111 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

113  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

114 
	}
}

118 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

119 
size_t
 
__ns
Ë
__THROW
;

120 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

121 
size_t
 
__n
), 
wmem£t
);

122 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

123 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

124 
size_t
 
__ns
), 
__wmem£t_chk
)

125 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

128 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

129 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

131 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

133 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

134  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

136 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

137  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

138 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

140  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

141 
	}
}

144 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

146 
size_t
 
__n
Ë
__THROW
;

147 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

148 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

149 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

151 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

152 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

154 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

155  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

156  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

157 
	}
}

160 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

161 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

162 
size_t
 
__de°Àn
Ë
__THROW
;

163 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

164 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

165 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

167 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

168 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

170 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

171  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

172  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

173 
	}
}

176 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

177 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

178 
size_t
 
__de°Àn
Ë
__THROW
;

179 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

180 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

181 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

182 
size_t
 
__n
), 
wc¢˝y
);

183 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

184 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

185 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

186 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

187 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

190 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

191 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

192 
size_t
 
__n
))

194 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

196 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

197  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

198 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

199 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

200  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

201 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

203  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

204 
	}
}

207 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

208 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

209 
size_t
 
__de°Àn
Ë
__THROW
;

210 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

211 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

212 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

213 
size_t
 
__n
), 
w˝n˝y
);

214 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

215 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

216 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

217 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

218 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

221 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

222 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

223 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

264 
size_t
 
__n
))

266 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

267  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

268 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

269  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

270 
	}
}

273 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

274 
__Êag
, 
size_t
 
__s_Àn
,

275 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

276 
__THROW
 ;

278 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

279 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

280 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

281 
sw¥ötf
);

283 #ifde‡
__va_¨g_∑ck


284 
__f‹tify_fun˘i⁄
 

285 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

288 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

289  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

290 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

291 
__fmt
, 
	`__va_¨g_∑ck
 ());

292  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

293 
	}
}

294 #ñi‡!
deföed
 
__˝lu•lus


296 
	#sw¥ötf
(
s
, 
n
, ...) \

297 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

298 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

299 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

300 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

303 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

304 
__Êag
, 
size_t
 
__s_Àn
,

305 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

306 
__gnuc_va_li°
 
__¨g
)

307 
__THROW
 ;

309 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

310 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

311 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

312 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

314 
__f‹tify_fun˘i⁄
 

315 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

316 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

318 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

319  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

320 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

321  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

322 
	}
}

325 #i‡
__USE_FORTIFY_LEVEL
 > 1

327 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

328 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

329 
__w¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

331 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

332 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

333 
__gnuc_va_li°
 
__≠
);

334 
__vw¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

335 
__gnuc_va_li°
 
__≠
);

337 #ifde‡
__va_¨g_∑ck


338 
__f‹tify_fun˘i⁄
 

339 
	$w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

341  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

342 
	}
}

344 
__f‹tify_fun˘i⁄
 

345 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

347  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

348 
	`__va_¨g_∑ck
 ());

349 
	}
}

350 #ñi‡!
deföed
 
__˝lu•lus


351 
	#w¥ötf
(...) \

352 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

353 
	#fw¥ötf
(
°ªam
, ...) \

354 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

357 
__f‹tify_fun˘i⁄
 

358 
	$vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

360  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

361 
	}
}

363 
__f‹tify_fun˘i⁄
 

364 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

365 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

367  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

368 
	}
}

372 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

373 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

374 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

375 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

376 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

377 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

378 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

379 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

380 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

383 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

384 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

386 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

388 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

389  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

390 
__n
, 
__°ªam
);

392 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

393  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

394 
__n
, 
__°ªam
);

396  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

397 
	}
}

399 #ifde‡
__USE_GNU


400 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

401 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

402 
__wur
;

403 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

404 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

405 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

406 
__wur
;

407 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

408 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

409 
__FILE
 *
__ª°ri˘
 
__°ªam
),

410 
__fgëws_u∆ocked_chk
)

411 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

414 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

415 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

417 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

419 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

420  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

421 
__n
, 
__°ªam
);

423 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

424  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

425 
__n
, 
__°ªam
);

427  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

428 
	}
}

432 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

433 
mb°©e_t
 *
__ª°ri˘
 
__p
,

434 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

435 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

436 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

437 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

439 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


440 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

441 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

446 
	#__WCHAR_MB_LEN_MAX
 16

	)

447 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


450 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

451  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

452  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

453 
	}
}

456 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

457 c⁄° **
__ª°ri˘
 
__§c
,

458 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

459 
size_t
 
__d°Àn
Ë
__THROW
;

460 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

461 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

462 c⁄° **
__ª°ri˘
 
__§c
,

463 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

464 
mb§towcs
);

465 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

466 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

467 c⁄° **
__ª°ri˘
 
__§c
,

468 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

469 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

470 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

473 
__f‹tify_fun˘i⁄
 
size_t


474 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

475 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

477 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

479 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

480  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

481 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

483 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

484  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

485 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

487  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

488 
	}
}

491 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

492 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

493 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

494 
size_t
 
__d°Àn
Ë
__THROW
;

495 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

496 (*
__ª°ri˘
 
__d°
,

497 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

498 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

499 
wc§tombs
);

500 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

501 (*
__ª°ri˘
 
__d°
,

502 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

503 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

504 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

505 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

507 
__f‹tify_fun˘i⁄
 
size_t


508 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

509 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

511 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

513 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

514  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

517  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

519  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

520 
	}
}

523 #ifde‡
__USE_GNU


524 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

525 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

526 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

527 
size_t
 
__d°Àn
Ë
__THROW
;

528 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

529 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

530 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

531 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

532 
mb¢πowcs
);

533 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

534 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

535 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

536 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

537 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

538 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

541 
__f‹tify_fun˘i⁄
 
size_t


542 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

543 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

545 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

547 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

548  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

549 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

551 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

552  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

553 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

555  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

556 
	}
}

559 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

560 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

561 
size_t
 
__nwc
, size_à
__Àn
,

562 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

563 
__THROW
;

564 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

565 (*
__ª°ri˘
 
__d°
,

566 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

567 
size_t
 
__nwc
, size_à
__Àn
,

568 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

569 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

570 (*
__ª°ri˘
 
__d°
,

571 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

572 
size_t
 
__nwc
, size_à
__Àn
,

573 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

574 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

575 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

577 
__f‹tify_fun˘i⁄
 
size_t


578 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

579 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

581 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

583 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

584  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

585 
	`__bos
 (
__d°
));

587 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

588  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

589 
	`__bos
 (
__d°
));

591  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

592 
	}
}

	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


86 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


87 
	#PTHREAD_MUTEX_INITIALIZER
 \

88 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

89 #ifde‡
__USE_GNU


90 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

91 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

92 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

98 
	#PTHREAD_MUTEX_INITIALIZER
 \

99 { { 0, 0, 0, 0, 0, { 0 } } }

	)

100 #ifde‡
__USE_GNU


101 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

102 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

103 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

112 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


115 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

116 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

117 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

118 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


125 #i‡
__WORDSIZE
 == 64

126 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

131 
	#PTHREAD_RWLOCK_INITIALIZER
 \

132 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

133 #ifde‡
__USE_GNU


134 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


135 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

137 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

139 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


140 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

141 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

142 0, 0, 0, 0 } }

	)

144 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

145 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

146 0 } }

	)

156 
	mPTHREAD_INHERIT_SCHED
,

157 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

158 
	mPTHREAD_EXPLICIT_SCHED


159 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

166 
	mPTHREAD_SCOPE_SYSTEM
,

167 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

168 
	mPTHREAD_SCOPE_PROCESS


169 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

176 
	mPTHREAD_PROCESS_PRIVATE
,

177 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

178 
	mPTHREAD_PROCESS_SHARED


179 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

185 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

189 
	s_±hªad_˛ónup_buf„r


191 (*
	m__routöe
) (*);

192 *
	m__¨g
;

193 
	m__ˇn˚…y≥
;

194 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

200 
	mPTHREAD_CANCEL_ENABLE
,

201 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

202 
	mPTHREAD_CANCEL_DISABLE


203 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

207 
	mPTHREAD_CANCEL_DEFERRED
,

208 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

209 
	mPTHREAD_CANCEL_ASYNCHRONOUS


210 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

212 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

216 
	#PTHREAD_ONCE_INIT
 0

	)

219 #ifde‡
__USE_XOPEN2K


223 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

227 
__BEGIN_DECLS


232 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

233 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

234 *(*
__°¨t_routöe
) (*),

235 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

241 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

249 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

251 #ifde‡
__USE_GNU


254 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

262 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

263 c⁄° 
time•ec
 *
__ab°ime
);

270 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

274 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

277 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

278 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

286 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

290 
__THROW
 
	`__n⁄nuŒ
 ((1));

293 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

294 *
__dëach°©e
)

295 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

298 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

299 
__dëach°©e
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1));

304 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

305 
size_t
 *
__gu¨dsize
)

306 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

309 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

310 
size_t
 
__gu¨dsize
)

311 
__THROW
 
	`__n⁄nuŒ
 ((1));

315 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

316 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

317 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

320 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

321 c⁄° 
sched_∑øm
 *
__ª°ri˘


322 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

325 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


326 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

327 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

330 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

331 
__THROW
 
	`__n⁄nuŒ
 ((1));

334 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


335 
__©å
, *
__ª°ri˘
 
__öhîô
)

336 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

339 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

340 
__öhîô
)

341 
__THROW
 
	`__n⁄nuŒ
 ((1));

345 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

346 *
__ª°ri˘
 
__sc›e
)

347 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

350 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

351 
__THROW
 
	`__n⁄nuŒ
 ((1));

354 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


355 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

356 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

362 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

363 *
__°ackaddr
)

364 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

367 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


368 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

374 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

375 
size_t
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1));

378 #ifde‡
__USE_XOPEN2K


380 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

381 **
__ª°ri˘
 
__°ackaddr
,

382 
size_t
 *
__ª°ri˘
 
__°acksize
)

383 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

388 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

389 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

392 #ifde‡
__USE_GNU


395 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 c⁄° 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

402 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

403 
size_t
 
__˝u£tsize
,

404 
˝u_£t_t
 *
__˝u£t
)

405 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

411 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

412 
__THROW
 
	`__n⁄nuŒ
 ((2));

420 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

421 c⁄° 
sched_∑øm
 *
__∑øm
)

422 
__THROW
 
	`__n⁄nuŒ
 ((3));

425 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

426 *
__ª°ri˘
 
__pﬁicy
,

427 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

428 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

431 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

432 
__THROW
;

435 #ifde‡
__USE_GNU


437 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

438 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

442 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

443 
__THROW
 
	`__n⁄nuŒ
 ((2));

447 #ifde‡
__USE_UNIX98


449 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

452 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

455 #ifde‡
__USE_GNU


460 
	$±hªad_yõld
 (Ë
__THROW
;

465 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

466 c⁄° 
˝u_£t_t
 *
__˝u£t
)

467 
__THROW
 
	`__n⁄nuŒ
 ((3));

470 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

471 
˝u_£t_t
 *
__˝u£t
)

472 
__THROW
 
	`__n⁄nuŒ
 ((3));

485 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

486 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

497 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

501 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

504 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

509 
	`±hªad_ã°ˇn˚l
 ();

518 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

519 
__mask_was_ßved
;

520 } 
__ˇn˚l_jmp_buf
[1];

521 *
__∑d
[4];

522 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

525 #i‚de‡
__˛ónup_f˘_©åibuã


526 
	#__˛ónup_f˘_©åibuã


	)

531 
	s__±hªad_˛ónup_‰ame


533 (*
__ˇn˚l_routöe
) (*);

534 *
__ˇn˚l_¨g
;

535 
__do_ô
;

536 
__ˇn˚l_ty≥
;

539 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


540 #ifde‡
__˝lu•lus


542 ˛as†
	c__±hªad_˛ónup_˛ass


544 (*
__ˇn˚l_routöe
) (*);

545 *
__ˇn˚l_¨g
;

546 
__do_ô
;

547 
__ˇn˚l_ty≥
;

549 
public
:

550 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

551 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

552 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

553 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

554 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

555 &
__ˇn˚l_ty≥
); 
	}
}

556 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

566 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

568 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

572 
	#±hªad_˛ónup_p›
(
execuã
) \

573 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

574 } 0)

	)

576 #ifde‡
__USE_GNU


580 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

582 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

583 
__˛‰ame
.
	`__de„r
 ()

	)

588 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

589 
__˛‰ame
.
	`__ª°‹e
 (); \

590 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

591 } 0)

	)

598 
__exã∫_ölöe
 

599 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

601 i‡(
__‰ame
->
__do_ô
)

602 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

603 
	}
}

612 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

614 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

615 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

616 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

617 .
__do_ô
 = 1 };

	)

621 
	#±hªad_˛ónup_p›
(
execuã
) \

622 
__˛‰ame
.
__do_ô
 = (
execuã
); \

623 } 0)

	)

625 #ifde‡
__USE_GNU


629 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

631 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

632 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

633 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

634 .
__do_ô
 = 1 }; \

635 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

636 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

641 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

642 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

643 
__˛‰ame
.
__do_ô
 = (
execuã
); \

644 } 0)

	)

655 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

657 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

658 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

659 *
__ˇn˚l_¨g
 = (
¨g
); \

660 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

661 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

662 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

664 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

665 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

669 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

670 dÿ{

	)

671 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

672 
__˛ónup_f˘_©åibuã
;

676 
	#±hªad_˛ónup_p›
(
execuã
) \

679 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

680 i‡(
execuã
) \

681 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

682 } 0)

	)

683 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

684 
__˛ónup_f˘_©åibuã
;

686 #ifde‡
__USE_GNU


690 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

692 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

693 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

694 *
__ˇn˚l_¨g
 = (
¨g
); \

695 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

696 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

697 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

699 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

700 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

704 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

705 dÿ{

	)

706 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

707 
__˛ónup_f˘_©åibuã
;

712 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

715 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

716 i‡(
execuã
) \

717 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

718 
	}
} 0)

	)

719 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

720 
__˛ónup_f˘_©åibuã
;

724 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

725 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

726 #i‚de‡
SHARED


727 
	`__©åibuã__
 ((
__wók__
))

733 
__jmp_buf_èg
;

734 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

740 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

741 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

742 
__THROW
 
	`__n⁄nuŒ
 ((1));

745 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

746 
__THROW
 
	`__n⁄nuŒ
 ((1));

749 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

750 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

753 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

754 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

756 #ifde‡
__USE_XOPEN2K


758 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

759 c⁄° 
time•ec
 *
__ª°ri˘


760 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

764 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

765 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

769 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

770 
__ª°ri˘
 
__muãx
,

771 *
__ª°ri˘
 
__¥io˚ûög
)

772 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

776 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

777 
__¥io˚ûög
,

778 *
__ª°ri˘
 
__ﬁd_˚ûög
)

779 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

782 #ifde‡
__USE_XOPEN2K8


784 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

785 
__THROW
 
	`__n⁄nuŒ
 ((1));

786 #ifde‡
__USE_GNU


787 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

788 
__THROW
 
	`__n⁄nuŒ
 ((1));

797 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

798 
__THROW
 
	`__n⁄nuŒ
 ((1));

801 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

802 
__THROW
 
	`__n⁄nuŒ
 ((1));

805 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

806 
__ª°ri˘
 
__©å
,

807 *
__ª°ri˘
 
__psh¨ed
)

808 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

811 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

812 
__psh¨ed
)

813 
__THROW
 
	`__n⁄nuŒ
 ((1));

815 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


817 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


818 
__©å
, *
__ª°ri˘
 
__köd
)

819 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

824 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1));

829 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

830 
__ª°ri˘
 
__©å
,

831 *
__ª°ri˘
 
__¥Ÿocﬁ
)

832 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

836 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

837 
__¥Ÿocﬁ
)

838 
__THROW
 
	`__n⁄nuŒ
 ((1));

841 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

842 
__ª°ri˘
 
__©å
,

843 *
__ª°ri˘
 
__¥io˚ûög
)

844 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

847 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

848 
__¥io˚ûög
)

849 
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_XOPEN2K


853 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

854 *
__robu°√ss
)

855 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 #ifde‡
__USE_GNU


857 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

858 *
__robu°√ss
)

859 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

863 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

864 
__robu°√ss
)

865 
__THROW
 
	`__n⁄nuŒ
 ((1));

866 #ifde‡
__USE_GNU


867 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

868 
__robu°√ss
)

869 
__THROW
 
	`__n⁄nuŒ
 ((1));

874 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


879 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

880 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


881 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

884 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1));

888 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

889 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

892 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

893 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

895 #ifde‡
__USE_XOPEN2K


897 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

898 c⁄° 
time•ec
 *
__ª°ri˘


899 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

903 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

904 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

907 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

908 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

910 #ifde‡
__USE_XOPEN2K


912 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

913 c⁄° 
time•ec
 *
__ª°ri˘


914 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

918 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

919 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

925 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

926 
__THROW
 
	`__n⁄nuŒ
 ((1));

929 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

930 
__THROW
 
	`__n⁄nuŒ
 ((1));

933 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

934 
__ª°ri˘
 
__©å
,

935 *
__ª°ri˘
 
__psh¨ed
)

936 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

939 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

940 
__psh¨ed
)

941 
__THROW
 
	`__n⁄nuŒ
 ((1));

944 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

945 
__ª°ri˘
 
__©å
,

946 *
__ª°ri˘
 
__¥ef
)

947 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

950 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

951 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

959 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

960 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

961 
__THROW
 
	`__n⁄nuŒ
 ((1));

964 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

965 
__THROW
 
	`__n⁄nuŒ
 ((1));

968 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

969 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

972 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

973 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

980 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

981 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

982 
	`__n⁄nuŒ
 ((1, 2));

991 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

992 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

993 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

994 
	`__n⁄nuŒ
 ((1, 2, 3));

999 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1000 
__THROW
 
	`__n⁄nuŒ
 ((1));

1003 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1004 
__THROW
 
	`__n⁄nuŒ
 ((1));

1007 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1008 
__ª°ri˘
 
__©å
,

1009 *
__ª°ri˘
 
__psh¨ed
)

1010 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1013 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1014 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1016 #ifde‡
__USE_XOPEN2K


1018 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1019 
__ª°ri˘
 
__©å
,

1020 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1021 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1024 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1025 
__˛ockid_t
 
__˛ock_id
)

1026 
__THROW
 
	`__n⁄nuŒ
 ((1));

1030 #ifde‡
__USE_XOPEN2K


1035 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1036 
__THROW
 
	`__n⁄nuŒ
 ((1));

1039 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1040 
__THROW
 
	`__n⁄nuŒ
 ((1));

1043 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1044 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1047 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1048 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1051 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1052 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1060 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1061 
__©å
, 
__cou¡
)

1062 
__THROW
 
	`__n⁄nuŒ
 ((1));

1065 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1066 
__THROW
 
	`__n⁄nuŒ
 ((1));

1069 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1070 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1074 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1075 
__THROW
 
	`__n⁄nuŒ
 ((1));

1078 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1079 
__THROW
 
	`__n⁄nuŒ
 ((1));

1082 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1083 
__ª°ri˘
 
__©å
,

1084 *
__ª°ri˘
 
__psh¨ed
)

1085 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1088 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1089 
__psh¨ed
)

1090 
__THROW
 
	`__n⁄nuŒ
 ((1));

1102 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1103 (*
__de°r_fun˘i⁄
) (*))

1104 
__THROW
 
	`__n⁄nuŒ
 ((1));

1107 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1110 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1113 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1114 c⁄° *
__poöãr
Ë
__THROW
 ;

1117 #ifde‡
__USE_XOPEN2K


1119 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1120 
__˛ockid_t
 *
__˛ock_id
)

1121 
__THROW
 
	`__n⁄nuŒ
 ((2));

1136 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1137 (*
__∑ª¡
) (),

1138 (*
__chûd
Ë()Ë
__THROW
;

1141 #ifde‡
__USE_EXTERN_INLINES


1143 
__exã∫_ölöe
 

1144 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1146  
__thªad1
 =
__thªad2
;

1147 
	}
}

1150 
	g__END_DECLS


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/bits/setjmp.h

19 #i‚de‡
_BITS_SETJMP_H


20 
	#_BITS_SETJMP_H
 1

	)

22 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


26 
	~<bôs/w‹dsize.h
>

28 #i‚de‡
_ASM


30 #i‡
__WORDSIZE
 == 64

31 
	t__jmp_buf
[8];

32 #ñi‡
deföed
 
__x86_64__


33 
	t__jmp_buf
[8];

35 
	t__jmp_buf
[6];

	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	#__√ed_time_t


	)

32 
	#__√ed_time•ec


	)

33 
	~<time.h
>

35 #i‚de‡
__pid_t_deföed


36 
__pid_t
 
	tpid_t
;

37 
	#__pid_t_deföed


	)

42 
	~<bôs/sched.h
>

44 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

47 
__BEGIN_DECLS


50 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

51 
__THROW
;

54 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

57 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

58 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

61 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

64 
	$sched_yõld
 (Ë
__THROW
;

67 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

70 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

73 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

76 #ifde‡
__USE_GNU


78 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

79 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

80 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

82 
˝u£ç
)

	)

83 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

84 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

86 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

87 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

89 
˝u£ç
)

	)

90 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

91 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

93 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

94 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

95 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

96 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

98 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

99 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

100 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

101 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

102 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

103 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

104 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

105 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

106 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

107 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

108 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

109 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

111 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

112 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

113 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

117 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

118 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

121 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

122 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

125 
__END_DECLS


	@/usr/include/bits/sched.h

21 #i‚de‡
__√ed_sched∑øm


23 #i‚de‡
_SCHED_H


29 
	#SCHED_OTHER
 0

	)

30 
	#SCHED_FIFO
 1

	)

31 
	#SCHED_RR
 2

	)

32 #ifde‡
__USE_GNU


33 
	#SCHED_BATCH
 3

	)

34 
	#SCHED_IDLE
 5

	)

36 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

39 #ifde‡
__USE_GNU


41 
	#CSIGNAL
 0x000000f‡

	)

42 
	#CLONE_VM
 0x00000100

	)

43 
	#CLONE_FS
 0x00000200

	)

44 
	#CLONE_FILES
 0x00000400

	)

45 
	#CLONE_SIGHAND
 0x00000800

	)

46 
	#CLONE_PTRACE
 0x00002000

	)

47 
	#CLONE_VFORK
 0x00004000

	)

49 
	#CLONE_PARENT
 0x00008000

	)

51 
	#CLONE_THREAD
 0x00010000

	)

52 
	#CLONE_NEWNS
 0x00020000

	)

53 
	#CLONE_SYSVSEM
 0x00040000

	)

54 
	#CLONE_SETTLS
 0x00080000

	)

55 
	#CLONE_PARENT_SETTID
 0x00100000

	)

57 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

59 
	#CLONE_DETACHED
 0x00400000

	)

60 
	#CLONE_UNTRACED
 0x00800000

	)

62 
	#CLONE_CHILD_SETTID
 0x01000000

	)

64 
	#CLONE_NEWUTS
 0x04000000

	)

65 
	#CLONE_NEWIPC
 0x08000000

	)

66 
	#CLONE_NEWUSER
 0x10000000

	)

67 
	#CLONE_NEWPID
 0x20000000

	)

68 
	#CLONE_NEWNET
 0x40000000

	)

69 
	#CLONE_IO
 0x80000000

	)

73 
	ssched_∑øm


75 
	m__sched_¥i‹ôy
;

78 
	g__BEGIN_DECLS


80 #ifde‡
__USE_GNU


82 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

83 
__Êags
, *
__¨g
, ...Ë
__THROW
;

86 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

89 
	$sched_gë˝u
 (Ë
__THROW
;

92 
	$£äs
 (
__fd
, 
__n°y≥
Ë
__THROW
;

96 
__END_DECLS


100 #i‡!
deföed
 
__deföed_sched∑øm
 \

101 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

102 
	#__deföed_sched∑øm
 1

	)

104 
	s__sched_∑øm


106 
__sched_¥i‹ôy
;

108 #unde‡
__√ed_sched∑øm


112 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


113 
	#__˝u_£t_t_deföed


	)

115 
	#__CPU_SETSIZE
 1024

	)

116 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

119 
	t__˝u_mask
;

122 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

123 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

128 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

129 } 
	t˝u_£t_t
;

132 #i‡
	`__GNUC_PREREQ
 (2, 91)

133 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

134 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

136 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

138 
size_t
 
__i
; \

139 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

140 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

141 
__i
 = 0; __ò< 
__imax
; ++__i) \

142 
__bôs
[
__i
] = 0; \

143 
	}
} 0)

	)

145 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

146 (
__exãnsi⁄__
 \

147 ({ 
size_t
 
__˝u
 = (
˝u
); \

148 
__˝u
 < 8 * (
£tsize
) \

149 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

150 |
	`__CPUMASK
 (
__˝u
)) \

151 : 0; }))

	)

152 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

153 (
__exãnsi⁄__
 \

154 ({ 
size_t
 
__˝u
 = (
˝u
); \

155 
__˝u
 < 8 * (
£tsize
) \

156 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

157 &~
	`__CPUMASK
 (
__˝u
)) \

158 : 0; }))

	)

159 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

160 (
__exãnsi⁄__
 \

161 ({ 
size_t
 
__˝u
 = (
˝u
); \

162 
__˝u
 < 8 * (
£tsize
) \

163 ? ((((c⁄° 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

164 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

165 : 0; }))

	)

167 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

168 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

170 #i‡
__GNUC_PREREQ
 (2, 91)

171 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

172 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

174 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

175 (
__exãnsi⁄__
 \

176 ({ c⁄° 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

177 c⁄° 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

178 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

179 
size_t
 
__i
; \

180 
__i
 = 0; __ò< 
__imax
; ++__i) \

181 i‡(
__¨r1
[
__i
] !
__¨r2
[__i]) \

183 
__i
 =
__imax
; }))

	)

186 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

187 (
__exãnsi⁄__
 \

188 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

189 c⁄° 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

190 c⁄° 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

191 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

192 
size_t
 
__i
; \

193 
__i
 = 0; __ò< 
__imax
; ++__i) \

194 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

195 
__de°
; }))

	)

197 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

198 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

199 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

200 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

202 
__BEGIN_DECLS


204 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

205 
__THROW
;

206 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

207 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

209 
__END_DECLS


	@
1
.
1
/usr/include
210
3986
boot/main.c
fs/bc.c
fs/fs.c
fs/fs.h
fs/fsformat.c
fs/ide.c
fs/serv.c
inc/args.h
inc/assert.h
inc/elf.h
inc/env.h
inc/error.h
inc/fd.h
inc/fs.h
inc/kbdreg.h
inc/lib.h
inc/memlayout.h
inc/mmu.h
inc/stab.h
inc/stdarg.h
inc/stdio.h
inc/string.h
inc/syscall.h
inc/trap.h
inc/types.h
inc/x86.h
kern/console.c
kern/console.h
kern/cpu.h
kern/entrypgdir.c
kern/env.c
kern/env.h
kern/init.c
kern/kclock.c
kern/kclock.h
kern/kdebug.c
kern/kdebug.h
kern/lapic.c
kern/monitor.c
kern/monitor.h
kern/mpconfig.c
kern/picirq.c
kern/picirq.h
kern/pmap.c
kern/pmap.h
kern/printf.c
kern/sched.c
kern/sched.h
kern/spinlock.c
kern/spinlock.h
kern/syscall.c
kern/syscall.h
kern/trap.c
kern/trap.h
lib/args.c
lib/console.c
lib/exit.c
lib/fd.c
lib/file.c
lib/fork.c
lib/fprintf.c
lib/ipc.c
lib/libmain.c
lib/pageref.c
lib/panic.c
lib/pgfault.c
lib/pipe.c
lib/printf.c
lib/printfmt.c
lib/readline.c
lib/spawn.c
lib/string.c
lib/syscall.c
lib/wait.c
user/badsegment.c
user/breakpoint.c
user/buggyhello.c
user/buggyhello2.c
user/cat.c
user/divzero.c
user/dumbfork.c
user/echo.c
user/evilhello.c
user/fairness.c
user/faultalloc.c
user/faultallocbad.c
user/faultbadhandler.c
user/faultdie.c
user/faultevilhandler.c
user/faultnostack.c
user/faultread.c
user/faultreadkernel.c
user/faultregs.c
user/faultwrite.c
user/faultwritekernel.c
user/forktree.c
user/hello.c
user/icode.c
user/idle.c
user/init.c
user/initsh.c
user/ls.c
user/lsfd.c
user/num.c
user/pingpong.c
user/pingpongs.c
user/primes.c
user/primespipe.c
user/sh.c
user/softint.c
user/spawnhello.c
user/spawninit.c
user/spin.c
user/stresssched.c
user/testbss.c
user/testfdsharing.c
user/testfile.c
user/testkbd.c
user/testmalloc.c
user/testpipe.c
user/testpiperace.c
user/testpiperace2.c
user/testpriority_default.c
user/testpriority_high.c
user/testpriority_low.c
user/testpriority_middle.c
user/testptelibrary.c
user/testpteshare.c
user/testshell.c
user/writemotd.c
user/yield.c
/usr/include/assert.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/inttypes.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/mman.h
/usr/include/sys/stat.h
/usr/include/sys/types.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/bits/confname.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/mman.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/stdint.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/time.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/sigset.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/time.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/ctype.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/stdc-predef.h
/usr/include/sys/cdefs.h
/usr/include/asm/errno.h
/usr/include/bits/byteswap-16.h
/usr/include/bits/libc-lock.h
/usr/include/bits/timex.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/wchar.h
/usr/include/asm-generic/errno.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/asm-generic/errno-base.h
/usr/include/bits/setjmp.h
/usr/include/sched.h
/usr/include/bits/sched.h
