!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon8
ALT	kern/console.c	222;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	5;"	d	file:
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/fs/fs.asm	/^#define ASM 1$/;"	d
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/cat.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echo.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/icode.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/init.asm	/^#define ASM 1$/;"	d
ASM	obj/user/ls.asm	/^#define ASM 1$/;"	d
ASM	obj/user/lsfd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/num.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primespipe.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sh.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spawnhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfdsharing.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfile.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testkbd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpipe.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpiperace.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpiperace2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpteshare.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testshell.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
Argstate	inc/args.h	/^struct Argstate {$/;"	s
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCAST	kern/lapic.c	28;"	d	file:
BLKBITSIZE	inc/fs.h	13;"	d
BLKFILES	inc/fs.h	45;"	d
BLKSECTS	fs/fs.h	5;"	d
BLKSIZE	inc/fs.h	12;"	d
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/sh.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/testkbd.asm	/^#define BUFLEN 1024$/;"	d
BUFSIZ	user/sh.c	3;"	d	file:
BUSY	kern/lapic.c	30;"	d	file:
C	kern/console.c	289;"	d	file:
CAPSLOCK	kern/console.c	224;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	16;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	27;"	d	file:
COM_DLL	kern/console.c	31;"	d	file:
COM_DLM	kern/console.c	32;"	d	file:
COM_FCR	kern/console.c	36;"	d	file:
COM_IER	kern/console.c	33;"	d	file:
COM_IER_RDI	kern/console.c	34;"	d	file:
COM_IIR	kern/console.c	35;"	d	file:
COM_LCR	kern/console.c	37;"	d	file:
COM_LCR_DLAB	kern/console.c	38;"	d	file:
COM_LCR_WLEN8	kern/console.c	39;"	d	file:
COM_LSR	kern/console.c	44;"	d	file:
COM_LSR_DATA	kern/console.c	45;"	d	file:
COM_LSR_TSRE	kern/console.c	47;"	d	file:
COM_LSR_TXRDY	kern/console.c	46;"	d	file:
COM_MCR	kern/console.c	40;"	d	file:
COM_MCR_DTR	kern/console.c	42;"	d	file:
COM_MCR_OUT2	kern/console.c	43;"	d	file:
COM_MCR_RTS	kern/console.c	41;"	d	file:
COM_RX	kern/console.c	29;"	d	file:
COM_TX	kern/console.c	30;"	d	file:
CONSBUFSIZE	kern/console.c	388;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_HALTED	kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon10
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon10
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon10
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	221;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
DISKMAP	fs/fs.h	9;"	d
DISKSIZE	fs/fs.h	12;"	d
Dev	inc/fd.h	/^struct Dev {$/;"	s
Dir	fs/fsformat.c	/^struct Dir$/;"	s	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/fs/fs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/icode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/lsfd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/num.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primespipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spawnhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfdsharing.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfile.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testkbd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpteshare.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testshell.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab4	/^def E(s, trim=False):$/;"	f
E0ESC	kern/console.c	228;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon7
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon7
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon7
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon7
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon7
ENV_TYPE_FS	inc/env.h	/^	ENV_TYPE_FS,		\/\/ File system server$/;"	e	enum:EnvType
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EOI	kern/lapic.c	17;"	d	file:
ERROR	kern/lapic.c	39;"	d	file:
ESR	kern/lapic.c	20;"	d	file:
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	= 2,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon6
E_BAD_PATH	inc/error.h	/^	E_BAD_PATH	= 12,	\/\/ Bad path$/;"	e	enum:__anon6
E_EOF	inc/error.h	/^	E_EOF		= 8,	\/\/ Unexpected end of file$/;"	e	enum:__anon6
E_FAULT	inc/error.h	/^	E_FAULT		= 6,	\/\/ Memory fault$/;"	e	enum:__anon6
E_FILE_EXISTS	inc/error.h	/^	E_FILE_EXISTS	= 13,	\/\/ File already exists$/;"	e	enum:__anon6
E_INVAL	inc/error.h	/^	E_INVAL		= 3,	\/\/ Invalid parameter$/;"	e	enum:__anon6
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	= 7,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon6
E_MAX_OPEN	inc/error.h	/^	E_MAX_OPEN	= 10,	\/\/ Too many files are open$/;"	e	enum:__anon6
E_NOT_EXEC	inc/error.h	/^	E_NOT_EXEC	= 14,	\/\/ File not a valid executable$/;"	e	enum:__anon6
E_NOT_FOUND	inc/error.h	/^	E_NOT_FOUND	= 11, 	\/\/ File or block not found$/;"	e	enum:__anon6
E_NOT_SUPP	inc/error.h	/^	E_NOT_SUPP	= 15,	\/\/ Operation not supported$/;"	e	enum:__anon6
E_NO_DISK	inc/error.h	/^	E_NO_DISK	= 9,	\/\/ No free space left on disk$/;"	e	enum:__anon6
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	= 5,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon6
E_NO_MEM	inc/error.h	/^	E_NO_MEM	= 4,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon6
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon6
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FDTABLE	lib/fd.c	8;"	d	file:
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FILEDATA	lib/fd.c	11;"	d	file:
FILEVA	fs/serv.c	41;"	d	file:
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
FSREQ_FLUSH	inc/fs.h	/^	FSREQ_FLUSH,$/;"	e	enum:__anon3
FSREQ_OPEN	inc/fs.h	/^	FSREQ_OPEN = 1,$/;"	e	enum:__anon3
FSREQ_READ	inc/fs.h	/^	FSREQ_READ,$/;"	e	enum:__anon3
FSREQ_REMOVE	inc/fs.h	/^	FSREQ_REMOVE,$/;"	e	enum:__anon3
FSREQ_SET_SIZE	inc/fs.h	/^	FSREQ_SET_SIZE,$/;"	e	enum:__anon3
FSREQ_STAT	inc/fs.h	/^	FSREQ_STAT,$/;"	e	enum:__anon3
FSREQ_SYNC	inc/fs.h	/^	FSREQ_SYNC$/;"	e	enum:__anon3
FSREQ_WRITE	inc/fs.h	/^	FSREQ_WRITE,$/;"	e	enum:__anon3
FS_MAGIC	inc/fs.h	54;"	d
FTYPE_DIR	inc/fs.h	49;"	d
FTYPE_REG	inc/fs.h	48;"	d
FVA	obj/user/testfile.asm	/^#define FVA ((struct Fd*)0xCCCCC000)$/;"	d
FVA	user/testfile.c	5;"	d	file:
Fd	inc/fd.h	/^struct Fd {$/;"	s
FdFile	inc/fd.h	/^struct FdFile {$/;"	s
File	inc/fs.h	/^struct File {$/;"	s
Fsipc	inc/fs.h	/^union Fsipc {$/;"	u
Fsreq_flush	inc/fs.h	/^	struct Fsreq_flush {$/;"	s	union:Fsipc
Fsreq_open	inc/fs.h	/^	struct Fsreq_open {$/;"	s	union:Fsipc
Fsreq_read	inc/fs.h	/^	struct Fsreq_read {$/;"	s	union:Fsipc
Fsreq_remove	inc/fs.h	/^	struct Fsreq_remove {$/;"	s	union:Fsipc
Fsreq_set_size	inc/fs.h	/^	struct Fsreq_set_size {$/;"	s	union:Fsipc
Fsreq_stat	inc/fs.h	/^	struct Fsreq_stat {$/;"	s	union:Fsipc
Fsreq_write	inc/fs.h	/^	struct Fsreq_write {$/;"	s	union:Fsipc
Fsret_read	inc/fs.h	/^	struct Fsret_read {$/;"	s	union:Fsipc
Fsret_stat	inc/fs.h	/^	struct Fsret_stat {$/;"	s	union:Fsipc
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IDE_BSY	fs/ide.c	10;"	d	file:
IDE_DF	fs/ide.c	12;"	d	file:
IDE_DRDY	fs/ide.c	11;"	d	file:
IDE_ERR	fs/ide.c	13;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INDEX2DATA	lib/fd.c	16;"	d	file:
INDEX2FD	lib/fd.c	14;"	d	file:
INIT	kern/lapic.c	22;"	d	file:
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	137;"	d	file:
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ARGS_H	inc/args.h	2;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_FD_H	inc/fd.h	6;"	d
JOS_INC_FS_H	inc/fs.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	fs/fsformat.c	25;"	d	file:
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=5$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEVEL	kern/lapic.c	27;"	d	file:
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOG2NENV	inc/env.h	28;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	149;"	d	file:
MAXARGS	obj/user/sh.asm	/^#define MAXARGS 16$/;"	d
MAXARGS	user/sh.c	20;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon6
MAXFD	lib/fd.c	6;"	d	file:
MAXFILESIZE	inc/fs.h	27;"	d
MAXNAMELEN	inc/fs.h	17;"	d
MAXOPEN	fs/serv.c	40;"	d	file:
MAXPATHLEN	inc/fs.h	20;"	d
MAX_DIR_ENTS	fs/fsformat.c	35;"	d	file:
MAX_IRQS	kern/picirq.h	9;"	d
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	43;"	d
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	142;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	33;"	d	file:
NCPU	kern/cpu.h	11;"	d
NDIRECT	inc/fs.h	23;"	d
NENV	inc/env.h	29;"	d
NHANDLERS	fs/serv.c	235;"	d	file:
NHANDLERS	obj/fs/fs.asm	/^#define NHANDLERS (sizeof(handlers)\/sizeof(handlers[0]))$/;"	d
NINDIRECT	inc/fs.h	25;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	218;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon5
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	225;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_CENTURY	kern/kclock.h	27;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
NVRAM_PEXTHI	kern/kclock.h	24;"	d
NVRAM_PEXTLO	kern/kclock.h	23;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	129;"	d
O_CREAT	inc/lib.h	131;"	d
O_EXCL	inc/lib.h	133;"	d
O_MKDIR	inc/lib.h	134;"	d
O_RDONLY	inc/lib.h	126;"	d
O_RDWR	inc/lib.h	128;"	d
O_TRUNC	inc/lib.h	132;"	d
O_WRONLY	inc/lib.h	127;"	d
OpenFile	fs/serv.c	/^struct OpenFile {$/;"	s	file:
OptionParser	gradelib.py	/^from optparse import OptionParser$/;"	i
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Oct 31 13:56:32 EDT 2012$/;"	m
PADDR	kern/pmap.h	26;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PCINT	kern/lapic.c	36;"	d	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	137;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PIPEBUFSIZ	lib/pipe.c	20;"	d	file:
PRIORITY_DEFAULT	inc/env.h	34;"	d
PRIORITY_HIGH	inc/env.h	33;"	d
PRIORITY_LOW	inc/env.h	36;"	d
PRIORITY_MIDDLE	inc/env.h	35;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	83;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
Pipe	lib/pipe.c	/^struct Pipe {$/;"	s	file:
Popen	gradelib.py	/^from subprocess import check_call, Popen$/;"	i
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	fs/fsformat.c	34;"	d	file:
ROUNDUP	inc/types.h	64;"	d
RR_Priority_sched	kern/sched.c	/^void RR_Priority_sched(void)$/;"	f
RR_sched	kern/sched.c	/^void RR_sched(void)$/;"	f
Runner	gradelib.py	/^class Runner():$/;"	c
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	226;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SECTSIZE	fs/fs.h	4;"	d
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	220;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SYMBOLS	obj/user/sh.asm	/^#define SYMBOLS "<|>&;()"$/;"	d
SYMBOLS	user/sh.c	185;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon5
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon5
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon5
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon5
SYS_env_set_priority	inc/syscall.h	/^	SYS_env_set_priority,$/;"	e	enum:__anon5
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon5
SYS_env_set_trapframe	inc/syscall.h	/^	SYS_env_set_trapframe,$/;"	e	enum:__anon5
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon5
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon5
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon5
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon5
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon5
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon5
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon5
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon5
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stat	inc/fd.h	/^struct Stat {$/;"	s
Super	inc/fs.h	/^struct Super {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TDCR	kern/lapic.c	43;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TICR	kern/lapic.c	41;"	d	file:
TIMER	kern/lapic.c	33;"	d	file:
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
UENVS	inc/memlayout.h	116;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UPAGES	inc/memlayout.h	114;"	d
USED	inc/lib.h	24;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEMP2	lib/spawn.c	5;"	d	file:
UTEMP2USTACK	lib/spawn.c	4;"	d	file:
UTEMP3	lib/spawn.c	6;"	d	file:
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VA	user/testptelibrary.c	3;"	d	file:
VA	user/testpteshare.c	4;"	d	file:
VER	kern/lapic.c	15;"	d	file:
WHITESPACE	kern/monitor.c	148;"	d	file:
WHITESPACE	obj/user/sh.asm	/^#define WHITESPACE " \\t\\r\\n"$/;"	d
WHITESPACE	user/sh.c	184;"	d	file:
X1	kern/lapic.c	34;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	gradelib.py	/^__all__ = []$/;"	v
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_alltraps	obj/kern/kernel.asm	/^_alltraps:$/;"	l
_gettoken	user/sh.c	/^_gettoken(char *s, char **p1, char **p2)$/;"	f
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
_pad	inc/fs.h	/^	char _pad[PGSIZE];$/;"	m	union:Fsipc
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
_panic	init.s	/^_panic:$/;"	l
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/fs/fs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/forktree.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpong.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpongs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primes.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primespipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sh.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/spin.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/stresssched.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testfdsharing.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace2.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpteshare.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testshell.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/fs/fs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultalloc.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultallocbad.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultdie.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultregs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/forktree.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpong.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpongs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primes.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primespipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sh.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/spin.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/stresssched.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testfdsharing.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace2.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpteshare.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testshell.asm	/^_pgfault_upcall:$/;"	l
_pipeisclosed	lib/pipe.c	/^_pipeisclosed(struct Fd *fd, struct Pipe *p)$/;"	f	file:
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/fs/fs.asm	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/cat.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/echo.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/icode.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/init.asm	/^_start:$/;"	l
_start	obj/user/ls.asm	/^_start:$/;"	l
_start	obj/user/lsfd.asm	/^_start:$/;"	l
_start	obj/user/num.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/primespipe.asm	/^_start:$/;"	l
_start	obj/user/sh.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spawnhello.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/testfdsharing.asm	/^_start:$/;"	l
_start	obj/user/testfile.asm	/^_start:$/;"	l
_start	obj/user/testkbd.asm	/^_start:$/;"	l
_start	obj/user/testpipe.asm	/^_start:$/;"	l
_start	obj/user/testpiperace.asm	/^_start:$/;"	l
_start	obj/user/testpiperace2.asm	/^_start:$/;"	l
_start	obj/user/testpteshare.asm	/^_start:$/;"	l
_start	obj/user/testshell.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	init.s	/^_warn:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
addr	obj/fs/fs.asm	/^	addr = ROUNDDOWN(addr,PGSIZE);$/;"	d
addr	obj/user/forktree.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/pingpong.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/pingpongs.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/primes.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/primespipe.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/sh.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/spin.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/stresssched.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/testfdsharing.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/testpipe.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/testpiperace.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/testpiperace2.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/testpteshare.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/testshell.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
again	obj/user/sh.asm	/^again:$/;"	l
alloc	fs/fsformat.c	/^alloc(uint32_t bytes)$/;"	f
altflag	obj/fs/fs.asm	/^			altflag = 1;$/;"	d
altflag	obj/fs/fs.asm	/^		altflag = 0;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/cat.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/cat.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echo.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echo.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/icode.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/icode.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/init.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/init.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/ls.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/ls.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/lsfd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/lsfd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/num.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/num.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primespipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primespipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sh.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sh.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spawnhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spawnhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfdsharing.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfdsharing.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfile.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfile.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testkbd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testkbd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpteshare.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpteshare.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testshell.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testshell.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:
arg	obj/user/ls.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/lsfd.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/sh.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
argc	inc/args.h	/^	int *argc;$/;"	m	struct:Argstate
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
argc	obj/user/sh.asm	/^	argc = 0;$/;"	d
argnext	lib/args.c	/^argnext(struct Argstate *args)$/;"	f
argnextvalue	lib/args.c	/^argnextvalue(struct Argstate *args)$/;"	f
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/fs/fs.asm	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/cat.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/echo.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/icode.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/init.asm	/^args_exist:$/;"	l
args_exist	obj/user/ls.asm	/^args_exist:$/;"	l
args_exist	obj/user/lsfd.asm	/^args_exist:$/;"	l
args_exist	obj/user/num.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/primespipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/sh.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spawnhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfdsharing.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfile.asm	/^args_exist:$/;"	l
args_exist	obj/user/testkbd.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace2.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpteshare.asm	/^args_exist:$/;"	l
args_exist	obj/user/testshell.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
argstart	lib/args.c	/^argstart(int *argc, char **argv, struct Argstate *args)$/;"	f
argv	inc/args.h	/^	const char **argv;$/;"	m	struct:Argstate
argv_store	obj/user/icode.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/init.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/sh.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/spawnhello.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testpteshare.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testshell.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argvalue	inc/args.h	/^	const char *argvalue;$/;"	m	struct:Argstate
argvalue	lib/args.c	/^argvalue(struct Argstate *args)$/;"	f
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
base	obj/fs/fs.asm	/^			base = 10;$/;"	d
base	obj/fs/fs.asm	/^			base = 16;$/;"	d
base	obj/fs/fs.asm	/^			base = 8;$/;"	d
base	obj/fs/fs.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^			base = 8;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 16;$/;"	d
base	obj/user/cat.asm	/^			base = 8;$/;"	d
base	obj/user/cat.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^			base = 8;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 8;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 16;$/;"	d
base	obj/user/echo.asm	/^			base = 8;$/;"	d
base	obj/user/echo.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^			base = 8;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^			base = 8;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 8;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 8;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^			base = 8;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 8;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^			base = 8;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^			base = 8;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^			base = 8;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^			base = 8;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 16;$/;"	d
base	obj/user/icode.asm	/^			base = 8;$/;"	d
base	obj/user/icode.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^			base = 8;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 16;$/;"	d
base	obj/user/init.asm	/^			base = 8;$/;"	d
base	obj/user/init.asm	/^		base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 16;$/;"	d
base	obj/user/ls.asm	/^			base = 8;$/;"	d
base	obj/user/ls.asm	/^		base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 16;$/;"	d
base	obj/user/lsfd.asm	/^			base = 8;$/;"	d
base	obj/user/lsfd.asm	/^		base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 16;$/;"	d
base	obj/user/num.asm	/^			base = 8;$/;"	d
base	obj/user/num.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^			base = 8;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 8;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^			base = 8;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 16;$/;"	d
base	obj/user/primespipe.asm	/^			base = 8;$/;"	d
base	obj/user/primespipe.asm	/^		base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 16;$/;"	d
base	obj/user/sh.asm	/^			base = 8;$/;"	d
base	obj/user/sh.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^			base = 8;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 16;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 8;$/;"	d
base	obj/user/spawnhello.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^			base = 8;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^			base = 8;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^			base = 8;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 16;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 8;$/;"	d
base	obj/user/testfdsharing.asm	/^		base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 16;$/;"	d
base	obj/user/testfile.asm	/^			base = 8;$/;"	d
base	obj/user/testfile.asm	/^		base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 16;$/;"	d
base	obj/user/testkbd.asm	/^			base = 8;$/;"	d
base	obj/user/testkbd.asm	/^		base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 16;$/;"	d
base	obj/user/testpipe.asm	/^			base = 8;$/;"	d
base	obj/user/testpipe.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 8;$/;"	d
base	obj/user/testpiperace.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 8;$/;"	d
base	obj/user/testpiperace2.asm	/^		base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 16;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 8;$/;"	d
base	obj/user/testpteshare.asm	/^		base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 16;$/;"	d
base	obj/user/testshell.asm	/^			base = 8;$/;"	d
base	obj/user/testshell.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^			base = 8;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
bc_init	fs/bc.c	/^bc_init(void)$/;"	f
bc_pgfault	fs/bc.c	/^bc_pgfault(struct UTrapframe *utf)$/;"	f	file:
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/fs/fs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/fs/fs.asm	/^	binaryname = "fs";$/;"	d
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^	binaryname = "cat";$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echo.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^	binaryname = "icode";$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/init.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/ls.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/lsfd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^	binaryname = "num";$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^	binaryname = "primespipe";$/;"	d
binaryname	obj/user/sh.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spawnhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfdsharing.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfile.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testkbd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipereadeof";$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipewriteeof";$/;"	d
binaryname	obj/user/testpiperace.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpiperace2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpteshare.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testshell.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bitmap	fs/fs.h	/^uint32_t *bitmap;		\/\/ bitmap blocks mapped in memory$/;"	v
bitmap	fs/fsformat.c	/^uint32_t *bitmap;$/;"	v
blockof	fs/fsformat.c	/^blockof(void *pos)$/;"	f
bn	obj/fs/fs.asm	/^		bn = MIN(BLKSIZE - pos % BLKSIZE, offset + count - pos);$/;"	d
bol	obj/user/num.asm	/^			bol = 0;$/;"	d
bol	obj/user/num.asm	/^			bol = 1;$/;"	d
bol	user/num.c	/^int bol = 1;$/;"	v
bool	fs/fsformat.c	/^typedef int bool;$/;"	t	file:
bool	fs/fsformat.c	21;"	d	file:
bool	fs/fsformat.c	7;"	d	file:
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
bool	obj/fs/fs.asm	/^bool$/;"	l
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
bss	user/init.c	/^char bss[6000];$/;"	v
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon9	file:
buf	lib/fprintf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/fs/fs.asm	/^	buf = vbuf;$/;"	d
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
buf	obj/user/badsegment.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/breakpoint.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/buggyhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/buggyhello2.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/cat.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/divzero.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/dumbfork.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/echo.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/evilhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/fairness.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultalloc.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultallocbad.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultbadhandler.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultdie.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultevilhandler.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultnostack.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultread.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultreadkernel.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultregs.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultwrite.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultwritekernel.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/forktree.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/hello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/icode.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/idle.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/init.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/ls.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/lsfd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/num.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/pingpong.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/pingpongs.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/primes.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/primespipe.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/sh.asm	/^		buf = readline(interactive ? "$ " : NULL);$/;"	d
buf	obj/user/sh.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/softint.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spawnhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spin.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/stresssched.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testbss.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testfdsharing.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testfile.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testkbd.asm	/^		buf = readline("Type a line: ");$/;"	d
buf	obj/user/testkbd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpipe.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpiperace.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpiperace2.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpteshare.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testshell.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/yield.asm	/^	buf = vbuf;$/;"	d
buf	user/cat.c	/^char buf[8192];$/;"	v
buf	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
buf2	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
c	obj/fs/fs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/cat.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echo.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/icode.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/init.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/ls.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/lsfd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/num.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primespipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = getchar();$/;"	d
c	obj/user/sh.asm	/^	c = nc;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spawnhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfdsharing.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfile.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = getchar();$/;"	d
c	obj/user/testpipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpteshare.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testshell.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
cat	user/cat.c	/^cat(int f, char *s)$/;"	f
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/fs/fs.asm	/^				ch = *fmt;$/;"	d
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/cat.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echo.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/icode.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/init.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/ls.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/lsfd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/num.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primespipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sh.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spawnhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfdsharing.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfile.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testkbd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpteshare.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testshell.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
char	obj/fs/fs.asm	/^char *$/;"	l
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char buf[8192];$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/echo.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/icode.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char bss[6000];$/;"	l
char	obj/user/ls.asm	/^char *$/;"	l
char	obj/user/lsfd.asm	/^char *$/;"	l
char	obj/user/num.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/primespipe.asm	/^char *$/;"	l
char	obj/user/sh.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spawnhello.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char buf[512], buf2[512];$/;"	l
char	obj/user/testfile.asm	/^char *$/;"	l
char	obj/user/testkbd.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	l
char	obj/user/testpiperace.asm	/^char *$/;"	l
char	obj/user/testpiperace2.asm	/^char *$/;"	l
char	obj/user/testpteshare.asm	/^char *$/;"	l
char	obj/user/testshell.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_call	gradelib.py	/^from subprocess import check_call, Popen$/;"	i
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:
check_super	fs/fs.c	/^check_super(void)$/;"	f
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:
child	obj/user/icode.asm	/^	child = r;$/;"	d
child	obj/user/init.asm	/^	child = r;$/;"	d
child	obj/user/sh.asm	/^	child = r;$/;"	d
child	obj/user/spawnhello.asm	/^	child = r;$/;"	d
child	obj/user/testpteshare.asm	/^	child = r;$/;"	d
child	obj/user/testshell.asm	/^	child = r;$/;"	d
child_tf	obj/user/icode.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/init.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/sh.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/spawnhello.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testpteshare.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testshell.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
childofspawn	user/testptelibrary.c	/^childofspawn(void)$/;"	f
childofspawn	user/testpteshare.c	/^childofspawn(void)$/;"	f
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
close	lib/fd.c	/^close(int fdnum)$/;"	f
close_all	lib/fd.c	/^close_all(void)$/;"	f
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/fs/fs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echo.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/icode.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/init.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primespipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spawnhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfdsharing.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfile.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/testpipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpteshare.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testshell.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon9	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
const	obj/fs/fs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/fs/fs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/cat.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/cat.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/echo.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echo.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/icode.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/icode.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/init.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/init.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/ls.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/ls.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/lsfd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/lsfd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/num.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/num.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primespipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primespipe.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sh.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sh.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spawnhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spawnhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testfdsharing.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfdsharing.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testfile.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfile.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testkbd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testkbd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpipe.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpiperace.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpiperace2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpteshare.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpteshare.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testshell.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testshell.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
copy_shared_pages	lib/spawn.c	/^copy_shared_pages(envid_t child)$/;"	f	file:
count	obj/fs/fs.asm	/^	count = MIN(count, f->f_size - offset);$/;"	d
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
cr0	obj/kern/kernel.asm	/^	cr0 = rcr0();$/;"	d
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
curarg	inc/args.h	/^	const char *curarg;$/;"	m	struct:Argstate
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = e;$/;"	d
d	obj/fs/fs.asm	/^	d = dst;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/cat.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/echo.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/icode.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/init.asm	/^	d = dst;$/;"	d
d	obj/user/ls.asm	/^	d = dst;$/;"	d
d	obj/user/lsfd.asm	/^	d = dst;$/;"	d
d	obj/user/num.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/primespipe.asm	/^	d = dst;$/;"	d
d	obj/user/sh.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spawnhello.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/testfdsharing.asm	/^	d = dst;$/;"	d
d	obj/user/testfile.asm	/^	d = dst;$/;"	d
d	obj/user/testkbd.asm	/^	d = dst;$/;"	d
d	obj/user/testpipe.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace2.asm	/^	d = dst;$/;"	d
d	obj/user/testpteshare.asm	/^	d = dst;$/;"	d
d	obj/user/testshell.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
data	user/init.c	/^} data = {$/;"	v	typeref:struct:__anon1
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debug	fs/serv.c	12;"	d	file:
debug	lib/fd.c	3;"	d	file:
debug	lib/file.c	5;"	d	file:
debug	lib/pipe.c	3;"	d	file:
debug	user/sh.c	/^int debug = 0;$/;"	v
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
default	obj/fs/fs.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/cat.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/echo.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/icode.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/init.asm	/^		default:$/;"	l
default	obj/user/ls.asm	/^		default:$/;"	l
default	obj/user/lsfd.asm	/^		default:$/;"	l
default	obj/user/num.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/primespipe.asm	/^		default:$/;"	l
default	obj/user/sh.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spawnhello.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/testfdsharing.asm	/^		default:$/;"	l
default	obj/user/testfile.asm	/^		default:$/;"	l
default	obj/user/testkbd.asm	/^		default:$/;"	l
default	obj/user/testpipe.asm	/^		default:$/;"	l
default	obj/user/testpiperace.asm	/^		default:$/;"	l
default	obj/user/testpiperace2.asm	/^		default:$/;"	l
default	obj/user/testpteshare.asm	/^		default:$/;"	l
default	obj/user/testshell.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
dev_close	inc/fd.h	/^	int (*dev_close)(struct Fd *fd);$/;"	m	struct:Dev
dev_id	inc/fd.h	/^	int dev_id;$/;"	m	struct:Dev
dev_lookup	lib/fd.c	/^dev_lookup(int dev_id, struct Dev **dev)$/;"	f
dev_name	inc/fd.h	/^	const char *dev_name;$/;"	m	struct:Dev
dev_read	inc/fd.h	/^	ssize_t (*dev_read)(struct Fd *fd, void *buf, size_t len);$/;"	m	struct:Dev
dev_stat	inc/fd.h	/^	int (*dev_stat)(struct Fd *fd, struct Stat *stat);$/;"	m	struct:Dev
dev_trunc	inc/fd.h	/^	int (*dev_trunc)(struct Fd *fd, off_t length);$/;"	m	struct:Dev
dev_write	inc/fd.h	/^	ssize_t (*dev_write)(struct Fd *fd, const void *buf, size_t len);$/;"	m	struct:Dev
devcons	lib/console.c	/^struct Dev devcons =$/;"	v	typeref:struct:Dev
devcons_close	lib/console.c	/^devcons_close(struct Fd *fd)$/;"	f	file:
devcons_read	lib/console.c	/^devcons_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:
devcons_stat	lib/console.c	/^devcons_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devcons_write	lib/console.c	/^devcons_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:
devfile	lib/file.c	/^struct Dev devfile =$/;"	v	typeref:struct:Dev
devfile_flush	lib/file.c	/^devfile_flush(struct Fd *fd)$/;"	f	file:
devfile_read	lib/file.c	/^devfile_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:
devfile_stat	lib/file.c	/^devfile_stat(struct Fd *fd, struct Stat *st)$/;"	f	file:
devpipe	lib/pipe.c	/^struct Dev devpipe =$/;"	v	typeref:struct:Dev
devpipe_close	lib/pipe.c	/^devpipe_close(struct Fd *fd)$/;"	f	file:
devpipe_read	lib/pipe.c	/^devpipe_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:
devpipe_stat	lib/pipe.c	/^devpipe_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devpipe_write	lib/pipe.c	/^devpipe_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:
devtab	lib/fd.c	/^static struct Dev *devtab[] =$/;"	v	typeref:struct:Dev	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
dir	obj/fs/fs.asm	/^		dir = f;$/;"	d
dir	obj/fs/fs.asm	/^	dir = 0;$/;"	d
dir_lookup	fs/fs.c	/^dir_lookup(struct File *dir, const char *name, struct File **file)$/;"	f	file:
diradd	fs/fsformat.c	/^diradd(struct Dir *d, uint32_t type, const char *name)$/;"	f
diskaddr	fs/bc.c	/^diskaddr(uint32_t blockno)$/;"	f
diskmap	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
diskno	fs/ide.c	/^static int diskno = 1;$/;"	v	file:
diskno	obj/fs/fs.asm	/^	diskno = d;$/;"	d
diskpos	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
do_test	grade-lab5	/^    def do_test():$/;"	f	function:matchtest
dst_in	obj/fs/fs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/cat.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echo.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/icode.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/init.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/ls.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/lsfd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/num.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primespipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sh.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spawnhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfdsharing.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfile.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testkbd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpteshare.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testshell.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f
dup	lib/fd.c	/^dup(int oldfdnum, int newfdnum)$/;"	f
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/init.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/sh.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testfdsharing.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpipe.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpteshare.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testshell.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^	    ebp = *((unsigned int *)ebp);$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echocmds	obj/user/sh.asm	/^			echocmds = 1;$/;"	d
echocmds	obj/user/sh.asm	/^	echocmds = 0;$/;"	d
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/sh.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/testkbd.asm	/^	echoing = iscons(0);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
elf	obj/user/icode.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/init.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/sh.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/spawnhello.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testpteshare.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testshell.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
end	obj/kern/kernel.asm	/^	end = va + ROUNDUP(len,PGSIZE);$/;"	d
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
endofargs	obj/user/ls.asm	/^    endofargs:$/;"	l
endofargs	obj/user/lsfd.asm	/^    endofargs:$/;"	l
endofargs	obj/user/sh.asm	/^    endofargs:$/;"	l
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
ents	fs/fsformat.c	/^	struct File *ents;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env
env_create	kern/env.c	/^env_create(uint8_t *binary, size_t size, enum EnvType type)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^	env_free_list = &envs[0];$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_priority	inc/env.h	/^	uint32_t env_priority;$/;"	m	struct:Env
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/fs/fs.asm	/^envid_t$/;"	l
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/cat.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/echo.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/icode.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/init.asm	/^envid_t$/;"	l
envid_t	obj/user/ls.asm	/^envid_t$/;"	l
envid_t	obj/user/lsfd.asm	/^envid_t$/;"	l
envid_t	obj/user/num.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/primespipe.asm	/^envid_t$/;"	l
envid_t	obj/user/sh.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spawnhello.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/testfdsharing.asm	/^envid_t$/;"	l
envid_t	obj/user/testfile.asm	/^envid_t$/;"	l
envid_t	obj/user/testkbd.asm	/^envid_t$/;"	l
envid_t	obj/user/testpipe.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace2.asm	/^envid_t$/;"	l
envid_t	obj/user/testpteshare.asm	/^envid_t$/;"	l
envid_t	obj/user/testshell.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^    envs = (struct Env *) boot_alloc(NENV * sizeof(struct Env));$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^	eph = ph + ELFHDR-> e_phnum;$/;"	d
err	obj/fs/fs.asm	/^				err = -err;$/;"	d
err	obj/fs/fs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/fs/fs.asm	/^    err:$/;"	l
err	obj/fs/fs.asm	/^err:$/;"	l
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^    err:$/;"	l
err	obj/user/badsegment.asm	/^err:$/;"	l
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^    err:$/;"	l
err	obj/user/breakpoint.asm	/^err:$/;"	l
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^    err:$/;"	l
err	obj/user/buggyhello.asm	/^err:$/;"	l
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^    err:$/;"	l
err	obj/user/buggyhello2.asm	/^err:$/;"	l
err	obj/user/cat.asm	/^				err = -err;$/;"	d
err	obj/user/cat.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/cat.asm	/^    err:$/;"	l
err	obj/user/cat.asm	/^err:$/;"	l
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^    err:$/;"	l
err	obj/user/divzero.asm	/^err:$/;"	l
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^    err:$/;"	l
err	obj/user/dumbfork.asm	/^err:$/;"	l
err	obj/user/echo.asm	/^				err = -err;$/;"	d
err	obj/user/echo.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echo.asm	/^    err:$/;"	l
err	obj/user/echo.asm	/^err:$/;"	l
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^    err:$/;"	l
err	obj/user/evilhello.asm	/^err:$/;"	l
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^    err:$/;"	l
err	obj/user/fairness.asm	/^err:$/;"	l
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^    err:$/;"	l
err	obj/user/faultalloc.asm	/^err:$/;"	l
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^    err:$/;"	l
err	obj/user/faultallocbad.asm	/^err:$/;"	l
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^    err:$/;"	l
err	obj/user/faultbadhandler.asm	/^err:$/;"	l
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^    err:$/;"	l
err	obj/user/faultdie.asm	/^err:$/;"	l
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^    err:$/;"	l
err	obj/user/faultevilhandler.asm	/^err:$/;"	l
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^    err:$/;"	l
err	obj/user/faultnostack.asm	/^err:$/;"	l
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^    err:$/;"	l
err	obj/user/faultread.asm	/^err:$/;"	l
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^    err:$/;"	l
err	obj/user/faultreadkernel.asm	/^err:$/;"	l
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^    err:$/;"	l
err	obj/user/faultregs.asm	/^err:$/;"	l
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^    err:$/;"	l
err	obj/user/faultwrite.asm	/^err:$/;"	l
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^    err:$/;"	l
err	obj/user/faultwritekernel.asm	/^err:$/;"	l
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^    err:$/;"	l
err	obj/user/forktree.asm	/^err:$/;"	l
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^    err:$/;"	l
err	obj/user/hello.asm	/^err:$/;"	l
err	obj/user/icode.asm	/^				err = -err;$/;"	d
err	obj/user/icode.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/icode.asm	/^    err:$/;"	l
err	obj/user/icode.asm	/^err:$/;"	l
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^    err:$/;"	l
err	obj/user/idle.asm	/^err:$/;"	l
err	obj/user/init.asm	/^				err = -err;$/;"	d
err	obj/user/init.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/init.asm	/^    err:$/;"	l
err	obj/user/init.asm	/^err:$/;"	l
err	obj/user/ls.asm	/^				err = -err;$/;"	d
err	obj/user/ls.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/ls.asm	/^    err:$/;"	l
err	obj/user/ls.asm	/^err:$/;"	l
err	obj/user/lsfd.asm	/^				err = -err;$/;"	d
err	obj/user/lsfd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/lsfd.asm	/^    err:$/;"	l
err	obj/user/lsfd.asm	/^err:$/;"	l
err	obj/user/num.asm	/^				err = -err;$/;"	d
err	obj/user/num.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/num.asm	/^    err:$/;"	l
err	obj/user/num.asm	/^err:$/;"	l
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^    err:$/;"	l
err	obj/user/pingpong.asm	/^err:$/;"	l
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^    err:$/;"	l
err	obj/user/pingpongs.asm	/^err:$/;"	l
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^    err:$/;"	l
err	obj/user/primes.asm	/^err:$/;"	l
err	obj/user/primespipe.asm	/^				err = -err;$/;"	d
err	obj/user/primespipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primespipe.asm	/^    err:$/;"	l
err	obj/user/primespipe.asm	/^err:$/;"	l
err	obj/user/sh.asm	/^				err = -err;$/;"	d
err	obj/user/sh.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sh.asm	/^    err:$/;"	l
err	obj/user/sh.asm	/^err:$/;"	l
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^    err:$/;"	l
err	obj/user/softint.asm	/^err:$/;"	l
err	obj/user/spawnhello.asm	/^				err = -err;$/;"	d
err	obj/user/spawnhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spawnhello.asm	/^    err:$/;"	l
err	obj/user/spawnhello.asm	/^err:$/;"	l
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^    err:$/;"	l
err	obj/user/spin.asm	/^err:$/;"	l
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^    err:$/;"	l
err	obj/user/stresssched.asm	/^err:$/;"	l
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^    err:$/;"	l
err	obj/user/testbss.asm	/^err:$/;"	l
err	obj/user/testfdsharing.asm	/^				err = -err;$/;"	d
err	obj/user/testfdsharing.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfdsharing.asm	/^    err:$/;"	l
err	obj/user/testfdsharing.asm	/^err:$/;"	l
err	obj/user/testfile.asm	/^				err = -err;$/;"	d
err	obj/user/testfile.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfile.asm	/^    err:$/;"	l
err	obj/user/testfile.asm	/^err:$/;"	l
err	obj/user/testkbd.asm	/^				err = -err;$/;"	d
err	obj/user/testkbd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testkbd.asm	/^    err:$/;"	l
err	obj/user/testkbd.asm	/^err:$/;"	l
err	obj/user/testpipe.asm	/^				err = -err;$/;"	d
err	obj/user/testpipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpipe.asm	/^    err:$/;"	l
err	obj/user/testpipe.asm	/^err:$/;"	l
err	obj/user/testpiperace.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace.asm	/^    err:$/;"	l
err	obj/user/testpiperace.asm	/^err:$/;"	l
err	obj/user/testpiperace2.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace2.asm	/^    err:$/;"	l
err	obj/user/testpiperace2.asm	/^err:$/;"	l
err	obj/user/testpteshare.asm	/^				err = -err;$/;"	d
err	obj/user/testpteshare.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpteshare.asm	/^    err:$/;"	l
err	obj/user/testpteshare.asm	/^err:$/;"	l
err	obj/user/testshell.asm	/^				err = -err;$/;"	d
err	obj/user/testshell.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testshell.asm	/^    err:$/;"	l
err	obj/user/testshell.asm	/^err:$/;"	l
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^    err:$/;"	l
err	obj/user/yield.asm	/^err:$/;"	l
err1	obj/fs/fs.asm	/^    err1:$/;"	l
err1	obj/user/badsegment.asm	/^    err1:$/;"	l
err1	obj/user/breakpoint.asm	/^    err1:$/;"	l
err1	obj/user/buggyhello.asm	/^    err1:$/;"	l
err1	obj/user/buggyhello2.asm	/^    err1:$/;"	l
err1	obj/user/cat.asm	/^    err1:$/;"	l
err1	obj/user/divzero.asm	/^    err1:$/;"	l
err1	obj/user/dumbfork.asm	/^    err1:$/;"	l
err1	obj/user/echo.asm	/^    err1:$/;"	l
err1	obj/user/evilhello.asm	/^    err1:$/;"	l
err1	obj/user/fairness.asm	/^    err1:$/;"	l
err1	obj/user/faultalloc.asm	/^    err1:$/;"	l
err1	obj/user/faultallocbad.asm	/^    err1:$/;"	l
err1	obj/user/faultbadhandler.asm	/^    err1:$/;"	l
err1	obj/user/faultdie.asm	/^    err1:$/;"	l
err1	obj/user/faultevilhandler.asm	/^    err1:$/;"	l
err1	obj/user/faultnostack.asm	/^    err1:$/;"	l
err1	obj/user/faultread.asm	/^    err1:$/;"	l
err1	obj/user/faultreadkernel.asm	/^    err1:$/;"	l
err1	obj/user/faultregs.asm	/^    err1:$/;"	l
err1	obj/user/faultwrite.asm	/^    err1:$/;"	l
err1	obj/user/faultwritekernel.asm	/^    err1:$/;"	l
err1	obj/user/forktree.asm	/^    err1:$/;"	l
err1	obj/user/hello.asm	/^    err1:$/;"	l
err1	obj/user/icode.asm	/^    err1:$/;"	l
err1	obj/user/idle.asm	/^    err1:$/;"	l
err1	obj/user/init.asm	/^    err1:$/;"	l
err1	obj/user/ls.asm	/^    err1:$/;"	l
err1	obj/user/lsfd.asm	/^    err1:$/;"	l
err1	obj/user/num.asm	/^    err1:$/;"	l
err1	obj/user/pingpong.asm	/^    err1:$/;"	l
err1	obj/user/pingpongs.asm	/^    err1:$/;"	l
err1	obj/user/primes.asm	/^    err1:$/;"	l
err1	obj/user/primespipe.asm	/^    err1:$/;"	l
err1	obj/user/sh.asm	/^    err1:$/;"	l
err1	obj/user/softint.asm	/^    err1:$/;"	l
err1	obj/user/spawnhello.asm	/^    err1:$/;"	l
err1	obj/user/spin.asm	/^    err1:$/;"	l
err1	obj/user/stresssched.asm	/^    err1:$/;"	l
err1	obj/user/testbss.asm	/^    err1:$/;"	l
err1	obj/user/testfdsharing.asm	/^    err1:$/;"	l
err1	obj/user/testfile.asm	/^    err1:$/;"	l
err1	obj/user/testkbd.asm	/^    err1:$/;"	l
err1	obj/user/testpipe.asm	/^    err1:$/;"	l
err1	obj/user/testpiperace.asm	/^    err1:$/;"	l
err1	obj/user/testpiperace2.asm	/^    err1:$/;"	l
err1	obj/user/testpteshare.asm	/^    err1:$/;"	l
err1	obj/user/testshell.asm	/^    err1:$/;"	l
err1	obj/user/yield.asm	/^    err1:$/;"	l
err2	obj/fs/fs.asm	/^    err2:$/;"	l
err2	obj/user/badsegment.asm	/^    err2:$/;"	l
err2	obj/user/breakpoint.asm	/^    err2:$/;"	l
err2	obj/user/buggyhello.asm	/^    err2:$/;"	l
err2	obj/user/buggyhello2.asm	/^    err2:$/;"	l
err2	obj/user/cat.asm	/^    err2:$/;"	l
err2	obj/user/divzero.asm	/^    err2:$/;"	l
err2	obj/user/dumbfork.asm	/^    err2:$/;"	l
err2	obj/user/echo.asm	/^    err2:$/;"	l
err2	obj/user/evilhello.asm	/^    err2:$/;"	l
err2	obj/user/fairness.asm	/^    err2:$/;"	l
err2	obj/user/faultalloc.asm	/^    err2:$/;"	l
err2	obj/user/faultallocbad.asm	/^    err2:$/;"	l
err2	obj/user/faultbadhandler.asm	/^    err2:$/;"	l
err2	obj/user/faultdie.asm	/^    err2:$/;"	l
err2	obj/user/faultevilhandler.asm	/^    err2:$/;"	l
err2	obj/user/faultnostack.asm	/^    err2:$/;"	l
err2	obj/user/faultread.asm	/^    err2:$/;"	l
err2	obj/user/faultreadkernel.asm	/^    err2:$/;"	l
err2	obj/user/faultregs.asm	/^    err2:$/;"	l
err2	obj/user/faultwrite.asm	/^    err2:$/;"	l
err2	obj/user/faultwritekernel.asm	/^    err2:$/;"	l
err2	obj/user/forktree.asm	/^    err2:$/;"	l
err2	obj/user/hello.asm	/^    err2:$/;"	l
err2	obj/user/icode.asm	/^    err2:$/;"	l
err2	obj/user/idle.asm	/^    err2:$/;"	l
err2	obj/user/init.asm	/^    err2:$/;"	l
err2	obj/user/ls.asm	/^    err2:$/;"	l
err2	obj/user/lsfd.asm	/^    err2:$/;"	l
err2	obj/user/num.asm	/^    err2:$/;"	l
err2	obj/user/pingpong.asm	/^    err2:$/;"	l
err2	obj/user/pingpongs.asm	/^    err2:$/;"	l
err2	obj/user/primes.asm	/^    err2:$/;"	l
err2	obj/user/primespipe.asm	/^    err2:$/;"	l
err2	obj/user/sh.asm	/^    err2:$/;"	l
err2	obj/user/softint.asm	/^    err2:$/;"	l
err2	obj/user/spawnhello.asm	/^    err2:$/;"	l
err2	obj/user/spin.asm	/^    err2:$/;"	l
err2	obj/user/stresssched.asm	/^    err2:$/;"	l
err2	obj/user/testbss.asm	/^    err2:$/;"	l
err2	obj/user/testfdsharing.asm	/^    err2:$/;"	l
err2	obj/user/testfile.asm	/^    err2:$/;"	l
err2	obj/user/testkbd.asm	/^    err2:$/;"	l
err2	obj/user/testpipe.asm	/^    err2:$/;"	l
err2	obj/user/testpiperace.asm	/^    err2:$/;"	l
err2	obj/user/testpiperace2.asm	/^    err2:$/;"	l
err2	obj/user/testpteshare.asm	/^    err2:$/;"	l
err2	obj/user/testshell.asm	/^    err2:$/;"	l
err2	obj/user/yield.asm	/^    err2:$/;"	l
err3	obj/fs/fs.asm	/^    err3:$/;"	l
err3	obj/user/badsegment.asm	/^    err3:$/;"	l
err3	obj/user/breakpoint.asm	/^    err3:$/;"	l
err3	obj/user/buggyhello.asm	/^    err3:$/;"	l
err3	obj/user/buggyhello2.asm	/^    err3:$/;"	l
err3	obj/user/cat.asm	/^    err3:$/;"	l
err3	obj/user/divzero.asm	/^    err3:$/;"	l
err3	obj/user/dumbfork.asm	/^    err3:$/;"	l
err3	obj/user/echo.asm	/^    err3:$/;"	l
err3	obj/user/evilhello.asm	/^    err3:$/;"	l
err3	obj/user/fairness.asm	/^    err3:$/;"	l
err3	obj/user/faultalloc.asm	/^    err3:$/;"	l
err3	obj/user/faultallocbad.asm	/^    err3:$/;"	l
err3	obj/user/faultbadhandler.asm	/^    err3:$/;"	l
err3	obj/user/faultdie.asm	/^    err3:$/;"	l
err3	obj/user/faultevilhandler.asm	/^    err3:$/;"	l
err3	obj/user/faultnostack.asm	/^    err3:$/;"	l
err3	obj/user/faultread.asm	/^    err3:$/;"	l
err3	obj/user/faultreadkernel.asm	/^    err3:$/;"	l
err3	obj/user/faultregs.asm	/^    err3:$/;"	l
err3	obj/user/faultwrite.asm	/^    err3:$/;"	l
err3	obj/user/faultwritekernel.asm	/^    err3:$/;"	l
err3	obj/user/forktree.asm	/^    err3:$/;"	l
err3	obj/user/hello.asm	/^    err3:$/;"	l
err3	obj/user/icode.asm	/^    err3:$/;"	l
err3	obj/user/idle.asm	/^    err3:$/;"	l
err3	obj/user/init.asm	/^    err3:$/;"	l
err3	obj/user/ls.asm	/^    err3:$/;"	l
err3	obj/user/lsfd.asm	/^    err3:$/;"	l
err3	obj/user/num.asm	/^    err3:$/;"	l
err3	obj/user/pingpong.asm	/^    err3:$/;"	l
err3	obj/user/pingpongs.asm	/^    err3:$/;"	l
err3	obj/user/primes.asm	/^    err3:$/;"	l
err3	obj/user/primespipe.asm	/^    err3:$/;"	l
err3	obj/user/sh.asm	/^    err3:$/;"	l
err3	obj/user/softint.asm	/^    err3:$/;"	l
err3	obj/user/spawnhello.asm	/^    err3:$/;"	l
err3	obj/user/spin.asm	/^    err3:$/;"	l
err3	obj/user/stresssched.asm	/^    err3:$/;"	l
err3	obj/user/testbss.asm	/^    err3:$/;"	l
err3	obj/user/testfdsharing.asm	/^    err3:$/;"	l
err3	obj/user/testfile.asm	/^    err3:$/;"	l
err3	obj/user/testkbd.asm	/^    err3:$/;"	l
err3	obj/user/testpipe.asm	/^    err3:$/;"	l
err3	obj/user/testpiperace.asm	/^    err3:$/;"	l
err3	obj/user/testpiperace2.asm	/^    err3:$/;"	l
err3	obj/user/testpteshare.asm	/^    err3:$/;"	l
err3	obj/user/testshell.asm	/^    err3:$/;"	l
err3	obj/user/yield.asm	/^    err3:$/;"	l
errno	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
error	lib/fprintf.c	/^	int error;	\/\/ first error that occurred$/;"	m	struct:printbuf	file:
error	obj/user/icode.asm	/^error:$/;"	l
error	obj/user/init.asm	/^error:$/;"	l
error	obj/user/sh.asm	/^error:$/;"	l
error	obj/user/spawnhello.asm	/^error:$/;"	l
error	obj/user/testpteshare.asm	/^error:$/;"	l
error	obj/user/testshell.asm	/^error:$/;"	l
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:
exit	lib/exit.c	/^exit(void)$/;"	f
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
f	fs/fsformat.c	/^	struct File *f;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
f	obj/fs/fs.asm	/^		f = (struct File*) blk;$/;"	d
f	obj/fs/fs.asm	/^	f = &super->s_root;$/;"	d
f	obj/user/cat.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f	obj/user/num.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 f0 11 00       	mov    $0x11f000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 f0 11 f0       	mov    $0xf011f000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 6a 00 00 00       	call   f01000a8 <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_panic>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	56                   	push   %esi$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	53                   	push   %ebx$/;"	l
f0100045	obj/kern/kernel.asm	/^f0100045:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100048	obj/kern/kernel.asm	/^f0100048:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f010004b	obj/kern/kernel.asm	/^f010004b:	83 3d 80 5e 20 f0 00 	cmpl   $0x0,0xf0205e80$/;"	l
f0100052	obj/kern/kernel.asm	/^f0100052:	75 46                	jne    f010009a <_panic+0x5a>$/;"	l
f0100054	obj/kern/kernel.asm	/^f0100054:	89 35 80 5e 20 f0    	mov    %esi,0xf0205e80$/;"	l
f010005a	obj/kern/kernel.asm	/^f010005a:	fa                   	cli    $/;"	l
f010005b	obj/kern/kernel.asm	/^f010005b:	fc                   	cld    $/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010005f	obj/kern/kernel.asm	/^f010005f:	e8 e0 68 00 00       	call   f0106944 <cpunum>$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0100067	obj/kern/kernel.asm	/^f0100067:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010006e	obj/kern/kernel.asm	/^f010006e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	c7 04 24 60 70 10 f0 	movl   $0xf0107060,(%esp)$/;"	l
f010007d	obj/kern/kernel.asm	/^f010007d:	e8 8c 3e 00 00       	call   f0103f0e <cprintf>$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100086	obj/kern/kernel.asm	/^f0100086:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100089	obj/kern/kernel.asm	/^f0100089:	e8 4d 3e 00 00       	call   f0103edb <vcprintf>$/;"	l
f010008e	obj/kern/kernel.asm	/^f010008e:	c7 04 24 e8 81 10 f0 	movl   $0xf01081e8,(%esp)$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	e8 74 3e 00 00       	call   f0103f0e <cprintf>$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	e8 88 09 00 00       	call   f0100a2e <monitor>$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6:	eb f2                	jmp    f010009a <_panic+0x5a>$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8 <i386_init>:$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8:	55                   	push   %ebp$/;"	l
f01000a9	obj/kern/kernel.asm	/^f01000a9:	89 e5                	mov    %esp,%ebp$/;"	l
f01000ab	obj/kern/kernel.asm	/^f01000ab:	53                   	push   %ebx$/;"	l
f01000ac	obj/kern/kernel.asm	/^f01000ac:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01000af	obj/kern/kernel.asm	/^f01000af:	b8 08 70 24 f0       	mov    $0xf0247008,%eax$/;"	l
f01000b4	obj/kern/kernel.asm	/^f01000b4:	2d e3 43 20 f0       	sub    $0xf02043e3,%eax$/;"	l
f01000b9	obj/kern/kernel.asm	/^f01000b9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01000bd	obj/kern/kernel.asm	/^f01000bd:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01000c4	obj/kern/kernel.asm	/^f01000c4:	00 $/;"	l
f01000c5	obj/kern/kernel.asm	/^f01000c5:	c7 04 24 e3 43 20 f0 	movl   $0xf02043e3,(%esp)$/;"	l
f01000cc	obj/kern/kernel.asm	/^f01000cc:	e8 d8 61 00 00       	call   f01062a9 <memset>$/;"	l
f01000d1	obj/kern/kernel.asm	/^f01000d1:	e8 d9 05 00 00       	call   f01006af <cons_init>$/;"	l
f01000d6	obj/kern/kernel.asm	/^f01000d6:	e8 d3 13 00 00       	call   f01014ae <mem_init>$/;"	l
f01000db	obj/kern/kernel.asm	/^f01000db:	90                   	nop$/;"	l
f01000dc	obj/kern/kernel.asm	/^f01000dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01000e0	obj/kern/kernel.asm	/^f01000e0:	e8 0c 36 00 00       	call   f01036f1 <env_init>$/;"	l
f01000e5	obj/kern/kernel.asm	/^f01000e5:	e8 16 3f 00 00       	call   f0104000 <trap_init>$/;"	l
f01000ea	obj/kern/kernel.asm	/^f01000ea:	e8 3a 65 00 00       	call   f0106629 <mp_init>$/;"	l
f01000ef	obj/kern/kernel.asm	/^f01000ef:	90                   	nop$/;"	l
f01000f0	obj/kern/kernel.asm	/^f01000f0:	e8 6a 68 00 00       	call   f010695f <lapic_init>$/;"	l
f01000f5	obj/kern/kernel.asm	/^f01000f5:	e8 41 3d 00 00       	call   f0103e3b <pic_init>$/;"	l
f01000fa	obj/kern/kernel.asm	/^f01000fa:	c7 04 24 c0 13 12 f0 	movl   $0xf01213c0,(%esp)$/;"	l
f0100101	obj/kern/kernel.asm	/^f0100101:	e8 bd 6a 00 00       	call   f0106bc3 <spin_lock>$/;"	l
f0100106	obj/kern/kernel.asm	/^f0100106:	83 3d 88 5e 20 f0 07 	cmpl   $0x7,0xf0205e88$/;"	l
f010010d	obj/kern/kernel.asm	/^f010010d:	77 24                	ja     f0100133 <i386_init+0x8b>$/;"	l
f010010f	obj/kern/kernel.asm	/^f010010f:	c7 44 24 0c 00 70 00 	movl   $0x7000,0xc(%esp)$/;"	l
f0100116	obj/kern/kernel.asm	/^f0100116:	00 $/;"	l
f0100117	obj/kern/kernel.asm	/^f0100117:	c7 44 24 08 84 70 10 	movl   $0xf0107084,0x8(%esp)$/;"	l
f010011e	obj/kern/kernel.asm	/^f010011e:	f0 $/;"	l
f010011f	obj/kern/kernel.asm	/^f010011f:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)$/;"	l
f0100126	obj/kern/kernel.asm	/^f0100126:	00 $/;"	l
f0100127	obj/kern/kernel.asm	/^f0100127:	c7 04 24 cc 70 10 f0 	movl   $0xf01070cc,(%esp)$/;"	l
f010012e	obj/kern/kernel.asm	/^f010012e:	e8 0d ff ff ff       	call   f0100040 <_panic>$/;"	l
f0100133	obj/kern/kernel.asm	/^f0100133:	b8 56 65 10 f0       	mov    $0xf0106556,%eax$/;"	l
f0100138	obj/kern/kernel.asm	/^f0100138:	2d dc 64 10 f0       	sub    $0xf01064dc,%eax$/;"	l
f010013d	obj/kern/kernel.asm	/^f010013d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100141	obj/kern/kernel.asm	/^f0100141:	c7 44 24 04 dc 64 10 	movl   $0xf01064dc,0x4(%esp)$/;"	l
f0100148	obj/kern/kernel.asm	/^f0100148:	f0 $/;"	l
f0100149	obj/kern/kernel.asm	/^f0100149:	c7 04 24 00 70 00 f0 	movl   $0xf0007000,(%esp)$/;"	l
f0100150	obj/kern/kernel.asm	/^f0100150:	e8 a1 61 00 00       	call   f01062f6 <memmove>$/;"	l
f0100155	obj/kern/kernel.asm	/^f0100155:	6b 05 c4 63 20 f0 74 	imul   $0x74,0xf02063c4,%eax$/;"	l
f010015c	obj/kern/kernel.asm	/^f010015c:	05 20 60 20 f0       	add    $0xf0206020,%eax$/;"	l
f0100161	obj/kern/kernel.asm	/^f0100161:	3d 20 60 20 f0       	cmp    $0xf0206020,%eax$/;"	l
f0100166	obj/kern/kernel.asm	/^f0100166:	76 62                	jbe    f01001ca <i386_init+0x122>$/;"	l
f0100168	obj/kern/kernel.asm	/^f0100168:	bb 20 60 20 f0       	mov    $0xf0206020,%ebx$/;"	l
f010016d	obj/kern/kernel.asm	/^f010016d:	e8 d2 67 00 00       	call   f0106944 <cpunum>$/;"	l
f0100172	obj/kern/kernel.asm	/^f0100172:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	05 20 60 20 f0       	add    $0xf0206020,%eax$/;"	l
f010017a	obj/kern/kernel.asm	/^f010017a:	39 c3                	cmp    %eax,%ebx$/;"	l
f010017c	obj/kern/kernel.asm	/^f010017c:	74 39                	je     f01001b7 <i386_init+0x10f>$/;"	l
f010017e	obj/kern/kernel.asm	/^f010017e:	89 d8                	mov    %ebx,%eax$/;"	l
f0100180	obj/kern/kernel.asm	/^f0100180:	2d 20 60 20 f0       	sub    $0xf0206020,%eax$/;"	l
f0100185	obj/kern/kernel.asm	/^f0100185:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0100188	obj/kern/kernel.asm	/^f0100188:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f010018e	obj/kern/kernel.asm	/^f010018e:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f0100191	obj/kern/kernel.asm	/^f0100191:	8d 80 00 f0 20 f0    	lea    -0xfdf1000(%eax),%eax$/;"	l
f0100197	obj/kern/kernel.asm	/^f0100197:	a3 84 5e 20 f0       	mov    %eax,0xf0205e84$/;"	l
f010019c	obj/kern/kernel.asm	/^f010019c:	c7 44 24 04 00 70 00 	movl   $0x7000,0x4(%esp)$/;"	l
f01001a3	obj/kern/kernel.asm	/^f01001a3:	00 $/;"	l
f01001a4	obj/kern/kernel.asm	/^f01001a4:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01001a7	obj/kern/kernel.asm	/^f01001a7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01001aa	obj/kern/kernel.asm	/^f01001aa:	e8 00 69 00 00       	call   f0106aaf <lapic_startap>$/;"	l
f01001af	obj/kern/kernel.asm	/^f01001af:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01001b2	obj/kern/kernel.asm	/^f01001b2:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f01001b5	obj/kern/kernel.asm	/^f01001b5:	75 f8                	jne    f01001af <i386_init+0x107>$/;"	l
f01001b7	obj/kern/kernel.asm	/^f01001b7:	83 c3 74             	add    $0x74,%ebx$/;"	l
f01001ba	obj/kern/kernel.asm	/^f01001ba:	6b 05 c4 63 20 f0 74 	imul   $0x74,0xf02063c4,%eax$/;"	l
f01001c1	obj/kern/kernel.asm	/^f01001c1:	05 20 60 20 f0       	add    $0xf0206020,%eax$/;"	l
f01001c6	obj/kern/kernel.asm	/^f01001c6:	39 c3                	cmp    %eax,%ebx$/;"	l
f01001c8	obj/kern/kernel.asm	/^f01001c8:	72 a3                	jb     f010016d <i386_init+0xc5>$/;"	l
f01001ca	obj/kern/kernel.asm	/^f01001ca:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01001d1	obj/kern/kernel.asm	/^f01001d1:	00 $/;"	l
f01001d2	obj/kern/kernel.asm	/^f01001d2:	c7 44 24 04 b7 52 01 	movl   $0x152b7,0x4(%esp)$/;"	l
f01001d9	obj/kern/kernel.asm	/^f01001d9:	00 $/;"	l
f01001da	obj/kern/kernel.asm	/^f01001da:	c7 04 24 f1 45 1c f0 	movl   $0xf01c45f1,(%esp)$/;"	l
f01001e1	obj/kern/kernel.asm	/^f01001e1:	e8 f0 36 00 00       	call   f01038d6 <env_create>$/;"	l
f01001e6	obj/kern/kernel.asm	/^f01001e6:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01001ed	obj/kern/kernel.asm	/^f01001ed:	00 $/;"	l
f01001ee	obj/kern/kernel.asm	/^f01001ee:	c7 44 24 04 93 4e 00 	movl   $0x4e93,0x4(%esp)$/;"	l
f01001f5	obj/kern/kernel.asm	/^f01001f5:	00 $/;"	l
f01001f6	obj/kern/kernel.asm	/^f01001f6:	c7 04 24 d4 a8 1b f0 	movl   $0xf01ba8d4,(%esp)$/;"	l
f01001fd	obj/kern/kernel.asm	/^f01001fd:	e8 d4 36 00 00       	call   f01038d6 <env_create>$/;"	l
f0100202	obj/kern/kernel.asm	/^f0100202:	e8 4c 04 00 00       	call   f0100653 <kbd_intr>$/;"	l
f0100207	obj/kern/kernel.asm	/^f0100207:	e8 07 4e 00 00       	call   f0105013 <sched_yield>$/;"	l
f010020c	obj/kern/kernel.asm	/^f010020c <mp_main>:$/;"	l
f010020c	obj/kern/kernel.asm	/^f010020c:	55                   	push   %ebp$/;"	l
f010020d	obj/kern/kernel.asm	/^f010020d:	89 e5                	mov    %esp,%ebp$/;"	l
f010020f	obj/kern/kernel.asm	/^f010020f:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100212	obj/kern/kernel.asm	/^f0100212:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f0100217	obj/kern/kernel.asm	/^f0100217:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010021c	obj/kern/kernel.asm	/^f010021c:	77 20                	ja     f010023e <mp_main+0x32>$/;"	l
f010021e	obj/kern/kernel.asm	/^f010021e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100222	obj/kern/kernel.asm	/^f0100222:	c7 44 24 08 a8 70 10 	movl   $0xf01070a8,0x8(%esp)$/;"	l
f0100229	obj/kern/kernel.asm	/^f0100229:	f0 $/;"	l
f010022a	obj/kern/kernel.asm	/^f010022a:	c7 44 24 04 81 00 00 	movl   $0x81,0x4(%esp)$/;"	l
f0100231	obj/kern/kernel.asm	/^f0100231:	00 $/;"	l
f0100232	obj/kern/kernel.asm	/^f0100232:	c7 04 24 cc 70 10 f0 	movl   $0xf01070cc,(%esp)$/;"	l
f0100239	obj/kern/kernel.asm	/^f0100239:	e8 02 fe ff ff       	call   f0100040 <_panic>$/;"	l
f010023e	obj/kern/kernel.asm	/^f010023e:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0100243	obj/kern/kernel.asm	/^f0100243:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0100246	obj/kern/kernel.asm	/^f0100246:	e8 f9 66 00 00       	call   f0106944 <cpunum>$/;"	l
f010024b	obj/kern/kernel.asm	/^f010024b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010024f	obj/kern/kernel.asm	/^f010024f:	c7 04 24 d8 70 10 f0 	movl   $0xf01070d8,(%esp)$/;"	l
f0100256	obj/kern/kernel.asm	/^f0100256:	e8 b3 3c 00 00       	call   f0103f0e <cprintf>$/;"	l
f010025b	obj/kern/kernel.asm	/^f010025b:	e8 ff 66 00 00       	call   f010695f <lapic_init>$/;"	l
f0100260	obj/kern/kernel.asm	/^f0100260:	e8 62 34 00 00       	call   f01036c7 <env_init_percpu>$/;"	l
f0100265	obj/kern/kernel.asm	/^f0100265:	e8 c6 3c 00 00       	call   f0103f30 <trap_init_percpu>$/;"	l
f010026a	obj/kern/kernel.asm	/^f010026a:	e8 d5 66 00 00       	call   f0106944 <cpunum>$/;"	l
f010026f	obj/kern/kernel.asm	/^f010026f:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0100272	obj/kern/kernel.asm	/^f0100272:	81 c2 20 60 20 f0    	add    $0xf0206020,%edx$/;"	l
f0100278	obj/kern/kernel.asm	/^f0100278:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010027d	obj/kern/kernel.asm	/^f010027d:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0100281	obj/kern/kernel.asm	/^f0100281:	c7 04 24 c0 13 12 f0 	movl   $0xf01213c0,(%esp)$/;"	l
f0100288	obj/kern/kernel.asm	/^f0100288:	e8 36 69 00 00       	call   f0106bc3 <spin_lock>$/;"	l
f010028d	obj/kern/kernel.asm	/^f010028d:	e8 81 4d 00 00       	call   f0105013 <sched_yield>$/;"	l
f0100292	obj/kern/kernel.asm	/^f0100292 <_warn>:$/;"	l
f0100292	obj/kern/kernel.asm	/^f0100292:	55                   	push   %ebp$/;"	l
f0100293	obj/kern/kernel.asm	/^f0100293:	89 e5                	mov    %esp,%ebp$/;"	l
f0100295	obj/kern/kernel.asm	/^f0100295:	53                   	push   %ebx$/;"	l
f0100296	obj/kern/kernel.asm	/^f0100296:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100299	obj/kern/kernel.asm	/^f0100299:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010029c	obj/kern/kernel.asm	/^f010029c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010029f	obj/kern/kernel.asm	/^f010029f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01002a3	obj/kern/kernel.asm	/^f01002a3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01002a6	obj/kern/kernel.asm	/^f01002a6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01002aa	obj/kern/kernel.asm	/^f01002aa:	c7 04 24 ee 70 10 f0 	movl   $0xf01070ee,(%esp)$/;"	l
f01002b1	obj/kern/kernel.asm	/^f01002b1:	e8 58 3c 00 00       	call   f0103f0e <cprintf>$/;"	l
f01002b6	obj/kern/kernel.asm	/^f01002b6:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01002ba	obj/kern/kernel.asm	/^f01002ba:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01002bd	obj/kern/kernel.asm	/^f01002bd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01002c0	obj/kern/kernel.asm	/^f01002c0:	e8 16 3c 00 00       	call   f0103edb <vcprintf>$/;"	l
f01002c5	obj/kern/kernel.asm	/^f01002c5:	c7 04 24 e8 81 10 f0 	movl   $0xf01081e8,(%esp)$/;"	l
f01002cc	obj/kern/kernel.asm	/^f01002cc:	e8 3d 3c 00 00       	call   f0103f0e <cprintf>$/;"	l
f01002d1	obj/kern/kernel.asm	/^f01002d1:	83 c4 14             	add    $0x14,%esp$/;"	l
f01002d4	obj/kern/kernel.asm	/^f01002d4:	5b                   	pop    %ebx$/;"	l
f01002d5	obj/kern/kernel.asm	/^f01002d5:	5d                   	pop    %ebp$/;"	l
f01002d6	obj/kern/kernel.asm	/^f01002d6:	c3                   	ret    $/;"	l
f01002d7	obj/kern/kernel.asm	/^f01002d7:	66 90                	xchg   %ax,%ax$/;"	l
f01002d9	obj/kern/kernel.asm	/^f01002d9:	66 90                	xchg   %ax,%ax$/;"	l
f01002db	obj/kern/kernel.asm	/^f01002db:	66 90                	xchg   %ax,%ax$/;"	l
f01002dd	obj/kern/kernel.asm	/^f01002dd:	66 90                	xchg   %ax,%ax$/;"	l
f01002df	obj/kern/kernel.asm	/^f01002df:	90                   	nop$/;"	l
f01002e0	obj/kern/kernel.asm	/^f01002e0 <serial_proc_data>:$/;"	l
f01002e0	obj/kern/kernel.asm	/^f01002e0:	55                   	push   %ebp$/;"	l
f01002e1	obj/kern/kernel.asm	/^f01002e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01002e3	obj/kern/kernel.asm	/^f01002e3:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01002e8	obj/kern/kernel.asm	/^f01002e8:	ec                   	in     (%dx),%al$/;"	l
f01002e9	obj/kern/kernel.asm	/^f01002e9:	a8 01                	test   $0x1,%al$/;"	l
f01002eb	obj/kern/kernel.asm	/^f01002eb:	74 08                	je     f01002f5 <serial_proc_data+0x15>$/;"	l
f01002ed	obj/kern/kernel.asm	/^f01002ed:	b2 f8                	mov    $0xf8,%dl$/;"	l
f01002ef	obj/kern/kernel.asm	/^f01002ef:	ec                   	in     (%dx),%al$/;"	l
f01002f0	obj/kern/kernel.asm	/^f01002f0:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01002f3	obj/kern/kernel.asm	/^f01002f3:	eb 05                	jmp    f01002fa <serial_proc_data+0x1a>$/;"	l
f01002f5	obj/kern/kernel.asm	/^f01002f5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01002fa	obj/kern/kernel.asm	/^f01002fa:	5d                   	pop    %ebp$/;"	l
f01002fb	obj/kern/kernel.asm	/^f01002fb:	c3                   	ret    $/;"	l
f01002fc	obj/kern/kernel.asm	/^f01002fc <cons_intr>:$/;"	l
f01002fc	obj/kern/kernel.asm	/^f01002fc:	55                   	push   %ebp$/;"	l
f01002fd	obj/kern/kernel.asm	/^f01002fd:	89 e5                	mov    %esp,%ebp$/;"	l
f01002ff	obj/kern/kernel.asm	/^f01002ff:	53                   	push   %ebx$/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100303	obj/kern/kernel.asm	/^f0100303:	89 c3                	mov    %eax,%ebx$/;"	l
f0100305	obj/kern/kernel.asm	/^f0100305:	eb 2a                	jmp    f0100331 <cons_intr+0x35>$/;"	l
f0100307	obj/kern/kernel.asm	/^f0100307:	85 d2                	test   %edx,%edx$/;"	l
f0100309	obj/kern/kernel.asm	/^f0100309:	74 26                	je     f0100331 <cons_intr+0x35>$/;"	l
f010030b	obj/kern/kernel.asm	/^f010030b:	a1 24 52 20 f0       	mov    0xf0205224,%eax$/;"	l
f0100310	obj/kern/kernel.asm	/^f0100310:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
f0100313	obj/kern/kernel.asm	/^f0100313:	89 0d 24 52 20 f0    	mov    %ecx,0xf0205224$/;"	l
f0100319	obj/kern/kernel.asm	/^f0100319:	88 90 20 50 20 f0    	mov    %dl,-0xfdfafe0(%eax)$/;"	l
f010031f	obj/kern/kernel.asm	/^f010031f:	81 f9 00 02 00 00    	cmp    $0x200,%ecx$/;"	l
f0100325	obj/kern/kernel.asm	/^f0100325:	75 0a                	jne    f0100331 <cons_intr+0x35>$/;"	l
f0100327	obj/kern/kernel.asm	/^f0100327:	c7 05 24 52 20 f0 00 	movl   $0x0,0xf0205224$/;"	l
f010032e	obj/kern/kernel.asm	/^f010032e:	00 00 00 $/;"	l
f0100331	obj/kern/kernel.asm	/^f0100331:	ff d3                	call   *%ebx$/;"	l
f0100333	obj/kern/kernel.asm	/^f0100333:	89 c2                	mov    %eax,%edx$/;"	l
f0100335	obj/kern/kernel.asm	/^f0100335:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0100338	obj/kern/kernel.asm	/^f0100338:	75 cd                	jne    f0100307 <cons_intr+0xb>$/;"	l
f010033a	obj/kern/kernel.asm	/^f010033a:	83 c4 04             	add    $0x4,%esp$/;"	l
f010033d	obj/kern/kernel.asm	/^f010033d:	5b                   	pop    %ebx$/;"	l
f010033e	obj/kern/kernel.asm	/^f010033e:	5d                   	pop    %ebp$/;"	l
f010033f	obj/kern/kernel.asm	/^f010033f:	c3                   	ret    $/;"	l
f0100340	obj/kern/kernel.asm	/^f0100340 <kbd_proc_data>:$/;"	l
f0100340	obj/kern/kernel.asm	/^f0100340:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f0100345	obj/kern/kernel.asm	/^f0100345:	ec                   	in     (%dx),%al$/;"	l
f0100346	obj/kern/kernel.asm	/^f0100346:	a8 01                	test   $0x1,%al$/;"	l
f0100348	obj/kern/kernel.asm	/^f0100348:	0f 84 ef 00 00 00    	je     f010043d <kbd_proc_data+0xfd>$/;"	l
f010034e	obj/kern/kernel.asm	/^f010034e:	b2 60                	mov    $0x60,%dl$/;"	l
f0100350	obj/kern/kernel.asm	/^f0100350:	ec                   	in     (%dx),%al$/;"	l
f0100351	obj/kern/kernel.asm	/^f0100351:	89 c2                	mov    %eax,%edx$/;"	l
f0100353	obj/kern/kernel.asm	/^f0100353:	3c e0                	cmp    $0xe0,%al$/;"	l
f0100355	obj/kern/kernel.asm	/^f0100355:	75 0d                	jne    f0100364 <kbd_proc_data+0x24>$/;"	l
f0100357	obj/kern/kernel.asm	/^f0100357:	83 0d 00 50 20 f0 40 	orl    $0x40,0xf0205000$/;"	l
f010035e	obj/kern/kernel.asm	/^f010035e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100363	obj/kern/kernel.asm	/^f0100363:	c3                   	ret    $/;"	l
f0100364	obj/kern/kernel.asm	/^f0100364:	55                   	push   %ebp$/;"	l
f0100365	obj/kern/kernel.asm	/^f0100365:	89 e5                	mov    %esp,%ebp$/;"	l
f0100367	obj/kern/kernel.asm	/^f0100367:	53                   	push   %ebx$/;"	l
f0100368	obj/kern/kernel.asm	/^f0100368:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010036b	obj/kern/kernel.asm	/^f010036b:	84 c0                	test   %al,%al$/;"	l
f010036d	obj/kern/kernel.asm	/^f010036d:	79 37                	jns    f01003a6 <kbd_proc_data+0x66>$/;"	l
f010036f	obj/kern/kernel.asm	/^f010036f:	8b 0d 00 50 20 f0    	mov    0xf0205000,%ecx$/;"	l
f0100375	obj/kern/kernel.asm	/^f0100375:	89 cb                	mov    %ecx,%ebx$/;"	l
f0100377	obj/kern/kernel.asm	/^f0100377:	83 e3 40             	and    $0x40,%ebx$/;"	l
f010037a	obj/kern/kernel.asm	/^f010037a:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f010037d	obj/kern/kernel.asm	/^f010037d:	85 db                	test   %ebx,%ebx$/;"	l
f010037f	obj/kern/kernel.asm	/^f010037f:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f0100382	obj/kern/kernel.asm	/^f0100382:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100385	obj/kern/kernel.asm	/^f0100385:	0f b6 82 60 72 10 f0 	movzbl -0xfef8da0(%edx),%eax$/;"	l
f010038c	obj/kern/kernel.asm	/^f010038c:	83 c8 40             	or     $0x40,%eax$/;"	l
f010038f	obj/kern/kernel.asm	/^f010038f:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100392	obj/kern/kernel.asm	/^f0100392:	f7 d0                	not    %eax$/;"	l
f0100394	obj/kern/kernel.asm	/^f0100394:	21 c1                	and    %eax,%ecx$/;"	l
f0100396	obj/kern/kernel.asm	/^f0100396:	89 0d 00 50 20 f0    	mov    %ecx,0xf0205000$/;"	l
f010039c	obj/kern/kernel.asm	/^f010039c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01003a1	obj/kern/kernel.asm	/^f01003a1:	e9 9d 00 00 00       	jmp    f0100443 <kbd_proc_data+0x103>$/;"	l
f01003a6	obj/kern/kernel.asm	/^f01003a6:	8b 0d 00 50 20 f0    	mov    0xf0205000,%ecx$/;"	l
f01003ac	obj/kern/kernel.asm	/^f01003ac:	f6 c1 40             	test   $0x40,%cl$/;"	l
f01003af	obj/kern/kernel.asm	/^f01003af:	74 0e                	je     f01003bf <kbd_proc_data+0x7f>$/;"	l
f01003b1	obj/kern/kernel.asm	/^f01003b1:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f01003b4	obj/kern/kernel.asm	/^f01003b4:	89 c2                	mov    %eax,%edx$/;"	l
f01003b6	obj/kern/kernel.asm	/^f01003b6:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f01003b9	obj/kern/kernel.asm	/^f01003b9:	89 0d 00 50 20 f0    	mov    %ecx,0xf0205000$/;"	l
f01003bf	obj/kern/kernel.asm	/^f01003bf:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01003c2	obj/kern/kernel.asm	/^f01003c2:	0f b6 82 60 72 10 f0 	movzbl -0xfef8da0(%edx),%eax$/;"	l
f01003c9	obj/kern/kernel.asm	/^f01003c9:	0b 05 00 50 20 f0    	or     0xf0205000,%eax$/;"	l
f01003cf	obj/kern/kernel.asm	/^f01003cf:	0f b6 8a 60 71 10 f0 	movzbl -0xfef8ea0(%edx),%ecx$/;"	l
f01003d6	obj/kern/kernel.asm	/^f01003d6:	31 c8                	xor    %ecx,%eax$/;"	l
f01003d8	obj/kern/kernel.asm	/^f01003d8:	a3 00 50 20 f0       	mov    %eax,0xf0205000$/;"	l
f01003dd	obj/kern/kernel.asm	/^f01003dd:	89 c1                	mov    %eax,%ecx$/;"	l
f01003df	obj/kern/kernel.asm	/^f01003df:	83 e1 03             	and    $0x3,%ecx$/;"	l
f01003e2	obj/kern/kernel.asm	/^f01003e2:	8b 0c 8d 40 71 10 f0 	mov    -0xfef8ec0(,%ecx,4),%ecx$/;"	l
f01003e9	obj/kern/kernel.asm	/^f01003e9:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f01003ed	obj/kern/kernel.asm	/^f01003ed:	0f b6 da             	movzbl %dl,%ebx$/;"	l
f01003f0	obj/kern/kernel.asm	/^f01003f0:	a8 08                	test   $0x8,%al$/;"	l
f01003f2	obj/kern/kernel.asm	/^f01003f2:	74 1b                	je     f010040f <kbd_proc_data+0xcf>$/;"	l
f01003f4	obj/kern/kernel.asm	/^f01003f4:	89 da                	mov    %ebx,%edx$/;"	l
f01003f6	obj/kern/kernel.asm	/^f01003f6:	8d 4b 9f             	lea    -0x61(%ebx),%ecx$/;"	l
f01003f9	obj/kern/kernel.asm	/^f01003f9:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f01003fc	obj/kern/kernel.asm	/^f01003fc:	77 05                	ja     f0100403 <kbd_proc_data+0xc3>$/;"	l
f01003fe	obj/kern/kernel.asm	/^f01003fe:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f0100401	obj/kern/kernel.asm	/^f0100401:	eb 0c                	jmp    f010040f <kbd_proc_data+0xcf>$/;"	l
f0100403	obj/kern/kernel.asm	/^f0100403:	83 ea 41             	sub    $0x41,%edx$/;"	l
f0100406	obj/kern/kernel.asm	/^f0100406:	8d 4b 20             	lea    0x20(%ebx),%ecx$/;"	l
f0100409	obj/kern/kernel.asm	/^f0100409:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f010040c	obj/kern/kernel.asm	/^f010040c:	0f 46 d9             	cmovbe %ecx,%ebx$/;"	l
f010040f	obj/kern/kernel.asm	/^f010040f:	f7 d0                	not    %eax$/;"	l
f0100411	obj/kern/kernel.asm	/^f0100411:	89 c2                	mov    %eax,%edx$/;"	l
f0100413	obj/kern/kernel.asm	/^f0100413:	89 d8                	mov    %ebx,%eax$/;"	l
f0100415	obj/kern/kernel.asm	/^f0100415:	f6 c2 06             	test   $0x6,%dl$/;"	l
f0100418	obj/kern/kernel.asm	/^f0100418:	75 29                	jne    f0100443 <kbd_proc_data+0x103>$/;"	l
f010041a	obj/kern/kernel.asm	/^f010041a:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f0100420	obj/kern/kernel.asm	/^f0100420:	75 21                	jne    f0100443 <kbd_proc_data+0x103>$/;"	l
f0100422	obj/kern/kernel.asm	/^f0100422:	c7 04 24 08 71 10 f0 	movl   $0xf0107108,(%esp)$/;"	l
f0100429	obj/kern/kernel.asm	/^f0100429:	e8 e0 3a 00 00       	call   f0103f0e <cprintf>$/;"	l
f010042e	obj/kern/kernel.asm	/^f010042e:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f0100433	obj/kern/kernel.asm	/^f0100433:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100438	obj/kern/kernel.asm	/^f0100438:	ee                   	out    %al,(%dx)$/;"	l
f0100439	obj/kern/kernel.asm	/^f0100439:	89 d8                	mov    %ebx,%eax$/;"	l
f010043b	obj/kern/kernel.asm	/^f010043b:	eb 06                	jmp    f0100443 <kbd_proc_data+0x103>$/;"	l
f010043d	obj/kern/kernel.asm	/^f010043d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100442	obj/kern/kernel.asm	/^f0100442:	c3                   	ret    $/;"	l
f0100443	obj/kern/kernel.asm	/^f0100443:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100446	obj/kern/kernel.asm	/^f0100446:	5b                   	pop    %ebx$/;"	l
f0100447	obj/kern/kernel.asm	/^f0100447:	5d                   	pop    %ebp$/;"	l
f0100448	obj/kern/kernel.asm	/^f0100448:	c3                   	ret    $/;"	l
f0100449	obj/kern/kernel.asm	/^f0100449 <cons_putc>:$/;"	l
f0100449	obj/kern/kernel.asm	/^f0100449:	55                   	push   %ebp$/;"	l
f010044a	obj/kern/kernel.asm	/^f010044a:	89 e5                	mov    %esp,%ebp$/;"	l
f010044c	obj/kern/kernel.asm	/^f010044c:	57                   	push   %edi$/;"	l
f010044d	obj/kern/kernel.asm	/^f010044d:	56                   	push   %esi$/;"	l
f010044e	obj/kern/kernel.asm	/^f010044e:	53                   	push   %ebx$/;"	l
f010044f	obj/kern/kernel.asm	/^f010044f:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100452	obj/kern/kernel.asm	/^f0100452:	89 c7                	mov    %eax,%edi$/;"	l
f0100454	obj/kern/kernel.asm	/^f0100454:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100459	obj/kern/kernel.asm	/^f0100459:	ec                   	in     (%dx),%al$/;"	l
f010045a	obj/kern/kernel.asm	/^f010045a:	a8 20                	test   $0x20,%al$/;"	l
f010045c	obj/kern/kernel.asm	/^f010045c:	75 21                	jne    f010047f <cons_putc+0x36>$/;"	l
f010045e	obj/kern/kernel.asm	/^f010045e:	bb 00 32 00 00       	mov    $0x3200,%ebx$/;"	l
f0100463	obj/kern/kernel.asm	/^f0100463:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f0100468	obj/kern/kernel.asm	/^f0100468:	be fd 03 00 00       	mov    $0x3fd,%esi$/;"	l
f010046d	obj/kern/kernel.asm	/^f010046d:	89 ca                	mov    %ecx,%edx$/;"	l
f010046f	obj/kern/kernel.asm	/^f010046f:	ec                   	in     (%dx),%al$/;"	l
f0100470	obj/kern/kernel.asm	/^f0100470:	ec                   	in     (%dx),%al$/;"	l
f0100471	obj/kern/kernel.asm	/^f0100471:	ec                   	in     (%dx),%al$/;"	l
f0100472	obj/kern/kernel.asm	/^f0100472:	ec                   	in     (%dx),%al$/;"	l
f0100473	obj/kern/kernel.asm	/^f0100473:	89 f2                	mov    %esi,%edx$/;"	l
f0100475	obj/kern/kernel.asm	/^f0100475:	ec                   	in     (%dx),%al$/;"	l
f0100476	obj/kern/kernel.asm	/^f0100476:	a8 20                	test   $0x20,%al$/;"	l
f0100478	obj/kern/kernel.asm	/^f0100478:	75 05                	jne    f010047f <cons_putc+0x36>$/;"	l
f010047a	obj/kern/kernel.asm	/^f010047a:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f010047d	obj/kern/kernel.asm	/^f010047d:	75 ee                	jne    f010046d <cons_putc+0x24>$/;"	l
f010047f	obj/kern/kernel.asm	/^f010047f:	89 f8                	mov    %edi,%eax$/;"	l
f0100481	obj/kern/kernel.asm	/^f0100481:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100484	obj/kern/kernel.asm	/^f0100484:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100487	obj/kern/kernel.asm	/^f0100487:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f010048c	obj/kern/kernel.asm	/^f010048c:	ee                   	out    %al,(%dx)$/;"	l
f010048d	obj/kern/kernel.asm	/^f010048d:	b2 79                	mov    $0x79,%dl$/;"	l
f010048f	obj/kern/kernel.asm	/^f010048f:	ec                   	in     (%dx),%al$/;"	l
f0100490	obj/kern/kernel.asm	/^f0100490:	84 c0                	test   %al,%al$/;"	l
f0100492	obj/kern/kernel.asm	/^f0100492:	78 21                	js     f01004b5 <cons_putc+0x6c>$/;"	l
f0100494	obj/kern/kernel.asm	/^f0100494:	bb 00 32 00 00       	mov    $0x3200,%ebx$/;"	l
f0100499	obj/kern/kernel.asm	/^f0100499:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f010049e	obj/kern/kernel.asm	/^f010049e:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f01004a3	obj/kern/kernel.asm	/^f01004a3:	89 ca                	mov    %ecx,%edx$/;"	l
f01004a5	obj/kern/kernel.asm	/^f01004a5:	ec                   	in     (%dx),%al$/;"	l
f01004a6	obj/kern/kernel.asm	/^f01004a6:	ec                   	in     (%dx),%al$/;"	l
f01004a7	obj/kern/kernel.asm	/^f01004a7:	ec                   	in     (%dx),%al$/;"	l
f01004a8	obj/kern/kernel.asm	/^f01004a8:	ec                   	in     (%dx),%al$/;"	l
f01004a9	obj/kern/kernel.asm	/^f01004a9:	89 f2                	mov    %esi,%edx$/;"	l
f01004ab	obj/kern/kernel.asm	/^f01004ab:	ec                   	in     (%dx),%al$/;"	l
f01004ac	obj/kern/kernel.asm	/^f01004ac:	84 c0                	test   %al,%al$/;"	l
f01004ae	obj/kern/kernel.asm	/^f01004ae:	78 05                	js     f01004b5 <cons_putc+0x6c>$/;"	l
f01004b0	obj/kern/kernel.asm	/^f01004b0:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01004b3	obj/kern/kernel.asm	/^f01004b3:	75 ee                	jne    f01004a3 <cons_putc+0x5a>$/;"	l
f01004b5	obj/kern/kernel.asm	/^f01004b5:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f01004ba	obj/kern/kernel.asm	/^f01004ba:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax$/;"	l
f01004be	obj/kern/kernel.asm	/^f01004be:	ee                   	out    %al,(%dx)$/;"	l
f01004bf	obj/kern/kernel.asm	/^f01004bf:	b2 7a                	mov    $0x7a,%dl$/;"	l
f01004c1	obj/kern/kernel.asm	/^f01004c1:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f01004c6	obj/kern/kernel.asm	/^f01004c6:	ee                   	out    %al,(%dx)$/;"	l
f01004c7	obj/kern/kernel.asm	/^f01004c7:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01004cc	obj/kern/kernel.asm	/^f01004cc:	ee                   	out    %al,(%dx)$/;"	l
f01004cd	obj/kern/kernel.asm	/^f01004cd:	89 fa                	mov    %edi,%edx$/;"	l
f01004cf	obj/kern/kernel.asm	/^f01004cf:	81 e2 00 ff ff ff    	and    $0xffffff00,%edx$/;"	l
f01004d5	obj/kern/kernel.asm	/^f01004d5:	89 f8                	mov    %edi,%eax$/;"	l
f01004d7	obj/kern/kernel.asm	/^f01004d7:	80 cc 07             	or     $0x7,%ah$/;"	l
f01004da	obj/kern/kernel.asm	/^f01004da:	85 d2                	test   %edx,%edx$/;"	l
f01004dc	obj/kern/kernel.asm	/^f01004dc:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f01004df	obj/kern/kernel.asm	/^f01004df:	89 f8                	mov    %edi,%eax$/;"	l
f01004e1	obj/kern/kernel.asm	/^f01004e1:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01004e4	obj/kern/kernel.asm	/^f01004e4:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01004e7	obj/kern/kernel.asm	/^f01004e7:	74 79                	je     f0100562 <cons_putc+0x119>$/;"	l
f01004e9	obj/kern/kernel.asm	/^f01004e9:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01004ec	obj/kern/kernel.asm	/^f01004ec:	7f 0a                	jg     f01004f8 <cons_putc+0xaf>$/;"	l
f01004ee	obj/kern/kernel.asm	/^f01004ee:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01004f1	obj/kern/kernel.asm	/^f01004f1:	74 19                	je     f010050c <cons_putc+0xc3>$/;"	l
f01004f3	obj/kern/kernel.asm	/^f01004f3:	e9 9e 00 00 00       	jmp    f0100596 <cons_putc+0x14d>$/;"	l
f01004f8	obj/kern/kernel.asm	/^f01004f8:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f01004fb	obj/kern/kernel.asm	/^f01004fb:	90                   	nop$/;"	l
f01004fc	obj/kern/kernel.asm	/^f01004fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0100500	obj/kern/kernel.asm	/^f0100500:	74 3a                	je     f010053c <cons_putc+0xf3>$/;"	l
f0100502	obj/kern/kernel.asm	/^f0100502:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f0100505	obj/kern/kernel.asm	/^f0100505:	74 3d                	je     f0100544 <cons_putc+0xfb>$/;"	l
f0100507	obj/kern/kernel.asm	/^f0100507:	e9 8a 00 00 00       	jmp    f0100596 <cons_putc+0x14d>$/;"	l
f010050c	obj/kern/kernel.asm	/^f010050c:	0f b7 05 28 52 20 f0 	movzwl 0xf0205228,%eax$/;"	l
f0100513	obj/kern/kernel.asm	/^f0100513:	66 85 c0             	test   %ax,%ax$/;"	l
f0100516	obj/kern/kernel.asm	/^f0100516:	0f 84 e5 00 00 00    	je     f0100601 <cons_putc+0x1b8>$/;"	l
f010051c	obj/kern/kernel.asm	/^f010051c:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010051f	obj/kern/kernel.asm	/^f010051f:	66 a3 28 52 20 f0    	mov    %ax,0xf0205228$/;"	l
f0100525	obj/kern/kernel.asm	/^f0100525:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0100528	obj/kern/kernel.asm	/^f0100528:	66 81 e7 00 ff       	and    $0xff00,%di$/;"	l
f010052d	obj/kern/kernel.asm	/^f010052d:	83 cf 20             	or     $0x20,%edi$/;"	l
f0100530	obj/kern/kernel.asm	/^f0100530:	8b 15 2c 52 20 f0    	mov    0xf020522c,%edx$/;"	l
f0100536	obj/kern/kernel.asm	/^f0100536:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f010053a	obj/kern/kernel.asm	/^f010053a:	eb 78                	jmp    f01005b4 <cons_putc+0x16b>$/;"	l
f010053c	obj/kern/kernel.asm	/^f010053c:	66 83 05 28 52 20 f0 	addw   $0x50,0xf0205228$/;"	l
f0100543	obj/kern/kernel.asm	/^f0100543:	50 $/;"	l
f0100544	obj/kern/kernel.asm	/^f0100544:	0f b7 05 28 52 20 f0 	movzwl 0xf0205228,%eax$/;"	l
f010054b	obj/kern/kernel.asm	/^f010054b:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f0100551	obj/kern/kernel.asm	/^f0100551:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0100554	obj/kern/kernel.asm	/^f0100554:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0100557	obj/kern/kernel.asm	/^f0100557:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010055a	obj/kern/kernel.asm	/^f010055a:	66 a3 28 52 20 f0    	mov    %ax,0xf0205228$/;"	l
f0100560	obj/kern/kernel.asm	/^f0100560:	eb 52                	jmp    f01005b4 <cons_putc+0x16b>$/;"	l
f0100562	obj/kern/kernel.asm	/^f0100562:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100567	obj/kern/kernel.asm	/^f0100567:	e8 dd fe ff ff       	call   f0100449 <cons_putc>$/;"	l
f010056c	obj/kern/kernel.asm	/^f010056c:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100571	obj/kern/kernel.asm	/^f0100571:	e8 d3 fe ff ff       	call   f0100449 <cons_putc>$/;"	l
f0100576	obj/kern/kernel.asm	/^f0100576:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010057b	obj/kern/kernel.asm	/^f010057b:	e8 c9 fe ff ff       	call   f0100449 <cons_putc>$/;"	l
f0100580	obj/kern/kernel.asm	/^f0100580:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100585	obj/kern/kernel.asm	/^f0100585:	e8 bf fe ff ff       	call   f0100449 <cons_putc>$/;"	l
f010058a	obj/kern/kernel.asm	/^f010058a:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010058f	obj/kern/kernel.asm	/^f010058f:	e8 b5 fe ff ff       	call   f0100449 <cons_putc>$/;"	l
f0100594	obj/kern/kernel.asm	/^f0100594:	eb 1e                	jmp    f01005b4 <cons_putc+0x16b>$/;"	l
f0100596	obj/kern/kernel.asm	/^f0100596:	0f b7 05 28 52 20 f0 	movzwl 0xf0205228,%eax$/;"	l
f010059d	obj/kern/kernel.asm	/^f010059d:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f01005a0	obj/kern/kernel.asm	/^f01005a0:	66 89 15 28 52 20 f0 	mov    %dx,0xf0205228$/;"	l
f01005a7	obj/kern/kernel.asm	/^f01005a7:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01005aa	obj/kern/kernel.asm	/^f01005aa:	8b 15 2c 52 20 f0    	mov    0xf020522c,%edx$/;"	l
f01005b0	obj/kern/kernel.asm	/^f01005b0:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f01005b4	obj/kern/kernel.asm	/^f01005b4:	66 81 3d 28 52 20 f0 	cmpw   $0x7cf,0xf0205228$/;"	l
f01005bb	obj/kern/kernel.asm	/^f01005bb:	cf 07 $/;"	l
f01005bd	obj/kern/kernel.asm	/^f01005bd:	76 42                	jbe    f0100601 <cons_putc+0x1b8>$/;"	l
f01005bf	obj/kern/kernel.asm	/^f01005bf:	a1 2c 52 20 f0       	mov    0xf020522c,%eax$/;"	l
f01005c4	obj/kern/kernel.asm	/^f01005c4:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
f01005cb	obj/kern/kernel.asm	/^f01005cb:	00 $/;"	l
f01005cc	obj/kern/kernel.asm	/^f01005cc:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f01005d2	obj/kern/kernel.asm	/^f01005d2:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01005d6	obj/kern/kernel.asm	/^f01005d6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01005d9	obj/kern/kernel.asm	/^f01005d9:	e8 18 5d 00 00       	call   f01062f6 <memmove>$/;"	l
f01005de	obj/kern/kernel.asm	/^f01005de:	8b 15 2c 52 20 f0    	mov    0xf020522c,%edx$/;"	l
f01005e4	obj/kern/kernel.asm	/^f01005e4:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
f01005e9	obj/kern/kernel.asm	/^f01005e9:	66 c7 04 42 20 07    	movw   $0x720,(%edx,%eax,2)$/;"	l
f01005ef	obj/kern/kernel.asm	/^f01005ef:	83 c0 01             	add    $0x1,%eax$/;"	l
f01005f2	obj/kern/kernel.asm	/^f01005f2:	3d d0 07 00 00       	cmp    $0x7d0,%eax$/;"	l
f01005f7	obj/kern/kernel.asm	/^f01005f7:	75 f0                	jne    f01005e9 <cons_putc+0x1a0>$/;"	l
f01005f9	obj/kern/kernel.asm	/^f01005f9:	66 83 2d 28 52 20 f0 	subw   $0x50,0xf0205228$/;"	l
f0100600	obj/kern/kernel.asm	/^f0100600:	50 $/;"	l
f0100601	obj/kern/kernel.asm	/^f0100601:	8b 0d 30 52 20 f0    	mov    0xf0205230,%ecx$/;"	l
f0100607	obj/kern/kernel.asm	/^f0100607:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f010060c	obj/kern/kernel.asm	/^f010060c:	89 ca                	mov    %ecx,%edx$/;"	l
f010060e	obj/kern/kernel.asm	/^f010060e:	ee                   	out    %al,(%dx)$/;"	l
f010060f	obj/kern/kernel.asm	/^f010060f:	0f b7 1d 28 52 20 f0 	movzwl 0xf0205228,%ebx$/;"	l
f0100616	obj/kern/kernel.asm	/^f0100616:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f0100619	obj/kern/kernel.asm	/^f0100619:	89 d8                	mov    %ebx,%eax$/;"	l
f010061b	obj/kern/kernel.asm	/^f010061b:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f010061f	obj/kern/kernel.asm	/^f010061f:	89 f2                	mov    %esi,%edx$/;"	l
f0100621	obj/kern/kernel.asm	/^f0100621:	ee                   	out    %al,(%dx)$/;"	l
f0100622	obj/kern/kernel.asm	/^f0100622:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100627	obj/kern/kernel.asm	/^f0100627:	89 ca                	mov    %ecx,%edx$/;"	l
f0100629	obj/kern/kernel.asm	/^f0100629:	ee                   	out    %al,(%dx)$/;"	l
f010062a	obj/kern/kernel.asm	/^f010062a:	89 d8                	mov    %ebx,%eax$/;"	l
f010062c	obj/kern/kernel.asm	/^f010062c:	89 f2                	mov    %esi,%edx$/;"	l
f010062e	obj/kern/kernel.asm	/^f010062e:	ee                   	out    %al,(%dx)$/;"	l
f010062f	obj/kern/kernel.asm	/^f010062f:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0100632	obj/kern/kernel.asm	/^f0100632:	5b                   	pop    %ebx$/;"	l
f0100633	obj/kern/kernel.asm	/^f0100633:	5e                   	pop    %esi$/;"	l
f0100634	obj/kern/kernel.asm	/^f0100634:	5f                   	pop    %edi$/;"	l
f0100635	obj/kern/kernel.asm	/^f0100635:	5d                   	pop    %ebp$/;"	l
f0100636	obj/kern/kernel.asm	/^f0100636:	c3                   	ret    $/;"	l
f0100637	obj/kern/kernel.asm	/^f0100637 <serial_intr>:$/;"	l
f0100637	obj/kern/kernel.asm	/^f0100637:	80 3d 34 52 20 f0 00 	cmpb   $0x0,0xf0205234$/;"	l
f010063e	obj/kern/kernel.asm	/^f010063e:	74 11                	je     f0100651 <serial_intr+0x1a>$/;"	l
f0100640	obj/kern/kernel.asm	/^f0100640:	55                   	push   %ebp$/;"	l
f0100641	obj/kern/kernel.asm	/^f0100641:	89 e5                	mov    %esp,%ebp$/;"	l
f0100643	obj/kern/kernel.asm	/^f0100643:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100646	obj/kern/kernel.asm	/^f0100646:	b8 e0 02 10 f0       	mov    $0xf01002e0,%eax$/;"	l
f010064b	obj/kern/kernel.asm	/^f010064b:	e8 ac fc ff ff       	call   f01002fc <cons_intr>$/;"	l
f0100650	obj/kern/kernel.asm	/^f0100650:	c9                   	leave  $/;"	l
f0100651	obj/kern/kernel.asm	/^f0100651:	f3 c3                	repz ret $/;"	l
f0100653	obj/kern/kernel.asm	/^f0100653 <kbd_intr>:$/;"	l
f0100653	obj/kern/kernel.asm	/^f0100653:	55                   	push   %ebp$/;"	l
f0100654	obj/kern/kernel.asm	/^f0100654:	89 e5                	mov    %esp,%ebp$/;"	l
f0100656	obj/kern/kernel.asm	/^f0100656:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100659	obj/kern/kernel.asm	/^f0100659:	b8 40 03 10 f0       	mov    $0xf0100340,%eax$/;"	l
f010065e	obj/kern/kernel.asm	/^f010065e:	e8 99 fc ff ff       	call   f01002fc <cons_intr>$/;"	l
f0100663	obj/kern/kernel.asm	/^f0100663:	c9                   	leave  $/;"	l
f0100664	obj/kern/kernel.asm	/^f0100664:	c3                   	ret    $/;"	l
f0100665	obj/kern/kernel.asm	/^f0100665 <cons_getc>:$/;"	l
f0100665	obj/kern/kernel.asm	/^f0100665:	55                   	push   %ebp$/;"	l
f0100666	obj/kern/kernel.asm	/^f0100666:	89 e5                	mov    %esp,%ebp$/;"	l
f0100668	obj/kern/kernel.asm	/^f0100668:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010066b	obj/kern/kernel.asm	/^f010066b:	e8 c7 ff ff ff       	call   f0100637 <serial_intr>$/;"	l
f0100670	obj/kern/kernel.asm	/^f0100670:	e8 de ff ff ff       	call   f0100653 <kbd_intr>$/;"	l
f0100675	obj/kern/kernel.asm	/^f0100675:	a1 20 52 20 f0       	mov    0xf0205220,%eax$/;"	l
f010067a	obj/kern/kernel.asm	/^f010067a:	3b 05 24 52 20 f0    	cmp    0xf0205224,%eax$/;"	l
f0100680	obj/kern/kernel.asm	/^f0100680:	74 26                	je     f01006a8 <cons_getc+0x43>$/;"	l
f0100682	obj/kern/kernel.asm	/^f0100682:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100685	obj/kern/kernel.asm	/^f0100685:	89 15 20 52 20 f0    	mov    %edx,0xf0205220$/;"	l
f010068b	obj/kern/kernel.asm	/^f010068b:	0f b6 88 20 50 20 f0 	movzbl -0xfdfafe0(%eax),%ecx$/;"	l
f0100692	obj/kern/kernel.asm	/^f0100692:	89 c8                	mov    %ecx,%eax$/;"	l
f0100694	obj/kern/kernel.asm	/^f0100694:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f010069a	obj/kern/kernel.asm	/^f010069a:	75 11                	jne    f01006ad <cons_getc+0x48>$/;"	l
f010069c	obj/kern/kernel.asm	/^f010069c:	c7 05 20 52 20 f0 00 	movl   $0x0,0xf0205220$/;"	l
f01006a3	obj/kern/kernel.asm	/^f01006a3:	00 00 00 $/;"	l
f01006a6	obj/kern/kernel.asm	/^f01006a6:	eb 05                	jmp    f01006ad <cons_getc+0x48>$/;"	l
f01006a8	obj/kern/kernel.asm	/^f01006a8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01006ad	obj/kern/kernel.asm	/^f01006ad:	c9                   	leave  $/;"	l
f01006ae	obj/kern/kernel.asm	/^f01006ae:	c3                   	ret    $/;"	l
f01006af	obj/kern/kernel.asm	/^f01006af <cons_init>:$/;"	l
f01006af	obj/kern/kernel.asm	/^f01006af:	55                   	push   %ebp$/;"	l
f01006b0	obj/kern/kernel.asm	/^f01006b0:	89 e5                	mov    %esp,%ebp$/;"	l
f01006b2	obj/kern/kernel.asm	/^f01006b2:	57                   	push   %edi$/;"	l
f01006b3	obj/kern/kernel.asm	/^f01006b3:	56                   	push   %esi$/;"	l
f01006b4	obj/kern/kernel.asm	/^f01006b4:	53                   	push   %ebx$/;"	l
f01006b5	obj/kern/kernel.asm	/^f01006b5:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01006b8	obj/kern/kernel.asm	/^f01006b8:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f01006bf	obj/kern/kernel.asm	/^f01006bf:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f01006c6	obj/kern/kernel.asm	/^f01006c6:	5a a5 $/;"	l
f01006c8	obj/kern/kernel.asm	/^f01006c8:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f01006cf	obj/kern/kernel.asm	/^f01006cf:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f01006d3	obj/kern/kernel.asm	/^f01006d3:	74 11                	je     f01006e6 <cons_init+0x37>$/;"	l
f01006d5	obj/kern/kernel.asm	/^f01006d5:	c7 05 30 52 20 f0 b4 	movl   $0x3b4,0xf0205230$/;"	l
f01006dc	obj/kern/kernel.asm	/^f01006dc:	03 00 00 $/;"	l
f01006df	obj/kern/kernel.asm	/^f01006df:	bf 00 00 0b f0       	mov    $0xf00b0000,%edi$/;"	l
f01006e4	obj/kern/kernel.asm	/^f01006e4:	eb 16                	jmp    f01006fc <cons_init+0x4d>$/;"	l
f01006e6	obj/kern/kernel.asm	/^f01006e6:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f01006ed	obj/kern/kernel.asm	/^f01006ed:	c7 05 30 52 20 f0 d4 	movl   $0x3d4,0xf0205230$/;"	l
f01006f4	obj/kern/kernel.asm	/^f01006f4:	03 00 00 $/;"	l
f01006f7	obj/kern/kernel.asm	/^f01006f7:	bf 00 80 0b f0       	mov    $0xf00b8000,%edi$/;"	l
f01006fc	obj/kern/kernel.asm	/^f01006fc:	8b 0d 30 52 20 f0    	mov    0xf0205230,%ecx$/;"	l
f0100702	obj/kern/kernel.asm	/^f0100702:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f0100707	obj/kern/kernel.asm	/^f0100707:	89 ca                	mov    %ecx,%edx$/;"	l
f0100709	obj/kern/kernel.asm	/^f0100709:	ee                   	out    %al,(%dx)$/;"	l
f010070a	obj/kern/kernel.asm	/^f010070a:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f010070d	obj/kern/kernel.asm	/^f010070d:	89 da                	mov    %ebx,%edx$/;"	l
f010070f	obj/kern/kernel.asm	/^f010070f:	ec                   	in     (%dx),%al$/;"	l
f0100710	obj/kern/kernel.asm	/^f0100710:	0f b6 f0             	movzbl %al,%esi$/;"	l
f0100713	obj/kern/kernel.asm	/^f0100713:	c1 e6 08             	shl    $0x8,%esi$/;"	l
f0100716	obj/kern/kernel.asm	/^f0100716:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f010071b	obj/kern/kernel.asm	/^f010071b:	89 ca                	mov    %ecx,%edx$/;"	l
f010071d	obj/kern/kernel.asm	/^f010071d:	ee                   	out    %al,(%dx)$/;"	l
f010071e	obj/kern/kernel.asm	/^f010071e:	89 da                	mov    %ebx,%edx$/;"	l
f0100720	obj/kern/kernel.asm	/^f0100720:	ec                   	in     (%dx),%al$/;"	l
f0100721	obj/kern/kernel.asm	/^f0100721:	89 3d 2c 52 20 f0    	mov    %edi,0xf020522c$/;"	l
f0100727	obj/kern/kernel.asm	/^f0100727:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f010072a	obj/kern/kernel.asm	/^f010072a:	09 de                	or     %ebx,%esi$/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c:	66 89 35 28 52 20 f0 	mov    %si,0xf0205228$/;"	l
f0100733	obj/kern/kernel.asm	/^f0100733:	e8 1b ff ff ff       	call   f0100653 <kbd_intr>$/;"	l
f0100738	obj/kern/kernel.asm	/^f0100738:	0f b7 05 a8 13 12 f0 	movzwl 0xf01213a8,%eax$/;"	l
f010073f	obj/kern/kernel.asm	/^f010073f:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f0100744	obj/kern/kernel.asm	/^f0100744:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100747	obj/kern/kernel.asm	/^f0100747:	e8 80 36 00 00       	call   f0103dcc <irq_setmask_8259A>$/;"	l
f010074c	obj/kern/kernel.asm	/^f010074c:	be fa 03 00 00       	mov    $0x3fa,%esi$/;"	l
f0100751	obj/kern/kernel.asm	/^f0100751:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100756	obj/kern/kernel.asm	/^f0100756:	89 f2                	mov    %esi,%edx$/;"	l
f0100758	obj/kern/kernel.asm	/^f0100758:	ee                   	out    %al,(%dx)$/;"	l
f0100759	obj/kern/kernel.asm	/^f0100759:	b2 fb                	mov    $0xfb,%dl$/;"	l
f010075b	obj/kern/kernel.asm	/^f010075b:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f0100760	obj/kern/kernel.asm	/^f0100760:	ee                   	out    %al,(%dx)$/;"	l
f0100761	obj/kern/kernel.asm	/^f0100761:	bb f8 03 00 00       	mov    $0x3f8,%ebx$/;"	l
f0100766	obj/kern/kernel.asm	/^f0100766:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f010076b	obj/kern/kernel.asm	/^f010076b:	89 da                	mov    %ebx,%edx$/;"	l
f010076d	obj/kern/kernel.asm	/^f010076d:	ee                   	out    %al,(%dx)$/;"	l
f010076e	obj/kern/kernel.asm	/^f010076e:	b2 f9                	mov    $0xf9,%dl$/;"	l
f0100770	obj/kern/kernel.asm	/^f0100770:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100775	obj/kern/kernel.asm	/^f0100775:	ee                   	out    %al,(%dx)$/;"	l
f0100776	obj/kern/kernel.asm	/^f0100776:	b2 fb                	mov    $0xfb,%dl$/;"	l
f0100778	obj/kern/kernel.asm	/^f0100778:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f010077d	obj/kern/kernel.asm	/^f010077d:	ee                   	out    %al,(%dx)$/;"	l
f010077e	obj/kern/kernel.asm	/^f010077e:	b2 fc                	mov    $0xfc,%dl$/;"	l
f0100780	obj/kern/kernel.asm	/^f0100780:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100785	obj/kern/kernel.asm	/^f0100785:	ee                   	out    %al,(%dx)$/;"	l
f0100786	obj/kern/kernel.asm	/^f0100786:	b2 f9                	mov    $0xf9,%dl$/;"	l
f0100788	obj/kern/kernel.asm	/^f0100788:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010078d	obj/kern/kernel.asm	/^f010078d:	ee                   	out    %al,(%dx)$/;"	l
f010078e	obj/kern/kernel.asm	/^f010078e:	b2 fd                	mov    $0xfd,%dl$/;"	l
f0100790	obj/kern/kernel.asm	/^f0100790:	ec                   	in     (%dx),%al$/;"	l
f0100791	obj/kern/kernel.asm	/^f0100791:	3c ff                	cmp    $0xff,%al$/;"	l
f0100793	obj/kern/kernel.asm	/^f0100793:	0f 95 c1             	setne  %cl$/;"	l
f0100796	obj/kern/kernel.asm	/^f0100796:	88 0d 34 52 20 f0    	mov    %cl,0xf0205234$/;"	l
f010079c	obj/kern/kernel.asm	/^f010079c:	89 f2                	mov    %esi,%edx$/;"	l
f010079e	obj/kern/kernel.asm	/^f010079e:	ec                   	in     (%dx),%al$/;"	l
f010079f	obj/kern/kernel.asm	/^f010079f:	89 da                	mov    %ebx,%edx$/;"	l
f01007a1	obj/kern/kernel.asm	/^f01007a1:	ec                   	in     (%dx),%al$/;"	l
f01007a2	obj/kern/kernel.asm	/^f01007a2:	84 c9                	test   %cl,%cl$/;"	l
f01007a4	obj/kern/kernel.asm	/^f01007a4:	74 1d                	je     f01007c3 <cons_init+0x114>$/;"	l
f01007a6	obj/kern/kernel.asm	/^f01007a6:	0f b7 05 a8 13 12 f0 	movzwl 0xf01213a8,%eax$/;"	l
f01007ad	obj/kern/kernel.asm	/^f01007ad:	25 ef ff 00 00       	and    $0xffef,%eax$/;"	l
f01007b2	obj/kern/kernel.asm	/^f01007b2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01007b5	obj/kern/kernel.asm	/^f01007b5:	e8 12 36 00 00       	call   f0103dcc <irq_setmask_8259A>$/;"	l
f01007ba	obj/kern/kernel.asm	/^f01007ba:	80 3d 34 52 20 f0 00 	cmpb   $0x0,0xf0205234$/;"	l
f01007c1	obj/kern/kernel.asm	/^f01007c1:	75 0c                	jne    f01007cf <cons_init+0x120>$/;"	l
f01007c3	obj/kern/kernel.asm	/^f01007c3:	c7 04 24 14 71 10 f0 	movl   $0xf0107114,(%esp)$/;"	l
f01007ca	obj/kern/kernel.asm	/^f01007ca:	e8 3f 37 00 00       	call   f0103f0e <cprintf>$/;"	l
f01007cf	obj/kern/kernel.asm	/^f01007cf:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01007d2	obj/kern/kernel.asm	/^f01007d2:	5b                   	pop    %ebx$/;"	l
f01007d3	obj/kern/kernel.asm	/^f01007d3:	5e                   	pop    %esi$/;"	l
f01007d4	obj/kern/kernel.asm	/^f01007d4:	5f                   	pop    %edi$/;"	l
f01007d5	obj/kern/kernel.asm	/^f01007d5:	5d                   	pop    %ebp$/;"	l
f01007d6	obj/kern/kernel.asm	/^f01007d6:	c3                   	ret    $/;"	l
f01007d7	obj/kern/kernel.asm	/^f01007d7 <cputchar>:$/;"	l
f01007d7	obj/kern/kernel.asm	/^f01007d7:	55                   	push   %ebp$/;"	l
f01007d8	obj/kern/kernel.asm	/^f01007d8:	89 e5                	mov    %esp,%ebp$/;"	l
f01007da	obj/kern/kernel.asm	/^f01007da:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01007dd	obj/kern/kernel.asm	/^f01007dd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01007e0	obj/kern/kernel.asm	/^f01007e0:	e8 64 fc ff ff       	call   f0100449 <cons_putc>$/;"	l
f01007e5	obj/kern/kernel.asm	/^f01007e5:	c9                   	leave  $/;"	l
f01007e6	obj/kern/kernel.asm	/^f01007e6:	c3                   	ret    $/;"	l
f01007e7	obj/kern/kernel.asm	/^f01007e7 <getchar>:$/;"	l
f01007e7	obj/kern/kernel.asm	/^f01007e7:	55                   	push   %ebp$/;"	l
f01007e8	obj/kern/kernel.asm	/^f01007e8:	89 e5                	mov    %esp,%ebp$/;"	l
f01007ea	obj/kern/kernel.asm	/^f01007ea:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01007ed	obj/kern/kernel.asm	/^f01007ed:	e8 73 fe ff ff       	call   f0100665 <cons_getc>$/;"	l
f01007f2	obj/kern/kernel.asm	/^f01007f2:	85 c0                	test   %eax,%eax$/;"	l
f01007f4	obj/kern/kernel.asm	/^f01007f4:	74 f7                	je     f01007ed <getchar+0x6>$/;"	l
f01007f6	obj/kern/kernel.asm	/^f01007f6:	c9                   	leave  $/;"	l
f01007f7	obj/kern/kernel.asm	/^f01007f7:	c3                   	ret    $/;"	l
f01007f8	obj/kern/kernel.asm	/^f01007f8 <iscons>:$/;"	l
f01007f8	obj/kern/kernel.asm	/^f01007f8:	55                   	push   %ebp$/;"	l
f01007f9	obj/kern/kernel.asm	/^f01007f9:	89 e5                	mov    %esp,%ebp$/;"	l
f01007fb	obj/kern/kernel.asm	/^f01007fb:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100800	obj/kern/kernel.asm	/^f0100800:	5d                   	pop    %ebp$/;"	l
f0100801	obj/kern/kernel.asm	/^f0100801:	c3                   	ret    $/;"	l
f0100802	obj/kern/kernel.asm	/^f0100802:	66 90                	xchg   %ax,%ax$/;"	l
f0100804	obj/kern/kernel.asm	/^f0100804:	66 90                	xchg   %ax,%ax$/;"	l
f0100806	obj/kern/kernel.asm	/^f0100806:	66 90                	xchg   %ax,%ax$/;"	l
f0100808	obj/kern/kernel.asm	/^f0100808:	66 90                	xchg   %ax,%ax$/;"	l
f010080a	obj/kern/kernel.asm	/^f010080a:	66 90                	xchg   %ax,%ax$/;"	l
f010080c	obj/kern/kernel.asm	/^f010080c:	66 90                	xchg   %ax,%ax$/;"	l
f010080e	obj/kern/kernel.asm	/^f010080e:	66 90                	xchg   %ax,%ax$/;"	l
f0100810	obj/kern/kernel.asm	/^f0100810 <mon_continue>:$/;"	l
f0100810	obj/kern/kernel.asm	/^f0100810:	55                   	push   %ebp$/;"	l
f0100811	obj/kern/kernel.asm	/^f0100811:	89 e5                	mov    %esp,%ebp$/;"	l
f0100813	obj/kern/kernel.asm	/^f0100813:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100818	obj/kern/kernel.asm	/^f0100818:	5d                   	pop    %ebp$/;"	l
f0100819	obj/kern/kernel.asm	/^f0100819:	c3                   	ret    $/;"	l
f010081a	obj/kern/kernel.asm	/^f010081a <mon_si>:$/;"	l
f010081a	obj/kern/kernel.asm	/^f010081a:	55                   	push   %ebp$/;"	l
f010081b	obj/kern/kernel.asm	/^f010081b:	89 e5                	mov    %esp,%ebp$/;"	l
f010081d	obj/kern/kernel.asm	/^f010081d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100822	obj/kern/kernel.asm	/^f0100822:	5d                   	pop    %ebp$/;"	l
f0100823	obj/kern/kernel.asm	/^f0100823:	c3                   	ret    $/;"	l
f0100824	obj/kern/kernel.asm	/^f0100824 <mon_help>:$/;"	l
f0100824	obj/kern/kernel.asm	/^f0100824:	55                   	push   %ebp$/;"	l
f0100825	obj/kern/kernel.asm	/^f0100825:	89 e5                	mov    %esp,%ebp$/;"	l
f0100827	obj/kern/kernel.asm	/^f0100827:	56                   	push   %esi$/;"	l
f0100828	obj/kern/kernel.asm	/^f0100828:	53                   	push   %ebx$/;"	l
f0100829	obj/kern/kernel.asm	/^f0100829:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010082c	obj/kern/kernel.asm	/^f010082c:	bb 44 76 10 f0       	mov    $0xf0107644,%ebx$/;"	l
f0100831	obj/kern/kernel.asm	/^f0100831:	be 80 76 10 f0       	mov    $0xf0107680,%esi$/;"	l
f0100836	obj/kern/kernel.asm	/^f0100836:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100838	obj/kern/kernel.asm	/^f0100838:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010083c	obj/kern/kernel.asm	/^f010083c:	8b 43 fc             	mov    -0x4(%ebx),%eax$/;"	l
f010083f	obj/kern/kernel.asm	/^f010083f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100843	obj/kern/kernel.asm	/^f0100843:	c7 04 24 60 73 10 f0 	movl   $0xf0107360,(%esp)$/;"	l
f010084a	obj/kern/kernel.asm	/^f010084a:	e8 bf 36 00 00       	call   f0103f0e <cprintf>$/;"	l
f010084f	obj/kern/kernel.asm	/^f010084f:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0100852	obj/kern/kernel.asm	/^f0100852:	39 f3                	cmp    %esi,%ebx$/;"	l
f0100854	obj/kern/kernel.asm	/^f0100854:	75 e0                	jne    f0100836 <mon_help+0x12>$/;"	l
f0100856	obj/kern/kernel.asm	/^f0100856:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010085b	obj/kern/kernel.asm	/^f010085b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010085e	obj/kern/kernel.asm	/^f010085e:	5b                   	pop    %ebx$/;"	l
f010085f	obj/kern/kernel.asm	/^f010085f:	5e                   	pop    %esi$/;"	l
f0100860	obj/kern/kernel.asm	/^f0100860:	5d                   	pop    %ebp$/;"	l
f0100861	obj/kern/kernel.asm	/^f0100861:	c3                   	ret    $/;"	l
f0100862	obj/kern/kernel.asm	/^f0100862 <mon_kerninfo>:$/;"	l
f0100862	obj/kern/kernel.asm	/^f0100862:	55                   	push   %ebp$/;"	l
f0100863	obj/kern/kernel.asm	/^f0100863:	89 e5                	mov    %esp,%ebp$/;"	l
f0100865	obj/kern/kernel.asm	/^f0100865:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100868	obj/kern/kernel.asm	/^f0100868:	c7 04 24 69 73 10 f0 	movl   $0xf0107369,(%esp)$/;"	l
f010086f	obj/kern/kernel.asm	/^f010086f:	e8 9a 36 00 00       	call   f0103f0e <cprintf>$/;"	l
f0100874	obj/kern/kernel.asm	/^f0100874:	c7 44 24 04 0c 00 10 	movl   $0x10000c,0x4(%esp)$/;"	l
f010087b	obj/kern/kernel.asm	/^f010087b:	00 $/;"	l
f010087c	obj/kern/kernel.asm	/^f010087c:	c7 04 24 28 74 10 f0 	movl   $0xf0107428,(%esp)$/;"	l
f0100883	obj/kern/kernel.asm	/^f0100883:	e8 86 36 00 00       	call   f0103f0e <cprintf>$/;"	l
f0100888	obj/kern/kernel.asm	/^f0100888:	c7 44 24 08 0c 00 10 	movl   $0x10000c,0x8(%esp)$/;"	l
f010088f	obj/kern/kernel.asm	/^f010088f:	00 $/;"	l
f0100890	obj/kern/kernel.asm	/^f0100890:	c7 44 24 04 0c 00 10 	movl   $0xf010000c,0x4(%esp)$/;"	l
f0100897	obj/kern/kernel.asm	/^f0100897:	f0 $/;"	l
f0100898	obj/kern/kernel.asm	/^f0100898:	c7 04 24 50 74 10 f0 	movl   $0xf0107450,(%esp)$/;"	l
f010089f	obj/kern/kernel.asm	/^f010089f:	e8 6a 36 00 00       	call   f0103f0e <cprintf>$/;"	l
f01008a4	obj/kern/kernel.asm	/^f01008a4:	c7 44 24 08 47 70 10 	movl   $0x107047,0x8(%esp)$/;"	l
f01008ab	obj/kern/kernel.asm	/^f01008ab:	00 $/;"	l
f01008ac	obj/kern/kernel.asm	/^f01008ac:	c7 44 24 04 47 70 10 	movl   $0xf0107047,0x4(%esp)$/;"	l
f01008b3	obj/kern/kernel.asm	/^f01008b3:	f0 $/;"	l
f01008b4	obj/kern/kernel.asm	/^f01008b4:	c7 04 24 74 74 10 f0 	movl   $0xf0107474,(%esp)$/;"	l
f01008bb	obj/kern/kernel.asm	/^f01008bb:	e8 4e 36 00 00       	call   f0103f0e <cprintf>$/;"	l
f01008c0	obj/kern/kernel.asm	/^f01008c0:	c7 44 24 08 e3 43 20 	movl   $0x2043e3,0x8(%esp)$/;"	l
f01008c7	obj/kern/kernel.asm	/^f01008c7:	00 $/;"	l
f01008c8	obj/kern/kernel.asm	/^f01008c8:	c7 44 24 04 e3 43 20 	movl   $0xf02043e3,0x4(%esp)$/;"	l
f01008cf	obj/kern/kernel.asm	/^f01008cf:	f0 $/;"	l
f01008d0	obj/kern/kernel.asm	/^f01008d0:	c7 04 24 98 74 10 f0 	movl   $0xf0107498,(%esp)$/;"	l
f01008d7	obj/kern/kernel.asm	/^f01008d7:	e8 32 36 00 00       	call   f0103f0e <cprintf>$/;"	l
f01008dc	obj/kern/kernel.asm	/^f01008dc:	c7 44 24 08 08 70 24 	movl   $0x247008,0x8(%esp)$/;"	l
f01008e3	obj/kern/kernel.asm	/^f01008e3:	00 $/;"	l
f01008e4	obj/kern/kernel.asm	/^f01008e4:	c7 44 24 04 08 70 24 	movl   $0xf0247008,0x4(%esp)$/;"	l
f01008eb	obj/kern/kernel.asm	/^f01008eb:	f0 $/;"	l
f01008ec	obj/kern/kernel.asm	/^f01008ec:	c7 04 24 bc 74 10 f0 	movl   $0xf01074bc,(%esp)$/;"	l
f01008f3	obj/kern/kernel.asm	/^f01008f3:	e8 16 36 00 00       	call   f0103f0e <cprintf>$/;"	l
f01008f8	obj/kern/kernel.asm	/^f01008f8:	b8 07 74 24 f0       	mov    $0xf0247407,%eax$/;"	l
f01008fd	obj/kern/kernel.asm	/^f01008fd:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f0100902	obj/kern/kernel.asm	/^f0100902:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0100907	obj/kern/kernel.asm	/^f0100907:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f010090d	obj/kern/kernel.asm	/^f010090d:	85 c0                	test   %eax,%eax$/;"	l
f010090f	obj/kern/kernel.asm	/^f010090f:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0100912	obj/kern/kernel.asm	/^f0100912:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f0100915	obj/kern/kernel.asm	/^f0100915:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100919	obj/kern/kernel.asm	/^f0100919:	c7 04 24 e0 74 10 f0 	movl   $0xf01074e0,(%esp)$/;"	l
f0100920	obj/kern/kernel.asm	/^f0100920:	e8 e9 35 00 00       	call   f0103f0e <cprintf>$/;"	l
f0100925	obj/kern/kernel.asm	/^f0100925:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010092a	obj/kern/kernel.asm	/^f010092a:	c9                   	leave  $/;"	l
f010092b	obj/kern/kernel.asm	/^f010092b:	c3                   	ret    $/;"	l
f010092c	obj/kern/kernel.asm	/^f010092c <mon_backtrace>:$/;"	l
f010092c	obj/kern/kernel.asm	/^f010092c:	55                   	push   %ebp$/;"	l
f010092d	obj/kern/kernel.asm	/^f010092d:	89 e5                	mov    %esp,%ebp$/;"	l
f010092f	obj/kern/kernel.asm	/^f010092f:	57                   	push   %edi$/;"	l
f0100930	obj/kern/kernel.asm	/^f0100930:	56                   	push   %esi$/;"	l
f0100931	obj/kern/kernel.asm	/^f0100931:	53                   	push   %ebx$/;"	l
f0100932	obj/kern/kernel.asm	/^f0100932:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0100935	obj/kern/kernel.asm	/^f0100935:	89 ee                	mov    %ebp,%esi$/;"	l
f0100937	obj/kern/kernel.asm	/^f0100937:	89 f3                	mov    %esi,%ebx$/;"	l
f0100939	obj/kern/kernel.asm	/^f0100939:	c7 04 24 82 73 10 f0 	movl   $0xf0107382,(%esp)$/;"	l
f0100940	obj/kern/kernel.asm	/^f0100940:	e8 c9 35 00 00       	call   f0103f0e <cprintf>$/;"	l
f0100945	obj/kern/kernel.asm	/^f0100945:	85 f6                	test   %esi,%esi$/;"	l
f0100947	obj/kern/kernel.asm	/^f0100947:	0f 84 d4 00 00 00    	je     f0100a21 <mon_backtrace+0xf5>$/;"	l
f010094d	obj/kern/kernel.asm	/^f010094d:	8b 73 04             	mov    0x4(%ebx),%esi$/;"	l
f0100950	obj/kern/kernel.asm	/^f0100950:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%ebp)$/;"	l
f0100957	obj/kern/kernel.asm	/^f0100957:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)$/;"	l
f010095e	obj/kern/kernel.asm	/^f010095e:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)$/;"	l
f0100965	obj/kern/kernel.asm	/^f0100965:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%ebp)$/;"	l
f010096c	obj/kern/kernel.asm	/^f010096c:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)$/;"	l
f0100973	obj/kern/kernel.asm	/^f0100973:	8d 43 08             	lea    0x8(%ebx),%eax$/;"	l
f0100976	obj/kern/kernel.asm	/^f0100976:	8d 4b 1c             	lea    0x1c(%ebx),%ecx$/;"	l
f0100979	obj/kern/kernel.asm	/^f0100979:	8d 55 bc             	lea    -0x44(%ebp),%edx$/;"	l
f010097c	obj/kern/kernel.asm	/^f010097c:	29 da                	sub    %ebx,%edx$/;"	l
f010097e	obj/kern/kernel.asm	/^f010097e:	8b 38                	mov    (%eax),%edi$/;"	l
f0100980	obj/kern/kernel.asm	/^f0100980:	89 7c 02 f8          	mov    %edi,-0x8(%edx,%eax,1)$/;"	l
f0100984	obj/kern/kernel.asm	/^f0100984:	83 c0 04             	add    $0x4,%eax$/;"	l
f0100987	obj/kern/kernel.asm	/^f0100987:	39 c8                	cmp    %ecx,%eax$/;"	l
f0100989	obj/kern/kernel.asm	/^f0100989:	75 f3                	jne    f010097e <mon_backtrace+0x52>$/;"	l
f010098b	obj/kern/kernel.asm	/^f010098b:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f010098e	obj/kern/kernel.asm	/^f010098e:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f0100992	obj/kern/kernel.asm	/^f0100992:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
f0100995	obj/kern/kernel.asm	/^f0100995:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
f0100999	obj/kern/kernel.asm	/^f0100999:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f010099c	obj/kern/kernel.asm	/^f010099c:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f01009a0	obj/kern/kernel.asm	/^f01009a0:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f01009a3	obj/kern/kernel.asm	/^f01009a3:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f01009a7	obj/kern/kernel.asm	/^f01009a7:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f01009aa	obj/kern/kernel.asm	/^f01009aa:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01009ae	obj/kern/kernel.asm	/^f01009ae:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f01009b2	obj/kern/kernel.asm	/^f01009b2:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01009b6	obj/kern/kernel.asm	/^f01009b6:	c7 04 24 0c 75 10 f0 	movl   $0xf010750c,(%esp)$/;"	l
f01009bd	obj/kern/kernel.asm	/^f01009bd:	e8 4c 35 00 00       	call   f0103f0e <cprintf>$/;"	l
f01009c2	obj/kern/kernel.asm	/^f01009c2:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
f01009c5	obj/kern/kernel.asm	/^f01009c5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01009c9	obj/kern/kernel.asm	/^f01009c9:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01009cc	obj/kern/kernel.asm	/^f01009cc:	e8 ac 4d 00 00       	call   f010577d <debuginfo_eip>$/;"	l
f01009d1	obj/kern/kernel.asm	/^f01009d1:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01009d4	obj/kern/kernel.asm	/^f01009d4:	85 d2                	test   %edx,%edx$/;"	l
f01009d6	obj/kern/kernel.asm	/^f01009d6:	7e 13                	jle    f01009eb <mon_backtrace+0xbf>$/;"	l
f01009d8	obj/kern/kernel.asm	/^f01009d8:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01009dd	obj/kern/kernel.asm	/^f01009dd:	eb 08                	jmp    f01009e7 <mon_backtrace+0xbb>$/;"	l
f01009df	obj/kern/kernel.asm	/^f01009df:	83 c0 01             	add    $0x1,%eax$/;"	l
f01009e2	obj/kern/kernel.asm	/^f01009e2:	83 f8 64             	cmp    $0x64,%eax$/;"	l
f01009e5	obj/kern/kernel.asm	/^f01009e5:	74 04                	je     f01009eb <mon_backtrace+0xbf>$/;"	l
f01009e7	obj/kern/kernel.asm	/^f01009e7:	39 d0                	cmp    %edx,%eax$/;"	l
f01009e9	obj/kern/kernel.asm	/^f01009e9:	7c f4                	jl     f01009df <mon_backtrace+0xb3>$/;"	l
f01009eb	obj/kern/kernel.asm	/^f01009eb:	2b 75 e0             	sub    -0x20(%ebp),%esi$/;"	l
f01009ee	obj/kern/kernel.asm	/^f01009ee:	89 74 24 14          	mov    %esi,0x14(%esp)$/;"	l
f01009f2	obj/kern/kernel.asm	/^f01009f2:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f01009f5	obj/kern/kernel.asm	/^f01009f5:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f01009f9	obj/kern/kernel.asm	/^f01009f9:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01009fd	obj/kern/kernel.asm	/^f01009fd:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0100a00	obj/kern/kernel.asm	/^f0100a00:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100a04	obj/kern/kernel.asm	/^f0100a04:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0100a07	obj/kern/kernel.asm	/^f0100a07:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100a0b	obj/kern/kernel.asm	/^f0100a0b:	c7 04 24 94 73 10 f0 	movl   $0xf0107394,(%esp)$/;"	l
f0100a12	obj/kern/kernel.asm	/^f0100a12:	e8 f7 34 00 00       	call   f0103f0e <cprintf>$/;"	l
f0100a17	obj/kern/kernel.asm	/^f0100a17:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100a19	obj/kern/kernel.asm	/^f0100a19:	85 db                	test   %ebx,%ebx$/;"	l
f0100a1b	obj/kern/kernel.asm	/^f0100a1b:	0f 85 2c ff ff ff    	jne    f010094d <mon_backtrace+0x21>$/;"	l
f0100a21	obj/kern/kernel.asm	/^f0100a21:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100a26	obj/kern/kernel.asm	/^f0100a26:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f0100a29	obj/kern/kernel.asm	/^f0100a29:	5b                   	pop    %ebx$/;"	l
f0100a2a	obj/kern/kernel.asm	/^f0100a2a:	5e                   	pop    %esi$/;"	l
f0100a2b	obj/kern/kernel.asm	/^f0100a2b:	5f                   	pop    %edi$/;"	l
f0100a2c	obj/kern/kernel.asm	/^f0100a2c:	5d                   	pop    %ebp$/;"	l
f0100a2d	obj/kern/kernel.asm	/^f0100a2d:	c3                   	ret    $/;"	l
f0100a2e	obj/kern/kernel.asm	/^f0100a2e <monitor>:$/;"	l
f0100a2e	obj/kern/kernel.asm	/^f0100a2e:	55                   	push   %ebp$/;"	l
f0100a2f	obj/kern/kernel.asm	/^f0100a2f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a31	obj/kern/kernel.asm	/^f0100a31:	57                   	push   %edi$/;"	l
f0100a32	obj/kern/kernel.asm	/^f0100a32:	56                   	push   %esi$/;"	l
f0100a33	obj/kern/kernel.asm	/^f0100a33:	53                   	push   %ebx$/;"	l
f0100a34	obj/kern/kernel.asm	/^f0100a34:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0100a37	obj/kern/kernel.asm	/^f0100a37:	c7 04 24 40 75 10 f0 	movl   $0xf0107540,(%esp)$/;"	l
f0100a3e	obj/kern/kernel.asm	/^f0100a3e:	e8 cb 34 00 00       	call   f0103f0e <cprintf>$/;"	l
f0100a43	obj/kern/kernel.asm	/^f0100a43:	c7 04 24 64 75 10 f0 	movl   $0xf0107564,(%esp)$/;"	l
f0100a4a	obj/kern/kernel.asm	/^f0100a4a:	e8 bf 34 00 00       	call   f0103f0e <cprintf>$/;"	l
f0100a4f	obj/kern/kernel.asm	/^f0100a4f:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0100a53	obj/kern/kernel.asm	/^f0100a53:	74 0b                	je     f0100a60 <monitor+0x32>$/;"	l
f0100a55	obj/kern/kernel.asm	/^f0100a55:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100a58	obj/kern/kernel.asm	/^f0100a58:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a5b	obj/kern/kernel.asm	/^f0100a5b:	e8 89 3c 00 00       	call   f01046e9 <print_trapframe>$/;"	l
f0100a60	obj/kern/kernel.asm	/^f0100a60:	c7 04 24 a9 73 10 f0 	movl   $0xf01073a9,(%esp)$/;"	l
f0100a67	obj/kern/kernel.asm	/^f0100a67:	e8 54 55 00 00       	call   f0105fc0 <readline>$/;"	l
f0100a6c	obj/kern/kernel.asm	/^f0100a6c:	89 c3                	mov    %eax,%ebx$/;"	l
f0100a6e	obj/kern/kernel.asm	/^f0100a6e:	85 c0                	test   %eax,%eax$/;"	l
f0100a70	obj/kern/kernel.asm	/^f0100a70:	74 ee                	je     f0100a60 <monitor+0x32>$/;"	l
f0100a72	obj/kern/kernel.asm	/^f0100a72:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100a79	obj/kern/kernel.asm	/^f0100a79:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100a7e	obj/kern/kernel.asm	/^f0100a7e:	eb 0a                	jmp    f0100a8a <monitor+0x5c>$/;"	l
f0100a80	obj/kern/kernel.asm	/^f0100a80:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f0100a83	obj/kern/kernel.asm	/^f0100a83:	89 f7                	mov    %esi,%edi$/;"	l
f0100a85	obj/kern/kernel.asm	/^f0100a85:	8d 5b 01             	lea    0x1(%ebx),%ebx$/;"	l
f0100a88	obj/kern/kernel.asm	/^f0100a88:	89 fe                	mov    %edi,%esi$/;"	l
f0100a8a	obj/kern/kernel.asm	/^f0100a8a:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100a8d	obj/kern/kernel.asm	/^f0100a8d:	84 c0                	test   %al,%al$/;"	l
f0100a8f	obj/kern/kernel.asm	/^f0100a8f:	74 6a                	je     f0100afb <monitor+0xcd>$/;"	l
f0100a91	obj/kern/kernel.asm	/^f0100a91:	0f be c0             	movsbl %al,%eax$/;"	l
f0100a94	obj/kern/kernel.asm	/^f0100a94:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100a98	obj/kern/kernel.asm	/^f0100a98:	c7 04 24 ad 73 10 f0 	movl   $0xf01073ad,(%esp)$/;"	l
f0100a9f	obj/kern/kernel.asm	/^f0100a9f:	e8 a5 57 00 00       	call   f0106249 <strchr>$/;"	l
f0100aa4	obj/kern/kernel.asm	/^f0100aa4:	85 c0                	test   %eax,%eax$/;"	l
f0100aa6	obj/kern/kernel.asm	/^f0100aa6:	75 d8                	jne    f0100a80 <monitor+0x52>$/;"	l
f0100aa8	obj/kern/kernel.asm	/^f0100aa8:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100aab	obj/kern/kernel.asm	/^f0100aab:	74 4e                	je     f0100afb <monitor+0xcd>$/;"	l
f0100aad	obj/kern/kernel.asm	/^f0100aad:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0100ab0	obj/kern/kernel.asm	/^f0100ab0:	75 16                	jne    f0100ac8 <monitor+0x9a>$/;"	l
f0100ab2	obj/kern/kernel.asm	/^f0100ab2:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
f0100ab9	obj/kern/kernel.asm	/^f0100ab9:	00 $/;"	l
f0100aba	obj/kern/kernel.asm	/^f0100aba:	c7 04 24 b2 73 10 f0 	movl   $0xf01073b2,(%esp)$/;"	l
f0100ac1	obj/kern/kernel.asm	/^f0100ac1:	e8 48 34 00 00       	call   f0103f0e <cprintf>$/;"	l
f0100ac6	obj/kern/kernel.asm	/^f0100ac6:	eb 98                	jmp    f0100a60 <monitor+0x32>$/;"	l
f0100ac8	obj/kern/kernel.asm	/^f0100ac8:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f0100acb	obj/kern/kernel.asm	/^f0100acb:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0100acf	obj/kern/kernel.asm	/^f0100acf:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100ad2	obj/kern/kernel.asm	/^f0100ad2:	84 c0                	test   %al,%al$/;"	l
f0100ad4	obj/kern/kernel.asm	/^f0100ad4:	75 0c                	jne    f0100ae2 <monitor+0xb4>$/;"	l
f0100ad6	obj/kern/kernel.asm	/^f0100ad6:	eb b0                	jmp    f0100a88 <monitor+0x5a>$/;"	l
f0100ad8	obj/kern/kernel.asm	/^f0100ad8:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100adb	obj/kern/kernel.asm	/^f0100adb:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100ade	obj/kern/kernel.asm	/^f0100ade:	84 c0                	test   %al,%al$/;"	l
f0100ae0	obj/kern/kernel.asm	/^f0100ae0:	74 a6                	je     f0100a88 <monitor+0x5a>$/;"	l
f0100ae2	obj/kern/kernel.asm	/^f0100ae2:	0f be c0             	movsbl %al,%eax$/;"	l
f0100ae5	obj/kern/kernel.asm	/^f0100ae5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100ae9	obj/kern/kernel.asm	/^f0100ae9:	c7 04 24 ad 73 10 f0 	movl   $0xf01073ad,(%esp)$/;"	l
f0100af0	obj/kern/kernel.asm	/^f0100af0:	e8 54 57 00 00       	call   f0106249 <strchr>$/;"	l
f0100af5	obj/kern/kernel.asm	/^f0100af5:	85 c0                	test   %eax,%eax$/;"	l
f0100af7	obj/kern/kernel.asm	/^f0100af7:	74 df                	je     f0100ad8 <monitor+0xaa>$/;"	l
f0100af9	obj/kern/kernel.asm	/^f0100af9:	eb 8d                	jmp    f0100a88 <monitor+0x5a>$/;"	l
f0100afb	obj/kern/kernel.asm	/^f0100afb:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0100b02	obj/kern/kernel.asm	/^f0100b02:	00 $/;"	l
f0100b03	obj/kern/kernel.asm	/^f0100b03:	85 f6                	test   %esi,%esi$/;"	l
f0100b05	obj/kern/kernel.asm	/^f0100b05:	0f 84 55 ff ff ff    	je     f0100a60 <monitor+0x32>$/;"	l
f0100b0b	obj/kern/kernel.asm	/^f0100b0b:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100b10	obj/kern/kernel.asm	/^f0100b10:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100b13	obj/kern/kernel.asm	/^f0100b13:	8b 04 85 40 76 10 f0 	mov    -0xfef89c0(,%eax,4),%eax$/;"	l
f0100b1a	obj/kern/kernel.asm	/^f0100b1a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b1e	obj/kern/kernel.asm	/^f0100b1e:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100b21	obj/kern/kernel.asm	/^f0100b21:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b24	obj/kern/kernel.asm	/^f0100b24:	e8 9c 56 00 00       	call   f01061c5 <strcmp>$/;"	l
f0100b29	obj/kern/kernel.asm	/^f0100b29:	85 c0                	test   %eax,%eax$/;"	l
f0100b2b	obj/kern/kernel.asm	/^f0100b2b:	75 24                	jne    f0100b51 <monitor+0x123>$/;"	l
f0100b2d	obj/kern/kernel.asm	/^f0100b2d:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100b30	obj/kern/kernel.asm	/^f0100b30:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0100b33	obj/kern/kernel.asm	/^f0100b33:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100b37	obj/kern/kernel.asm	/^f0100b37:	8d 4d a8             	lea    -0x58(%ebp),%ecx$/;"	l
f0100b3a	obj/kern/kernel.asm	/^f0100b3a:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0100b3e	obj/kern/kernel.asm	/^f0100b3e:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100b41	obj/kern/kernel.asm	/^f0100b41:	ff 14 85 48 76 10 f0 	call   *-0xfef89b8(,%eax,4)$/;"	l
f0100b48	obj/kern/kernel.asm	/^f0100b48:	85 c0                	test   %eax,%eax$/;"	l
f0100b4a	obj/kern/kernel.asm	/^f0100b4a:	78 25                	js     f0100b71 <monitor+0x143>$/;"	l
f0100b4c	obj/kern/kernel.asm	/^f0100b4c:	e9 0f ff ff ff       	jmp    f0100a60 <monitor+0x32>$/;"	l
f0100b51	obj/kern/kernel.asm	/^f0100b51:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100b54	obj/kern/kernel.asm	/^f0100b54:	83 fb 05             	cmp    $0x5,%ebx$/;"	l
f0100b57	obj/kern/kernel.asm	/^f0100b57:	75 b7                	jne    f0100b10 <monitor+0xe2>$/;"	l
f0100b59	obj/kern/kernel.asm	/^f0100b59:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100b5c	obj/kern/kernel.asm	/^f0100b5c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b60	obj/kern/kernel.asm	/^f0100b60:	c7 04 24 cf 73 10 f0 	movl   $0xf01073cf,(%esp)$/;"	l
f0100b67	obj/kern/kernel.asm	/^f0100b67:	e8 a2 33 00 00       	call   f0103f0e <cprintf>$/;"	l
f0100b6c	obj/kern/kernel.asm	/^f0100b6c:	e9 ef fe ff ff       	jmp    f0100a60 <monitor+0x32>$/;"	l
f0100b71	obj/kern/kernel.asm	/^f0100b71:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f0100b74	obj/kern/kernel.asm	/^f0100b74:	5b                   	pop    %ebx$/;"	l
f0100b75	obj/kern/kernel.asm	/^f0100b75:	5e                   	pop    %esi$/;"	l
f0100b76	obj/kern/kernel.asm	/^f0100b76:	5f                   	pop    %edi$/;"	l
f0100b77	obj/kern/kernel.asm	/^f0100b77:	5d                   	pop    %ebp$/;"	l
f0100b78	obj/kern/kernel.asm	/^f0100b78:	c3                   	ret    $/;"	l
f0100b79	obj/kern/kernel.asm	/^f0100b79:	66 90                	xchg   %ax,%ax$/;"	l
f0100b7b	obj/kern/kernel.asm	/^f0100b7b:	66 90                	xchg   %ax,%ax$/;"	l
f0100b7d	obj/kern/kernel.asm	/^f0100b7d:	66 90                	xchg   %ax,%ax$/;"	l
f0100b7f	obj/kern/kernel.asm	/^f0100b7f:	90                   	nop$/;"	l
f0100b80	obj/kern/kernel.asm	/^f0100b80 <boot_alloc>:$/;"	l
f0100b80	obj/kern/kernel.asm	/^f0100b80:	55                   	push   %ebp$/;"	l
f0100b81	obj/kern/kernel.asm	/^f0100b81:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b83	obj/kern/kernel.asm	/^f0100b83:	83 3d 38 52 20 f0 00 	cmpl   $0x0,0xf0205238$/;"	l
f0100b8a	obj/kern/kernel.asm	/^f0100b8a:	75 11                	jne    f0100b9d <boot_alloc+0x1d>$/;"	l
f0100b8c	obj/kern/kernel.asm	/^f0100b8c:	ba 07 80 24 f0       	mov    $0xf0248007,%edx$/;"	l
f0100b91	obj/kern/kernel.asm	/^f0100b91:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100b97	obj/kern/kernel.asm	/^f0100b97:	89 15 38 52 20 f0    	mov    %edx,0xf0205238$/;"	l
f0100b9d	obj/kern/kernel.asm	/^f0100b9d:	8b 15 38 52 20 f0    	mov    0xf0205238,%edx$/;"	l
f0100ba3	obj/kern/kernel.asm	/^f0100ba3:	8d 84 02 ff 0f 00 00 	lea    0xfff(%edx,%eax,1),%eax$/;"	l
f0100baa	obj/kern/kernel.asm	/^f0100baa:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100baf	obj/kern/kernel.asm	/^f0100baf:	a3 38 52 20 f0       	mov    %eax,0xf0205238$/;"	l
f0100bb4	obj/kern/kernel.asm	/^f0100bb4:	89 d0                	mov    %edx,%eax$/;"	l
f0100bb6	obj/kern/kernel.asm	/^f0100bb6:	5d                   	pop    %ebp$/;"	l
f0100bb7	obj/kern/kernel.asm	/^f0100bb7:	c3                   	ret    $/;"	l
f0100bb8	obj/kern/kernel.asm	/^f0100bb8 <page2kva>:$/;"	l
f0100bb8	obj/kern/kernel.asm	/^f0100bb8:	2b 05 90 5e 20 f0    	sub    0xf0205e90,%eax$/;"	l
f0100bbe	obj/kern/kernel.asm	/^f0100bbe:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100bc1	obj/kern/kernel.asm	/^f0100bc1:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100bc4	obj/kern/kernel.asm	/^f0100bc4:	89 c2                	mov    %eax,%edx$/;"	l
f0100bc6	obj/kern/kernel.asm	/^f0100bc6:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100bc9	obj/kern/kernel.asm	/^f0100bc9:	3b 15 88 5e 20 f0    	cmp    0xf0205e88,%edx$/;"	l
f0100bcf	obj/kern/kernel.asm	/^f0100bcf:	72 26                	jb     f0100bf7 <page2kva+0x3f>$/;"	l
f0100bd1	obj/kern/kernel.asm	/^f0100bd1:	55                   	push   %ebp$/;"	l
f0100bd2	obj/kern/kernel.asm	/^f0100bd2:	89 e5                	mov    %esp,%ebp$/;"	l
f0100bd4	obj/kern/kernel.asm	/^f0100bd4:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100bd7	obj/kern/kernel.asm	/^f0100bd7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100bdb	obj/kern/kernel.asm	/^f0100bdb:	c7 44 24 08 84 70 10 	movl   $0xf0107084,0x8(%esp)$/;"	l
f0100be2	obj/kern/kernel.asm	/^f0100be2:	f0 $/;"	l
f0100be3	obj/kern/kernel.asm	/^f0100be3:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0100bea	obj/kern/kernel.asm	/^f0100bea:	00 $/;"	l
f0100beb	obj/kern/kernel.asm	/^f0100beb:	c7 04 24 41 7f 10 f0 	movl   $0xf0107f41,(%esp)$/;"	l
f0100bf2	obj/kern/kernel.asm	/^f0100bf2:	e8 49 f4 ff ff       	call   f0100040 <_panic>$/;"	l
f0100bf7	obj/kern/kernel.asm	/^f0100bf7:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100bfc	obj/kern/kernel.asm	/^f0100bfc:	c3                   	ret    $/;"	l
f0100bfd	obj/kern/kernel.asm	/^f0100bfd <check_va2pa>:$/;"	l
f0100bfd	obj/kern/kernel.asm	/^f0100bfd:	89 d1                	mov    %edx,%ecx$/;"	l
f0100bff	obj/kern/kernel.asm	/^f0100bff:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0100c02	obj/kern/kernel.asm	/^f0100c02:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0100c05	obj/kern/kernel.asm	/^f0100c05:	a8 01                	test   $0x1,%al$/;"	l
f0100c07	obj/kern/kernel.asm	/^f0100c07:	74 5d                	je     f0100c66 <check_va2pa+0x69>$/;"	l
f0100c09	obj/kern/kernel.asm	/^f0100c09:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100c0e	obj/kern/kernel.asm	/^f0100c0e:	89 c1                	mov    %eax,%ecx$/;"	l
f0100c10	obj/kern/kernel.asm	/^f0100c10:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100c13	obj/kern/kernel.asm	/^f0100c13:	3b 0d 88 5e 20 f0    	cmp    0xf0205e88,%ecx$/;"	l
f0100c19	obj/kern/kernel.asm	/^f0100c19:	72 26                	jb     f0100c41 <check_va2pa+0x44>$/;"	l
f0100c1b	obj/kern/kernel.asm	/^f0100c1b:	55                   	push   %ebp$/;"	l
f0100c1c	obj/kern/kernel.asm	/^f0100c1c:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c1e	obj/kern/kernel.asm	/^f0100c1e:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100c21	obj/kern/kernel.asm	/^f0100c21:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100c25	obj/kern/kernel.asm	/^f0100c25:	c7 44 24 08 84 70 10 	movl   $0xf0107084,0x8(%esp)$/;"	l
f0100c2c	obj/kern/kernel.asm	/^f0100c2c:	f0 $/;"	l
f0100c2d	obj/kern/kernel.asm	/^f0100c2d:	c7 44 24 04 7b 03 00 	movl   $0x37b,0x4(%esp)$/;"	l
f0100c34	obj/kern/kernel.asm	/^f0100c34:	00 $/;"	l
f0100c35	obj/kern/kernel.asm	/^f0100c35:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0100c3c	obj/kern/kernel.asm	/^f0100c3c:	e8 ff f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100c41	obj/kern/kernel.asm	/^f0100c41:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100c44	obj/kern/kernel.asm	/^f0100c44:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0100c4a	obj/kern/kernel.asm	/^f0100c4a:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f0100c51	obj/kern/kernel.asm	/^f0100c51:	89 c2                	mov    %eax,%edx$/;"	l
f0100c53	obj/kern/kernel.asm	/^f0100c53:	83 e2 01             	and    $0x1,%edx$/;"	l
f0100c56	obj/kern/kernel.asm	/^f0100c56:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100c5b	obj/kern/kernel.asm	/^f0100c5b:	85 d2                	test   %edx,%edx$/;"	l
f0100c5d	obj/kern/kernel.asm	/^f0100c5d:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f0100c62	obj/kern/kernel.asm	/^f0100c62:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f0100c65	obj/kern/kernel.asm	/^f0100c65:	c3                   	ret    $/;"	l
f0100c66	obj/kern/kernel.asm	/^f0100c66:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100c6b	obj/kern/kernel.asm	/^f0100c6b:	c3                   	ret    $/;"	l
f0100c6c	obj/kern/kernel.asm	/^f0100c6c <check_page_free_list>:$/;"	l
f0100c6c	obj/kern/kernel.asm	/^f0100c6c:	55                   	push   %ebp$/;"	l
f0100c6d	obj/kern/kernel.asm	/^f0100c6d:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c6f	obj/kern/kernel.asm	/^f0100c6f:	57                   	push   %edi$/;"	l
f0100c70	obj/kern/kernel.asm	/^f0100c70:	56                   	push   %esi$/;"	l
f0100c71	obj/kern/kernel.asm	/^f0100c71:	53                   	push   %ebx$/;"	l
f0100c72	obj/kern/kernel.asm	/^f0100c72:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0100c75	obj/kern/kernel.asm	/^f0100c75:	84 c0                	test   %al,%al$/;"	l
f0100c77	obj/kern/kernel.asm	/^f0100c77:	0f 85 6a 03 00 00    	jne    f0100fe7 <check_page_free_list+0x37b>$/;"	l
f0100c7d	obj/kern/kernel.asm	/^f0100c7d:	e9 77 03 00 00       	jmp    f0100ff9 <check_page_free_list+0x38d>$/;"	l
f0100c82	obj/kern/kernel.asm	/^f0100c82:	c7 44 24 08 7c 76 10 	movl   $0xf010767c,0x8(%esp)$/;"	l
f0100c89	obj/kern/kernel.asm	/^f0100c89:	f0 $/;"	l
f0100c8a	obj/kern/kernel.asm	/^f0100c8a:	c7 44 24 04 b0 02 00 	movl   $0x2b0,0x4(%esp)$/;"	l
f0100c91	obj/kern/kernel.asm	/^f0100c91:	00 $/;"	l
f0100c92	obj/kern/kernel.asm	/^f0100c92:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0100c99	obj/kern/kernel.asm	/^f0100c99:	e8 a2 f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100c9e	obj/kern/kernel.asm	/^f0100c9e:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f0100ca1	obj/kern/kernel.asm	/^f0100ca1:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0100ca4	obj/kern/kernel.asm	/^f0100ca4:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100ca7	obj/kern/kernel.asm	/^f0100ca7:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100caa	obj/kern/kernel.asm	/^f0100caa:	89 c2                	mov    %eax,%edx$/;"	l
f0100cac	obj/kern/kernel.asm	/^f0100cac:	2b 15 90 5e 20 f0    	sub    0xf0205e90,%edx$/;"	l
f0100cb2	obj/kern/kernel.asm	/^f0100cb2:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edx$/;"	l
f0100cb8	obj/kern/kernel.asm	/^f0100cb8:	0f 95 c2             	setne  %dl$/;"	l
f0100cbb	obj/kern/kernel.asm	/^f0100cbb:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100cbe	obj/kern/kernel.asm	/^f0100cbe:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecx$/;"	l
f0100cc2	obj/kern/kernel.asm	/^f0100cc2:	89 01                	mov    %eax,(%ecx)$/;"	l
f0100cc4	obj/kern/kernel.asm	/^f0100cc4:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)$/;"	l
f0100cc8	obj/kern/kernel.asm	/^f0100cc8:	8b 00                	mov    (%eax),%eax$/;"	l
f0100cca	obj/kern/kernel.asm	/^f0100cca:	85 c0                	test   %eax,%eax$/;"	l
f0100ccc	obj/kern/kernel.asm	/^f0100ccc:	75 dc                	jne    f0100caa <check_page_free_list+0x3e>$/;"	l
f0100cce	obj/kern/kernel.asm	/^f0100cce:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100cd1	obj/kern/kernel.asm	/^f0100cd1:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0100cd7	obj/kern/kernel.asm	/^f0100cd7:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100cda	obj/kern/kernel.asm	/^f0100cda:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0100cdd	obj/kern/kernel.asm	/^f0100cdd:	89 10                	mov    %edx,(%eax)$/;"	l
f0100cdf	obj/kern/kernel.asm	/^f0100cdf:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100ce2	obj/kern/kernel.asm	/^f0100ce2:	a3 40 52 20 f0       	mov    %eax,0xf0205240$/;"	l
f0100ce7	obj/kern/kernel.asm	/^f0100ce7:	89 c3                	mov    %eax,%ebx$/;"	l
f0100ce9	obj/kern/kernel.asm	/^f0100ce9:	85 c0                	test   %eax,%eax$/;"	l
f0100ceb	obj/kern/kernel.asm	/^f0100ceb:	74 6c                	je     f0100d59 <check_page_free_list+0xed>$/;"	l
f0100ced	obj/kern/kernel.asm	/^f0100ced:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f0100cf2	obj/kern/kernel.asm	/^f0100cf2:	89 d8                	mov    %ebx,%eax$/;"	l
f0100cf4	obj/kern/kernel.asm	/^f0100cf4:	2b 05 90 5e 20 f0    	sub    0xf0205e90,%eax$/;"	l
f0100cfa	obj/kern/kernel.asm	/^f0100cfa:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100cfd	obj/kern/kernel.asm	/^f0100cfd:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100d00	obj/kern/kernel.asm	/^f0100d00:	89 c2                	mov    %eax,%edx$/;"	l
f0100d02	obj/kern/kernel.asm	/^f0100d02:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100d05	obj/kern/kernel.asm	/^f0100d05:	39 f2                	cmp    %esi,%edx$/;"	l
f0100d07	obj/kern/kernel.asm	/^f0100d07:	73 4a                	jae    f0100d53 <check_page_free_list+0xe7>$/;"	l
f0100d09	obj/kern/kernel.asm	/^f0100d09:	89 c2                	mov    %eax,%edx$/;"	l
f0100d0b	obj/kern/kernel.asm	/^f0100d0b:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100d0e	obj/kern/kernel.asm	/^f0100d0e:	3b 15 88 5e 20 f0    	cmp    0xf0205e88,%edx$/;"	l
f0100d14	obj/kern/kernel.asm	/^f0100d14:	72 20                	jb     f0100d36 <check_page_free_list+0xca>$/;"	l
f0100d16	obj/kern/kernel.asm	/^f0100d16:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100d1a	obj/kern/kernel.asm	/^f0100d1a:	c7 44 24 08 84 70 10 	movl   $0xf0107084,0x8(%esp)$/;"	l
f0100d21	obj/kern/kernel.asm	/^f0100d21:	f0 $/;"	l
f0100d22	obj/kern/kernel.asm	/^f0100d22:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0100d29	obj/kern/kernel.asm	/^f0100d29:	00 $/;"	l
f0100d2a	obj/kern/kernel.asm	/^f0100d2a:	c7 04 24 41 7f 10 f0 	movl   $0xf0107f41,(%esp)$/;"	l
f0100d31	obj/kern/kernel.asm	/^f0100d31:	e8 0a f3 ff ff       	call   f0100040 <_panic>$/;"	l
f0100d36	obj/kern/kernel.asm	/^f0100d36:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)$/;"	l
f0100d3d	obj/kern/kernel.asm	/^f0100d3d:	00 $/;"	l
f0100d3e	obj/kern/kernel.asm	/^f0100d3e:	c7 44 24 04 97 00 00 	movl   $0x97,0x4(%esp)$/;"	l
f0100d45	obj/kern/kernel.asm	/^f0100d45:	00 $/;"	l
f0100d46	obj/kern/kernel.asm	/^f0100d46:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100d4b	obj/kern/kernel.asm	/^f0100d4b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100d4e	obj/kern/kernel.asm	/^f0100d4e:	e8 56 55 00 00       	call   f01062a9 <memset>$/;"	l
f0100d53	obj/kern/kernel.asm	/^f0100d53:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100d55	obj/kern/kernel.asm	/^f0100d55:	85 db                	test   %ebx,%ebx$/;"	l
f0100d57	obj/kern/kernel.asm	/^f0100d57:	75 99                	jne    f0100cf2 <check_page_free_list+0x86>$/;"	l
f0100d59	obj/kern/kernel.asm	/^f0100d59:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d5e	obj/kern/kernel.asm	/^f0100d5e:	e8 1d fe ff ff       	call   f0100b80 <boot_alloc>$/;"	l
f0100d63	obj/kern/kernel.asm	/^f0100d63:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0100d66	obj/kern/kernel.asm	/^f0100d66:	8b 15 40 52 20 f0    	mov    0xf0205240,%edx$/;"	l
f0100d6c	obj/kern/kernel.asm	/^f0100d6c:	85 d2                	test   %edx,%edx$/;"	l
f0100d6e	obj/kern/kernel.asm	/^f0100d6e:	0f 84 27 02 00 00    	je     f0100f9b <check_page_free_list+0x32f>$/;"	l
f0100d74	obj/kern/kernel.asm	/^f0100d74:	8b 3d 90 5e 20 f0    	mov    0xf0205e90,%edi$/;"	l
f0100d7a	obj/kern/kernel.asm	/^f0100d7a:	39 fa                	cmp    %edi,%edx$/;"	l
f0100d7c	obj/kern/kernel.asm	/^f0100d7c:	72 3f                	jb     f0100dbd <check_page_free_list+0x151>$/;"	l
f0100d7e	obj/kern/kernel.asm	/^f0100d7e:	a1 88 5e 20 f0       	mov    0xf0205e88,%eax$/;"	l
f0100d83	obj/kern/kernel.asm	/^f0100d83:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0100d86	obj/kern/kernel.asm	/^f0100d86:	8d 04 c7             	lea    (%edi,%eax,8),%eax$/;"	l
f0100d89	obj/kern/kernel.asm	/^f0100d89:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0100d8c	obj/kern/kernel.asm	/^f0100d8c:	39 c2                	cmp    %eax,%edx$/;"	l
f0100d8e	obj/kern/kernel.asm	/^f0100d8e:	73 56                	jae    f0100de6 <check_page_free_list+0x17a>$/;"	l
f0100d90	obj/kern/kernel.asm	/^f0100d90:	89 7d d0             	mov    %edi,-0x30(%ebp)$/;"	l
f0100d93	obj/kern/kernel.asm	/^f0100d93:	89 d0                	mov    %edx,%eax$/;"	l
f0100d95	obj/kern/kernel.asm	/^f0100d95:	29 f8                	sub    %edi,%eax$/;"	l
f0100d97	obj/kern/kernel.asm	/^f0100d97:	a8 07                	test   $0x7,%al$/;"	l
f0100d99	obj/kern/kernel.asm	/^f0100d99:	75 78                	jne    f0100e13 <check_page_free_list+0x1a7>$/;"	l
f0100d9b	obj/kern/kernel.asm	/^f0100d9b:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100d9e	obj/kern/kernel.asm	/^f0100d9e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100da1	obj/kern/kernel.asm	/^f0100da1:	85 c0                	test   %eax,%eax$/;"	l
f0100da3	obj/kern/kernel.asm	/^f0100da3:	0f 84 98 00 00 00    	je     f0100e41 <check_page_free_list+0x1d5>$/;"	l
f0100da9	obj/kern/kernel.asm	/^f0100da9:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0100dae	obj/kern/kernel.asm	/^f0100dae:	0f 85 dc 00 00 00    	jne    f0100e90 <check_page_free_list+0x224>$/;"	l
f0100db4	obj/kern/kernel.asm	/^f0100db4:	e9 b3 00 00 00       	jmp    f0100e6c <check_page_free_list+0x200>$/;"	l
f0100db9	obj/kern/kernel.asm	/^f0100db9:	39 d7                	cmp    %edx,%edi$/;"	l
f0100dbb	obj/kern/kernel.asm	/^f0100dbb:	76 24                	jbe    f0100de1 <check_page_free_list+0x175>$/;"	l
f0100dbd	obj/kern/kernel.asm	/^f0100dbd:	c7 44 24 0c 5b 7f 10 	movl   $0xf0107f5b,0xc(%esp)$/;"	l
f0100dc4	obj/kern/kernel.asm	/^f0100dc4:	f0 $/;"	l
f0100dc5	obj/kern/kernel.asm	/^f0100dc5:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0100dcc	obj/kern/kernel.asm	/^f0100dcc:	f0 $/;"	l
f0100dcd	obj/kern/kernel.asm	/^f0100dcd:	c7 44 24 04 ca 02 00 	movl   $0x2ca,0x4(%esp)$/;"	l
f0100dd4	obj/kern/kernel.asm	/^f0100dd4:	00 $/;"	l
f0100dd5	obj/kern/kernel.asm	/^f0100dd5:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0100ddc	obj/kern/kernel.asm	/^f0100ddc:	e8 5f f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100de1	obj/kern/kernel.asm	/^f0100de1:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
f0100de4	obj/kern/kernel.asm	/^f0100de4:	72 24                	jb     f0100e0a <check_page_free_list+0x19e>$/;"	l
f0100de6	obj/kern/kernel.asm	/^f0100de6:	c7 44 24 0c 7c 7f 10 	movl   $0xf0107f7c,0xc(%esp)$/;"	l
f0100ded	obj/kern/kernel.asm	/^f0100ded:	f0 $/;"	l
f0100dee	obj/kern/kernel.asm	/^f0100dee:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0100df5	obj/kern/kernel.asm	/^f0100df5:	f0 $/;"	l
f0100df6	obj/kern/kernel.asm	/^f0100df6:	c7 44 24 04 cb 02 00 	movl   $0x2cb,0x4(%esp)$/;"	l
f0100dfd	obj/kern/kernel.asm	/^f0100dfd:	00 $/;"	l
f0100dfe	obj/kern/kernel.asm	/^f0100dfe:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0100e05	obj/kern/kernel.asm	/^f0100e05:	e8 36 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100e0a	obj/kern/kernel.asm	/^f0100e0a:	89 d0                	mov    %edx,%eax$/;"	l
f0100e0c	obj/kern/kernel.asm	/^f0100e0c:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
f0100e0f	obj/kern/kernel.asm	/^f0100e0f:	a8 07                	test   $0x7,%al$/;"	l
f0100e11	obj/kern/kernel.asm	/^f0100e11:	74 24                	je     f0100e37 <check_page_free_list+0x1cb>$/;"	l
f0100e13	obj/kern/kernel.asm	/^f0100e13:	c7 44 24 0c a0 76 10 	movl   $0xf01076a0,0xc(%esp)$/;"	l
f0100e1a	obj/kern/kernel.asm	/^f0100e1a:	f0 $/;"	l
f0100e1b	obj/kern/kernel.asm	/^f0100e1b:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0100e22	obj/kern/kernel.asm	/^f0100e22:	f0 $/;"	l
f0100e23	obj/kern/kernel.asm	/^f0100e23:	c7 44 24 04 cc 02 00 	movl   $0x2cc,0x4(%esp)$/;"	l
f0100e2a	obj/kern/kernel.asm	/^f0100e2a:	00 $/;"	l
f0100e2b	obj/kern/kernel.asm	/^f0100e2b:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0100e32	obj/kern/kernel.asm	/^f0100e32:	e8 09 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100e37	obj/kern/kernel.asm	/^f0100e37:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100e3a	obj/kern/kernel.asm	/^f0100e3a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100e3d	obj/kern/kernel.asm	/^f0100e3d:	85 c0                	test   %eax,%eax$/;"	l
f0100e3f	obj/kern/kernel.asm	/^f0100e3f:	75 24                	jne    f0100e65 <check_page_free_list+0x1f9>$/;"	l
f0100e41	obj/kern/kernel.asm	/^f0100e41:	c7 44 24 0c 90 7f 10 	movl   $0xf0107f90,0xc(%esp)$/;"	l
f0100e48	obj/kern/kernel.asm	/^f0100e48:	f0 $/;"	l
f0100e49	obj/kern/kernel.asm	/^f0100e49:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0100e50	obj/kern/kernel.asm	/^f0100e50:	f0 $/;"	l
f0100e51	obj/kern/kernel.asm	/^f0100e51:	c7 44 24 04 cf 02 00 	movl   $0x2cf,0x4(%esp)$/;"	l
f0100e58	obj/kern/kernel.asm	/^f0100e58:	00 $/;"	l
f0100e59	obj/kern/kernel.asm	/^f0100e59:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0100e60	obj/kern/kernel.asm	/^f0100e60:	e8 db f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100e65	obj/kern/kernel.asm	/^f0100e65:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0100e6a	obj/kern/kernel.asm	/^f0100e6a:	75 31                	jne    f0100e9d <check_page_free_list+0x231>$/;"	l
f0100e6c	obj/kern/kernel.asm	/^f0100e6c:	c7 44 24 0c a1 7f 10 	movl   $0xf0107fa1,0xc(%esp)$/;"	l
f0100e73	obj/kern/kernel.asm	/^f0100e73:	f0 $/;"	l
f0100e74	obj/kern/kernel.asm	/^f0100e74:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0100e7b	obj/kern/kernel.asm	/^f0100e7b:	f0 $/;"	l
f0100e7c	obj/kern/kernel.asm	/^f0100e7c:	c7 44 24 04 d0 02 00 	movl   $0x2d0,0x4(%esp)$/;"	l
f0100e83	obj/kern/kernel.asm	/^f0100e83:	00 $/;"	l
f0100e84	obj/kern/kernel.asm	/^f0100e84:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0100e8b	obj/kern/kernel.asm	/^f0100e8b:	e8 b0 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100e90	obj/kern/kernel.asm	/^f0100e90:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100e95	obj/kern/kernel.asm	/^f0100e95:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100e9a	obj/kern/kernel.asm	/^f0100e9a:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
f0100e9d	obj/kern/kernel.asm	/^f0100e9d:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0100ea2	obj/kern/kernel.asm	/^f0100ea2:	75 24                	jne    f0100ec8 <check_page_free_list+0x25c>$/;"	l
f0100ea4	obj/kern/kernel.asm	/^f0100ea4:	c7 44 24 0c d4 76 10 	movl   $0xf01076d4,0xc(%esp)$/;"	l
f0100eab	obj/kern/kernel.asm	/^f0100eab:	f0 $/;"	l
f0100eac	obj/kern/kernel.asm	/^f0100eac:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0100eb3	obj/kern/kernel.asm	/^f0100eb3:	f0 $/;"	l
f0100eb4	obj/kern/kernel.asm	/^f0100eb4:	c7 44 24 04 d1 02 00 	movl   $0x2d1,0x4(%esp)$/;"	l
f0100ebb	obj/kern/kernel.asm	/^f0100ebb:	00 $/;"	l
f0100ebc	obj/kern/kernel.asm	/^f0100ebc:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0100ec3	obj/kern/kernel.asm	/^f0100ec3:	e8 78 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ec8	obj/kern/kernel.asm	/^f0100ec8:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f0100ecd	obj/kern/kernel.asm	/^f0100ecd:	75 24                	jne    f0100ef3 <check_page_free_list+0x287>$/;"	l
f0100ecf	obj/kern/kernel.asm	/^f0100ecf:	c7 44 24 0c ba 7f 10 	movl   $0xf0107fba,0xc(%esp)$/;"	l
f0100ed6	obj/kern/kernel.asm	/^f0100ed6:	f0 $/;"	l
f0100ed7	obj/kern/kernel.asm	/^f0100ed7:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0100ede	obj/kern/kernel.asm	/^f0100ede:	f0 $/;"	l
f0100edf	obj/kern/kernel.asm	/^f0100edf:	c7 44 24 04 d2 02 00 	movl   $0x2d2,0x4(%esp)$/;"	l
f0100ee6	obj/kern/kernel.asm	/^f0100ee6:	00 $/;"	l
f0100ee7	obj/kern/kernel.asm	/^f0100ee7:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0100eee	obj/kern/kernel.asm	/^f0100eee:	e8 4d f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100ef3	obj/kern/kernel.asm	/^f0100ef3:	89 c1                	mov    %eax,%ecx$/;"	l
f0100ef5	obj/kern/kernel.asm	/^f0100ef5:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f0100efa	obj/kern/kernel.asm	/^f0100efa:	0f 86 07 01 00 00    	jbe    f0101007 <check_page_free_list+0x39b>$/;"	l
f0100f00	obj/kern/kernel.asm	/^f0100f00:	89 c3                	mov    %eax,%ebx$/;"	l
f0100f02	obj/kern/kernel.asm	/^f0100f02:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0100f05	obj/kern/kernel.asm	/^f0100f05:	39 5d c4             	cmp    %ebx,-0x3c(%ebp)$/;"	l
f0100f08	obj/kern/kernel.asm	/^f0100f08:	77 20                	ja     f0100f2a <check_page_free_list+0x2be>$/;"	l
f0100f0a	obj/kern/kernel.asm	/^f0100f0a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100f0e	obj/kern/kernel.asm	/^f0100f0e:	c7 44 24 08 84 70 10 	movl   $0xf0107084,0x8(%esp)$/;"	l
f0100f15	obj/kern/kernel.asm	/^f0100f15:	f0 $/;"	l
f0100f16	obj/kern/kernel.asm	/^f0100f16:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0100f1d	obj/kern/kernel.asm	/^f0100f1d:	00 $/;"	l
f0100f1e	obj/kern/kernel.asm	/^f0100f1e:	c7 04 24 41 7f 10 f0 	movl   $0xf0107f41,(%esp)$/;"	l
f0100f25	obj/kern/kernel.asm	/^f0100f25:	e8 16 f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f2a	obj/kern/kernel.asm	/^f0100f2a:	81 e9 00 00 00 10    	sub    $0x10000000,%ecx$/;"	l
f0100f30	obj/kern/kernel.asm	/^f0100f30:	39 4d c8             	cmp    %ecx,-0x38(%ebp)$/;"	l
f0100f33	obj/kern/kernel.asm	/^f0100f33:	0f 86 de 00 00 00    	jbe    f0101017 <check_page_free_list+0x3ab>$/;"	l
f0100f39	obj/kern/kernel.asm	/^f0100f39:	c7 44 24 0c f8 76 10 	movl   $0xf01076f8,0xc(%esp)$/;"	l
f0100f40	obj/kern/kernel.asm	/^f0100f40:	f0 $/;"	l
f0100f41	obj/kern/kernel.asm	/^f0100f41:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0100f48	obj/kern/kernel.asm	/^f0100f48:	f0 $/;"	l
f0100f49	obj/kern/kernel.asm	/^f0100f49:	c7 44 24 04 d3 02 00 	movl   $0x2d3,0x4(%esp)$/;"	l
f0100f50	obj/kern/kernel.asm	/^f0100f50:	00 $/;"	l
f0100f51	obj/kern/kernel.asm	/^f0100f51:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0100f58	obj/kern/kernel.asm	/^f0100f58:	e8 e3 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f5d	obj/kern/kernel.asm	/^f0100f5d:	c7 44 24 0c d4 7f 10 	movl   $0xf0107fd4,0xc(%esp)$/;"	l
f0100f64	obj/kern/kernel.asm	/^f0100f64:	f0 $/;"	l
f0100f65	obj/kern/kernel.asm	/^f0100f65:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0100f6c	obj/kern/kernel.asm	/^f0100f6c:	f0 $/;"	l
f0100f6d	obj/kern/kernel.asm	/^f0100f6d:	c7 44 24 04 d5 02 00 	movl   $0x2d5,0x4(%esp)$/;"	l
f0100f74	obj/kern/kernel.asm	/^f0100f74:	00 $/;"	l
f0100f75	obj/kern/kernel.asm	/^f0100f75:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0100f7c	obj/kern/kernel.asm	/^f0100f7c:	e8 bf f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f81	obj/kern/kernel.asm	/^f0100f81:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100f84	obj/kern/kernel.asm	/^f0100f84:	eb 04                	jmp    f0100f8a <check_page_free_list+0x31e>$/;"	l
f0100f86	obj/kern/kernel.asm	/^f0100f86:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)$/;"	l
f0100f8a	obj/kern/kernel.asm	/^f0100f8a:	8b 12                	mov    (%edx),%edx$/;"	l
f0100f8c	obj/kern/kernel.asm	/^f0100f8c:	85 d2                	test   %edx,%edx$/;"	l
f0100f8e	obj/kern/kernel.asm	/^f0100f8e:	0f 85 25 fe ff ff    	jne    f0100db9 <check_page_free_list+0x14d>$/;"	l
f0100f94	obj/kern/kernel.asm	/^f0100f94:	8b 5d cc             	mov    -0x34(%ebp),%ebx$/;"	l
f0100f97	obj/kern/kernel.asm	/^f0100f97:	85 f6                	test   %esi,%esi$/;"	l
f0100f99	obj/kern/kernel.asm	/^f0100f99:	7f 24                	jg     f0100fbf <check_page_free_list+0x353>$/;"	l
f0100f9b	obj/kern/kernel.asm	/^f0100f9b:	c7 44 24 0c f1 7f 10 	movl   $0xf0107ff1,0xc(%esp)$/;"	l
f0100fa2	obj/kern/kernel.asm	/^f0100fa2:	f0 $/;"	l
f0100fa3	obj/kern/kernel.asm	/^f0100fa3:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0100faa	obj/kern/kernel.asm	/^f0100faa:	f0 $/;"	l
f0100fab	obj/kern/kernel.asm	/^f0100fab:	c7 44 24 04 dd 02 00 	movl   $0x2dd,0x4(%esp)$/;"	l
f0100fb2	obj/kern/kernel.asm	/^f0100fb2:	00 $/;"	l
f0100fb3	obj/kern/kernel.asm	/^f0100fb3:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0100fba	obj/kern/kernel.asm	/^f0100fba:	e8 81 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100fbf	obj/kern/kernel.asm	/^f0100fbf:	85 db                	test   %ebx,%ebx$/;"	l
f0100fc1	obj/kern/kernel.asm	/^f0100fc1:	7f 74                	jg     f0101037 <check_page_free_list+0x3cb>$/;"	l
f0100fc3	obj/kern/kernel.asm	/^f0100fc3:	c7 44 24 0c 03 80 10 	movl   $0xf0108003,0xc(%esp)$/;"	l
f0100fca	obj/kern/kernel.asm	/^f0100fca:	f0 $/;"	l
f0100fcb	obj/kern/kernel.asm	/^f0100fcb:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0100fd2	obj/kern/kernel.asm	/^f0100fd2:	f0 $/;"	l
f0100fd3	obj/kern/kernel.asm	/^f0100fd3:	c7 44 24 04 de 02 00 	movl   $0x2de,0x4(%esp)$/;"	l
f0100fda	obj/kern/kernel.asm	/^f0100fda:	00 $/;"	l
f0100fdb	obj/kern/kernel.asm	/^f0100fdb:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0100fe2	obj/kern/kernel.asm	/^f0100fe2:	e8 59 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100fe7	obj/kern/kernel.asm	/^f0100fe7:	a1 40 52 20 f0       	mov    0xf0205240,%eax$/;"	l
f0100fec	obj/kern/kernel.asm	/^f0100fec:	85 c0                	test   %eax,%eax$/;"	l
f0100fee	obj/kern/kernel.asm	/^f0100fee:	0f 85 aa fc ff ff    	jne    f0100c9e <check_page_free_list+0x32>$/;"	l
f0100ff4	obj/kern/kernel.asm	/^f0100ff4:	e9 89 fc ff ff       	jmp    f0100c82 <check_page_free_list+0x16>$/;"	l
f0100ff9	obj/kern/kernel.asm	/^f0100ff9:	83 3d 40 52 20 f0 00 	cmpl   $0x0,0xf0205240$/;"	l
f0101000	obj/kern/kernel.asm	/^f0101000:	75 25                	jne    f0101027 <check_page_free_list+0x3bb>$/;"	l
f0101002	obj/kern/kernel.asm	/^f0101002:	e9 7b fc ff ff       	jmp    f0100c82 <check_page_free_list+0x16>$/;"	l
f0101007	obj/kern/kernel.asm	/^f0101007:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f010100c	obj/kern/kernel.asm	/^f010100c:	0f 85 6f ff ff ff    	jne    f0100f81 <check_page_free_list+0x315>$/;"	l
f0101012	obj/kern/kernel.asm	/^f0101012:	e9 46 ff ff ff       	jmp    f0100f5d <check_page_free_list+0x2f1>$/;"	l
f0101017	obj/kern/kernel.asm	/^f0101017:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f010101c	obj/kern/kernel.asm	/^f010101c:	0f 85 64 ff ff ff    	jne    f0100f86 <check_page_free_list+0x31a>$/;"	l
f0101022	obj/kern/kernel.asm	/^f0101022:	e9 36 ff ff ff       	jmp    f0100f5d <check_page_free_list+0x2f1>$/;"	l
f0101027	obj/kern/kernel.asm	/^f0101027:	8b 1d 40 52 20 f0    	mov    0xf0205240,%ebx$/;"	l
f010102d	obj/kern/kernel.asm	/^f010102d:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
f0101032	obj/kern/kernel.asm	/^f0101032:	e9 bb fc ff ff       	jmp    f0100cf2 <check_page_free_list+0x86>$/;"	l
f0101037	obj/kern/kernel.asm	/^f0101037:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f010103a	obj/kern/kernel.asm	/^f010103a:	5b                   	pop    %ebx$/;"	l
f010103b	obj/kern/kernel.asm	/^f010103b:	5e                   	pop    %esi$/;"	l
f010103c	obj/kern/kernel.asm	/^f010103c:	5f                   	pop    %edi$/;"	l
f010103d	obj/kern/kernel.asm	/^f010103d:	5d                   	pop    %ebp$/;"	l
f010103e	obj/kern/kernel.asm	/^f010103e:	c3                   	ret    $/;"	l
f010103f	obj/kern/kernel.asm	/^f010103f <page_init>:$/;"	l
f010103f	obj/kern/kernel.asm	/^f010103f:	55                   	push   %ebp$/;"	l
f0101040	obj/kern/kernel.asm	/^f0101040:	89 e5                	mov    %esp,%ebp$/;"	l
f0101042	obj/kern/kernel.asm	/^f0101042:	56                   	push   %esi$/;"	l
f0101043	obj/kern/kernel.asm	/^f0101043:	53                   	push   %ebx$/;"	l
f0101044	obj/kern/kernel.asm	/^f0101044:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0101047	obj/kern/kernel.asm	/^f0101047:	c7 05 40 52 20 f0 00 	movl   $0x0,0xf0205240$/;"	l
f010104e	obj/kern/kernel.asm	/^f010104e:	00 00 00 $/;"	l
f0101051	obj/kern/kernel.asm	/^f0101051:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101056	obj/kern/kernel.asm	/^f0101056:	e8 25 fb ff ff       	call   f0100b80 <boot_alloc>$/;"	l
f010105b	obj/kern/kernel.asm	/^f010105b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101060	obj/kern/kernel.asm	/^f0101060:	77 20                	ja     f0101082 <page_init+0x43>$/;"	l
f0101062	obj/kern/kernel.asm	/^f0101062:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101066	obj/kern/kernel.asm	/^f0101066:	c7 44 24 08 a8 70 10 	movl   $0xf01070a8,0x8(%esp)$/;"	l
f010106d	obj/kern/kernel.asm	/^f010106d:	f0 $/;"	l
f010106e	obj/kern/kernel.asm	/^f010106e:	c7 44 24 04 52 01 00 	movl   $0x152,0x4(%esp)$/;"	l
f0101075	obj/kern/kernel.asm	/^f0101075:	00 $/;"	l
f0101076	obj/kern/kernel.asm	/^f0101076:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f010107d	obj/kern/kernel.asm	/^f010107d:	e8 be ef ff ff       	call   f0100040 <_panic>$/;"	l
f0101082	obj/kern/kernel.asm	/^f0101082:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0101087	obj/kern/kernel.asm	/^f0101087:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010108a	obj/kern/kernel.asm	/^f010108a:	83 3d 88 5e 20 f0 00 	cmpl   $0x0,0xf0205e88$/;"	l
f0101091	obj/kern/kernel.asm	/^f0101091:	74 67                	je     f01010fa <page_init+0xbb>$/;"	l
f0101093	obj/kern/kernel.asm	/^f0101093:	8b 1d 40 52 20 f0    	mov    0xf0205240,%ebx$/;"	l
f0101099	obj/kern/kernel.asm	/^f0101099:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010109e	obj/kern/kernel.asm	/^f010109e:	85 d2                	test   %edx,%edx$/;"	l
f01010a0	obj/kern/kernel.asm	/^f01010a0:	74 32                	je     f01010d4 <page_init+0x95>$/;"	l
f01010a2	obj/kern/kernel.asm	/^f01010a2:	39 c2                	cmp    %eax,%edx$/;"	l
f01010a4	obj/kern/kernel.asm	/^f01010a4:	73 08                	jae    f01010ae <page_init+0x6f>$/;"	l
f01010a6	obj/kern/kernel.asm	/^f01010a6:	81 fa 9f 00 00 00    	cmp    $0x9f,%edx$/;"	l
f01010ac	obj/kern/kernel.asm	/^f01010ac:	77 26                	ja     f01010d4 <page_init+0x95>$/;"	l
f01010ae	obj/kern/kernel.asm	/^f01010ae:	83 fa 07             	cmp    $0x7,%edx$/;"	l
f01010b1	obj/kern/kernel.asm	/^f01010b1:	74 21                	je     f01010d4 <page_init+0x95>$/;"	l
f01010b3	obj/kern/kernel.asm	/^f01010b3:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx$/;"	l
f01010ba	obj/kern/kernel.asm	/^f01010ba:	89 ce                	mov    %ecx,%esi$/;"	l
f01010bc	obj/kern/kernel.asm	/^f01010bc:	03 35 90 5e 20 f0    	add    0xf0205e90,%esi$/;"	l
f01010c2	obj/kern/kernel.asm	/^f01010c2:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f01010c8	obj/kern/kernel.asm	/^f01010c8:	89 1e                	mov    %ebx,(%esi)$/;"	l
f01010ca	obj/kern/kernel.asm	/^f01010ca:	89 cb                	mov    %ecx,%ebx$/;"	l
f01010cc	obj/kern/kernel.asm	/^f01010cc:	03 1d 90 5e 20 f0    	add    0xf0205e90,%ebx$/;"	l
f01010d2	obj/kern/kernel.asm	/^f01010d2:	eb 15                	jmp    f01010e9 <page_init+0xaa>$/;"	l
f01010d4	obj/kern/kernel.asm	/^f01010d4:	8b 0d 90 5e 20 f0    	mov    0xf0205e90,%ecx$/;"	l
f01010da	obj/kern/kernel.asm	/^f01010da:	8d 0c d1             	lea    (%ecx,%edx,8),%ecx$/;"	l
f01010dd	obj/kern/kernel.asm	/^f01010dd:	66 c7 41 04 01 00    	movw   $0x1,0x4(%ecx)$/;"	l
f01010e3	obj/kern/kernel.asm	/^f01010e3:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f01010e9	obj/kern/kernel.asm	/^f01010e9:	83 c2 01             	add    $0x1,%edx$/;"	l
f01010ec	obj/kern/kernel.asm	/^f01010ec:	39 15 88 5e 20 f0    	cmp    %edx,0xf0205e88$/;"	l
f01010f2	obj/kern/kernel.asm	/^f01010f2:	77 aa                	ja     f010109e <page_init+0x5f>$/;"	l
f01010f4	obj/kern/kernel.asm	/^f01010f4:	89 1d 40 52 20 f0    	mov    %ebx,0xf0205240$/;"	l
f01010fa	obj/kern/kernel.asm	/^f01010fa:	83 c4 10             	add    $0x10,%esp$/;"	l
f01010fd	obj/kern/kernel.asm	/^f01010fd:	5b                   	pop    %ebx$/;"	l
f01010fe	obj/kern/kernel.asm	/^f01010fe:	5e                   	pop    %esi$/;"	l
f01010ff	obj/kern/kernel.asm	/^f01010ff:	5d                   	pop    %ebp$/;"	l
f0101100	obj/kern/kernel.asm	/^f0101100:	c3                   	ret    $/;"	l
f0101101	obj/kern/kernel.asm	/^f0101101 <page_alloc>:$/;"	l
f0101101	obj/kern/kernel.asm	/^f0101101:	55                   	push   %ebp$/;"	l
f0101102	obj/kern/kernel.asm	/^f0101102:	89 e5                	mov    %esp,%ebp$/;"	l
f0101104	obj/kern/kernel.asm	/^f0101104:	53                   	push   %ebx$/;"	l
f0101105	obj/kern/kernel.asm	/^f0101105:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101108	obj/kern/kernel.asm	/^f0101108:	8b 1d 40 52 20 f0    	mov    0xf0205240,%ebx$/;"	l
f010110e	obj/kern/kernel.asm	/^f010110e:	85 db                	test   %ebx,%ebx$/;"	l
f0101110	obj/kern/kernel.asm	/^f0101110:	0f 84 90 00 00 00    	je     f01011a6 <page_alloc+0xa5>$/;"	l
f0101116	obj/kern/kernel.asm	/^f0101116:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f010111b	obj/kern/kernel.asm	/^f010111b:	74 78                	je     f0101195 <page_alloc+0x94>$/;"	l
f010111d	obj/kern/kernel.asm	/^f010111d:	8b 03                	mov    (%ebx),%eax$/;"	l
f010111f	obj/kern/kernel.asm	/^f010111f:	85 c0                	test   %eax,%eax$/;"	l
f0101121	obj/kern/kernel.asm	/^f0101121:	75 07                	jne    f010112a <page_alloc+0x29>$/;"	l
f0101123	obj/kern/kernel.asm	/^f0101123:	a3 40 52 20 f0       	mov    %eax,0xf0205240$/;"	l
f0101128	obj/kern/kernel.asm	/^f0101128:	eb 7c                	jmp    f01011a6 <page_alloc+0xa5>$/;"	l
f010112a	obj/kern/kernel.asm	/^f010112a:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f010112f	obj/kern/kernel.asm	/^f010112f:	75 04                	jne    f0101135 <page_alloc+0x34>$/;"	l
f0101131	obj/kern/kernel.asm	/^f0101131:	89 c3                	mov    %eax,%ebx$/;"	l
f0101133	obj/kern/kernel.asm	/^f0101133:	eb 60                	jmp    f0101195 <page_alloc+0x94>$/;"	l
f0101135	obj/kern/kernel.asm	/^f0101135:	89 c3                	mov    %eax,%ebx$/;"	l
f0101137	obj/kern/kernel.asm	/^f0101137:	eb e4                	jmp    f010111d <page_alloc+0x1c>$/;"	l
f0101139	obj/kern/kernel.asm	/^f0101139:	89 d8                	mov    %ebx,%eax$/;"	l
f010113b	obj/kern/kernel.asm	/^f010113b:	2b 05 90 5e 20 f0    	sub    0xf0205e90,%eax$/;"	l
f0101141	obj/kern/kernel.asm	/^f0101141:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101144	obj/kern/kernel.asm	/^f0101144:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101147	obj/kern/kernel.asm	/^f0101147:	89 c2                	mov    %eax,%edx$/;"	l
f0101149	obj/kern/kernel.asm	/^f0101149:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010114c	obj/kern/kernel.asm	/^f010114c:	3b 15 88 5e 20 f0    	cmp    0xf0205e88,%edx$/;"	l
f0101152	obj/kern/kernel.asm	/^f0101152:	72 20                	jb     f0101174 <page_alloc+0x73>$/;"	l
f0101154	obj/kern/kernel.asm	/^f0101154:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101158	obj/kern/kernel.asm	/^f0101158:	c7 44 24 08 84 70 10 	movl   $0xf0107084,0x8(%esp)$/;"	l
f010115f	obj/kern/kernel.asm	/^f010115f:	f0 $/;"	l
f0101160	obj/kern/kernel.asm	/^f0101160:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0101167	obj/kern/kernel.asm	/^f0101167:	00 $/;"	l
f0101168	obj/kern/kernel.asm	/^f0101168:	c7 04 24 41 7f 10 f0 	movl   $0xf0107f41,(%esp)$/;"	l
f010116f	obj/kern/kernel.asm	/^f010116f:	e8 cc ee ff ff       	call   f0100040 <_panic>$/;"	l
f0101174	obj/kern/kernel.asm	/^f0101174:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010117b	obj/kern/kernel.asm	/^f010117b:	00 $/;"	l
f010117c	obj/kern/kernel.asm	/^f010117c:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101183	obj/kern/kernel.asm	/^f0101183:	00 $/;"	l
f0101184	obj/kern/kernel.asm	/^f0101184:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101189	obj/kern/kernel.asm	/^f0101189:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010118c	obj/kern/kernel.asm	/^f010118c:	e8 18 51 00 00       	call   f01062a9 <memset>$/;"	l
f0101191	obj/kern/kernel.asm	/^f0101191:	89 d8                	mov    %ebx,%eax$/;"	l
f0101193	obj/kern/kernel.asm	/^f0101193:	eb 16                	jmp    f01011ab <page_alloc+0xaa>$/;"	l
f0101195	obj/kern/kernel.asm	/^f0101195:	8b 03                	mov    (%ebx),%eax$/;"	l
f0101197	obj/kern/kernel.asm	/^f0101197:	a3 40 52 20 f0       	mov    %eax,0xf0205240$/;"	l
f010119c	obj/kern/kernel.asm	/^f010119c:	89 d8                	mov    %ebx,%eax$/;"	l
f010119e	obj/kern/kernel.asm	/^f010119e:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f01011a2	obj/kern/kernel.asm	/^f01011a2:	74 07                	je     f01011ab <page_alloc+0xaa>$/;"	l
f01011a4	obj/kern/kernel.asm	/^f01011a4:	eb 93                	jmp    f0101139 <page_alloc+0x38>$/;"	l
f01011a6	obj/kern/kernel.asm	/^f01011a6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01011ab	obj/kern/kernel.asm	/^f01011ab:	83 c4 14             	add    $0x14,%esp$/;"	l
f01011ae	obj/kern/kernel.asm	/^f01011ae:	5b                   	pop    %ebx$/;"	l
f01011af	obj/kern/kernel.asm	/^f01011af:	5d                   	pop    %ebp$/;"	l
f01011b0	obj/kern/kernel.asm	/^f01011b0:	c3                   	ret    $/;"	l
f01011b1	obj/kern/kernel.asm	/^f01011b1 <page_free>:$/;"	l
f01011b1	obj/kern/kernel.asm	/^f01011b1:	55                   	push   %ebp$/;"	l
f01011b2	obj/kern/kernel.asm	/^f01011b2:	89 e5                	mov    %esp,%ebp$/;"	l
f01011b4	obj/kern/kernel.asm	/^f01011b4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01011b7	obj/kern/kernel.asm	/^f01011b7:	85 c0                	test   %eax,%eax$/;"	l
f01011b9	obj/kern/kernel.asm	/^f01011b9:	74 14                	je     f01011cf <page_free+0x1e>$/;"	l
f01011bb	obj/kern/kernel.asm	/^f01011bb:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f01011c0	obj/kern/kernel.asm	/^f01011c0:	75 0d                	jne    f01011cf <page_free+0x1e>$/;"	l
f01011c2	obj/kern/kernel.asm	/^f01011c2:	8b 15 40 52 20 f0    	mov    0xf0205240,%edx$/;"	l
f01011c8	obj/kern/kernel.asm	/^f01011c8:	89 10                	mov    %edx,(%eax)$/;"	l
f01011ca	obj/kern/kernel.asm	/^f01011ca:	a3 40 52 20 f0       	mov    %eax,0xf0205240$/;"	l
f01011cf	obj/kern/kernel.asm	/^f01011cf:	5d                   	pop    %ebp$/;"	l
f01011d0	obj/kern/kernel.asm	/^f01011d0:	c3                   	ret    $/;"	l
f01011d1	obj/kern/kernel.asm	/^f01011d1 <page_decref>:$/;"	l
f01011d1	obj/kern/kernel.asm	/^f01011d1:	55                   	push   %ebp$/;"	l
f01011d2	obj/kern/kernel.asm	/^f01011d2:	89 e5                	mov    %esp,%ebp$/;"	l
f01011d4	obj/kern/kernel.asm	/^f01011d4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01011d7	obj/kern/kernel.asm	/^f01011d7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01011da	obj/kern/kernel.asm	/^f01011da:	0f b7 48 04          	movzwl 0x4(%eax),%ecx$/;"	l
f01011de	obj/kern/kernel.asm	/^f01011de:	8d 51 ff             	lea    -0x1(%ecx),%edx$/;"	l
f01011e1	obj/kern/kernel.asm	/^f01011e1:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
f01011e5	obj/kern/kernel.asm	/^f01011e5:	66 85 d2             	test   %dx,%dx$/;"	l
f01011e8	obj/kern/kernel.asm	/^f01011e8:	75 08                	jne    f01011f2 <page_decref+0x21>$/;"	l
f01011ea	obj/kern/kernel.asm	/^f01011ea:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01011ed	obj/kern/kernel.asm	/^f01011ed:	e8 bf ff ff ff       	call   f01011b1 <page_free>$/;"	l
f01011f2	obj/kern/kernel.asm	/^f01011f2:	c9                   	leave  $/;"	l
f01011f3	obj/kern/kernel.asm	/^f01011f3:	c3                   	ret    $/;"	l
f01011f4	obj/kern/kernel.asm	/^f01011f4 <pgdir_walk>:$/;"	l
f01011f4	obj/kern/kernel.asm	/^f01011f4:	55                   	push   %ebp$/;"	l
f01011f5	obj/kern/kernel.asm	/^f01011f5:	89 e5                	mov    %esp,%ebp$/;"	l
f01011f7	obj/kern/kernel.asm	/^f01011f7:	56                   	push   %esi$/;"	l
f01011f8	obj/kern/kernel.asm	/^f01011f8:	53                   	push   %ebx$/;"	l
f01011f9	obj/kern/kernel.asm	/^f01011f9:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01011fc	obj/kern/kernel.asm	/^f01011fc:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01011ff	obj/kern/kernel.asm	/^f01011ff:	89 f3                	mov    %esi,%ebx$/;"	l
f0101201	obj/kern/kernel.asm	/^f0101201:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f0101204	obj/kern/kernel.asm	/^f0101204:	c1 e3 02             	shl    $0x2,%ebx$/;"	l
f0101207	obj/kern/kernel.asm	/^f0101207:	03 5d 08             	add    0x8(%ebp),%ebx$/;"	l
f010120a	obj/kern/kernel.asm	/^f010120a:	8b 03                	mov    (%ebx),%eax$/;"	l
f010120c	obj/kern/kernel.asm	/^f010120c:	85 c0                	test   %eax,%eax$/;"	l
f010120e	obj/kern/kernel.asm	/^f010120e:	74 04                	je     f0101214 <pgdir_walk+0x20>$/;"	l
f0101210	obj/kern/kernel.asm	/^f0101210:	a8 01                	test   $0x1,%al$/;"	l
f0101212	obj/kern/kernel.asm	/^f0101212:	75 2c                	jne    f0101240 <pgdir_walk+0x4c>$/;"	l
f0101214	obj/kern/kernel.asm	/^f0101214:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0101218	obj/kern/kernel.asm	/^f0101218:	74 6c                	je     f0101286 <pgdir_walk+0x92>$/;"	l
f010121a	obj/kern/kernel.asm	/^f010121a:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101221	obj/kern/kernel.asm	/^f0101221:	e8 db fe ff ff       	call   f0101101 <page_alloc>$/;"	l
f0101226	obj/kern/kernel.asm	/^f0101226:	85 c0                	test   %eax,%eax$/;"	l
f0101228	obj/kern/kernel.asm	/^f0101228:	74 63                	je     f010128d <pgdir_walk+0x99>$/;"	l
f010122a	obj/kern/kernel.asm	/^f010122a:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f010122f	obj/kern/kernel.asm	/^f010122f:	2b 05 90 5e 20 f0    	sub    0xf0205e90,%eax$/;"	l
f0101235	obj/kern/kernel.asm	/^f0101235:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101238	obj/kern/kernel.asm	/^f0101238:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010123b	obj/kern/kernel.asm	/^f010123b:	83 c8 07             	or     $0x7,%eax$/;"	l
f010123e	obj/kern/kernel.asm	/^f010123e:	89 03                	mov    %eax,(%ebx)$/;"	l
f0101240	obj/kern/kernel.asm	/^f0101240:	8b 03                	mov    (%ebx),%eax$/;"	l
f0101242	obj/kern/kernel.asm	/^f0101242:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101247	obj/kern/kernel.asm	/^f0101247:	89 c2                	mov    %eax,%edx$/;"	l
f0101249	obj/kern/kernel.asm	/^f0101249:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010124c	obj/kern/kernel.asm	/^f010124c:	3b 15 88 5e 20 f0    	cmp    0xf0205e88,%edx$/;"	l
f0101252	obj/kern/kernel.asm	/^f0101252:	72 20                	jb     f0101274 <pgdir_walk+0x80>$/;"	l
f0101254	obj/kern/kernel.asm	/^f0101254:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101258	obj/kern/kernel.asm	/^f0101258:	c7 44 24 08 84 70 10 	movl   $0xf0107084,0x8(%esp)$/;"	l
f010125f	obj/kern/kernel.asm	/^f010125f:	f0 $/;"	l
f0101260	obj/kern/kernel.asm	/^f0101260:	c7 44 24 04 b6 01 00 	movl   $0x1b6,0x4(%esp)$/;"	l
f0101267	obj/kern/kernel.asm	/^f0101267:	00 $/;"	l
f0101268	obj/kern/kernel.asm	/^f0101268:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f010126f	obj/kern/kernel.asm	/^f010126f:	e8 cc ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101274	obj/kern/kernel.asm	/^f0101274:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f0101277	obj/kern/kernel.asm	/^f0101277:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f010127d	obj/kern/kernel.asm	/^f010127d:	8d 84 30 00 00 00 f0 	lea    -0x10000000(%eax,%esi,1),%eax$/;"	l
f0101284	obj/kern/kernel.asm	/^f0101284:	eb 0c                	jmp    f0101292 <pgdir_walk+0x9e>$/;"	l
f0101286	obj/kern/kernel.asm	/^f0101286:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010128b	obj/kern/kernel.asm	/^f010128b:	eb 05                	jmp    f0101292 <pgdir_walk+0x9e>$/;"	l
f010128d	obj/kern/kernel.asm	/^f010128d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101292	obj/kern/kernel.asm	/^f0101292:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101295	obj/kern/kernel.asm	/^f0101295:	5b                   	pop    %ebx$/;"	l
f0101296	obj/kern/kernel.asm	/^f0101296:	5e                   	pop    %esi$/;"	l
f0101297	obj/kern/kernel.asm	/^f0101297:	5d                   	pop    %ebp$/;"	l
f0101298	obj/kern/kernel.asm	/^f0101298:	c3                   	ret    $/;"	l
f0101299	obj/kern/kernel.asm	/^f0101299 <boot_map_region>:$/;"	l
f0101299	obj/kern/kernel.asm	/^f0101299:	55                   	push   %ebp$/;"	l
f010129a	obj/kern/kernel.asm	/^f010129a:	89 e5                	mov    %esp,%ebp$/;"	l
f010129c	obj/kern/kernel.asm	/^f010129c:	57                   	push   %edi$/;"	l
f010129d	obj/kern/kernel.asm	/^f010129d:	56                   	push   %esi$/;"	l
f010129e	obj/kern/kernel.asm	/^f010129e:	53                   	push   %ebx$/;"	l
f010129f	obj/kern/kernel.asm	/^f010129f:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01012a2	obj/kern/kernel.asm	/^f01012a2:	89 c7                	mov    %eax,%edi$/;"	l
f01012a4	obj/kern/kernel.asm	/^f01012a4:	8d 04 0a             	lea    (%edx,%ecx,1),%eax$/;"	l
f01012a7	obj/kern/kernel.asm	/^f01012a7:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01012aa	obj/kern/kernel.asm	/^f01012aa:	39 c2                	cmp    %eax,%edx$/;"	l
f01012ac	obj/kern/kernel.asm	/^f01012ac:	74 3d                	je     f01012eb <boot_map_region+0x52>$/;"	l
f01012ae	obj/kern/kernel.asm	/^f01012ae:	89 d3                	mov    %edx,%ebx$/;"	l
f01012b0	obj/kern/kernel.asm	/^f01012b0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01012b3	obj/kern/kernel.asm	/^f01012b3:	29 d0                	sub    %edx,%eax$/;"	l
f01012b5	obj/kern/kernel.asm	/^f01012b5:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01012b8	obj/kern/kernel.asm	/^f01012b8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01012bb	obj/kern/kernel.asm	/^f01012bb:	83 c8 01             	or     $0x1,%eax$/;"	l
f01012be	obj/kern/kernel.asm	/^f01012be:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01012c1	obj/kern/kernel.asm	/^f01012c1:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01012c4	obj/kern/kernel.asm	/^f01012c4:	8d 34 18             	lea    (%eax,%ebx,1),%esi$/;"	l
f01012c7	obj/kern/kernel.asm	/^f01012c7:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01012ce	obj/kern/kernel.asm	/^f01012ce:	00 $/;"	l
f01012cf	obj/kern/kernel.asm	/^f01012cf:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01012d3	obj/kern/kernel.asm	/^f01012d3:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01012d6	obj/kern/kernel.asm	/^f01012d6:	e8 19 ff ff ff       	call   f01011f4 <pgdir_walk>$/;"	l
f01012db	obj/kern/kernel.asm	/^f01012db:	0b 75 dc             	or     -0x24(%ebp),%esi$/;"	l
f01012de	obj/kern/kernel.asm	/^f01012de:	89 30                	mov    %esi,(%eax)$/;"	l
f01012e0	obj/kern/kernel.asm	/^f01012e0:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01012e6	obj/kern/kernel.asm	/^f01012e6:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f01012e9	obj/kern/kernel.asm	/^f01012e9:	75 d6                	jne    f01012c1 <boot_map_region+0x28>$/;"	l
f01012eb	obj/kern/kernel.asm	/^f01012eb:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f01012ee	obj/kern/kernel.asm	/^f01012ee:	5b                   	pop    %ebx$/;"	l
f01012ef	obj/kern/kernel.asm	/^f01012ef:	5e                   	pop    %esi$/;"	l
f01012f0	obj/kern/kernel.asm	/^f01012f0:	5f                   	pop    %edi$/;"	l
f01012f1	obj/kern/kernel.asm	/^f01012f1:	5d                   	pop    %ebp$/;"	l
f01012f2	obj/kern/kernel.asm	/^f01012f2:	c3                   	ret    $/;"	l
f01012f3	obj/kern/kernel.asm	/^f01012f3 <page_lookup>:$/;"	l
f01012f3	obj/kern/kernel.asm	/^f01012f3:	55                   	push   %ebp$/;"	l
f01012f4	obj/kern/kernel.asm	/^f01012f4:	89 e5                	mov    %esp,%ebp$/;"	l
f01012f6	obj/kern/kernel.asm	/^f01012f6:	53                   	push   %ebx$/;"	l
f01012f7	obj/kern/kernel.asm	/^f01012f7:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01012fa	obj/kern/kernel.asm	/^f01012fa:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01012fd	obj/kern/kernel.asm	/^f01012fd:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101304	obj/kern/kernel.asm	/^f0101304:	00 $/;"	l
f0101305	obj/kern/kernel.asm	/^f0101305:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101308	obj/kern/kernel.asm	/^f0101308:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010130c	obj/kern/kernel.asm	/^f010130c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010130f	obj/kern/kernel.asm	/^f010130f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101312	obj/kern/kernel.asm	/^f0101312:	e8 dd fe ff ff       	call   f01011f4 <pgdir_walk>$/;"	l
f0101317	obj/kern/kernel.asm	/^f0101317:	85 c0                	test   %eax,%eax$/;"	l
f0101319	obj/kern/kernel.asm	/^f0101319:	74 3f                	je     f010135a <page_lookup+0x67>$/;"	l
f010131b	obj/kern/kernel.asm	/^f010131b:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f010131e	obj/kern/kernel.asm	/^f010131e:	74 41                	je     f0101361 <page_lookup+0x6e>$/;"	l
f0101320	obj/kern/kernel.asm	/^f0101320:	85 db                	test   %ebx,%ebx$/;"	l
f0101322	obj/kern/kernel.asm	/^f0101322:	74 02                	je     f0101326 <page_lookup+0x33>$/;"	l
f0101324	obj/kern/kernel.asm	/^f0101324:	89 03                	mov    %eax,(%ebx)$/;"	l
f0101326	obj/kern/kernel.asm	/^f0101326:	8b 00                	mov    (%eax),%eax$/;"	l
f0101328	obj/kern/kernel.asm	/^f0101328:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010132b	obj/kern/kernel.asm	/^f010132b:	3b 05 88 5e 20 f0    	cmp    0xf0205e88,%eax$/;"	l
f0101331	obj/kern/kernel.asm	/^f0101331:	72 1c                	jb     f010134f <page_lookup+0x5c>$/;"	l
f0101333	obj/kern/kernel.asm	/^f0101333:	c7 44 24 08 40 77 10 	movl   $0xf0107740,0x8(%esp)$/;"	l
f010133a	obj/kern/kernel.asm	/^f010133a:	f0 $/;"	l
f010133b	obj/kern/kernel.asm	/^f010133b:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0101342	obj/kern/kernel.asm	/^f0101342:	00 $/;"	l
f0101343	obj/kern/kernel.asm	/^f0101343:	c7 04 24 41 7f 10 f0 	movl   $0xf0107f41,(%esp)$/;"	l
f010134a	obj/kern/kernel.asm	/^f010134a:	e8 f1 ec ff ff       	call   f0100040 <_panic>$/;"	l
f010134f	obj/kern/kernel.asm	/^f010134f:	8b 15 90 5e 20 f0    	mov    0xf0205e90,%edx$/;"	l
f0101355	obj/kern/kernel.asm	/^f0101355:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0101358	obj/kern/kernel.asm	/^f0101358:	eb 0c                	jmp    f0101366 <page_lookup+0x73>$/;"	l
f010135a	obj/kern/kernel.asm	/^f010135a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010135f	obj/kern/kernel.asm	/^f010135f:	eb 05                	jmp    f0101366 <page_lookup+0x73>$/;"	l
f0101361	obj/kern/kernel.asm	/^f0101361:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101366	obj/kern/kernel.asm	/^f0101366:	83 c4 14             	add    $0x14,%esp$/;"	l
f0101369	obj/kern/kernel.asm	/^f0101369:	5b                   	pop    %ebx$/;"	l
f010136a	obj/kern/kernel.asm	/^f010136a:	5d                   	pop    %ebp$/;"	l
f010136b	obj/kern/kernel.asm	/^f010136b:	c3                   	ret    $/;"	l
f010136c	obj/kern/kernel.asm	/^f010136c <tlb_invalidate>:$/;"	l
f010136c	obj/kern/kernel.asm	/^f010136c:	55                   	push   %ebp$/;"	l
f010136d	obj/kern/kernel.asm	/^f010136d:	89 e5                	mov    %esp,%ebp$/;"	l
f010136f	obj/kern/kernel.asm	/^f010136f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101372	obj/kern/kernel.asm	/^f0101372:	e8 cd 55 00 00       	call   f0106944 <cpunum>$/;"	l
f0101377	obj/kern/kernel.asm	/^f0101377:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010137a	obj/kern/kernel.asm	/^f010137a:	83 b8 28 60 20 f0 00 	cmpl   $0x0,-0xfdf9fd8(%eax)$/;"	l
f0101381	obj/kern/kernel.asm	/^f0101381:	74 16                	je     f0101399 <tlb_invalidate+0x2d>$/;"	l
f0101383	obj/kern/kernel.asm	/^f0101383:	e8 bc 55 00 00       	call   f0106944 <cpunum>$/;"	l
f0101388	obj/kern/kernel.asm	/^f0101388:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010138b	obj/kern/kernel.asm	/^f010138b:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f0101391	obj/kern/kernel.asm	/^f0101391:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101394	obj/kern/kernel.asm	/^f0101394:	39 50 60             	cmp    %edx,0x60(%eax)$/;"	l
f0101397	obj/kern/kernel.asm	/^f0101397:	75 06                	jne    f010139f <tlb_invalidate+0x33>$/;"	l
f0101399	obj/kern/kernel.asm	/^f0101399:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010139c	obj/kern/kernel.asm	/^f010139c:	0f 01 38             	invlpg (%eax)$/;"	l
f010139f	obj/kern/kernel.asm	/^f010139f:	c9                   	leave  $/;"	l
f01013a0	obj/kern/kernel.asm	/^f01013a0:	c3                   	ret    $/;"	l
f01013a1	obj/kern/kernel.asm	/^f01013a1 <page_remove>:$/;"	l
f01013a1	obj/kern/kernel.asm	/^f01013a1:	55                   	push   %ebp$/;"	l
f01013a2	obj/kern/kernel.asm	/^f01013a2:	89 e5                	mov    %esp,%ebp$/;"	l
f01013a4	obj/kern/kernel.asm	/^f01013a4:	56                   	push   %esi$/;"	l
f01013a5	obj/kern/kernel.asm	/^f01013a5:	53                   	push   %ebx$/;"	l
f01013a6	obj/kern/kernel.asm	/^f01013a6:	83 ec 20             	sub    $0x20,%esp$/;"	l
f01013a9	obj/kern/kernel.asm	/^f01013a9:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01013ac	obj/kern/kernel.asm	/^f01013ac:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01013af	obj/kern/kernel.asm	/^f01013af:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f01013b2	obj/kern/kernel.asm	/^f01013b2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01013b6	obj/kern/kernel.asm	/^f01013b6:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01013ba	obj/kern/kernel.asm	/^f01013ba:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01013bd	obj/kern/kernel.asm	/^f01013bd:	e8 31 ff ff ff       	call   f01012f3 <page_lookup>$/;"	l
f01013c2	obj/kern/kernel.asm	/^f01013c2:	85 c0                	test   %eax,%eax$/;"	l
f01013c4	obj/kern/kernel.asm	/^f01013c4:	74 21                	je     f01013e7 <page_remove+0x46>$/;"	l
f01013c6	obj/kern/kernel.asm	/^f01013c6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01013c9	obj/kern/kernel.asm	/^f01013c9:	e8 03 fe ff ff       	call   f01011d1 <page_decref>$/;"	l
f01013ce	obj/kern/kernel.asm	/^f01013ce:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01013d1	obj/kern/kernel.asm	/^f01013d1:	85 c0                	test   %eax,%eax$/;"	l
f01013d3	obj/kern/kernel.asm	/^f01013d3:	74 06                	je     f01013db <page_remove+0x3a>$/;"	l
f01013d5	obj/kern/kernel.asm	/^f01013d5:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01013db	obj/kern/kernel.asm	/^f01013db:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01013df	obj/kern/kernel.asm	/^f01013df:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01013e2	obj/kern/kernel.asm	/^f01013e2:	e8 85 ff ff ff       	call   f010136c <tlb_invalidate>$/;"	l
f01013e7	obj/kern/kernel.asm	/^f01013e7:	83 c4 20             	add    $0x20,%esp$/;"	l
f01013ea	obj/kern/kernel.asm	/^f01013ea:	5b                   	pop    %ebx$/;"	l
f01013eb	obj/kern/kernel.asm	/^f01013eb:	5e                   	pop    %esi$/;"	l
f01013ec	obj/kern/kernel.asm	/^f01013ec:	5d                   	pop    %ebp$/;"	l
f01013ed	obj/kern/kernel.asm	/^f01013ed:	c3                   	ret    $/;"	l
f01013ee	obj/kern/kernel.asm	/^f01013ee <page_insert>:$/;"	l
f01013ee	obj/kern/kernel.asm	/^f01013ee:	55                   	push   %ebp$/;"	l
f01013ef	obj/kern/kernel.asm	/^f01013ef:	89 e5                	mov    %esp,%ebp$/;"	l
f01013f1	obj/kern/kernel.asm	/^f01013f1:	57                   	push   %edi$/;"	l
f01013f2	obj/kern/kernel.asm	/^f01013f2:	56                   	push   %esi$/;"	l
f01013f3	obj/kern/kernel.asm	/^f01013f3:	53                   	push   %ebx$/;"	l
f01013f4	obj/kern/kernel.asm	/^f01013f4:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01013f7	obj/kern/kernel.asm	/^f01013f7:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01013fa	obj/kern/kernel.asm	/^f01013fa:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f01013fd	obj/kern/kernel.asm	/^f01013fd:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101404	obj/kern/kernel.asm	/^f0101404:	00 $/;"	l
f0101405	obj/kern/kernel.asm	/^f0101405:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101409	obj/kern/kernel.asm	/^f0101409:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010140c	obj/kern/kernel.asm	/^f010140c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010140f	obj/kern/kernel.asm	/^f010140f:	e8 e0 fd ff ff       	call   f01011f4 <pgdir_walk>$/;"	l
f0101414	obj/kern/kernel.asm	/^f0101414:	89 c3                	mov    %eax,%ebx$/;"	l
f0101416	obj/kern/kernel.asm	/^f0101416:	85 c0                	test   %eax,%eax$/;"	l
f0101418	obj/kern/kernel.asm	/^f0101418:	74 36                	je     f0101450 <page_insert+0x62>$/;"	l
f010141a	obj/kern/kernel.asm	/^f010141a:	66 83 46 04 01       	addw   $0x1,0x4(%esi)$/;"	l
f010141f	obj/kern/kernel.asm	/^f010141f:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0101422	obj/kern/kernel.asm	/^f0101422:	74 0f                	je     f0101433 <page_insert+0x45>$/;"	l
f0101424	obj/kern/kernel.asm	/^f0101424:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101428	obj/kern/kernel.asm	/^f0101428:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010142b	obj/kern/kernel.asm	/^f010142b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010142e	obj/kern/kernel.asm	/^f010142e:	e8 6e ff ff ff       	call   f01013a1 <page_remove>$/;"	l
f0101433	obj/kern/kernel.asm	/^f0101433:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101436	obj/kern/kernel.asm	/^f0101436:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101439	obj/kern/kernel.asm	/^f0101439:	2b 35 90 5e 20 f0    	sub    0xf0205e90,%esi$/;"	l
f010143f	obj/kern/kernel.asm	/^f010143f:	c1 fe 03             	sar    $0x3,%esi$/;"	l
f0101442	obj/kern/kernel.asm	/^f0101442:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0101445	obj/kern/kernel.asm	/^f0101445:	09 c6                	or     %eax,%esi$/;"	l
f0101447	obj/kern/kernel.asm	/^f0101447:	89 33                	mov    %esi,(%ebx)$/;"	l
f0101449	obj/kern/kernel.asm	/^f0101449:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010144e	obj/kern/kernel.asm	/^f010144e:	eb 05                	jmp    f0101455 <page_insert+0x67>$/;"	l
f0101450	obj/kern/kernel.asm	/^f0101450:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0101455	obj/kern/kernel.asm	/^f0101455:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101458	obj/kern/kernel.asm	/^f0101458:	5b                   	pop    %ebx$/;"	l
f0101459	obj/kern/kernel.asm	/^f0101459:	5e                   	pop    %esi$/;"	l
f010145a	obj/kern/kernel.asm	/^f010145a:	5f                   	pop    %edi$/;"	l
f010145b	obj/kern/kernel.asm	/^f010145b:	5d                   	pop    %ebp$/;"	l
f010145c	obj/kern/kernel.asm	/^f010145c:	c3                   	ret    $/;"	l
f010145d	obj/kern/kernel.asm	/^f010145d <mmio_map_region>:$/;"	l
f010145d	obj/kern/kernel.asm	/^f010145d:	55                   	push   %ebp$/;"	l
f010145e	obj/kern/kernel.asm	/^f010145e:	89 e5                	mov    %esp,%ebp$/;"	l
f0101460	obj/kern/kernel.asm	/^f0101460:	53                   	push   %ebx$/;"	l
f0101461	obj/kern/kernel.asm	/^f0101461:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101464	obj/kern/kernel.asm	/^f0101464:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101467	obj/kern/kernel.asm	/^f0101467:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010146a	obj/kern/kernel.asm	/^f010146a:	8d 9c 10 ff 0f 00 00 	lea    0xfff(%eax,%edx,1),%ebx$/;"	l
f0101471	obj/kern/kernel.asm	/^f0101471:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101476	obj/kern/kernel.asm	/^f0101476:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f010147c	obj/kern/kernel.asm	/^f010147c:	29 c3                	sub    %eax,%ebx$/;"	l
f010147e	obj/kern/kernel.asm	/^f010147e:	c7 44 24 04 1a 00 00 	movl   $0x1a,0x4(%esp)$/;"	l
f0101485	obj/kern/kernel.asm	/^f0101485:	00 $/;"	l
f0101486	obj/kern/kernel.asm	/^f0101486:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101489	obj/kern/kernel.asm	/^f0101489:	89 d9                	mov    %ebx,%ecx$/;"	l
f010148b	obj/kern/kernel.asm	/^f010148b:	8b 15 00 13 12 f0    	mov    0xf0121300,%edx$/;"	l
f0101491	obj/kern/kernel.asm	/^f0101491:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f0101496	obj/kern/kernel.asm	/^f0101496:	e8 fe fd ff ff       	call   f0101299 <boot_map_region>$/;"	l
f010149b	obj/kern/kernel.asm	/^f010149b:	a1 00 13 12 f0       	mov    0xf0121300,%eax$/;"	l
f01014a0	obj/kern/kernel.asm	/^f01014a0:	01 c3                	add    %eax,%ebx$/;"	l
f01014a2	obj/kern/kernel.asm	/^f01014a2:	89 1d 00 13 12 f0    	mov    %ebx,0xf0121300$/;"	l
f01014a8	obj/kern/kernel.asm	/^f01014a8:	83 c4 14             	add    $0x14,%esp$/;"	l
f01014ab	obj/kern/kernel.asm	/^f01014ab:	5b                   	pop    %ebx$/;"	l
f01014ac	obj/kern/kernel.asm	/^f01014ac:	5d                   	pop    %ebp$/;"	l
f01014ad	obj/kern/kernel.asm	/^f01014ad:	c3                   	ret    $/;"	l
f01014ae	obj/kern/kernel.asm	/^f01014ae <mem_init>:$/;"	l
f01014ae	obj/kern/kernel.asm	/^f01014ae:	55                   	push   %ebp$/;"	l
f01014af	obj/kern/kernel.asm	/^f01014af:	89 e5                	mov    %esp,%ebp$/;"	l
f01014b1	obj/kern/kernel.asm	/^f01014b1:	57                   	push   %edi$/;"	l
f01014b2	obj/kern/kernel.asm	/^f01014b2:	56                   	push   %esi$/;"	l
f01014b3	obj/kern/kernel.asm	/^f01014b3:	53                   	push   %ebx$/;"	l
f01014b4	obj/kern/kernel.asm	/^f01014b4:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f01014b7	obj/kern/kernel.asm	/^f01014b7:	c7 04 24 15 00 00 00 	movl   $0x15,(%esp)$/;"	l
f01014be	obj/kern/kernel.asm	/^f01014be:	e8 dd 28 00 00       	call   f0103da0 <mc146818_read>$/;"	l
f01014c3	obj/kern/kernel.asm	/^f01014c3:	89 c3                	mov    %eax,%ebx$/;"	l
f01014c5	obj/kern/kernel.asm	/^f01014c5:	c7 04 24 16 00 00 00 	movl   $0x16,(%esp)$/;"	l
f01014cc	obj/kern/kernel.asm	/^f01014cc:	e8 cf 28 00 00       	call   f0103da0 <mc146818_read>$/;"	l
f01014d1	obj/kern/kernel.asm	/^f01014d1:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f01014d4	obj/kern/kernel.asm	/^f01014d4:	09 c3                	or     %eax,%ebx$/;"	l
f01014d6	obj/kern/kernel.asm	/^f01014d6:	89 d8                	mov    %ebx,%eax$/;"	l
f01014d8	obj/kern/kernel.asm	/^f01014d8:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f01014db	obj/kern/kernel.asm	/^f01014db:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f01014e1	obj/kern/kernel.asm	/^f01014e1:	85 c0                	test   %eax,%eax$/;"	l
f01014e3	obj/kern/kernel.asm	/^f01014e3:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f01014e6	obj/kern/kernel.asm	/^f01014e6:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f01014e9	obj/kern/kernel.asm	/^f01014e9:	a3 44 52 20 f0       	mov    %eax,0xf0205244$/;"	l
f01014ee	obj/kern/kernel.asm	/^f01014ee:	c7 04 24 17 00 00 00 	movl   $0x17,(%esp)$/;"	l
f01014f5	obj/kern/kernel.asm	/^f01014f5:	e8 a6 28 00 00       	call   f0103da0 <mc146818_read>$/;"	l
f01014fa	obj/kern/kernel.asm	/^f01014fa:	89 c3                	mov    %eax,%ebx$/;"	l
f01014fc	obj/kern/kernel.asm	/^f01014fc:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)$/;"	l
f0101503	obj/kern/kernel.asm	/^f0101503:	e8 98 28 00 00       	call   f0103da0 <mc146818_read>$/;"	l
f0101508	obj/kern/kernel.asm	/^f0101508:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f010150b	obj/kern/kernel.asm	/^f010150b:	09 c3                	or     %eax,%ebx$/;"	l
f010150d	obj/kern/kernel.asm	/^f010150d:	89 d8                	mov    %ebx,%eax$/;"	l
f010150f	obj/kern/kernel.asm	/^f010150f:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0101512	obj/kern/kernel.asm	/^f0101512:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f0101518	obj/kern/kernel.asm	/^f0101518:	85 c0                	test   %eax,%eax$/;"	l
f010151a	obj/kern/kernel.asm	/^f010151a:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f010151d	obj/kern/kernel.asm	/^f010151d:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f0101520	obj/kern/kernel.asm	/^f0101520:	85 c0                	test   %eax,%eax$/;"	l
f0101522	obj/kern/kernel.asm	/^f0101522:	74 0e                	je     f0101532 <mem_init+0x84>$/;"	l
f0101524	obj/kern/kernel.asm	/^f0101524:	8d 90 00 01 00 00    	lea    0x100(%eax),%edx$/;"	l
f010152a	obj/kern/kernel.asm	/^f010152a:	89 15 88 5e 20 f0    	mov    %edx,0xf0205e88$/;"	l
f0101530	obj/kern/kernel.asm	/^f0101530:	eb 0c                	jmp    f010153e <mem_init+0x90>$/;"	l
f0101532	obj/kern/kernel.asm	/^f0101532:	8b 15 44 52 20 f0    	mov    0xf0205244,%edx$/;"	l
f0101538	obj/kern/kernel.asm	/^f0101538:	89 15 88 5e 20 f0    	mov    %edx,0xf0205e88$/;"	l
f010153e	obj/kern/kernel.asm	/^f010153e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101541	obj/kern/kernel.asm	/^f0101541:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101544	obj/kern/kernel.asm	/^f0101544:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101548	obj/kern/kernel.asm	/^f0101548:	a1 44 52 20 f0       	mov    0xf0205244,%eax$/;"	l
f010154d	obj/kern/kernel.asm	/^f010154d:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101550	obj/kern/kernel.asm	/^f0101550:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101553	obj/kern/kernel.asm	/^f0101553:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101557	obj/kern/kernel.asm	/^f0101557:	a1 88 5e 20 f0       	mov    0xf0205e88,%eax$/;"	l
f010155c	obj/kern/kernel.asm	/^f010155c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010155f	obj/kern/kernel.asm	/^f010155f:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101562	obj/kern/kernel.asm	/^f0101562:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101566	obj/kern/kernel.asm	/^f0101566:	c7 04 24 60 77 10 f0 	movl   $0xf0107760,(%esp)$/;"	l
f010156d	obj/kern/kernel.asm	/^f010156d:	e8 9c 29 00 00       	call   f0103f0e <cprintf>$/;"	l
f0101572	obj/kern/kernel.asm	/^f0101572:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0101577	obj/kern/kernel.asm	/^f0101577:	e8 04 f6 ff ff       	call   f0100b80 <boot_alloc>$/;"	l
f010157c	obj/kern/kernel.asm	/^f010157c:	a3 8c 5e 20 f0       	mov    %eax,0xf0205e8c$/;"	l
f0101581	obj/kern/kernel.asm	/^f0101581:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101588	obj/kern/kernel.asm	/^f0101588:	00 $/;"	l
f0101589	obj/kern/kernel.asm	/^f0101589:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101590	obj/kern/kernel.asm	/^f0101590:	00 $/;"	l
f0101591	obj/kern/kernel.asm	/^f0101591:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101594	obj/kern/kernel.asm	/^f0101594:	e8 10 4d 00 00       	call   f01062a9 <memset>$/;"	l
f0101599	obj/kern/kernel.asm	/^f0101599:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f010159e	obj/kern/kernel.asm	/^f010159e:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01015a3	obj/kern/kernel.asm	/^f01015a3:	77 20                	ja     f01015c5 <mem_init+0x117>$/;"	l
f01015a5	obj/kern/kernel.asm	/^f01015a5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01015a9	obj/kern/kernel.asm	/^f01015a9:	c7 44 24 08 a8 70 10 	movl   $0xf01070a8,0x8(%esp)$/;"	l
f01015b0	obj/kern/kernel.asm	/^f01015b0:	f0 $/;"	l
f01015b1	obj/kern/kernel.asm	/^f01015b1:	c7 44 24 04 8e 00 00 	movl   $0x8e,0x4(%esp)$/;"	l
f01015b8	obj/kern/kernel.asm	/^f01015b8:	00 $/;"	l
f01015b9	obj/kern/kernel.asm	/^f01015b9:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f01015c0	obj/kern/kernel.asm	/^f01015c0:	e8 7b ea ff ff       	call   f0100040 <_panic>$/;"	l
f01015c5	obj/kern/kernel.asm	/^f01015c5:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f01015cb	obj/kern/kernel.asm	/^f01015cb:	83 ca 05             	or     $0x5,%edx$/;"	l
f01015ce	obj/kern/kernel.asm	/^f01015ce:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f01015d4	obj/kern/kernel.asm	/^f01015d4:	a1 88 5e 20 f0       	mov    0xf0205e88,%eax$/;"	l
f01015d9	obj/kern/kernel.asm	/^f01015d9:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f01015dc	obj/kern/kernel.asm	/^f01015dc:	e8 9f f5 ff ff       	call   f0100b80 <boot_alloc>$/;"	l
f01015e1	obj/kern/kernel.asm	/^f01015e1:	a3 90 5e 20 f0       	mov    %eax,0xf0205e90$/;"	l
f01015e6	obj/kern/kernel.asm	/^f01015e6:	b8 00 00 02 00       	mov    $0x20000,%eax$/;"	l
f01015eb	obj/kern/kernel.asm	/^f01015eb:	e8 90 f5 ff ff       	call   f0100b80 <boot_alloc>$/;"	l
f01015f0	obj/kern/kernel.asm	/^f01015f0:	a3 48 52 20 f0       	mov    %eax,0xf0205248$/;"	l
f01015f5	obj/kern/kernel.asm	/^f01015f5:	e8 45 fa ff ff       	call   f010103f <page_init>$/;"	l
f01015fa	obj/kern/kernel.asm	/^f01015fa:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01015ff	obj/kern/kernel.asm	/^f01015ff:	e8 68 f6 ff ff       	call   f0100c6c <check_page_free_list>$/;"	l
f0101604	obj/kern/kernel.asm	/^f0101604:	83 3d 90 5e 20 f0 00 	cmpl   $0x0,0xf0205e90$/;"	l
f010160b	obj/kern/kernel.asm	/^f010160b:	75 1c                	jne    f0101629 <mem_init+0x17b>$/;"	l
f010160d	obj/kern/kernel.asm	/^f010160d:	c7 44 24 08 14 80 10 	movl   $0xf0108014,0x8(%esp)$/;"	l
f0101614	obj/kern/kernel.asm	/^f0101614:	f0 $/;"	l
f0101615	obj/kern/kernel.asm	/^f0101615:	c7 44 24 04 ef 02 00 	movl   $0x2ef,0x4(%esp)$/;"	l
f010161c	obj/kern/kernel.asm	/^f010161c:	00 $/;"	l
f010161d	obj/kern/kernel.asm	/^f010161d:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0101624	obj/kern/kernel.asm	/^f0101624:	e8 17 ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101629	obj/kern/kernel.asm	/^f0101629:	a1 40 52 20 f0       	mov    0xf0205240,%eax$/;"	l
f010162e	obj/kern/kernel.asm	/^f010162e:	85 c0                	test   %eax,%eax$/;"	l
f0101630	obj/kern/kernel.asm	/^f0101630:	74 10                	je     f0101642 <mem_init+0x194>$/;"	l
f0101632	obj/kern/kernel.asm	/^f0101632:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101637	obj/kern/kernel.asm	/^f0101637:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010163a	obj/kern/kernel.asm	/^f010163a:	8b 00                	mov    (%eax),%eax$/;"	l
f010163c	obj/kern/kernel.asm	/^f010163c:	85 c0                	test   %eax,%eax$/;"	l
f010163e	obj/kern/kernel.asm	/^f010163e:	75 f7                	jne    f0101637 <mem_init+0x189>$/;"	l
f0101640	obj/kern/kernel.asm	/^f0101640:	eb 05                	jmp    f0101647 <mem_init+0x199>$/;"	l
f0101642	obj/kern/kernel.asm	/^f0101642:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101647	obj/kern/kernel.asm	/^f0101647:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010164e	obj/kern/kernel.asm	/^f010164e:	e8 ae fa ff ff       	call   f0101101 <page_alloc>$/;"	l
f0101653	obj/kern/kernel.asm	/^f0101653:	89 c7                	mov    %eax,%edi$/;"	l
f0101655	obj/kern/kernel.asm	/^f0101655:	85 c0                	test   %eax,%eax$/;"	l
f0101657	obj/kern/kernel.asm	/^f0101657:	75 24                	jne    f010167d <mem_init+0x1cf>$/;"	l
f0101659	obj/kern/kernel.asm	/^f0101659:	c7 44 24 0c 2f 80 10 	movl   $0xf010802f,0xc(%esp)$/;"	l
f0101660	obj/kern/kernel.asm	/^f0101660:	f0 $/;"	l
f0101661	obj/kern/kernel.asm	/^f0101661:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0101668	obj/kern/kernel.asm	/^f0101668:	f0 $/;"	l
f0101669	obj/kern/kernel.asm	/^f0101669:	c7 44 24 04 f7 02 00 	movl   $0x2f7,0x4(%esp)$/;"	l
f0101670	obj/kern/kernel.asm	/^f0101670:	00 $/;"	l
f0101671	obj/kern/kernel.asm	/^f0101671:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0101678	obj/kern/kernel.asm	/^f0101678:	e8 c3 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f010167d	obj/kern/kernel.asm	/^f010167d:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101684	obj/kern/kernel.asm	/^f0101684:	e8 78 fa ff ff       	call   f0101101 <page_alloc>$/;"	l
f0101689	obj/kern/kernel.asm	/^f0101689:	89 c6                	mov    %eax,%esi$/;"	l
f010168b	obj/kern/kernel.asm	/^f010168b:	85 c0                	test   %eax,%eax$/;"	l
f010168d	obj/kern/kernel.asm	/^f010168d:	75 24                	jne    f01016b3 <mem_init+0x205>$/;"	l
f010168f	obj/kern/kernel.asm	/^f010168f:	c7 44 24 0c 45 80 10 	movl   $0xf0108045,0xc(%esp)$/;"	l
f0101696	obj/kern/kernel.asm	/^f0101696:	f0 $/;"	l
f0101697	obj/kern/kernel.asm	/^f0101697:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f010169e	obj/kern/kernel.asm	/^f010169e:	f0 $/;"	l
f010169f	obj/kern/kernel.asm	/^f010169f:	c7 44 24 04 f8 02 00 	movl   $0x2f8,0x4(%esp)$/;"	l
f01016a6	obj/kern/kernel.asm	/^f01016a6:	00 $/;"	l
f01016a7	obj/kern/kernel.asm	/^f01016a7:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f01016ae	obj/kern/kernel.asm	/^f01016ae:	e8 8d e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016b3	obj/kern/kernel.asm	/^f01016b3:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01016ba	obj/kern/kernel.asm	/^f01016ba:	e8 42 fa ff ff       	call   f0101101 <page_alloc>$/;"	l
f01016bf	obj/kern/kernel.asm	/^f01016bf:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01016c2	obj/kern/kernel.asm	/^f01016c2:	85 c0                	test   %eax,%eax$/;"	l
f01016c4	obj/kern/kernel.asm	/^f01016c4:	75 24                	jne    f01016ea <mem_init+0x23c>$/;"	l
f01016c6	obj/kern/kernel.asm	/^f01016c6:	c7 44 24 0c 5b 80 10 	movl   $0xf010805b,0xc(%esp)$/;"	l
f01016cd	obj/kern/kernel.asm	/^f01016cd:	f0 $/;"	l
f01016ce	obj/kern/kernel.asm	/^f01016ce:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f01016d5	obj/kern/kernel.asm	/^f01016d5:	f0 $/;"	l
f01016d6	obj/kern/kernel.asm	/^f01016d6:	c7 44 24 04 f9 02 00 	movl   $0x2f9,0x4(%esp)$/;"	l
f01016dd	obj/kern/kernel.asm	/^f01016dd:	00 $/;"	l
f01016de	obj/kern/kernel.asm	/^f01016de:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f01016e5	obj/kern/kernel.asm	/^f01016e5:	e8 56 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016ea	obj/kern/kernel.asm	/^f01016ea:	39 f7                	cmp    %esi,%edi$/;"	l
f01016ec	obj/kern/kernel.asm	/^f01016ec:	75 24                	jne    f0101712 <mem_init+0x264>$/;"	l
f01016ee	obj/kern/kernel.asm	/^f01016ee:	c7 44 24 0c 71 80 10 	movl   $0xf0108071,0xc(%esp)$/;"	l
f01016f5	obj/kern/kernel.asm	/^f01016f5:	f0 $/;"	l
f01016f6	obj/kern/kernel.asm	/^f01016f6:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f01016fd	obj/kern/kernel.asm	/^f01016fd:	f0 $/;"	l
f01016fe	obj/kern/kernel.asm	/^f01016fe:	c7 44 24 04 fc 02 00 	movl   $0x2fc,0x4(%esp)$/;"	l
f0101705	obj/kern/kernel.asm	/^f0101705:	00 $/;"	l
f0101706	obj/kern/kernel.asm	/^f0101706:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f010170d	obj/kern/kernel.asm	/^f010170d:	e8 2e e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101712	obj/kern/kernel.asm	/^f0101712:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101715	obj/kern/kernel.asm	/^f0101715:	39 c6                	cmp    %eax,%esi$/;"	l
f0101717	obj/kern/kernel.asm	/^f0101717:	74 04                	je     f010171d <mem_init+0x26f>$/;"	l
f0101719	obj/kern/kernel.asm	/^f0101719:	39 c7                	cmp    %eax,%edi$/;"	l
f010171b	obj/kern/kernel.asm	/^f010171b:	75 24                	jne    f0101741 <mem_init+0x293>$/;"	l
f010171d	obj/kern/kernel.asm	/^f010171d:	c7 44 24 0c 9c 77 10 	movl   $0xf010779c,0xc(%esp)$/;"	l
f0101724	obj/kern/kernel.asm	/^f0101724:	f0 $/;"	l
f0101725	obj/kern/kernel.asm	/^f0101725:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f010172c	obj/kern/kernel.asm	/^f010172c:	f0 $/;"	l
f010172d	obj/kern/kernel.asm	/^f010172d:	c7 44 24 04 fd 02 00 	movl   $0x2fd,0x4(%esp)$/;"	l
f0101734	obj/kern/kernel.asm	/^f0101734:	00 $/;"	l
f0101735	obj/kern/kernel.asm	/^f0101735:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f010173c	obj/kern/kernel.asm	/^f010173c:	e8 ff e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101741	obj/kern/kernel.asm	/^f0101741:	8b 15 90 5e 20 f0    	mov    0xf0205e90,%edx$/;"	l
f0101747	obj/kern/kernel.asm	/^f0101747:	a1 88 5e 20 f0       	mov    0xf0205e88,%eax$/;"	l
f010174c	obj/kern/kernel.asm	/^f010174c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010174f	obj/kern/kernel.asm	/^f010174f:	89 f9                	mov    %edi,%ecx$/;"	l
f0101751	obj/kern/kernel.asm	/^f0101751:	29 d1                	sub    %edx,%ecx$/;"	l
f0101753	obj/kern/kernel.asm	/^f0101753:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0101756	obj/kern/kernel.asm	/^f0101756:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101759	obj/kern/kernel.asm	/^f0101759:	39 c1                	cmp    %eax,%ecx$/;"	l
f010175b	obj/kern/kernel.asm	/^f010175b:	72 24                	jb     f0101781 <mem_init+0x2d3>$/;"	l
f010175d	obj/kern/kernel.asm	/^f010175d:	c7 44 24 0c 83 80 10 	movl   $0xf0108083,0xc(%esp)$/;"	l
f0101764	obj/kern/kernel.asm	/^f0101764:	f0 $/;"	l
f0101765	obj/kern/kernel.asm	/^f0101765:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f010176c	obj/kern/kernel.asm	/^f010176c:	f0 $/;"	l
f010176d	obj/kern/kernel.asm	/^f010176d:	c7 44 24 04 fe 02 00 	movl   $0x2fe,0x4(%esp)$/;"	l
f0101774	obj/kern/kernel.asm	/^f0101774:	00 $/;"	l
f0101775	obj/kern/kernel.asm	/^f0101775:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f010177c	obj/kern/kernel.asm	/^f010177c:	e8 bf e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101781	obj/kern/kernel.asm	/^f0101781:	89 f1                	mov    %esi,%ecx$/;"	l
f0101783	obj/kern/kernel.asm	/^f0101783:	29 d1                	sub    %edx,%ecx$/;"	l
f0101785	obj/kern/kernel.asm	/^f0101785:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0101788	obj/kern/kernel.asm	/^f0101788:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f010178b	obj/kern/kernel.asm	/^f010178b:	39 c8                	cmp    %ecx,%eax$/;"	l
f010178d	obj/kern/kernel.asm	/^f010178d:	77 24                	ja     f01017b3 <mem_init+0x305>$/;"	l
f010178f	obj/kern/kernel.asm	/^f010178f:	c7 44 24 0c a0 80 10 	movl   $0xf01080a0,0xc(%esp)$/;"	l
f0101796	obj/kern/kernel.asm	/^f0101796:	f0 $/;"	l
f0101797	obj/kern/kernel.asm	/^f0101797:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f010179e	obj/kern/kernel.asm	/^f010179e:	f0 $/;"	l
f010179f	obj/kern/kernel.asm	/^f010179f:	c7 44 24 04 ff 02 00 	movl   $0x2ff,0x4(%esp)$/;"	l
f01017a6	obj/kern/kernel.asm	/^f01017a6:	00 $/;"	l
f01017a7	obj/kern/kernel.asm	/^f01017a7:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f01017ae	obj/kern/kernel.asm	/^f01017ae:	e8 8d e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017b3	obj/kern/kernel.asm	/^f01017b3:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f01017b6	obj/kern/kernel.asm	/^f01017b6:	29 d1                	sub    %edx,%ecx$/;"	l
f01017b8	obj/kern/kernel.asm	/^f01017b8:	89 ca                	mov    %ecx,%edx$/;"	l
f01017ba	obj/kern/kernel.asm	/^f01017ba:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01017bd	obj/kern/kernel.asm	/^f01017bd:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01017c0	obj/kern/kernel.asm	/^f01017c0:	39 d0                	cmp    %edx,%eax$/;"	l
f01017c2	obj/kern/kernel.asm	/^f01017c2:	77 24                	ja     f01017e8 <mem_init+0x33a>$/;"	l
f01017c4	obj/kern/kernel.asm	/^f01017c4:	c7 44 24 0c bd 80 10 	movl   $0xf01080bd,0xc(%esp)$/;"	l
f01017cb	obj/kern/kernel.asm	/^f01017cb:	f0 $/;"	l
f01017cc	obj/kern/kernel.asm	/^f01017cc:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f01017d3	obj/kern/kernel.asm	/^f01017d3:	f0 $/;"	l
f01017d4	obj/kern/kernel.asm	/^f01017d4:	c7 44 24 04 00 03 00 	movl   $0x300,0x4(%esp)$/;"	l
f01017db	obj/kern/kernel.asm	/^f01017db:	00 $/;"	l
f01017dc	obj/kern/kernel.asm	/^f01017dc:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f01017e3	obj/kern/kernel.asm	/^f01017e3:	e8 58 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017e8	obj/kern/kernel.asm	/^f01017e8:	a1 40 52 20 f0       	mov    0xf0205240,%eax$/;"	l
f01017ed	obj/kern/kernel.asm	/^f01017ed:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01017f0	obj/kern/kernel.asm	/^f01017f0:	c7 05 40 52 20 f0 00 	movl   $0x0,0xf0205240$/;"	l
f01017f7	obj/kern/kernel.asm	/^f01017f7:	00 00 00 $/;"	l
f01017fa	obj/kern/kernel.asm	/^f01017fa:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101801	obj/kern/kernel.asm	/^f0101801:	e8 fb f8 ff ff       	call   f0101101 <page_alloc>$/;"	l
f0101806	obj/kern/kernel.asm	/^f0101806:	85 c0                	test   %eax,%eax$/;"	l
f0101808	obj/kern/kernel.asm	/^f0101808:	74 24                	je     f010182e <mem_init+0x380>$/;"	l
f010180a	obj/kern/kernel.asm	/^f010180a:	c7 44 24 0c da 80 10 	movl   $0xf01080da,0xc(%esp)$/;"	l
f0101811	obj/kern/kernel.asm	/^f0101811:	f0 $/;"	l
f0101812	obj/kern/kernel.asm	/^f0101812:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0101819	obj/kern/kernel.asm	/^f0101819:	f0 $/;"	l
f010181a	obj/kern/kernel.asm	/^f010181a:	c7 44 24 04 07 03 00 	movl   $0x307,0x4(%esp)$/;"	l
f0101821	obj/kern/kernel.asm	/^f0101821:	00 $/;"	l
f0101822	obj/kern/kernel.asm	/^f0101822:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0101829	obj/kern/kernel.asm	/^f0101829:	e8 12 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f010182e	obj/kern/kernel.asm	/^f010182e:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101831	obj/kern/kernel.asm	/^f0101831:	e8 7b f9 ff ff       	call   f01011b1 <page_free>$/;"	l
f0101836	obj/kern/kernel.asm	/^f0101836:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101839	obj/kern/kernel.asm	/^f0101839:	e8 73 f9 ff ff       	call   f01011b1 <page_free>$/;"	l
f010183e	obj/kern/kernel.asm	/^f010183e:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101841	obj/kern/kernel.asm	/^f0101841:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101844	obj/kern/kernel.asm	/^f0101844:	e8 68 f9 ff ff       	call   f01011b1 <page_free>$/;"	l
f0101849	obj/kern/kernel.asm	/^f0101849:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101850	obj/kern/kernel.asm	/^f0101850:	e8 ac f8 ff ff       	call   f0101101 <page_alloc>$/;"	l
f0101855	obj/kern/kernel.asm	/^f0101855:	89 c6                	mov    %eax,%esi$/;"	l
f0101857	obj/kern/kernel.asm	/^f0101857:	85 c0                	test   %eax,%eax$/;"	l
f0101859	obj/kern/kernel.asm	/^f0101859:	75 24                	jne    f010187f <mem_init+0x3d1>$/;"	l
f010185b	obj/kern/kernel.asm	/^f010185b:	c7 44 24 0c 2f 80 10 	movl   $0xf010802f,0xc(%esp)$/;"	l
f0101862	obj/kern/kernel.asm	/^f0101862:	f0 $/;"	l
f0101863	obj/kern/kernel.asm	/^f0101863:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f010186a	obj/kern/kernel.asm	/^f010186a:	f0 $/;"	l
f010186b	obj/kern/kernel.asm	/^f010186b:	c7 44 24 04 0e 03 00 	movl   $0x30e,0x4(%esp)$/;"	l
f0101872	obj/kern/kernel.asm	/^f0101872:	00 $/;"	l
f0101873	obj/kern/kernel.asm	/^f0101873:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f010187a	obj/kern/kernel.asm	/^f010187a:	e8 c1 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f010187f	obj/kern/kernel.asm	/^f010187f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101886	obj/kern/kernel.asm	/^f0101886:	e8 76 f8 ff ff       	call   f0101101 <page_alloc>$/;"	l
f010188b	obj/kern/kernel.asm	/^f010188b:	89 c7                	mov    %eax,%edi$/;"	l
f010188d	obj/kern/kernel.asm	/^f010188d:	85 c0                	test   %eax,%eax$/;"	l
f010188f	obj/kern/kernel.asm	/^f010188f:	75 24                	jne    f01018b5 <mem_init+0x407>$/;"	l
f0101891	obj/kern/kernel.asm	/^f0101891:	c7 44 24 0c 45 80 10 	movl   $0xf0108045,0xc(%esp)$/;"	l
f0101898	obj/kern/kernel.asm	/^f0101898:	f0 $/;"	l
f0101899	obj/kern/kernel.asm	/^f0101899:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f01018a0	obj/kern/kernel.asm	/^f01018a0:	f0 $/;"	l
f01018a1	obj/kern/kernel.asm	/^f01018a1:	c7 44 24 04 0f 03 00 	movl   $0x30f,0x4(%esp)$/;"	l
f01018a8	obj/kern/kernel.asm	/^f01018a8:	00 $/;"	l
f01018a9	obj/kern/kernel.asm	/^f01018a9:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f01018b0	obj/kern/kernel.asm	/^f01018b0:	e8 8b e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018b5	obj/kern/kernel.asm	/^f01018b5:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01018bc	obj/kern/kernel.asm	/^f01018bc:	e8 40 f8 ff ff       	call   f0101101 <page_alloc>$/;"	l
f01018c1	obj/kern/kernel.asm	/^f01018c1:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01018c4	obj/kern/kernel.asm	/^f01018c4:	85 c0                	test   %eax,%eax$/;"	l
f01018c6	obj/kern/kernel.asm	/^f01018c6:	75 24                	jne    f01018ec <mem_init+0x43e>$/;"	l
f01018c8	obj/kern/kernel.asm	/^f01018c8:	c7 44 24 0c 5b 80 10 	movl   $0xf010805b,0xc(%esp)$/;"	l
f01018cf	obj/kern/kernel.asm	/^f01018cf:	f0 $/;"	l
f01018d0	obj/kern/kernel.asm	/^f01018d0:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f01018d7	obj/kern/kernel.asm	/^f01018d7:	f0 $/;"	l
f01018d8	obj/kern/kernel.asm	/^f01018d8:	c7 44 24 04 10 03 00 	movl   $0x310,0x4(%esp)$/;"	l
f01018df	obj/kern/kernel.asm	/^f01018df:	00 $/;"	l
f01018e0	obj/kern/kernel.asm	/^f01018e0:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f01018e7	obj/kern/kernel.asm	/^f01018e7:	e8 54 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018ec	obj/kern/kernel.asm	/^f01018ec:	39 fe                	cmp    %edi,%esi$/;"	l
f01018ee	obj/kern/kernel.asm	/^f01018ee:	75 24                	jne    f0101914 <mem_init+0x466>$/;"	l
f01018f0	obj/kern/kernel.asm	/^f01018f0:	c7 44 24 0c 71 80 10 	movl   $0xf0108071,0xc(%esp)$/;"	l
f01018f7	obj/kern/kernel.asm	/^f01018f7:	f0 $/;"	l
f01018f8	obj/kern/kernel.asm	/^f01018f8:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f01018ff	obj/kern/kernel.asm	/^f01018ff:	f0 $/;"	l
f0101900	obj/kern/kernel.asm	/^f0101900:	c7 44 24 04 12 03 00 	movl   $0x312,0x4(%esp)$/;"	l
f0101907	obj/kern/kernel.asm	/^f0101907:	00 $/;"	l
f0101908	obj/kern/kernel.asm	/^f0101908:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f010190f	obj/kern/kernel.asm	/^f010190f:	e8 2c e7 ff ff       	call   f0100040 <_panic>$/;"	l
f0101914	obj/kern/kernel.asm	/^f0101914:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101917	obj/kern/kernel.asm	/^f0101917:	39 c7                	cmp    %eax,%edi$/;"	l
f0101919	obj/kern/kernel.asm	/^f0101919:	74 04                	je     f010191f <mem_init+0x471>$/;"	l
f010191b	obj/kern/kernel.asm	/^f010191b:	39 c6                	cmp    %eax,%esi$/;"	l
f010191d	obj/kern/kernel.asm	/^f010191d:	75 24                	jne    f0101943 <mem_init+0x495>$/;"	l
f010191f	obj/kern/kernel.asm	/^f010191f:	c7 44 24 0c 9c 77 10 	movl   $0xf010779c,0xc(%esp)$/;"	l
f0101926	obj/kern/kernel.asm	/^f0101926:	f0 $/;"	l
f0101927	obj/kern/kernel.asm	/^f0101927:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f010192e	obj/kern/kernel.asm	/^f010192e:	f0 $/;"	l
f010192f	obj/kern/kernel.asm	/^f010192f:	c7 44 24 04 13 03 00 	movl   $0x313,0x4(%esp)$/;"	l
f0101936	obj/kern/kernel.asm	/^f0101936:	00 $/;"	l
f0101937	obj/kern/kernel.asm	/^f0101937:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f010193e	obj/kern/kernel.asm	/^f010193e:	e8 fd e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101943	obj/kern/kernel.asm	/^f0101943:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010194a	obj/kern/kernel.asm	/^f010194a:	e8 b2 f7 ff ff       	call   f0101101 <page_alloc>$/;"	l
f010194f	obj/kern/kernel.asm	/^f010194f:	85 c0                	test   %eax,%eax$/;"	l
f0101951	obj/kern/kernel.asm	/^f0101951:	74 24                	je     f0101977 <mem_init+0x4c9>$/;"	l
f0101953	obj/kern/kernel.asm	/^f0101953:	c7 44 24 0c da 80 10 	movl   $0xf01080da,0xc(%esp)$/;"	l
f010195a	obj/kern/kernel.asm	/^f010195a:	f0 $/;"	l
f010195b	obj/kern/kernel.asm	/^f010195b:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0101962	obj/kern/kernel.asm	/^f0101962:	f0 $/;"	l
f0101963	obj/kern/kernel.asm	/^f0101963:	c7 44 24 04 14 03 00 	movl   $0x314,0x4(%esp)$/;"	l
f010196a	obj/kern/kernel.asm	/^f010196a:	00 $/;"	l
f010196b	obj/kern/kernel.asm	/^f010196b:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0101972	obj/kern/kernel.asm	/^f0101972:	e8 c9 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101977	obj/kern/kernel.asm	/^f0101977:	89 f0                	mov    %esi,%eax$/;"	l
f0101979	obj/kern/kernel.asm	/^f0101979:	2b 05 90 5e 20 f0    	sub    0xf0205e90,%eax$/;"	l
f010197f	obj/kern/kernel.asm	/^f010197f:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101982	obj/kern/kernel.asm	/^f0101982:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101985	obj/kern/kernel.asm	/^f0101985:	89 c2                	mov    %eax,%edx$/;"	l
f0101987	obj/kern/kernel.asm	/^f0101987:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010198a	obj/kern/kernel.asm	/^f010198a:	3b 15 88 5e 20 f0    	cmp    0xf0205e88,%edx$/;"	l
f0101990	obj/kern/kernel.asm	/^f0101990:	72 20                	jb     f01019b2 <mem_init+0x504>$/;"	l
f0101992	obj/kern/kernel.asm	/^f0101992:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101996	obj/kern/kernel.asm	/^f0101996:	c7 44 24 08 84 70 10 	movl   $0xf0107084,0x8(%esp)$/;"	l
f010199d	obj/kern/kernel.asm	/^f010199d:	f0 $/;"	l
f010199e	obj/kern/kernel.asm	/^f010199e:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f01019a5	obj/kern/kernel.asm	/^f01019a5:	00 $/;"	l
f01019a6	obj/kern/kernel.asm	/^f01019a6:	c7 04 24 41 7f 10 f0 	movl   $0xf0107f41,(%esp)$/;"	l
f01019ad	obj/kern/kernel.asm	/^f01019ad:	e8 8e e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019b2	obj/kern/kernel.asm	/^f01019b2:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01019b9	obj/kern/kernel.asm	/^f01019b9:	00 $/;"	l
f01019ba	obj/kern/kernel.asm	/^f01019ba:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f01019c1	obj/kern/kernel.asm	/^f01019c1:	00 $/;"	l
f01019c2	obj/kern/kernel.asm	/^f01019c2:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01019c7	obj/kern/kernel.asm	/^f01019c7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01019ca	obj/kern/kernel.asm	/^f01019ca:	e8 da 48 00 00       	call   f01062a9 <memset>$/;"	l
f01019cf	obj/kern/kernel.asm	/^f01019cf:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01019d2	obj/kern/kernel.asm	/^f01019d2:	e8 da f7 ff ff       	call   f01011b1 <page_free>$/;"	l
f01019d7	obj/kern/kernel.asm	/^f01019d7:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01019de	obj/kern/kernel.asm	/^f01019de:	e8 1e f7 ff ff       	call   f0101101 <page_alloc>$/;"	l
f01019e3	obj/kern/kernel.asm	/^f01019e3:	85 c0                	test   %eax,%eax$/;"	l
f01019e5	obj/kern/kernel.asm	/^f01019e5:	75 24                	jne    f0101a0b <mem_init+0x55d>$/;"	l
f01019e7	obj/kern/kernel.asm	/^f01019e7:	c7 44 24 0c e9 80 10 	movl   $0xf01080e9,0xc(%esp)$/;"	l
f01019ee	obj/kern/kernel.asm	/^f01019ee:	f0 $/;"	l
f01019ef	obj/kern/kernel.asm	/^f01019ef:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f01019f6	obj/kern/kernel.asm	/^f01019f6:	f0 $/;"	l
f01019f7	obj/kern/kernel.asm	/^f01019f7:	c7 44 24 04 19 03 00 	movl   $0x319,0x4(%esp)$/;"	l
f01019fe	obj/kern/kernel.asm	/^f01019fe:	00 $/;"	l
f01019ff	obj/kern/kernel.asm	/^f01019ff:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0101a06	obj/kern/kernel.asm	/^f0101a06:	e8 35 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a0b	obj/kern/kernel.asm	/^f0101a0b:	39 c6                	cmp    %eax,%esi$/;"	l
f0101a0d	obj/kern/kernel.asm	/^f0101a0d:	74 24                	je     f0101a33 <mem_init+0x585>$/;"	l
f0101a0f	obj/kern/kernel.asm	/^f0101a0f:	c7 44 24 0c 07 81 10 	movl   $0xf0108107,0xc(%esp)$/;"	l
f0101a16	obj/kern/kernel.asm	/^f0101a16:	f0 $/;"	l
f0101a17	obj/kern/kernel.asm	/^f0101a17:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0101a1e	obj/kern/kernel.asm	/^f0101a1e:	f0 $/;"	l
f0101a1f	obj/kern/kernel.asm	/^f0101a1f:	c7 44 24 04 1a 03 00 	movl   $0x31a,0x4(%esp)$/;"	l
f0101a26	obj/kern/kernel.asm	/^f0101a26:	00 $/;"	l
f0101a27	obj/kern/kernel.asm	/^f0101a27:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0101a2e	obj/kern/kernel.asm	/^f0101a2e:	e8 0d e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a33	obj/kern/kernel.asm	/^f0101a33:	89 f2                	mov    %esi,%edx$/;"	l
f0101a35	obj/kern/kernel.asm	/^f0101a35:	2b 15 90 5e 20 f0    	sub    0xf0205e90,%edx$/;"	l
f0101a3b	obj/kern/kernel.asm	/^f0101a3b:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101a3e	obj/kern/kernel.asm	/^f0101a3e:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101a41	obj/kern/kernel.asm	/^f0101a41:	89 d0                	mov    %edx,%eax$/;"	l
f0101a43	obj/kern/kernel.asm	/^f0101a43:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101a46	obj/kern/kernel.asm	/^f0101a46:	3b 05 88 5e 20 f0    	cmp    0xf0205e88,%eax$/;"	l
f0101a4c	obj/kern/kernel.asm	/^f0101a4c:	72 20                	jb     f0101a6e <mem_init+0x5c0>$/;"	l
f0101a4e	obj/kern/kernel.asm	/^f0101a4e:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0101a52	obj/kern/kernel.asm	/^f0101a52:	c7 44 24 08 84 70 10 	movl   $0xf0107084,0x8(%esp)$/;"	l
f0101a59	obj/kern/kernel.asm	/^f0101a59:	f0 $/;"	l
f0101a5a	obj/kern/kernel.asm	/^f0101a5a:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0101a61	obj/kern/kernel.asm	/^f0101a61:	00 $/;"	l
f0101a62	obj/kern/kernel.asm	/^f0101a62:	c7 04 24 41 7f 10 f0 	movl   $0xf0107f41,(%esp)$/;"	l
f0101a69	obj/kern/kernel.asm	/^f0101a69:	e8 d2 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a6e	obj/kern/kernel.asm	/^f0101a6e:	80 ba 00 00 00 f0 00 	cmpb   $0x0,-0x10000000(%edx)$/;"	l
f0101a75	obj/kern/kernel.asm	/^f0101a75:	75 11                	jne    f0101a88 <mem_init+0x5da>$/;"	l
f0101a77	obj/kern/kernel.asm	/^f0101a77:	8d 82 01 00 00 f0    	lea    -0xfffffff(%edx),%eax$/;"	l
f0101a7d	obj/kern/kernel.asm	/^f0101a7d:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0101a83	obj/kern/kernel.asm	/^f0101a83:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f0101a86	obj/kern/kernel.asm	/^f0101a86:	74 24                	je     f0101aac <mem_init+0x5fe>$/;"	l
f0101a88	obj/kern/kernel.asm	/^f0101a88:	c7 44 24 0c 17 81 10 	movl   $0xf0108117,0xc(%esp)$/;"	l
f0101a8f	obj/kern/kernel.asm	/^f0101a8f:	f0 $/;"	l
f0101a90	obj/kern/kernel.asm	/^f0101a90:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0101a97	obj/kern/kernel.asm	/^f0101a97:	f0 $/;"	l
f0101a98	obj/kern/kernel.asm	/^f0101a98:	c7 44 24 04 1d 03 00 	movl   $0x31d,0x4(%esp)$/;"	l
f0101a9f	obj/kern/kernel.asm	/^f0101a9f:	00 $/;"	l
f0101aa0	obj/kern/kernel.asm	/^f0101aa0:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0101aa7	obj/kern/kernel.asm	/^f0101aa7:	e8 94 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101aac	obj/kern/kernel.asm	/^f0101aac:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101aaf	obj/kern/kernel.asm	/^f0101aaf:	39 d0                	cmp    %edx,%eax$/;"	l
f0101ab1	obj/kern/kernel.asm	/^f0101ab1:	75 d0                	jne    f0101a83 <mem_init+0x5d5>$/;"	l
f0101ab3	obj/kern/kernel.asm	/^f0101ab3:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0101ab6	obj/kern/kernel.asm	/^f0101ab6:	a3 40 52 20 f0       	mov    %eax,0xf0205240$/;"	l
f0101abb	obj/kern/kernel.asm	/^f0101abb:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101abe	obj/kern/kernel.asm	/^f0101abe:	e8 ee f6 ff ff       	call   f01011b1 <page_free>$/;"	l
f0101ac3	obj/kern/kernel.asm	/^f0101ac3:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101ac6	obj/kern/kernel.asm	/^f0101ac6:	e8 e6 f6 ff ff       	call   f01011b1 <page_free>$/;"	l
f0101acb	obj/kern/kernel.asm	/^f0101acb:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101ace	obj/kern/kernel.asm	/^f0101ace:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101ad1	obj/kern/kernel.asm	/^f0101ad1:	e8 db f6 ff ff       	call   f01011b1 <page_free>$/;"	l
f0101ad6	obj/kern/kernel.asm	/^f0101ad6:	a1 40 52 20 f0       	mov    0xf0205240,%eax$/;"	l
f0101adb	obj/kern/kernel.asm	/^f0101adb:	85 c0                	test   %eax,%eax$/;"	l
f0101add	obj/kern/kernel.asm	/^f0101add:	74 09                	je     f0101ae8 <mem_init+0x63a>$/;"	l
f0101adf	obj/kern/kernel.asm	/^f0101adf:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0101ae2	obj/kern/kernel.asm	/^f0101ae2:	8b 00                	mov    (%eax),%eax$/;"	l
f0101ae4	obj/kern/kernel.asm	/^f0101ae4:	85 c0                	test   %eax,%eax$/;"	l
f0101ae6	obj/kern/kernel.asm	/^f0101ae6:	75 f7                	jne    f0101adf <mem_init+0x631>$/;"	l
f0101ae8	obj/kern/kernel.asm	/^f0101ae8:	85 db                	test   %ebx,%ebx$/;"	l
f0101aea	obj/kern/kernel.asm	/^f0101aea:	74 24                	je     f0101b10 <mem_init+0x662>$/;"	l
f0101aec	obj/kern/kernel.asm	/^f0101aec:	c7 44 24 0c 21 81 10 	movl   $0xf0108121,0xc(%esp)$/;"	l
f0101af3	obj/kern/kernel.asm	/^f0101af3:	f0 $/;"	l
f0101af4	obj/kern/kernel.asm	/^f0101af4:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0101afb	obj/kern/kernel.asm	/^f0101afb:	f0 $/;"	l
f0101afc	obj/kern/kernel.asm	/^f0101afc:	c7 44 24 04 2a 03 00 	movl   $0x32a,0x4(%esp)$/;"	l
f0101b03	obj/kern/kernel.asm	/^f0101b03:	00 $/;"	l
f0101b04	obj/kern/kernel.asm	/^f0101b04:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0101b0b	obj/kern/kernel.asm	/^f0101b0b:	e8 30 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b10	obj/kern/kernel.asm	/^f0101b10:	c7 04 24 bc 77 10 f0 	movl   $0xf01077bc,(%esp)$/;"	l
f0101b17	obj/kern/kernel.asm	/^f0101b17:	e8 f2 23 00 00       	call   f0103f0e <cprintf>$/;"	l
f0101b1c	obj/kern/kernel.asm	/^f0101b1c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101b23	obj/kern/kernel.asm	/^f0101b23:	e8 d9 f5 ff ff       	call   f0101101 <page_alloc>$/;"	l
f0101b28	obj/kern/kernel.asm	/^f0101b28:	89 c6                	mov    %eax,%esi$/;"	l
f0101b2a	obj/kern/kernel.asm	/^f0101b2a:	85 c0                	test   %eax,%eax$/;"	l
f0101b2c	obj/kern/kernel.asm	/^f0101b2c:	75 24                	jne    f0101b52 <mem_init+0x6a4>$/;"	l
f0101b2e	obj/kern/kernel.asm	/^f0101b2e:	c7 44 24 0c 2f 80 10 	movl   $0xf010802f,0xc(%esp)$/;"	l
f0101b35	obj/kern/kernel.asm	/^f0101b35:	f0 $/;"	l
f0101b36	obj/kern/kernel.asm	/^f0101b36:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0101b3d	obj/kern/kernel.asm	/^f0101b3d:	f0 $/;"	l
f0101b3e	obj/kern/kernel.asm	/^f0101b3e:	c7 44 24 04 90 03 00 	movl   $0x390,0x4(%esp)$/;"	l
f0101b45	obj/kern/kernel.asm	/^f0101b45:	00 $/;"	l
f0101b46	obj/kern/kernel.asm	/^f0101b46:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0101b4d	obj/kern/kernel.asm	/^f0101b4d:	e8 ee e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b52	obj/kern/kernel.asm	/^f0101b52:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101b59	obj/kern/kernel.asm	/^f0101b59:	e8 a3 f5 ff ff       	call   f0101101 <page_alloc>$/;"	l
f0101b5e	obj/kern/kernel.asm	/^f0101b5e:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101b61	obj/kern/kernel.asm	/^f0101b61:	85 c0                	test   %eax,%eax$/;"	l
f0101b63	obj/kern/kernel.asm	/^f0101b63:	75 24                	jne    f0101b89 <mem_init+0x6db>$/;"	l
f0101b65	obj/kern/kernel.asm	/^f0101b65:	c7 44 24 0c 45 80 10 	movl   $0xf0108045,0xc(%esp)$/;"	l
f0101b6c	obj/kern/kernel.asm	/^f0101b6c:	f0 $/;"	l
f0101b6d	obj/kern/kernel.asm	/^f0101b6d:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0101b74	obj/kern/kernel.asm	/^f0101b74:	f0 $/;"	l
f0101b75	obj/kern/kernel.asm	/^f0101b75:	c7 44 24 04 91 03 00 	movl   $0x391,0x4(%esp)$/;"	l
f0101b7c	obj/kern/kernel.asm	/^f0101b7c:	00 $/;"	l
f0101b7d	obj/kern/kernel.asm	/^f0101b7d:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0101b84	obj/kern/kernel.asm	/^f0101b84:	e8 b7 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b89	obj/kern/kernel.asm	/^f0101b89:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101b90	obj/kern/kernel.asm	/^f0101b90:	e8 6c f5 ff ff       	call   f0101101 <page_alloc>$/;"	l
f0101b95	obj/kern/kernel.asm	/^f0101b95:	89 c3                	mov    %eax,%ebx$/;"	l
f0101b97	obj/kern/kernel.asm	/^f0101b97:	85 c0                	test   %eax,%eax$/;"	l
f0101b99	obj/kern/kernel.asm	/^f0101b99:	75 24                	jne    f0101bbf <mem_init+0x711>$/;"	l
f0101b9b	obj/kern/kernel.asm	/^f0101b9b:	c7 44 24 0c 5b 80 10 	movl   $0xf010805b,0xc(%esp)$/;"	l
f0101ba2	obj/kern/kernel.asm	/^f0101ba2:	f0 $/;"	l
f0101ba3	obj/kern/kernel.asm	/^f0101ba3:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0101baa	obj/kern/kernel.asm	/^f0101baa:	f0 $/;"	l
f0101bab	obj/kern/kernel.asm	/^f0101bab:	c7 44 24 04 92 03 00 	movl   $0x392,0x4(%esp)$/;"	l
f0101bb2	obj/kern/kernel.asm	/^f0101bb2:	00 $/;"	l
f0101bb3	obj/kern/kernel.asm	/^f0101bb3:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0101bba	obj/kern/kernel.asm	/^f0101bba:	e8 81 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101bbf	obj/kern/kernel.asm	/^f0101bbf:	3b 75 d4             	cmp    -0x2c(%ebp),%esi$/;"	l
f0101bc2	obj/kern/kernel.asm	/^f0101bc2:	75 24                	jne    f0101be8 <mem_init+0x73a>$/;"	l
f0101bc4	obj/kern/kernel.asm	/^f0101bc4:	c7 44 24 0c 71 80 10 	movl   $0xf0108071,0xc(%esp)$/;"	l
f0101bcb	obj/kern/kernel.asm	/^f0101bcb:	f0 $/;"	l
f0101bcc	obj/kern/kernel.asm	/^f0101bcc:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0101bd3	obj/kern/kernel.asm	/^f0101bd3:	f0 $/;"	l
f0101bd4	obj/kern/kernel.asm	/^f0101bd4:	c7 44 24 04 95 03 00 	movl   $0x395,0x4(%esp)$/;"	l
f0101bdb	obj/kern/kernel.asm	/^f0101bdb:	00 $/;"	l
f0101bdc	obj/kern/kernel.asm	/^f0101bdc:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0101be3	obj/kern/kernel.asm	/^f0101be3:	e8 58 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101be8	obj/kern/kernel.asm	/^f0101be8:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f0101beb	obj/kern/kernel.asm	/^f0101beb:	74 04                	je     f0101bf1 <mem_init+0x743>$/;"	l
f0101bed	obj/kern/kernel.asm	/^f0101bed:	39 c6                	cmp    %eax,%esi$/;"	l
f0101bef	obj/kern/kernel.asm	/^f0101bef:	75 24                	jne    f0101c15 <mem_init+0x767>$/;"	l
f0101bf1	obj/kern/kernel.asm	/^f0101bf1:	c7 44 24 0c 9c 77 10 	movl   $0xf010779c,0xc(%esp)$/;"	l
f0101bf8	obj/kern/kernel.asm	/^f0101bf8:	f0 $/;"	l
f0101bf9	obj/kern/kernel.asm	/^f0101bf9:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0101c00	obj/kern/kernel.asm	/^f0101c00:	f0 $/;"	l
f0101c01	obj/kern/kernel.asm	/^f0101c01:	c7 44 24 04 96 03 00 	movl   $0x396,0x4(%esp)$/;"	l
f0101c08	obj/kern/kernel.asm	/^f0101c08:	00 $/;"	l
f0101c09	obj/kern/kernel.asm	/^f0101c09:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0101c10	obj/kern/kernel.asm	/^f0101c10:	e8 2b e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c15	obj/kern/kernel.asm	/^f0101c15:	a1 40 52 20 f0       	mov    0xf0205240,%eax$/;"	l
f0101c1a	obj/kern/kernel.asm	/^f0101c1a:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101c1d	obj/kern/kernel.asm	/^f0101c1d:	c7 05 40 52 20 f0 00 	movl   $0x0,0xf0205240$/;"	l
f0101c24	obj/kern/kernel.asm	/^f0101c24:	00 00 00 $/;"	l
f0101c27	obj/kern/kernel.asm	/^f0101c27:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101c2e	obj/kern/kernel.asm	/^f0101c2e:	e8 ce f4 ff ff       	call   f0101101 <page_alloc>$/;"	l
f0101c33	obj/kern/kernel.asm	/^f0101c33:	85 c0                	test   %eax,%eax$/;"	l
f0101c35	obj/kern/kernel.asm	/^f0101c35:	74 24                	je     f0101c5b <mem_init+0x7ad>$/;"	l
f0101c37	obj/kern/kernel.asm	/^f0101c37:	c7 44 24 0c da 80 10 	movl   $0xf01080da,0xc(%esp)$/;"	l
f0101c3e	obj/kern/kernel.asm	/^f0101c3e:	f0 $/;"	l
f0101c3f	obj/kern/kernel.asm	/^f0101c3f:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0101c46	obj/kern/kernel.asm	/^f0101c46:	f0 $/;"	l
f0101c47	obj/kern/kernel.asm	/^f0101c47:	c7 44 24 04 9d 03 00 	movl   $0x39d,0x4(%esp)$/;"	l
f0101c4e	obj/kern/kernel.asm	/^f0101c4e:	00 $/;"	l
f0101c4f	obj/kern/kernel.asm	/^f0101c4f:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0101c56	obj/kern/kernel.asm	/^f0101c56:	e8 e5 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c5b	obj/kern/kernel.asm	/^f0101c5b:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0101c5e	obj/kern/kernel.asm	/^f0101c5e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101c62	obj/kern/kernel.asm	/^f0101c62:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101c69	obj/kern/kernel.asm	/^f0101c69:	00 $/;"	l
f0101c6a	obj/kern/kernel.asm	/^f0101c6a:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f0101c6f	obj/kern/kernel.asm	/^f0101c6f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101c72	obj/kern/kernel.asm	/^f0101c72:	e8 7c f6 ff ff       	call   f01012f3 <page_lookup>$/;"	l
f0101c77	obj/kern/kernel.asm	/^f0101c77:	85 c0                	test   %eax,%eax$/;"	l
f0101c79	obj/kern/kernel.asm	/^f0101c79:	74 24                	je     f0101c9f <mem_init+0x7f1>$/;"	l
f0101c7b	obj/kern/kernel.asm	/^f0101c7b:	c7 44 24 0c dc 77 10 	movl   $0xf01077dc,0xc(%esp)$/;"	l
f0101c82	obj/kern/kernel.asm	/^f0101c82:	f0 $/;"	l
f0101c83	obj/kern/kernel.asm	/^f0101c83:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0101c8a	obj/kern/kernel.asm	/^f0101c8a:	f0 $/;"	l
f0101c8b	obj/kern/kernel.asm	/^f0101c8b:	c7 44 24 04 a0 03 00 	movl   $0x3a0,0x4(%esp)$/;"	l
f0101c92	obj/kern/kernel.asm	/^f0101c92:	00 $/;"	l
f0101c93	obj/kern/kernel.asm	/^f0101c93:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0101c9a	obj/kern/kernel.asm	/^f0101c9a:	e8 a1 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c9f	obj/kern/kernel.asm	/^f0101c9f:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101ca6	obj/kern/kernel.asm	/^f0101ca6:	00 $/;"	l
f0101ca7	obj/kern/kernel.asm	/^f0101ca7:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101cae	obj/kern/kernel.asm	/^f0101cae:	00 $/;"	l
f0101caf	obj/kern/kernel.asm	/^f0101caf:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101cb2	obj/kern/kernel.asm	/^f0101cb2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101cb6	obj/kern/kernel.asm	/^f0101cb6:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f0101cbb	obj/kern/kernel.asm	/^f0101cbb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101cbe	obj/kern/kernel.asm	/^f0101cbe:	e8 2b f7 ff ff       	call   f01013ee <page_insert>$/;"	l
f0101cc3	obj/kern/kernel.asm	/^f0101cc3:	85 c0                	test   %eax,%eax$/;"	l
f0101cc5	obj/kern/kernel.asm	/^f0101cc5:	78 24                	js     f0101ceb <mem_init+0x83d>$/;"	l
f0101cc7	obj/kern/kernel.asm	/^f0101cc7:	c7 44 24 0c 14 78 10 	movl   $0xf0107814,0xc(%esp)$/;"	l
f0101cce	obj/kern/kernel.asm	/^f0101cce:	f0 $/;"	l
f0101ccf	obj/kern/kernel.asm	/^f0101ccf:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0101cd6	obj/kern/kernel.asm	/^f0101cd6:	f0 $/;"	l
f0101cd7	obj/kern/kernel.asm	/^f0101cd7:	c7 44 24 04 a3 03 00 	movl   $0x3a3,0x4(%esp)$/;"	l
f0101cde	obj/kern/kernel.asm	/^f0101cde:	00 $/;"	l
f0101cdf	obj/kern/kernel.asm	/^f0101cdf:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0101ce6	obj/kern/kernel.asm	/^f0101ce6:	e8 55 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ceb	obj/kern/kernel.asm	/^f0101ceb:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101cee	obj/kern/kernel.asm	/^f0101cee:	e8 be f4 ff ff       	call   f01011b1 <page_free>$/;"	l
f0101cf3	obj/kern/kernel.asm	/^f0101cf3:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101cfa	obj/kern/kernel.asm	/^f0101cfa:	00 $/;"	l
f0101cfb	obj/kern/kernel.asm	/^f0101cfb:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101d02	obj/kern/kernel.asm	/^f0101d02:	00 $/;"	l
f0101d03	obj/kern/kernel.asm	/^f0101d03:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101d06	obj/kern/kernel.asm	/^f0101d06:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101d0a	obj/kern/kernel.asm	/^f0101d0a:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f0101d0f	obj/kern/kernel.asm	/^f0101d0f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101d12	obj/kern/kernel.asm	/^f0101d12:	e8 d7 f6 ff ff       	call   f01013ee <page_insert>$/;"	l
f0101d17	obj/kern/kernel.asm	/^f0101d17:	85 c0                	test   %eax,%eax$/;"	l
f0101d19	obj/kern/kernel.asm	/^f0101d19:	74 24                	je     f0101d3f <mem_init+0x891>$/;"	l
f0101d1b	obj/kern/kernel.asm	/^f0101d1b:	c7 44 24 0c 44 78 10 	movl   $0xf0107844,0xc(%esp)$/;"	l
f0101d22	obj/kern/kernel.asm	/^f0101d22:	f0 $/;"	l
f0101d23	obj/kern/kernel.asm	/^f0101d23:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0101d2a	obj/kern/kernel.asm	/^f0101d2a:	f0 $/;"	l
f0101d2b	obj/kern/kernel.asm	/^f0101d2b:	c7 44 24 04 a7 03 00 	movl   $0x3a7,0x4(%esp)$/;"	l
f0101d32	obj/kern/kernel.asm	/^f0101d32:	00 $/;"	l
f0101d33	obj/kern/kernel.asm	/^f0101d33:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0101d3a	obj/kern/kernel.asm	/^f0101d3a:	e8 01 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d3f	obj/kern/kernel.asm	/^f0101d3f:	8b 3d 8c 5e 20 f0    	mov    0xf0205e8c,%edi$/;"	l
f0101d45	obj/kern/kernel.asm	/^f0101d45:	a1 90 5e 20 f0       	mov    0xf0205e90,%eax$/;"	l
f0101d4a	obj/kern/kernel.asm	/^f0101d4a:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0101d4d	obj/kern/kernel.asm	/^f0101d4d:	8b 17                	mov    (%edi),%edx$/;"	l
f0101d4f	obj/kern/kernel.asm	/^f0101d4f:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101d55	obj/kern/kernel.asm	/^f0101d55:	89 f1                	mov    %esi,%ecx$/;"	l
f0101d57	obj/kern/kernel.asm	/^f0101d57:	29 c1                	sub    %eax,%ecx$/;"	l
f0101d59	obj/kern/kernel.asm	/^f0101d59:	89 c8                	mov    %ecx,%eax$/;"	l
f0101d5b	obj/kern/kernel.asm	/^f0101d5b:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101d5e	obj/kern/kernel.asm	/^f0101d5e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101d61	obj/kern/kernel.asm	/^f0101d61:	39 c2                	cmp    %eax,%edx$/;"	l
f0101d63	obj/kern/kernel.asm	/^f0101d63:	74 24                	je     f0101d89 <mem_init+0x8db>$/;"	l
f0101d65	obj/kern/kernel.asm	/^f0101d65:	c7 44 24 0c 74 78 10 	movl   $0xf0107874,0xc(%esp)$/;"	l
f0101d6c	obj/kern/kernel.asm	/^f0101d6c:	f0 $/;"	l
f0101d6d	obj/kern/kernel.asm	/^f0101d6d:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0101d74	obj/kern/kernel.asm	/^f0101d74:	f0 $/;"	l
f0101d75	obj/kern/kernel.asm	/^f0101d75:	c7 44 24 04 a8 03 00 	movl   $0x3a8,0x4(%esp)$/;"	l
f0101d7c	obj/kern/kernel.asm	/^f0101d7c:	00 $/;"	l
f0101d7d	obj/kern/kernel.asm	/^f0101d7d:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0101d84	obj/kern/kernel.asm	/^f0101d84:	e8 b7 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d89	obj/kern/kernel.asm	/^f0101d89:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101d8e	obj/kern/kernel.asm	/^f0101d8e:	89 f8                	mov    %edi,%eax$/;"	l
f0101d90	obj/kern/kernel.asm	/^f0101d90:	e8 68 ee ff ff       	call   f0100bfd <check_va2pa>$/;"	l
f0101d95	obj/kern/kernel.asm	/^f0101d95:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0101d98	obj/kern/kernel.asm	/^f0101d98:	2b 55 cc             	sub    -0x34(%ebp),%edx$/;"	l
f0101d9b	obj/kern/kernel.asm	/^f0101d9b:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101d9e	obj/kern/kernel.asm	/^f0101d9e:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101da1	obj/kern/kernel.asm	/^f0101da1:	39 d0                	cmp    %edx,%eax$/;"	l
f0101da3	obj/kern/kernel.asm	/^f0101da3:	74 24                	je     f0101dc9 <mem_init+0x91b>$/;"	l
f0101da5	obj/kern/kernel.asm	/^f0101da5:	c7 44 24 0c 9c 78 10 	movl   $0xf010789c,0xc(%esp)$/;"	l
f0101dac	obj/kern/kernel.asm	/^f0101dac:	f0 $/;"	l
f0101dad	obj/kern/kernel.asm	/^f0101dad:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0101db4	obj/kern/kernel.asm	/^f0101db4:	f0 $/;"	l
f0101db5	obj/kern/kernel.asm	/^f0101db5:	c7 44 24 04 a9 03 00 	movl   $0x3a9,0x4(%esp)$/;"	l
f0101dbc	obj/kern/kernel.asm	/^f0101dbc:	00 $/;"	l
f0101dbd	obj/kern/kernel.asm	/^f0101dbd:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0101dc4	obj/kern/kernel.asm	/^f0101dc4:	e8 77 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101dc9	obj/kern/kernel.asm	/^f0101dc9:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101dcc	obj/kern/kernel.asm	/^f0101dcc:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0101dd1	obj/kern/kernel.asm	/^f0101dd1:	74 24                	je     f0101df7 <mem_init+0x949>$/;"	l
f0101dd3	obj/kern/kernel.asm	/^f0101dd3:	c7 44 24 0c 2c 81 10 	movl   $0xf010812c,0xc(%esp)$/;"	l
f0101dda	obj/kern/kernel.asm	/^f0101dda:	f0 $/;"	l
f0101ddb	obj/kern/kernel.asm	/^f0101ddb:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0101de2	obj/kern/kernel.asm	/^f0101de2:	f0 $/;"	l
f0101de3	obj/kern/kernel.asm	/^f0101de3:	c7 44 24 04 aa 03 00 	movl   $0x3aa,0x4(%esp)$/;"	l
f0101dea	obj/kern/kernel.asm	/^f0101dea:	00 $/;"	l
f0101deb	obj/kern/kernel.asm	/^f0101deb:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0101df2	obj/kern/kernel.asm	/^f0101df2:	e8 49 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101df7	obj/kern/kernel.asm	/^f0101df7:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0101dfc	obj/kern/kernel.asm	/^f0101dfc:	74 24                	je     f0101e22 <mem_init+0x974>$/;"	l
f0101dfe	obj/kern/kernel.asm	/^f0101dfe:	c7 44 24 0c 3d 81 10 	movl   $0xf010813d,0xc(%esp)$/;"	l
f0101e05	obj/kern/kernel.asm	/^f0101e05:	f0 $/;"	l
f0101e06	obj/kern/kernel.asm	/^f0101e06:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0101e0d	obj/kern/kernel.asm	/^f0101e0d:	f0 $/;"	l
f0101e0e	obj/kern/kernel.asm	/^f0101e0e:	c7 44 24 04 ab 03 00 	movl   $0x3ab,0x4(%esp)$/;"	l
f0101e15	obj/kern/kernel.asm	/^f0101e15:	00 $/;"	l
f0101e16	obj/kern/kernel.asm	/^f0101e16:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0101e1d	obj/kern/kernel.asm	/^f0101e1d:	e8 1e e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e22	obj/kern/kernel.asm	/^f0101e22:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101e29	obj/kern/kernel.asm	/^f0101e29:	00 $/;"	l
f0101e2a	obj/kern/kernel.asm	/^f0101e2a:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101e31	obj/kern/kernel.asm	/^f0101e31:	00 $/;"	l
f0101e32	obj/kern/kernel.asm	/^f0101e32:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101e36	obj/kern/kernel.asm	/^f0101e36:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101e39	obj/kern/kernel.asm	/^f0101e39:	e8 b0 f5 ff ff       	call   f01013ee <page_insert>$/;"	l
f0101e3e	obj/kern/kernel.asm	/^f0101e3e:	85 c0                	test   %eax,%eax$/;"	l
f0101e40	obj/kern/kernel.asm	/^f0101e40:	74 24                	je     f0101e66 <mem_init+0x9b8>$/;"	l
f0101e42	obj/kern/kernel.asm	/^f0101e42:	c7 44 24 0c cc 78 10 	movl   $0xf01078cc,0xc(%esp)$/;"	l
f0101e49	obj/kern/kernel.asm	/^f0101e49:	f0 $/;"	l
f0101e4a	obj/kern/kernel.asm	/^f0101e4a:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0101e51	obj/kern/kernel.asm	/^f0101e51:	f0 $/;"	l
f0101e52	obj/kern/kernel.asm	/^f0101e52:	c7 44 24 04 ae 03 00 	movl   $0x3ae,0x4(%esp)$/;"	l
f0101e59	obj/kern/kernel.asm	/^f0101e59:	00 $/;"	l
f0101e5a	obj/kern/kernel.asm	/^f0101e5a:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0101e61	obj/kern/kernel.asm	/^f0101e61:	e8 da e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e66	obj/kern/kernel.asm	/^f0101e66:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101e6b	obj/kern/kernel.asm	/^f0101e6b:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f0101e70	obj/kern/kernel.asm	/^f0101e70:	e8 88 ed ff ff       	call   f0100bfd <check_va2pa>$/;"	l
f0101e75	obj/kern/kernel.asm	/^f0101e75:	89 da                	mov    %ebx,%edx$/;"	l
f0101e77	obj/kern/kernel.asm	/^f0101e77:	2b 15 90 5e 20 f0    	sub    0xf0205e90,%edx$/;"	l
f0101e7d	obj/kern/kernel.asm	/^f0101e7d:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101e80	obj/kern/kernel.asm	/^f0101e80:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101e83	obj/kern/kernel.asm	/^f0101e83:	39 d0                	cmp    %edx,%eax$/;"	l
f0101e85	obj/kern/kernel.asm	/^f0101e85:	74 24                	je     f0101eab <mem_init+0x9fd>$/;"	l
f0101e87	obj/kern/kernel.asm	/^f0101e87:	c7 44 24 0c 08 79 10 	movl   $0xf0107908,0xc(%esp)$/;"	l
f0101e8e	obj/kern/kernel.asm	/^f0101e8e:	f0 $/;"	l
f0101e8f	obj/kern/kernel.asm	/^f0101e8f:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0101e96	obj/kern/kernel.asm	/^f0101e96:	f0 $/;"	l
f0101e97	obj/kern/kernel.asm	/^f0101e97:	c7 44 24 04 af 03 00 	movl   $0x3af,0x4(%esp)$/;"	l
f0101e9e	obj/kern/kernel.asm	/^f0101e9e:	00 $/;"	l
f0101e9f	obj/kern/kernel.asm	/^f0101e9f:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0101ea6	obj/kern/kernel.asm	/^f0101ea6:	e8 95 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101eab	obj/kern/kernel.asm	/^f0101eab:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101eb0	obj/kern/kernel.asm	/^f0101eb0:	74 24                	je     f0101ed6 <mem_init+0xa28>$/;"	l
f0101eb2	obj/kern/kernel.asm	/^f0101eb2:	c7 44 24 0c 4e 81 10 	movl   $0xf010814e,0xc(%esp)$/;"	l
f0101eb9	obj/kern/kernel.asm	/^f0101eb9:	f0 $/;"	l
f0101eba	obj/kern/kernel.asm	/^f0101eba:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0101ec1	obj/kern/kernel.asm	/^f0101ec1:	f0 $/;"	l
f0101ec2	obj/kern/kernel.asm	/^f0101ec2:	c7 44 24 04 b0 03 00 	movl   $0x3b0,0x4(%esp)$/;"	l
f0101ec9	obj/kern/kernel.asm	/^f0101ec9:	00 $/;"	l
f0101eca	obj/kern/kernel.asm	/^f0101eca:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0101ed1	obj/kern/kernel.asm	/^f0101ed1:	e8 6a e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ed6	obj/kern/kernel.asm	/^f0101ed6:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101edd	obj/kern/kernel.asm	/^f0101edd:	e8 1f f2 ff ff       	call   f0101101 <page_alloc>$/;"	l
f0101ee2	obj/kern/kernel.asm	/^f0101ee2:	85 c0                	test   %eax,%eax$/;"	l
f0101ee4	obj/kern/kernel.asm	/^f0101ee4:	74 24                	je     f0101f0a <mem_init+0xa5c>$/;"	l
f0101ee6	obj/kern/kernel.asm	/^f0101ee6:	c7 44 24 0c da 80 10 	movl   $0xf01080da,0xc(%esp)$/;"	l
f0101eed	obj/kern/kernel.asm	/^f0101eed:	f0 $/;"	l
f0101eee	obj/kern/kernel.asm	/^f0101eee:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0101ef5	obj/kern/kernel.asm	/^f0101ef5:	f0 $/;"	l
f0101ef6	obj/kern/kernel.asm	/^f0101ef6:	c7 44 24 04 b3 03 00 	movl   $0x3b3,0x4(%esp)$/;"	l
f0101efd	obj/kern/kernel.asm	/^f0101efd:	00 $/;"	l
f0101efe	obj/kern/kernel.asm	/^f0101efe:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0101f05	obj/kern/kernel.asm	/^f0101f05:	e8 36 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f0a	obj/kern/kernel.asm	/^f0101f0a:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0101f11	obj/kern/kernel.asm	/^f0101f11:	00 $/;"	l
f0101f12	obj/kern/kernel.asm	/^f0101f12:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101f19	obj/kern/kernel.asm	/^f0101f19:	00 $/;"	l
f0101f1a	obj/kern/kernel.asm	/^f0101f1a:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101f1e	obj/kern/kernel.asm	/^f0101f1e:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f0101f23	obj/kern/kernel.asm	/^f0101f23:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101f26	obj/kern/kernel.asm	/^f0101f26:	e8 c3 f4 ff ff       	call   f01013ee <page_insert>$/;"	l
f0101f2b	obj/kern/kernel.asm	/^f0101f2b:	85 c0                	test   %eax,%eax$/;"	l
f0101f2d	obj/kern/kernel.asm	/^f0101f2d:	74 24                	je     f0101f53 <mem_init+0xaa5>$/;"	l
f0101f2f	obj/kern/kernel.asm	/^f0101f2f:	c7 44 24 0c cc 78 10 	movl   $0xf01078cc,0xc(%esp)$/;"	l
f0101f36	obj/kern/kernel.asm	/^f0101f36:	f0 $/;"	l
f0101f37	obj/kern/kernel.asm	/^f0101f37:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0101f3e	obj/kern/kernel.asm	/^f0101f3e:	f0 $/;"	l
f0101f3f	obj/kern/kernel.asm	/^f0101f3f:	c7 44 24 04 b6 03 00 	movl   $0x3b6,0x4(%esp)$/;"	l
f0101f46	obj/kern/kernel.asm	/^f0101f46:	00 $/;"	l
f0101f47	obj/kern/kernel.asm	/^f0101f47:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0101f4e	obj/kern/kernel.asm	/^f0101f4e:	e8 ed e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f53	obj/kern/kernel.asm	/^f0101f53:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101f58	obj/kern/kernel.asm	/^f0101f58:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f0101f5d	obj/kern/kernel.asm	/^f0101f5d:	e8 9b ec ff ff       	call   f0100bfd <check_va2pa>$/;"	l
f0101f62	obj/kern/kernel.asm	/^f0101f62:	89 da                	mov    %ebx,%edx$/;"	l
f0101f64	obj/kern/kernel.asm	/^f0101f64:	2b 15 90 5e 20 f0    	sub    0xf0205e90,%edx$/;"	l
f0101f6a	obj/kern/kernel.asm	/^f0101f6a:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101f6d	obj/kern/kernel.asm	/^f0101f6d:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101f70	obj/kern/kernel.asm	/^f0101f70:	39 d0                	cmp    %edx,%eax$/;"	l
f0101f72	obj/kern/kernel.asm	/^f0101f72:	74 24                	je     f0101f98 <mem_init+0xaea>$/;"	l
f0101f74	obj/kern/kernel.asm	/^f0101f74:	c7 44 24 0c 08 79 10 	movl   $0xf0107908,0xc(%esp)$/;"	l
f0101f7b	obj/kern/kernel.asm	/^f0101f7b:	f0 $/;"	l
f0101f7c	obj/kern/kernel.asm	/^f0101f7c:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0101f83	obj/kern/kernel.asm	/^f0101f83:	f0 $/;"	l
f0101f84	obj/kern/kernel.asm	/^f0101f84:	c7 44 24 04 b7 03 00 	movl   $0x3b7,0x4(%esp)$/;"	l
f0101f8b	obj/kern/kernel.asm	/^f0101f8b:	00 $/;"	l
f0101f8c	obj/kern/kernel.asm	/^f0101f8c:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0101f93	obj/kern/kernel.asm	/^f0101f93:	e8 a8 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f98	obj/kern/kernel.asm	/^f0101f98:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0101f9d	obj/kern/kernel.asm	/^f0101f9d:	74 24                	je     f0101fc3 <mem_init+0xb15>$/;"	l
f0101f9f	obj/kern/kernel.asm	/^f0101f9f:	c7 44 24 0c 4e 81 10 	movl   $0xf010814e,0xc(%esp)$/;"	l
f0101fa6	obj/kern/kernel.asm	/^f0101fa6:	f0 $/;"	l
f0101fa7	obj/kern/kernel.asm	/^f0101fa7:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0101fae	obj/kern/kernel.asm	/^f0101fae:	f0 $/;"	l
f0101faf	obj/kern/kernel.asm	/^f0101faf:	c7 44 24 04 b8 03 00 	movl   $0x3b8,0x4(%esp)$/;"	l
f0101fb6	obj/kern/kernel.asm	/^f0101fb6:	00 $/;"	l
f0101fb7	obj/kern/kernel.asm	/^f0101fb7:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0101fbe	obj/kern/kernel.asm	/^f0101fbe:	e8 7d e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fc3	obj/kern/kernel.asm	/^f0101fc3:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101fca	obj/kern/kernel.asm	/^f0101fca:	e8 32 f1 ff ff       	call   f0101101 <page_alloc>$/;"	l
f0101fcf	obj/kern/kernel.asm	/^f0101fcf:	85 c0                	test   %eax,%eax$/;"	l
f0101fd1	obj/kern/kernel.asm	/^f0101fd1:	74 24                	je     f0101ff7 <mem_init+0xb49>$/;"	l
f0101fd3	obj/kern/kernel.asm	/^f0101fd3:	c7 44 24 0c da 80 10 	movl   $0xf01080da,0xc(%esp)$/;"	l
f0101fda	obj/kern/kernel.asm	/^f0101fda:	f0 $/;"	l
f0101fdb	obj/kern/kernel.asm	/^f0101fdb:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0101fe2	obj/kern/kernel.asm	/^f0101fe2:	f0 $/;"	l
f0101fe3	obj/kern/kernel.asm	/^f0101fe3:	c7 44 24 04 bc 03 00 	movl   $0x3bc,0x4(%esp)$/;"	l
f0101fea	obj/kern/kernel.asm	/^f0101fea:	00 $/;"	l
f0101feb	obj/kern/kernel.asm	/^f0101feb:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0101ff2	obj/kern/kernel.asm	/^f0101ff2:	e8 49 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ff7	obj/kern/kernel.asm	/^f0101ff7:	8b 15 8c 5e 20 f0    	mov    0xf0205e8c,%edx$/;"	l
f0101ffd	obj/kern/kernel.asm	/^f0101ffd:	8b 02                	mov    (%edx),%eax$/;"	l
f0101fff	obj/kern/kernel.asm	/^f0101fff:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102004	obj/kern/kernel.asm	/^f0102004:	89 c1                	mov    %eax,%ecx$/;"	l
f0102006	obj/kern/kernel.asm	/^f0102006:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0102009	obj/kern/kernel.asm	/^f0102009:	3b 0d 88 5e 20 f0    	cmp    0xf0205e88,%ecx$/;"	l
f010200f	obj/kern/kernel.asm	/^f010200f:	72 20                	jb     f0102031 <mem_init+0xb83>$/;"	l
f0102011	obj/kern/kernel.asm	/^f0102011:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102015	obj/kern/kernel.asm	/^f0102015:	c7 44 24 08 84 70 10 	movl   $0xf0107084,0x8(%esp)$/;"	l
f010201c	obj/kern/kernel.asm	/^f010201c:	f0 $/;"	l
f010201d	obj/kern/kernel.asm	/^f010201d:	c7 44 24 04 bf 03 00 	movl   $0x3bf,0x4(%esp)$/;"	l
f0102024	obj/kern/kernel.asm	/^f0102024:	00 $/;"	l
f0102025	obj/kern/kernel.asm	/^f0102025:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f010202c	obj/kern/kernel.asm	/^f010202c:	e8 0f e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102031	obj/kern/kernel.asm	/^f0102031:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102036	obj/kern/kernel.asm	/^f0102036:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102039	obj/kern/kernel.asm	/^f0102039:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102040	obj/kern/kernel.asm	/^f0102040:	00 $/;"	l
f0102041	obj/kern/kernel.asm	/^f0102041:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102048	obj/kern/kernel.asm	/^f0102048:	00 $/;"	l
f0102049	obj/kern/kernel.asm	/^f0102049:	89 14 24             	mov    %edx,(%esp)$/;"	l
f010204c	obj/kern/kernel.asm	/^f010204c:	e8 a3 f1 ff ff       	call   f01011f4 <pgdir_walk>$/;"	l
f0102051	obj/kern/kernel.asm	/^f0102051:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0102054	obj/kern/kernel.asm	/^f0102054:	8d 57 04             	lea    0x4(%edi),%edx$/;"	l
f0102057	obj/kern/kernel.asm	/^f0102057:	39 d0                	cmp    %edx,%eax$/;"	l
f0102059	obj/kern/kernel.asm	/^f0102059:	74 24                	je     f010207f <mem_init+0xbd1>$/;"	l
f010205b	obj/kern/kernel.asm	/^f010205b:	c7 44 24 0c 38 79 10 	movl   $0xf0107938,0xc(%esp)$/;"	l
f0102062	obj/kern/kernel.asm	/^f0102062:	f0 $/;"	l
f0102063	obj/kern/kernel.asm	/^f0102063:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f010206a	obj/kern/kernel.asm	/^f010206a:	f0 $/;"	l
f010206b	obj/kern/kernel.asm	/^f010206b:	c7 44 24 04 c0 03 00 	movl   $0x3c0,0x4(%esp)$/;"	l
f0102072	obj/kern/kernel.asm	/^f0102072:	00 $/;"	l
f0102073	obj/kern/kernel.asm	/^f0102073:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f010207a	obj/kern/kernel.asm	/^f010207a:	e8 c1 df ff ff       	call   f0100040 <_panic>$/;"	l
f010207f	obj/kern/kernel.asm	/^f010207f:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0102086	obj/kern/kernel.asm	/^f0102086:	00 $/;"	l
f0102087	obj/kern/kernel.asm	/^f0102087:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010208e	obj/kern/kernel.asm	/^f010208e:	00 $/;"	l
f010208f	obj/kern/kernel.asm	/^f010208f:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102093	obj/kern/kernel.asm	/^f0102093:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f0102098	obj/kern/kernel.asm	/^f0102098:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010209b	obj/kern/kernel.asm	/^f010209b:	e8 4e f3 ff ff       	call   f01013ee <page_insert>$/;"	l
f01020a0	obj/kern/kernel.asm	/^f01020a0:	85 c0                	test   %eax,%eax$/;"	l
f01020a2	obj/kern/kernel.asm	/^f01020a2:	74 24                	je     f01020c8 <mem_init+0xc1a>$/;"	l
f01020a4	obj/kern/kernel.asm	/^f01020a4:	c7 44 24 0c 78 79 10 	movl   $0xf0107978,0xc(%esp)$/;"	l
f01020ab	obj/kern/kernel.asm	/^f01020ab:	f0 $/;"	l
f01020ac	obj/kern/kernel.asm	/^f01020ac:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f01020b3	obj/kern/kernel.asm	/^f01020b3:	f0 $/;"	l
f01020b4	obj/kern/kernel.asm	/^f01020b4:	c7 44 24 04 c3 03 00 	movl   $0x3c3,0x4(%esp)$/;"	l
f01020bb	obj/kern/kernel.asm	/^f01020bb:	00 $/;"	l
f01020bc	obj/kern/kernel.asm	/^f01020bc:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f01020c3	obj/kern/kernel.asm	/^f01020c3:	e8 78 df ff ff       	call   f0100040 <_panic>$/;"	l
f01020c8	obj/kern/kernel.asm	/^f01020c8:	8b 3d 8c 5e 20 f0    	mov    0xf0205e8c,%edi$/;"	l
f01020ce	obj/kern/kernel.asm	/^f01020ce:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01020d3	obj/kern/kernel.asm	/^f01020d3:	89 f8                	mov    %edi,%eax$/;"	l
f01020d5	obj/kern/kernel.asm	/^f01020d5:	e8 23 eb ff ff       	call   f0100bfd <check_va2pa>$/;"	l
f01020da	obj/kern/kernel.asm	/^f01020da:	89 da                	mov    %ebx,%edx$/;"	l
f01020dc	obj/kern/kernel.asm	/^f01020dc:	2b 15 90 5e 20 f0    	sub    0xf0205e90,%edx$/;"	l
f01020e2	obj/kern/kernel.asm	/^f01020e2:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01020e5	obj/kern/kernel.asm	/^f01020e5:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01020e8	obj/kern/kernel.asm	/^f01020e8:	39 d0                	cmp    %edx,%eax$/;"	l
f01020ea	obj/kern/kernel.asm	/^f01020ea:	74 24                	je     f0102110 <mem_init+0xc62>$/;"	l
f01020ec	obj/kern/kernel.asm	/^f01020ec:	c7 44 24 0c 08 79 10 	movl   $0xf0107908,0xc(%esp)$/;"	l
f01020f3	obj/kern/kernel.asm	/^f01020f3:	f0 $/;"	l
f01020f4	obj/kern/kernel.asm	/^f01020f4:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f01020fb	obj/kern/kernel.asm	/^f01020fb:	f0 $/;"	l
f01020fc	obj/kern/kernel.asm	/^f01020fc:	c7 44 24 04 c4 03 00 	movl   $0x3c4,0x4(%esp)$/;"	l
f0102103	obj/kern/kernel.asm	/^f0102103:	00 $/;"	l
f0102104	obj/kern/kernel.asm	/^f0102104:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f010210b	obj/kern/kernel.asm	/^f010210b:	e8 30 df ff ff       	call   f0100040 <_panic>$/;"	l
f0102110	obj/kern/kernel.asm	/^f0102110:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102115	obj/kern/kernel.asm	/^f0102115:	74 24                	je     f010213b <mem_init+0xc8d>$/;"	l
f0102117	obj/kern/kernel.asm	/^f0102117:	c7 44 24 0c 4e 81 10 	movl   $0xf010814e,0xc(%esp)$/;"	l
f010211e	obj/kern/kernel.asm	/^f010211e:	f0 $/;"	l
f010211f	obj/kern/kernel.asm	/^f010211f:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0102126	obj/kern/kernel.asm	/^f0102126:	f0 $/;"	l
f0102127	obj/kern/kernel.asm	/^f0102127:	c7 44 24 04 c5 03 00 	movl   $0x3c5,0x4(%esp)$/;"	l
f010212e	obj/kern/kernel.asm	/^f010212e:	00 $/;"	l
f010212f	obj/kern/kernel.asm	/^f010212f:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0102136	obj/kern/kernel.asm	/^f0102136:	e8 05 df ff ff       	call   f0100040 <_panic>$/;"	l
f010213b	obj/kern/kernel.asm	/^f010213b:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102142	obj/kern/kernel.asm	/^f0102142:	00 $/;"	l
f0102143	obj/kern/kernel.asm	/^f0102143:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f010214a	obj/kern/kernel.asm	/^f010214a:	00 $/;"	l
f010214b	obj/kern/kernel.asm	/^f010214b:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010214e	obj/kern/kernel.asm	/^f010214e:	e8 a1 f0 ff ff       	call   f01011f4 <pgdir_walk>$/;"	l
f0102153	obj/kern/kernel.asm	/^f0102153:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102156	obj/kern/kernel.asm	/^f0102156:	75 24                	jne    f010217c <mem_init+0xcce>$/;"	l
f0102158	obj/kern/kernel.asm	/^f0102158:	c7 44 24 0c b8 79 10 	movl   $0xf01079b8,0xc(%esp)$/;"	l
f010215f	obj/kern/kernel.asm	/^f010215f:	f0 $/;"	l
f0102160	obj/kern/kernel.asm	/^f0102160:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0102167	obj/kern/kernel.asm	/^f0102167:	f0 $/;"	l
f0102168	obj/kern/kernel.asm	/^f0102168:	c7 44 24 04 c6 03 00 	movl   $0x3c6,0x4(%esp)$/;"	l
f010216f	obj/kern/kernel.asm	/^f010216f:	00 $/;"	l
f0102170	obj/kern/kernel.asm	/^f0102170:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0102177	obj/kern/kernel.asm	/^f0102177:	e8 c4 de ff ff       	call   f0100040 <_panic>$/;"	l
f010217c	obj/kern/kernel.asm	/^f010217c:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f0102181	obj/kern/kernel.asm	/^f0102181:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102184	obj/kern/kernel.asm	/^f0102184:	75 24                	jne    f01021aa <mem_init+0xcfc>$/;"	l
f0102186	obj/kern/kernel.asm	/^f0102186:	c7 44 24 0c 5f 81 10 	movl   $0xf010815f,0xc(%esp)$/;"	l
f010218d	obj/kern/kernel.asm	/^f010218d:	f0 $/;"	l
f010218e	obj/kern/kernel.asm	/^f010218e:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0102195	obj/kern/kernel.asm	/^f0102195:	f0 $/;"	l
f0102196	obj/kern/kernel.asm	/^f0102196:	c7 44 24 04 c7 03 00 	movl   $0x3c7,0x4(%esp)$/;"	l
f010219d	obj/kern/kernel.asm	/^f010219d:	00 $/;"	l
f010219e	obj/kern/kernel.asm	/^f010219e:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f01021a5	obj/kern/kernel.asm	/^f01021a5:	e8 96 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021aa	obj/kern/kernel.asm	/^f01021aa:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01021b1	obj/kern/kernel.asm	/^f01021b1:	00 $/;"	l
f01021b2	obj/kern/kernel.asm	/^f01021b2:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01021b9	obj/kern/kernel.asm	/^f01021b9:	00 $/;"	l
f01021ba	obj/kern/kernel.asm	/^f01021ba:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01021be	obj/kern/kernel.asm	/^f01021be:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01021c1	obj/kern/kernel.asm	/^f01021c1:	e8 28 f2 ff ff       	call   f01013ee <page_insert>$/;"	l
f01021c6	obj/kern/kernel.asm	/^f01021c6:	85 c0                	test   %eax,%eax$/;"	l
f01021c8	obj/kern/kernel.asm	/^f01021c8:	74 24                	je     f01021ee <mem_init+0xd40>$/;"	l
f01021ca	obj/kern/kernel.asm	/^f01021ca:	c7 44 24 0c cc 78 10 	movl   $0xf01078cc,0xc(%esp)$/;"	l
f01021d1	obj/kern/kernel.asm	/^f01021d1:	f0 $/;"	l
f01021d2	obj/kern/kernel.asm	/^f01021d2:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f01021d9	obj/kern/kernel.asm	/^f01021d9:	f0 $/;"	l
f01021da	obj/kern/kernel.asm	/^f01021da:	c7 44 24 04 ca 03 00 	movl   $0x3ca,0x4(%esp)$/;"	l
f01021e1	obj/kern/kernel.asm	/^f01021e1:	00 $/;"	l
f01021e2	obj/kern/kernel.asm	/^f01021e2:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f01021e9	obj/kern/kernel.asm	/^f01021e9:	e8 52 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021ee	obj/kern/kernel.asm	/^f01021ee:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01021f5	obj/kern/kernel.asm	/^f01021f5:	00 $/;"	l
f01021f6	obj/kern/kernel.asm	/^f01021f6:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01021fd	obj/kern/kernel.asm	/^f01021fd:	00 $/;"	l
f01021fe	obj/kern/kernel.asm	/^f01021fe:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f0102203	obj/kern/kernel.asm	/^f0102203:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102206	obj/kern/kernel.asm	/^f0102206:	e8 e9 ef ff ff       	call   f01011f4 <pgdir_walk>$/;"	l
f010220b	obj/kern/kernel.asm	/^f010220b:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f010220e	obj/kern/kernel.asm	/^f010220e:	75 24                	jne    f0102234 <mem_init+0xd86>$/;"	l
f0102210	obj/kern/kernel.asm	/^f0102210:	c7 44 24 0c ec 79 10 	movl   $0xf01079ec,0xc(%esp)$/;"	l
f0102217	obj/kern/kernel.asm	/^f0102217:	f0 $/;"	l
f0102218	obj/kern/kernel.asm	/^f0102218:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f010221f	obj/kern/kernel.asm	/^f010221f:	f0 $/;"	l
f0102220	obj/kern/kernel.asm	/^f0102220:	c7 44 24 04 cb 03 00 	movl   $0x3cb,0x4(%esp)$/;"	l
f0102227	obj/kern/kernel.asm	/^f0102227:	00 $/;"	l
f0102228	obj/kern/kernel.asm	/^f0102228:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f010222f	obj/kern/kernel.asm	/^f010222f:	e8 0c de ff ff       	call   f0100040 <_panic>$/;"	l
f0102234	obj/kern/kernel.asm	/^f0102234:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010223b	obj/kern/kernel.asm	/^f010223b:	00 $/;"	l
f010223c	obj/kern/kernel.asm	/^f010223c:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102243	obj/kern/kernel.asm	/^f0102243:	00 $/;"	l
f0102244	obj/kern/kernel.asm	/^f0102244:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f0102249	obj/kern/kernel.asm	/^f0102249:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010224c	obj/kern/kernel.asm	/^f010224c:	e8 a3 ef ff ff       	call   f01011f4 <pgdir_walk>$/;"	l
f0102251	obj/kern/kernel.asm	/^f0102251:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102254	obj/kern/kernel.asm	/^f0102254:	74 24                	je     f010227a <mem_init+0xdcc>$/;"	l
f0102256	obj/kern/kernel.asm	/^f0102256:	c7 44 24 0c 20 7a 10 	movl   $0xf0107a20,0xc(%esp)$/;"	l
f010225d	obj/kern/kernel.asm	/^f010225d:	f0 $/;"	l
f010225e	obj/kern/kernel.asm	/^f010225e:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0102265	obj/kern/kernel.asm	/^f0102265:	f0 $/;"	l
f0102266	obj/kern/kernel.asm	/^f0102266:	c7 44 24 04 cc 03 00 	movl   $0x3cc,0x4(%esp)$/;"	l
f010226d	obj/kern/kernel.asm	/^f010226d:	00 $/;"	l
f010226e	obj/kern/kernel.asm	/^f010226e:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0102275	obj/kern/kernel.asm	/^f0102275:	e8 c6 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010227a	obj/kern/kernel.asm	/^f010227a:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102281	obj/kern/kernel.asm	/^f0102281:	00 $/;"	l
f0102282	obj/kern/kernel.asm	/^f0102282:	c7 44 24 08 00 00 40 	movl   $0x400000,0x8(%esp)$/;"	l
f0102289	obj/kern/kernel.asm	/^f0102289:	00 $/;"	l
f010228a	obj/kern/kernel.asm	/^f010228a:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010228e	obj/kern/kernel.asm	/^f010228e:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f0102293	obj/kern/kernel.asm	/^f0102293:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102296	obj/kern/kernel.asm	/^f0102296:	e8 53 f1 ff ff       	call   f01013ee <page_insert>$/;"	l
f010229b	obj/kern/kernel.asm	/^f010229b:	85 c0                	test   %eax,%eax$/;"	l
f010229d	obj/kern/kernel.asm	/^f010229d:	78 24                	js     f01022c3 <mem_init+0xe15>$/;"	l
f010229f	obj/kern/kernel.asm	/^f010229f:	c7 44 24 0c 58 7a 10 	movl   $0xf0107a58,0xc(%esp)$/;"	l
f01022a6	obj/kern/kernel.asm	/^f01022a6:	f0 $/;"	l
f01022a7	obj/kern/kernel.asm	/^f01022a7:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f01022ae	obj/kern/kernel.asm	/^f01022ae:	f0 $/;"	l
f01022af	obj/kern/kernel.asm	/^f01022af:	c7 44 24 04 cf 03 00 	movl   $0x3cf,0x4(%esp)$/;"	l
f01022b6	obj/kern/kernel.asm	/^f01022b6:	00 $/;"	l
f01022b7	obj/kern/kernel.asm	/^f01022b7:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f01022be	obj/kern/kernel.asm	/^f01022be:	e8 7d dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022c3	obj/kern/kernel.asm	/^f01022c3:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01022ca	obj/kern/kernel.asm	/^f01022ca:	00 $/;"	l
f01022cb	obj/kern/kernel.asm	/^f01022cb:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01022d2	obj/kern/kernel.asm	/^f01022d2:	00 $/;"	l
f01022d3	obj/kern/kernel.asm	/^f01022d3:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01022d6	obj/kern/kernel.asm	/^f01022d6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01022da	obj/kern/kernel.asm	/^f01022da:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f01022df	obj/kern/kernel.asm	/^f01022df:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01022e2	obj/kern/kernel.asm	/^f01022e2:	e8 07 f1 ff ff       	call   f01013ee <page_insert>$/;"	l
f01022e7	obj/kern/kernel.asm	/^f01022e7:	85 c0                	test   %eax,%eax$/;"	l
f01022e9	obj/kern/kernel.asm	/^f01022e9:	74 24                	je     f010230f <mem_init+0xe61>$/;"	l
f01022eb	obj/kern/kernel.asm	/^f01022eb:	c7 44 24 0c 90 7a 10 	movl   $0xf0107a90,0xc(%esp)$/;"	l
f01022f2	obj/kern/kernel.asm	/^f01022f2:	f0 $/;"	l
f01022f3	obj/kern/kernel.asm	/^f01022f3:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f01022fa	obj/kern/kernel.asm	/^f01022fa:	f0 $/;"	l
f01022fb	obj/kern/kernel.asm	/^f01022fb:	c7 44 24 04 d2 03 00 	movl   $0x3d2,0x4(%esp)$/;"	l
f0102302	obj/kern/kernel.asm	/^f0102302:	00 $/;"	l
f0102303	obj/kern/kernel.asm	/^f0102303:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f010230a	obj/kern/kernel.asm	/^f010230a:	e8 31 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010230f	obj/kern/kernel.asm	/^f010230f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102316	obj/kern/kernel.asm	/^f0102316:	00 $/;"	l
f0102317	obj/kern/kernel.asm	/^f0102317:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f010231e	obj/kern/kernel.asm	/^f010231e:	00 $/;"	l
f010231f	obj/kern/kernel.asm	/^f010231f:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f0102324	obj/kern/kernel.asm	/^f0102324:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102327	obj/kern/kernel.asm	/^f0102327:	e8 c8 ee ff ff       	call   f01011f4 <pgdir_walk>$/;"	l
f010232c	obj/kern/kernel.asm	/^f010232c:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f010232f	obj/kern/kernel.asm	/^f010232f:	74 24                	je     f0102355 <mem_init+0xea7>$/;"	l
f0102331	obj/kern/kernel.asm	/^f0102331:	c7 44 24 0c 20 7a 10 	movl   $0xf0107a20,0xc(%esp)$/;"	l
f0102338	obj/kern/kernel.asm	/^f0102338:	f0 $/;"	l
f0102339	obj/kern/kernel.asm	/^f0102339:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0102340	obj/kern/kernel.asm	/^f0102340:	f0 $/;"	l
f0102341	obj/kern/kernel.asm	/^f0102341:	c7 44 24 04 d3 03 00 	movl   $0x3d3,0x4(%esp)$/;"	l
f0102348	obj/kern/kernel.asm	/^f0102348:	00 $/;"	l
f0102349	obj/kern/kernel.asm	/^f0102349:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0102350	obj/kern/kernel.asm	/^f0102350:	e8 eb dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102355	obj/kern/kernel.asm	/^f0102355:	8b 3d 8c 5e 20 f0    	mov    0xf0205e8c,%edi$/;"	l
f010235b	obj/kern/kernel.asm	/^f010235b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102360	obj/kern/kernel.asm	/^f0102360:	89 f8                	mov    %edi,%eax$/;"	l
f0102362	obj/kern/kernel.asm	/^f0102362:	e8 96 e8 ff ff       	call   f0100bfd <check_va2pa>$/;"	l
f0102367	obj/kern/kernel.asm	/^f0102367:	89 c1                	mov    %eax,%ecx$/;"	l
f0102369	obj/kern/kernel.asm	/^f0102369:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f010236c	obj/kern/kernel.asm	/^f010236c:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010236f	obj/kern/kernel.asm	/^f010236f:	2b 05 90 5e 20 f0    	sub    0xf0205e90,%eax$/;"	l
f0102375	obj/kern/kernel.asm	/^f0102375:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102378	obj/kern/kernel.asm	/^f0102378:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010237b	obj/kern/kernel.asm	/^f010237b:	39 c1                	cmp    %eax,%ecx$/;"	l
f010237d	obj/kern/kernel.asm	/^f010237d:	74 24                	je     f01023a3 <mem_init+0xef5>$/;"	l
f010237f	obj/kern/kernel.asm	/^f010237f:	c7 44 24 0c cc 7a 10 	movl   $0xf0107acc,0xc(%esp)$/;"	l
f0102386	obj/kern/kernel.asm	/^f0102386:	f0 $/;"	l
f0102387	obj/kern/kernel.asm	/^f0102387:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f010238e	obj/kern/kernel.asm	/^f010238e:	f0 $/;"	l
f010238f	obj/kern/kernel.asm	/^f010238f:	c7 44 24 04 d6 03 00 	movl   $0x3d6,0x4(%esp)$/;"	l
f0102396	obj/kern/kernel.asm	/^f0102396:	00 $/;"	l
f0102397	obj/kern/kernel.asm	/^f0102397:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f010239e	obj/kern/kernel.asm	/^f010239e:	e8 9d dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023a3	obj/kern/kernel.asm	/^f01023a3:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01023a8	obj/kern/kernel.asm	/^f01023a8:	89 f8                	mov    %edi,%eax$/;"	l
f01023aa	obj/kern/kernel.asm	/^f01023aa:	e8 4e e8 ff ff       	call   f0100bfd <check_va2pa>$/;"	l
f01023af	obj/kern/kernel.asm	/^f01023af:	39 45 cc             	cmp    %eax,-0x34(%ebp)$/;"	l
f01023b2	obj/kern/kernel.asm	/^f01023b2:	74 24                	je     f01023d8 <mem_init+0xf2a>$/;"	l
f01023b4	obj/kern/kernel.asm	/^f01023b4:	c7 44 24 0c f8 7a 10 	movl   $0xf0107af8,0xc(%esp)$/;"	l
f01023bb	obj/kern/kernel.asm	/^f01023bb:	f0 $/;"	l
f01023bc	obj/kern/kernel.asm	/^f01023bc:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f01023c3	obj/kern/kernel.asm	/^f01023c3:	f0 $/;"	l
f01023c4	obj/kern/kernel.asm	/^f01023c4:	c7 44 24 04 d7 03 00 	movl   $0x3d7,0x4(%esp)$/;"	l
f01023cb	obj/kern/kernel.asm	/^f01023cb:	00 $/;"	l
f01023cc	obj/kern/kernel.asm	/^f01023cc:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f01023d3	obj/kern/kernel.asm	/^f01023d3:	e8 68 dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023d8	obj/kern/kernel.asm	/^f01023d8:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01023db	obj/kern/kernel.asm	/^f01023db:	66 83 78 04 02       	cmpw   $0x2,0x4(%eax)$/;"	l
f01023e0	obj/kern/kernel.asm	/^f01023e0:	74 24                	je     f0102406 <mem_init+0xf58>$/;"	l
f01023e2	obj/kern/kernel.asm	/^f01023e2:	c7 44 24 0c 75 81 10 	movl   $0xf0108175,0xc(%esp)$/;"	l
f01023e9	obj/kern/kernel.asm	/^f01023e9:	f0 $/;"	l
f01023ea	obj/kern/kernel.asm	/^f01023ea:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f01023f1	obj/kern/kernel.asm	/^f01023f1:	f0 $/;"	l
f01023f2	obj/kern/kernel.asm	/^f01023f2:	c7 44 24 04 d9 03 00 	movl   $0x3d9,0x4(%esp)$/;"	l
f01023f9	obj/kern/kernel.asm	/^f01023f9:	00 $/;"	l
f01023fa	obj/kern/kernel.asm	/^f01023fa:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0102401	obj/kern/kernel.asm	/^f0102401:	e8 3a dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102406	obj/kern/kernel.asm	/^f0102406:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f010240b	obj/kern/kernel.asm	/^f010240b:	74 24                	je     f0102431 <mem_init+0xf83>$/;"	l
f010240d	obj/kern/kernel.asm	/^f010240d:	c7 44 24 0c 86 81 10 	movl   $0xf0108186,0xc(%esp)$/;"	l
f0102414	obj/kern/kernel.asm	/^f0102414:	f0 $/;"	l
f0102415	obj/kern/kernel.asm	/^f0102415:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f010241c	obj/kern/kernel.asm	/^f010241c:	f0 $/;"	l
f010241d	obj/kern/kernel.asm	/^f010241d:	c7 44 24 04 da 03 00 	movl   $0x3da,0x4(%esp)$/;"	l
f0102424	obj/kern/kernel.asm	/^f0102424:	00 $/;"	l
f0102425	obj/kern/kernel.asm	/^f0102425:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f010242c	obj/kern/kernel.asm	/^f010242c:	e8 0f dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102431	obj/kern/kernel.asm	/^f0102431:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102438	obj/kern/kernel.asm	/^f0102438:	e8 c4 ec ff ff       	call   f0101101 <page_alloc>$/;"	l
f010243d	obj/kern/kernel.asm	/^f010243d:	85 c0                	test   %eax,%eax$/;"	l
f010243f	obj/kern/kernel.asm	/^f010243f:	74 04                	je     f0102445 <mem_init+0xf97>$/;"	l
f0102441	obj/kern/kernel.asm	/^f0102441:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102443	obj/kern/kernel.asm	/^f0102443:	74 24                	je     f0102469 <mem_init+0xfbb>$/;"	l
f0102445	obj/kern/kernel.asm	/^f0102445:	c7 44 24 0c 28 7b 10 	movl   $0xf0107b28,0xc(%esp)$/;"	l
f010244c	obj/kern/kernel.asm	/^f010244c:	f0 $/;"	l
f010244d	obj/kern/kernel.asm	/^f010244d:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0102454	obj/kern/kernel.asm	/^f0102454:	f0 $/;"	l
f0102455	obj/kern/kernel.asm	/^f0102455:	c7 44 24 04 dd 03 00 	movl   $0x3dd,0x4(%esp)$/;"	l
f010245c	obj/kern/kernel.asm	/^f010245c:	00 $/;"	l
f010245d	obj/kern/kernel.asm	/^f010245d:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0102464	obj/kern/kernel.asm	/^f0102464:	e8 d7 db ff ff       	call   f0100040 <_panic>$/;"	l
f0102469	obj/kern/kernel.asm	/^f0102469:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102470	obj/kern/kernel.asm	/^f0102470:	00 $/;"	l
f0102471	obj/kern/kernel.asm	/^f0102471:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f0102476	obj/kern/kernel.asm	/^f0102476:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102479	obj/kern/kernel.asm	/^f0102479:	e8 23 ef ff ff       	call   f01013a1 <page_remove>$/;"	l
f010247e	obj/kern/kernel.asm	/^f010247e:	8b 3d 8c 5e 20 f0    	mov    0xf0205e8c,%edi$/;"	l
f0102484	obj/kern/kernel.asm	/^f0102484:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102489	obj/kern/kernel.asm	/^f0102489:	89 f8                	mov    %edi,%eax$/;"	l
f010248b	obj/kern/kernel.asm	/^f010248b:	e8 6d e7 ff ff       	call   f0100bfd <check_va2pa>$/;"	l
f0102490	obj/kern/kernel.asm	/^f0102490:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102493	obj/kern/kernel.asm	/^f0102493:	74 24                	je     f01024b9 <mem_init+0x100b>$/;"	l
f0102495	obj/kern/kernel.asm	/^f0102495:	c7 44 24 0c 4c 7b 10 	movl   $0xf0107b4c,0xc(%esp)$/;"	l
f010249c	obj/kern/kernel.asm	/^f010249c:	f0 $/;"	l
f010249d	obj/kern/kernel.asm	/^f010249d:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f01024a4	obj/kern/kernel.asm	/^f01024a4:	f0 $/;"	l
f01024a5	obj/kern/kernel.asm	/^f01024a5:	c7 44 24 04 e1 03 00 	movl   $0x3e1,0x4(%esp)$/;"	l
f01024ac	obj/kern/kernel.asm	/^f01024ac:	00 $/;"	l
f01024ad	obj/kern/kernel.asm	/^f01024ad:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f01024b4	obj/kern/kernel.asm	/^f01024b4:	e8 87 db ff ff       	call   f0100040 <_panic>$/;"	l
f01024b9	obj/kern/kernel.asm	/^f01024b9:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01024be	obj/kern/kernel.asm	/^f01024be:	89 f8                	mov    %edi,%eax$/;"	l
f01024c0	obj/kern/kernel.asm	/^f01024c0:	e8 38 e7 ff ff       	call   f0100bfd <check_va2pa>$/;"	l
f01024c5	obj/kern/kernel.asm	/^f01024c5:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f01024c8	obj/kern/kernel.asm	/^f01024c8:	2b 15 90 5e 20 f0    	sub    0xf0205e90,%edx$/;"	l
f01024ce	obj/kern/kernel.asm	/^f01024ce:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01024d1	obj/kern/kernel.asm	/^f01024d1:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01024d4	obj/kern/kernel.asm	/^f01024d4:	39 d0                	cmp    %edx,%eax$/;"	l
f01024d6	obj/kern/kernel.asm	/^f01024d6:	74 24                	je     f01024fc <mem_init+0x104e>$/;"	l
f01024d8	obj/kern/kernel.asm	/^f01024d8:	c7 44 24 0c f8 7a 10 	movl   $0xf0107af8,0xc(%esp)$/;"	l
f01024df	obj/kern/kernel.asm	/^f01024df:	f0 $/;"	l
f01024e0	obj/kern/kernel.asm	/^f01024e0:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f01024e7	obj/kern/kernel.asm	/^f01024e7:	f0 $/;"	l
f01024e8	obj/kern/kernel.asm	/^f01024e8:	c7 44 24 04 e2 03 00 	movl   $0x3e2,0x4(%esp)$/;"	l
f01024ef	obj/kern/kernel.asm	/^f01024ef:	00 $/;"	l
f01024f0	obj/kern/kernel.asm	/^f01024f0:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f01024f7	obj/kern/kernel.asm	/^f01024f7:	e8 44 db ff ff       	call   f0100040 <_panic>$/;"	l
f01024fc	obj/kern/kernel.asm	/^f01024fc:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01024ff	obj/kern/kernel.asm	/^f01024ff:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0102504	obj/kern/kernel.asm	/^f0102504:	74 24                	je     f010252a <mem_init+0x107c>$/;"	l
f0102506	obj/kern/kernel.asm	/^f0102506:	c7 44 24 0c 2c 81 10 	movl   $0xf010812c,0xc(%esp)$/;"	l
f010250d	obj/kern/kernel.asm	/^f010250d:	f0 $/;"	l
f010250e	obj/kern/kernel.asm	/^f010250e:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0102515	obj/kern/kernel.asm	/^f0102515:	f0 $/;"	l
f0102516	obj/kern/kernel.asm	/^f0102516:	c7 44 24 04 e3 03 00 	movl   $0x3e3,0x4(%esp)$/;"	l
f010251d	obj/kern/kernel.asm	/^f010251d:	00 $/;"	l
f010251e	obj/kern/kernel.asm	/^f010251e:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0102525	obj/kern/kernel.asm	/^f0102525:	e8 16 db ff ff       	call   f0100040 <_panic>$/;"	l
f010252a	obj/kern/kernel.asm	/^f010252a:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f010252f	obj/kern/kernel.asm	/^f010252f:	74 24                	je     f0102555 <mem_init+0x10a7>$/;"	l
f0102531	obj/kern/kernel.asm	/^f0102531:	c7 44 24 0c 86 81 10 	movl   $0xf0108186,0xc(%esp)$/;"	l
f0102538	obj/kern/kernel.asm	/^f0102538:	f0 $/;"	l
f0102539	obj/kern/kernel.asm	/^f0102539:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0102540	obj/kern/kernel.asm	/^f0102540:	f0 $/;"	l
f0102541	obj/kern/kernel.asm	/^f0102541:	c7 44 24 04 e4 03 00 	movl   $0x3e4,0x4(%esp)$/;"	l
f0102548	obj/kern/kernel.asm	/^f0102548:	00 $/;"	l
f0102549	obj/kern/kernel.asm	/^f0102549:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0102550	obj/kern/kernel.asm	/^f0102550:	e8 eb da ff ff       	call   f0100040 <_panic>$/;"	l
f0102555	obj/kern/kernel.asm	/^f0102555:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f010255c	obj/kern/kernel.asm	/^f010255c:	00 $/;"	l
f010255d	obj/kern/kernel.asm	/^f010255d:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102560	obj/kern/kernel.asm	/^f0102560:	e8 3c ee ff ff       	call   f01013a1 <page_remove>$/;"	l
f0102565	obj/kern/kernel.asm	/^f0102565:	8b 3d 8c 5e 20 f0    	mov    0xf0205e8c,%edi$/;"	l
f010256b	obj/kern/kernel.asm	/^f010256b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102570	obj/kern/kernel.asm	/^f0102570:	89 f8                	mov    %edi,%eax$/;"	l
f0102572	obj/kern/kernel.asm	/^f0102572:	e8 86 e6 ff ff       	call   f0100bfd <check_va2pa>$/;"	l
f0102577	obj/kern/kernel.asm	/^f0102577:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010257a	obj/kern/kernel.asm	/^f010257a:	74 24                	je     f01025a0 <mem_init+0x10f2>$/;"	l
f010257c	obj/kern/kernel.asm	/^f010257c:	c7 44 24 0c 4c 7b 10 	movl   $0xf0107b4c,0xc(%esp)$/;"	l
f0102583	obj/kern/kernel.asm	/^f0102583:	f0 $/;"	l
f0102584	obj/kern/kernel.asm	/^f0102584:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f010258b	obj/kern/kernel.asm	/^f010258b:	f0 $/;"	l
f010258c	obj/kern/kernel.asm	/^f010258c:	c7 44 24 04 e8 03 00 	movl   $0x3e8,0x4(%esp)$/;"	l
f0102593	obj/kern/kernel.asm	/^f0102593:	00 $/;"	l
f0102594	obj/kern/kernel.asm	/^f0102594:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f010259b	obj/kern/kernel.asm	/^f010259b:	e8 a0 da ff ff       	call   f0100040 <_panic>$/;"	l
f01025a0	obj/kern/kernel.asm	/^f01025a0:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01025a5	obj/kern/kernel.asm	/^f01025a5:	89 f8                	mov    %edi,%eax$/;"	l
f01025a7	obj/kern/kernel.asm	/^f01025a7:	e8 51 e6 ff ff       	call   f0100bfd <check_va2pa>$/;"	l
f01025ac	obj/kern/kernel.asm	/^f01025ac:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01025af	obj/kern/kernel.asm	/^f01025af:	74 24                	je     f01025d5 <mem_init+0x1127>$/;"	l
f01025b1	obj/kern/kernel.asm	/^f01025b1:	c7 44 24 0c 70 7b 10 	movl   $0xf0107b70,0xc(%esp)$/;"	l
f01025b8	obj/kern/kernel.asm	/^f01025b8:	f0 $/;"	l
f01025b9	obj/kern/kernel.asm	/^f01025b9:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f01025c0	obj/kern/kernel.asm	/^f01025c0:	f0 $/;"	l
f01025c1	obj/kern/kernel.asm	/^f01025c1:	c7 44 24 04 e9 03 00 	movl   $0x3e9,0x4(%esp)$/;"	l
f01025c8	obj/kern/kernel.asm	/^f01025c8:	00 $/;"	l
f01025c9	obj/kern/kernel.asm	/^f01025c9:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f01025d0	obj/kern/kernel.asm	/^f01025d0:	e8 6b da ff ff       	call   f0100040 <_panic>$/;"	l
f01025d5	obj/kern/kernel.asm	/^f01025d5:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01025d8	obj/kern/kernel.asm	/^f01025d8:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f01025dd	obj/kern/kernel.asm	/^f01025dd:	74 24                	je     f0102603 <mem_init+0x1155>$/;"	l
f01025df	obj/kern/kernel.asm	/^f01025df:	c7 44 24 0c 97 81 10 	movl   $0xf0108197,0xc(%esp)$/;"	l
f01025e6	obj/kern/kernel.asm	/^f01025e6:	f0 $/;"	l
f01025e7	obj/kern/kernel.asm	/^f01025e7:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f01025ee	obj/kern/kernel.asm	/^f01025ee:	f0 $/;"	l
f01025ef	obj/kern/kernel.asm	/^f01025ef:	c7 44 24 04 ea 03 00 	movl   $0x3ea,0x4(%esp)$/;"	l
f01025f6	obj/kern/kernel.asm	/^f01025f6:	00 $/;"	l
f01025f7	obj/kern/kernel.asm	/^f01025f7:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f01025fe	obj/kern/kernel.asm	/^f01025fe:	e8 3d da ff ff       	call   f0100040 <_panic>$/;"	l
f0102603	obj/kern/kernel.asm	/^f0102603:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102608	obj/kern/kernel.asm	/^f0102608:	74 24                	je     f010262e <mem_init+0x1180>$/;"	l
f010260a	obj/kern/kernel.asm	/^f010260a:	c7 44 24 0c 86 81 10 	movl   $0xf0108186,0xc(%esp)$/;"	l
f0102611	obj/kern/kernel.asm	/^f0102611:	f0 $/;"	l
f0102612	obj/kern/kernel.asm	/^f0102612:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0102619	obj/kern/kernel.asm	/^f0102619:	f0 $/;"	l
f010261a	obj/kern/kernel.asm	/^f010261a:	c7 44 24 04 eb 03 00 	movl   $0x3eb,0x4(%esp)$/;"	l
f0102621	obj/kern/kernel.asm	/^f0102621:	00 $/;"	l
f0102622	obj/kern/kernel.asm	/^f0102622:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0102629	obj/kern/kernel.asm	/^f0102629:	e8 12 da ff ff       	call   f0100040 <_panic>$/;"	l
f010262e	obj/kern/kernel.asm	/^f010262e:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102635	obj/kern/kernel.asm	/^f0102635:	e8 c7 ea ff ff       	call   f0101101 <page_alloc>$/;"	l
f010263a	obj/kern/kernel.asm	/^f010263a:	85 c0                	test   %eax,%eax$/;"	l
f010263c	obj/kern/kernel.asm	/^f010263c:	74 05                	je     f0102643 <mem_init+0x1195>$/;"	l
f010263e	obj/kern/kernel.asm	/^f010263e:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f0102641	obj/kern/kernel.asm	/^f0102641:	74 24                	je     f0102667 <mem_init+0x11b9>$/;"	l
f0102643	obj/kern/kernel.asm	/^f0102643:	c7 44 24 0c 98 7b 10 	movl   $0xf0107b98,0xc(%esp)$/;"	l
f010264a	obj/kern/kernel.asm	/^f010264a:	f0 $/;"	l
f010264b	obj/kern/kernel.asm	/^f010264b:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0102652	obj/kern/kernel.asm	/^f0102652:	f0 $/;"	l
f0102653	obj/kern/kernel.asm	/^f0102653:	c7 44 24 04 ee 03 00 	movl   $0x3ee,0x4(%esp)$/;"	l
f010265a	obj/kern/kernel.asm	/^f010265a:	00 $/;"	l
f010265b	obj/kern/kernel.asm	/^f010265b:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0102662	obj/kern/kernel.asm	/^f0102662:	e8 d9 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102667	obj/kern/kernel.asm	/^f0102667:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010266e	obj/kern/kernel.asm	/^f010266e:	e8 8e ea ff ff       	call   f0101101 <page_alloc>$/;"	l
f0102673	obj/kern/kernel.asm	/^f0102673:	85 c0                	test   %eax,%eax$/;"	l
f0102675	obj/kern/kernel.asm	/^f0102675:	74 24                	je     f010269b <mem_init+0x11ed>$/;"	l
f0102677	obj/kern/kernel.asm	/^f0102677:	c7 44 24 0c da 80 10 	movl   $0xf01080da,0xc(%esp)$/;"	l
f010267e	obj/kern/kernel.asm	/^f010267e:	f0 $/;"	l
f010267f	obj/kern/kernel.asm	/^f010267f:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0102686	obj/kern/kernel.asm	/^f0102686:	f0 $/;"	l
f0102687	obj/kern/kernel.asm	/^f0102687:	c7 44 24 04 f1 03 00 	movl   $0x3f1,0x4(%esp)$/;"	l
f010268e	obj/kern/kernel.asm	/^f010268e:	00 $/;"	l
f010268f	obj/kern/kernel.asm	/^f010268f:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0102696	obj/kern/kernel.asm	/^f0102696:	e8 a5 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f010269b	obj/kern/kernel.asm	/^f010269b:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f01026a0	obj/kern/kernel.asm	/^f01026a0:	8b 08                	mov    (%eax),%ecx$/;"	l
f01026a2	obj/kern/kernel.asm	/^f01026a2:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f01026a8	obj/kern/kernel.asm	/^f01026a8:	89 f2                	mov    %esi,%edx$/;"	l
f01026aa	obj/kern/kernel.asm	/^f01026aa:	2b 15 90 5e 20 f0    	sub    0xf0205e90,%edx$/;"	l
f01026b0	obj/kern/kernel.asm	/^f01026b0:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01026b3	obj/kern/kernel.asm	/^f01026b3:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01026b6	obj/kern/kernel.asm	/^f01026b6:	39 d1                	cmp    %edx,%ecx$/;"	l
f01026b8	obj/kern/kernel.asm	/^f01026b8:	74 24                	je     f01026de <mem_init+0x1230>$/;"	l
f01026ba	obj/kern/kernel.asm	/^f01026ba:	c7 44 24 0c 74 78 10 	movl   $0xf0107874,0xc(%esp)$/;"	l
f01026c1	obj/kern/kernel.asm	/^f01026c1:	f0 $/;"	l
f01026c2	obj/kern/kernel.asm	/^f01026c2:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f01026c9	obj/kern/kernel.asm	/^f01026c9:	f0 $/;"	l
f01026ca	obj/kern/kernel.asm	/^f01026ca:	c7 44 24 04 f4 03 00 	movl   $0x3f4,0x4(%esp)$/;"	l
f01026d1	obj/kern/kernel.asm	/^f01026d1:	00 $/;"	l
f01026d2	obj/kern/kernel.asm	/^f01026d2:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f01026d9	obj/kern/kernel.asm	/^f01026d9:	e8 62 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026de	obj/kern/kernel.asm	/^f01026de:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01026e4	obj/kern/kernel.asm	/^f01026e4:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f01026e9	obj/kern/kernel.asm	/^f01026e9:	74 24                	je     f010270f <mem_init+0x1261>$/;"	l
f01026eb	obj/kern/kernel.asm	/^f01026eb:	c7 44 24 0c 3d 81 10 	movl   $0xf010813d,0xc(%esp)$/;"	l
f01026f2	obj/kern/kernel.asm	/^f01026f2:	f0 $/;"	l
f01026f3	obj/kern/kernel.asm	/^f01026f3:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f01026fa	obj/kern/kernel.asm	/^f01026fa:	f0 $/;"	l
f01026fb	obj/kern/kernel.asm	/^f01026fb:	c7 44 24 04 f6 03 00 	movl   $0x3f6,0x4(%esp)$/;"	l
f0102702	obj/kern/kernel.asm	/^f0102702:	00 $/;"	l
f0102703	obj/kern/kernel.asm	/^f0102703:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f010270a	obj/kern/kernel.asm	/^f010270a:	e8 31 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f010270f	obj/kern/kernel.asm	/^f010270f:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f0102714	obj/kern/kernel.asm	/^f0102714:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010271a	obj/kern/kernel.asm	/^f010271a:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f0102720	obj/kern/kernel.asm	/^f0102720:	89 f0                	mov    %esi,%eax$/;"	l
f0102722	obj/kern/kernel.asm	/^f0102722:	2b 05 90 5e 20 f0    	sub    0xf0205e90,%eax$/;"	l
f0102728	obj/kern/kernel.asm	/^f0102728:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010272b	obj/kern/kernel.asm	/^f010272b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010272e	obj/kern/kernel.asm	/^f010272e:	89 c2                	mov    %eax,%edx$/;"	l
f0102730	obj/kern/kernel.asm	/^f0102730:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102733	obj/kern/kernel.asm	/^f0102733:	3b 15 88 5e 20 f0    	cmp    0xf0205e88,%edx$/;"	l
f0102739	obj/kern/kernel.asm	/^f0102739:	72 20                	jb     f010275b <mem_init+0x12ad>$/;"	l
f010273b	obj/kern/kernel.asm	/^f010273b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010273f	obj/kern/kernel.asm	/^f010273f:	c7 44 24 08 84 70 10 	movl   $0xf0107084,0x8(%esp)$/;"	l
f0102746	obj/kern/kernel.asm	/^f0102746:	f0 $/;"	l
f0102747	obj/kern/kernel.asm	/^f0102747:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f010274e	obj/kern/kernel.asm	/^f010274e:	00 $/;"	l
f010274f	obj/kern/kernel.asm	/^f010274f:	c7 04 24 41 7f 10 f0 	movl   $0xf0107f41,(%esp)$/;"	l
f0102756	obj/kern/kernel.asm	/^f0102756:	e8 e5 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010275b	obj/kern/kernel.asm	/^f010275b:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102762	obj/kern/kernel.asm	/^f0102762:	00 $/;"	l
f0102763	obj/kern/kernel.asm	/^f0102763:	c7 44 24 04 ff 00 00 	movl   $0xff,0x4(%esp)$/;"	l
f010276a	obj/kern/kernel.asm	/^f010276a:	00 $/;"	l
f010276b	obj/kern/kernel.asm	/^f010276b:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102770	obj/kern/kernel.asm	/^f0102770:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102773	obj/kern/kernel.asm	/^f0102773:	e8 31 3b 00 00       	call   f01062a9 <memset>$/;"	l
f0102778	obj/kern/kernel.asm	/^f0102778:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010277b	obj/kern/kernel.asm	/^f010277b:	e8 31 ea ff ff       	call   f01011b1 <page_free>$/;"	l
f0102780	obj/kern/kernel.asm	/^f0102780:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0102787	obj/kern/kernel.asm	/^f0102787:	00 $/;"	l
f0102788	obj/kern/kernel.asm	/^f0102788:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010278f	obj/kern/kernel.asm	/^f010278f:	00 $/;"	l
f0102790	obj/kern/kernel.asm	/^f0102790:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f0102795	obj/kern/kernel.asm	/^f0102795:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102798	obj/kern/kernel.asm	/^f0102798:	e8 57 ea ff ff       	call   f01011f4 <pgdir_walk>$/;"	l
f010279d	obj/kern/kernel.asm	/^f010279d:	89 f2                	mov    %esi,%edx$/;"	l
f010279f	obj/kern/kernel.asm	/^f010279f:	2b 15 90 5e 20 f0    	sub    0xf0205e90,%edx$/;"	l
f01027a5	obj/kern/kernel.asm	/^f01027a5:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01027a8	obj/kern/kernel.asm	/^f01027a8:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01027ab	obj/kern/kernel.asm	/^f01027ab:	89 d0                	mov    %edx,%eax$/;"	l
f01027ad	obj/kern/kernel.asm	/^f01027ad:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01027b0	obj/kern/kernel.asm	/^f01027b0:	3b 05 88 5e 20 f0    	cmp    0xf0205e88,%eax$/;"	l
f01027b6	obj/kern/kernel.asm	/^f01027b6:	72 20                	jb     f01027d8 <mem_init+0x132a>$/;"	l
f01027b8	obj/kern/kernel.asm	/^f01027b8:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01027bc	obj/kern/kernel.asm	/^f01027bc:	c7 44 24 08 84 70 10 	movl   $0xf0107084,0x8(%esp)$/;"	l
f01027c3	obj/kern/kernel.asm	/^f01027c3:	f0 $/;"	l
f01027c4	obj/kern/kernel.asm	/^f01027c4:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f01027cb	obj/kern/kernel.asm	/^f01027cb:	00 $/;"	l
f01027cc	obj/kern/kernel.asm	/^f01027cc:	c7 04 24 41 7f 10 f0 	movl   $0xf0107f41,(%esp)$/;"	l
f01027d3	obj/kern/kernel.asm	/^f01027d3:	e8 68 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027d8	obj/kern/kernel.asm	/^f01027d8:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f01027de	obj/kern/kernel.asm	/^f01027de:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01027e1	obj/kern/kernel.asm	/^f01027e1:	f6 82 00 00 00 f0 01 	testb  $0x1,-0x10000000(%edx)$/;"	l
f01027e8	obj/kern/kernel.asm	/^f01027e8:	75 11                	jne    f01027fb <mem_init+0x134d>$/;"	l
f01027ea	obj/kern/kernel.asm	/^f01027ea:	8d 82 04 00 00 f0    	lea    -0xffffffc(%edx),%eax$/;"	l
f01027f0	obj/kern/kernel.asm	/^f01027f0:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f01027f6	obj/kern/kernel.asm	/^f01027f6:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f01027f9	obj/kern/kernel.asm	/^f01027f9:	74 24                	je     f010281f <mem_init+0x1371>$/;"	l
f01027fb	obj/kern/kernel.asm	/^f01027fb:	c7 44 24 0c a8 81 10 	movl   $0xf01081a8,0xc(%esp)$/;"	l
f0102802	obj/kern/kernel.asm	/^f0102802:	f0 $/;"	l
f0102803	obj/kern/kernel.asm	/^f0102803:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f010280a	obj/kern/kernel.asm	/^f010280a:	f0 $/;"	l
f010280b	obj/kern/kernel.asm	/^f010280b:	c7 44 24 04 02 04 00 	movl   $0x402,0x4(%esp)$/;"	l
f0102812	obj/kern/kernel.asm	/^f0102812:	00 $/;"	l
f0102813	obj/kern/kernel.asm	/^f0102813:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f010281a	obj/kern/kernel.asm	/^f010281a:	e8 21 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010281f	obj/kern/kernel.asm	/^f010281f:	83 c0 04             	add    $0x4,%eax$/;"	l
f0102822	obj/kern/kernel.asm	/^f0102822:	39 d0                	cmp    %edx,%eax$/;"	l
f0102824	obj/kern/kernel.asm	/^f0102824:	75 d0                	jne    f01027f6 <mem_init+0x1348>$/;"	l
f0102826	obj/kern/kernel.asm	/^f0102826:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f010282b	obj/kern/kernel.asm	/^f010282b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102831	obj/kern/kernel.asm	/^f0102831:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f0102837	obj/kern/kernel.asm	/^f0102837:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f010283a	obj/kern/kernel.asm	/^f010283a:	a3 40 52 20 f0       	mov    %eax,0xf0205240$/;"	l
f010283f	obj/kern/kernel.asm	/^f010283f:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102842	obj/kern/kernel.asm	/^f0102842:	e8 6a e9 ff ff       	call   f01011b1 <page_free>$/;"	l
f0102847	obj/kern/kernel.asm	/^f0102847:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010284a	obj/kern/kernel.asm	/^f010284a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010284d	obj/kern/kernel.asm	/^f010284d:	e8 5f e9 ff ff       	call   f01011b1 <page_free>$/;"	l
f0102852	obj/kern/kernel.asm	/^f0102852:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102855	obj/kern/kernel.asm	/^f0102855:	e8 57 e9 ff ff       	call   f01011b1 <page_free>$/;"	l
f010285a	obj/kern/kernel.asm	/^f010285a:	c7 44 24 04 01 10 00 	movl   $0x1001,0x4(%esp)$/;"	l
f0102861	obj/kern/kernel.asm	/^f0102861:	00 $/;"	l
f0102862	obj/kern/kernel.asm	/^f0102862:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102869	obj/kern/kernel.asm	/^f0102869:	e8 ef eb ff ff       	call   f010145d <mmio_map_region>$/;"	l
f010286e	obj/kern/kernel.asm	/^f010286e:	89 c3                	mov    %eax,%ebx$/;"	l
f0102870	obj/kern/kernel.asm	/^f0102870:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102877	obj/kern/kernel.asm	/^f0102877:	00 $/;"	l
f0102878	obj/kern/kernel.asm	/^f0102878:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010287f	obj/kern/kernel.asm	/^f010287f:	e8 d9 eb ff ff       	call   f010145d <mmio_map_region>$/;"	l
f0102884	obj/kern/kernel.asm	/^f0102884:	89 c6                	mov    %eax,%esi$/;"	l
f0102886	obj/kern/kernel.asm	/^f0102886:	8d 83 a0 1f 00 00    	lea    0x1fa0(%ebx),%eax$/;"	l
f010288c	obj/kern/kernel.asm	/^f010288c:	3d ff ff bf ef       	cmp    $0xefbfffff,%eax$/;"	l
f0102891	obj/kern/kernel.asm	/^f0102891:	77 08                	ja     f010289b <mem_init+0x13ed>$/;"	l
f0102893	obj/kern/kernel.asm	/^f0102893:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0102899	obj/kern/kernel.asm	/^f0102899:	77 24                	ja     f01028bf <mem_init+0x1411>$/;"	l
f010289b	obj/kern/kernel.asm	/^f010289b:	c7 44 24 0c bc 7b 10 	movl   $0xf0107bbc,0xc(%esp)$/;"	l
f01028a2	obj/kern/kernel.asm	/^f01028a2:	f0 $/;"	l
f01028a3	obj/kern/kernel.asm	/^f01028a3:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f01028aa	obj/kern/kernel.asm	/^f01028aa:	f0 $/;"	l
f01028ab	obj/kern/kernel.asm	/^f01028ab:	c7 44 24 04 12 04 00 	movl   $0x412,0x4(%esp)$/;"	l
f01028b2	obj/kern/kernel.asm	/^f01028b2:	00 $/;"	l
f01028b3	obj/kern/kernel.asm	/^f01028b3:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f01028ba	obj/kern/kernel.asm	/^f01028ba:	e8 81 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028bf	obj/kern/kernel.asm	/^f01028bf:	8d 96 a0 1f 00 00    	lea    0x1fa0(%esi),%edx$/;"	l
f01028c5	obj/kern/kernel.asm	/^f01028c5:	81 fa ff ff bf ef    	cmp    $0xefbfffff,%edx$/;"	l
f01028cb	obj/kern/kernel.asm	/^f01028cb:	77 08                	ja     f01028d5 <mem_init+0x1427>$/;"	l
f01028cd	obj/kern/kernel.asm	/^f01028cd:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f01028d3	obj/kern/kernel.asm	/^f01028d3:	77 24                	ja     f01028f9 <mem_init+0x144b>$/;"	l
f01028d5	obj/kern/kernel.asm	/^f01028d5:	c7 44 24 0c e4 7b 10 	movl   $0xf0107be4,0xc(%esp)$/;"	l
f01028dc	obj/kern/kernel.asm	/^f01028dc:	f0 $/;"	l
f01028dd	obj/kern/kernel.asm	/^f01028dd:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f01028e4	obj/kern/kernel.asm	/^f01028e4:	f0 $/;"	l
f01028e5	obj/kern/kernel.asm	/^f01028e5:	c7 44 24 04 13 04 00 	movl   $0x413,0x4(%esp)$/;"	l
f01028ec	obj/kern/kernel.asm	/^f01028ec:	00 $/;"	l
f01028ed	obj/kern/kernel.asm	/^f01028ed:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f01028f4	obj/kern/kernel.asm	/^f01028f4:	e8 47 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028f9	obj/kern/kernel.asm	/^f01028f9:	89 da                	mov    %ebx,%edx$/;"	l
f01028fb	obj/kern/kernel.asm	/^f01028fb:	09 f2                	or     %esi,%edx$/;"	l
f01028fd	obj/kern/kernel.asm	/^f01028fd:	f7 c2 ff 0f 00 00    	test   $0xfff,%edx$/;"	l
f0102903	obj/kern/kernel.asm	/^f0102903:	74 24                	je     f0102929 <mem_init+0x147b>$/;"	l
f0102905	obj/kern/kernel.asm	/^f0102905:	c7 44 24 0c 0c 7c 10 	movl   $0xf0107c0c,0xc(%esp)$/;"	l
f010290c	obj/kern/kernel.asm	/^f010290c:	f0 $/;"	l
f010290d	obj/kern/kernel.asm	/^f010290d:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0102914	obj/kern/kernel.asm	/^f0102914:	f0 $/;"	l
f0102915	obj/kern/kernel.asm	/^f0102915:	c7 44 24 04 15 04 00 	movl   $0x415,0x4(%esp)$/;"	l
f010291c	obj/kern/kernel.asm	/^f010291c:	00 $/;"	l
f010291d	obj/kern/kernel.asm	/^f010291d:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0102924	obj/kern/kernel.asm	/^f0102924:	e8 17 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102929	obj/kern/kernel.asm	/^f0102929:	39 c6                	cmp    %eax,%esi$/;"	l
f010292b	obj/kern/kernel.asm	/^f010292b:	73 24                	jae    f0102951 <mem_init+0x14a3>$/;"	l
f010292d	obj/kern/kernel.asm	/^f010292d:	c7 44 24 0c bf 81 10 	movl   $0xf01081bf,0xc(%esp)$/;"	l
f0102934	obj/kern/kernel.asm	/^f0102934:	f0 $/;"	l
f0102935	obj/kern/kernel.asm	/^f0102935:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f010293c	obj/kern/kernel.asm	/^f010293c:	f0 $/;"	l
f010293d	obj/kern/kernel.asm	/^f010293d:	c7 44 24 04 17 04 00 	movl   $0x417,0x4(%esp)$/;"	l
f0102944	obj/kern/kernel.asm	/^f0102944:	00 $/;"	l
f0102945	obj/kern/kernel.asm	/^f0102945:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f010294c	obj/kern/kernel.asm	/^f010294c:	e8 ef d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102951	obj/kern/kernel.asm	/^f0102951:	8b 3d 8c 5e 20 f0    	mov    0xf0205e8c,%edi$/;"	l
f0102957	obj/kern/kernel.asm	/^f0102957:	89 da                	mov    %ebx,%edx$/;"	l
f0102959	obj/kern/kernel.asm	/^f0102959:	89 f8                	mov    %edi,%eax$/;"	l
f010295b	obj/kern/kernel.asm	/^f010295b:	e8 9d e2 ff ff       	call   f0100bfd <check_va2pa>$/;"	l
f0102960	obj/kern/kernel.asm	/^f0102960:	85 c0                	test   %eax,%eax$/;"	l
f0102962	obj/kern/kernel.asm	/^f0102962:	74 24                	je     f0102988 <mem_init+0x14da>$/;"	l
f0102964	obj/kern/kernel.asm	/^f0102964:	c7 44 24 0c 34 7c 10 	movl   $0xf0107c34,0xc(%esp)$/;"	l
f010296b	obj/kern/kernel.asm	/^f010296b:	f0 $/;"	l
f010296c	obj/kern/kernel.asm	/^f010296c:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0102973	obj/kern/kernel.asm	/^f0102973:	f0 $/;"	l
f0102974	obj/kern/kernel.asm	/^f0102974:	c7 44 24 04 19 04 00 	movl   $0x419,0x4(%esp)$/;"	l
f010297b	obj/kern/kernel.asm	/^f010297b:	00 $/;"	l
f010297c	obj/kern/kernel.asm	/^f010297c:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0102983	obj/kern/kernel.asm	/^f0102983:	e8 b8 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102988	obj/kern/kernel.asm	/^f0102988:	8d 83 00 10 00 00    	lea    0x1000(%ebx),%eax$/;"	l
f010298e	obj/kern/kernel.asm	/^f010298e:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102991	obj/kern/kernel.asm	/^f0102991:	89 c2                	mov    %eax,%edx$/;"	l
f0102993	obj/kern/kernel.asm	/^f0102993:	89 f8                	mov    %edi,%eax$/;"	l
f0102995	obj/kern/kernel.asm	/^f0102995:	e8 63 e2 ff ff       	call   f0100bfd <check_va2pa>$/;"	l
f010299a	obj/kern/kernel.asm	/^f010299a:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f010299f	obj/kern/kernel.asm	/^f010299f:	74 24                	je     f01029c5 <mem_init+0x1517>$/;"	l
f01029a1	obj/kern/kernel.asm	/^f01029a1:	c7 44 24 0c 58 7c 10 	movl   $0xf0107c58,0xc(%esp)$/;"	l
f01029a8	obj/kern/kernel.asm	/^f01029a8:	f0 $/;"	l
f01029a9	obj/kern/kernel.asm	/^f01029a9:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f01029b0	obj/kern/kernel.asm	/^f01029b0:	f0 $/;"	l
f01029b1	obj/kern/kernel.asm	/^f01029b1:	c7 44 24 04 1a 04 00 	movl   $0x41a,0x4(%esp)$/;"	l
f01029b8	obj/kern/kernel.asm	/^f01029b8:	00 $/;"	l
f01029b9	obj/kern/kernel.asm	/^f01029b9:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f01029c0	obj/kern/kernel.asm	/^f01029c0:	e8 7b d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029c5	obj/kern/kernel.asm	/^f01029c5:	89 f2                	mov    %esi,%edx$/;"	l
f01029c7	obj/kern/kernel.asm	/^f01029c7:	89 f8                	mov    %edi,%eax$/;"	l
f01029c9	obj/kern/kernel.asm	/^f01029c9:	e8 2f e2 ff ff       	call   f0100bfd <check_va2pa>$/;"	l
f01029ce	obj/kern/kernel.asm	/^f01029ce:	85 c0                	test   %eax,%eax$/;"	l
f01029d0	obj/kern/kernel.asm	/^f01029d0:	74 24                	je     f01029f6 <mem_init+0x1548>$/;"	l
f01029d2	obj/kern/kernel.asm	/^f01029d2:	c7 44 24 0c 88 7c 10 	movl   $0xf0107c88,0xc(%esp)$/;"	l
f01029d9	obj/kern/kernel.asm	/^f01029d9:	f0 $/;"	l
f01029da	obj/kern/kernel.asm	/^f01029da:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f01029e1	obj/kern/kernel.asm	/^f01029e1:	f0 $/;"	l
f01029e2	obj/kern/kernel.asm	/^f01029e2:	c7 44 24 04 1b 04 00 	movl   $0x41b,0x4(%esp)$/;"	l
f01029e9	obj/kern/kernel.asm	/^f01029e9:	00 $/;"	l
f01029ea	obj/kern/kernel.asm	/^f01029ea:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f01029f1	obj/kern/kernel.asm	/^f01029f1:	e8 4a d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029f6	obj/kern/kernel.asm	/^f01029f6:	8d 96 00 10 00 00    	lea    0x1000(%esi),%edx$/;"	l
f01029fc	obj/kern/kernel.asm	/^f01029fc:	89 f8                	mov    %edi,%eax$/;"	l
f01029fe	obj/kern/kernel.asm	/^f01029fe:	e8 fa e1 ff ff       	call   f0100bfd <check_va2pa>$/;"	l
f0102a03	obj/kern/kernel.asm	/^f0102a03:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102a06	obj/kern/kernel.asm	/^f0102a06:	74 24                	je     f0102a2c <mem_init+0x157e>$/;"	l
f0102a08	obj/kern/kernel.asm	/^f0102a08:	c7 44 24 0c ac 7c 10 	movl   $0xf0107cac,0xc(%esp)$/;"	l
f0102a0f	obj/kern/kernel.asm	/^f0102a0f:	f0 $/;"	l
f0102a10	obj/kern/kernel.asm	/^f0102a10:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0102a17	obj/kern/kernel.asm	/^f0102a17:	f0 $/;"	l
f0102a18	obj/kern/kernel.asm	/^f0102a18:	c7 44 24 04 1c 04 00 	movl   $0x41c,0x4(%esp)$/;"	l
f0102a1f	obj/kern/kernel.asm	/^f0102a1f:	00 $/;"	l
f0102a20	obj/kern/kernel.asm	/^f0102a20:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0102a27	obj/kern/kernel.asm	/^f0102a27:	e8 14 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a2c	obj/kern/kernel.asm	/^f0102a2c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102a33	obj/kern/kernel.asm	/^f0102a33:	00 $/;"	l
f0102a34	obj/kern/kernel.asm	/^f0102a34:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102a38	obj/kern/kernel.asm	/^f0102a38:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102a3b	obj/kern/kernel.asm	/^f0102a3b:	e8 b4 e7 ff ff       	call   f01011f4 <pgdir_walk>$/;"	l
f0102a40	obj/kern/kernel.asm	/^f0102a40:	f6 00 1a             	testb  $0x1a,(%eax)$/;"	l
f0102a43	obj/kern/kernel.asm	/^f0102a43:	75 24                	jne    f0102a69 <mem_init+0x15bb>$/;"	l
f0102a45	obj/kern/kernel.asm	/^f0102a45:	c7 44 24 0c d8 7c 10 	movl   $0xf0107cd8,0xc(%esp)$/;"	l
f0102a4c	obj/kern/kernel.asm	/^f0102a4c:	f0 $/;"	l
f0102a4d	obj/kern/kernel.asm	/^f0102a4d:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0102a54	obj/kern/kernel.asm	/^f0102a54:	f0 $/;"	l
f0102a55	obj/kern/kernel.asm	/^f0102a55:	c7 44 24 04 1e 04 00 	movl   $0x41e,0x4(%esp)$/;"	l
f0102a5c	obj/kern/kernel.asm	/^f0102a5c:	00 $/;"	l
f0102a5d	obj/kern/kernel.asm	/^f0102a5d:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0102a64	obj/kern/kernel.asm	/^f0102a64:	e8 d7 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a69	obj/kern/kernel.asm	/^f0102a69:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102a70	obj/kern/kernel.asm	/^f0102a70:	00 $/;"	l
f0102a71	obj/kern/kernel.asm	/^f0102a71:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102a75	obj/kern/kernel.asm	/^f0102a75:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f0102a7a	obj/kern/kernel.asm	/^f0102a7a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102a7d	obj/kern/kernel.asm	/^f0102a7d:	e8 72 e7 ff ff       	call   f01011f4 <pgdir_walk>$/;"	l
f0102a82	obj/kern/kernel.asm	/^f0102a82:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102a85	obj/kern/kernel.asm	/^f0102a85:	74 24                	je     f0102aab <mem_init+0x15fd>$/;"	l
f0102a87	obj/kern/kernel.asm	/^f0102a87:	c7 44 24 0c 1c 7d 10 	movl   $0xf0107d1c,0xc(%esp)$/;"	l
f0102a8e	obj/kern/kernel.asm	/^f0102a8e:	f0 $/;"	l
f0102a8f	obj/kern/kernel.asm	/^f0102a8f:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0102a96	obj/kern/kernel.asm	/^f0102a96:	f0 $/;"	l
f0102a97	obj/kern/kernel.asm	/^f0102a97:	c7 44 24 04 1f 04 00 	movl   $0x41f,0x4(%esp)$/;"	l
f0102a9e	obj/kern/kernel.asm	/^f0102a9e:	00 $/;"	l
f0102a9f	obj/kern/kernel.asm	/^f0102a9f:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0102aa6	obj/kern/kernel.asm	/^f0102aa6:	e8 95 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102aab	obj/kern/kernel.asm	/^f0102aab:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102ab2	obj/kern/kernel.asm	/^f0102ab2:	00 $/;"	l
f0102ab3	obj/kern/kernel.asm	/^f0102ab3:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102ab7	obj/kern/kernel.asm	/^f0102ab7:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f0102abc	obj/kern/kernel.asm	/^f0102abc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102abf	obj/kern/kernel.asm	/^f0102abf:	e8 30 e7 ff ff       	call   f01011f4 <pgdir_walk>$/;"	l
f0102ac4	obj/kern/kernel.asm	/^f0102ac4:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102aca	obj/kern/kernel.asm	/^f0102aca:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102ad1	obj/kern/kernel.asm	/^f0102ad1:	00 $/;"	l
f0102ad2	obj/kern/kernel.asm	/^f0102ad2:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102ad5	obj/kern/kernel.asm	/^f0102ad5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102ad9	obj/kern/kernel.asm	/^f0102ad9:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f0102ade	obj/kern/kernel.asm	/^f0102ade:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102ae1	obj/kern/kernel.asm	/^f0102ae1:	e8 0e e7 ff ff       	call   f01011f4 <pgdir_walk>$/;"	l
f0102ae6	obj/kern/kernel.asm	/^f0102ae6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102aec	obj/kern/kernel.asm	/^f0102aec:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102af3	obj/kern/kernel.asm	/^f0102af3:	00 $/;"	l
f0102af4	obj/kern/kernel.asm	/^f0102af4:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0102af8	obj/kern/kernel.asm	/^f0102af8:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f0102afd	obj/kern/kernel.asm	/^f0102afd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102b00	obj/kern/kernel.asm	/^f0102b00:	e8 ef e6 ff ff       	call   f01011f4 <pgdir_walk>$/;"	l
f0102b05	obj/kern/kernel.asm	/^f0102b05:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102b0b	obj/kern/kernel.asm	/^f0102b0b:	c7 04 24 d1 81 10 f0 	movl   $0xf01081d1,(%esp)$/;"	l
f0102b12	obj/kern/kernel.asm	/^f0102b12:	e8 f7 13 00 00       	call   f0103f0e <cprintf>$/;"	l
f0102b17	obj/kern/kernel.asm	/^f0102b17:	a1 90 5e 20 f0       	mov    0xf0205e90,%eax$/;"	l
f0102b1c	obj/kern/kernel.asm	/^f0102b1c:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102b21	obj/kern/kernel.asm	/^f0102b21:	77 20                	ja     f0102b43 <mem_init+0x1695>$/;"	l
f0102b23	obj/kern/kernel.asm	/^f0102b23:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102b27	obj/kern/kernel.asm	/^f0102b27:	c7 44 24 08 a8 70 10 	movl   $0xf01070a8,0x8(%esp)$/;"	l
f0102b2e	obj/kern/kernel.asm	/^f0102b2e:	f0 $/;"	l
f0102b2f	obj/kern/kernel.asm	/^f0102b2f:	c7 44 24 04 b7 00 00 	movl   $0xb7,0x4(%esp)$/;"	l
f0102b36	obj/kern/kernel.asm	/^f0102b36:	00 $/;"	l
f0102b37	obj/kern/kernel.asm	/^f0102b37:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0102b3e	obj/kern/kernel.asm	/^f0102b3e:	e8 fd d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b43	obj/kern/kernel.asm	/^f0102b43:	8b 15 88 5e 20 f0    	mov    0xf0205e88,%edx$/;"	l
f0102b49	obj/kern/kernel.asm	/^f0102b49:	8d 0c d5 ff 0f 00 00 	lea    0xfff(,%edx,8),%ecx$/;"	l
f0102b50	obj/kern/kernel.asm	/^f0102b50:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102b56	obj/kern/kernel.asm	/^f0102b56:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)$/;"	l
f0102b5d	obj/kern/kernel.asm	/^f0102b5d:	00 $/;"	l
f0102b5e	obj/kern/kernel.asm	/^f0102b5e:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102b63	obj/kern/kernel.asm	/^f0102b63:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102b66	obj/kern/kernel.asm	/^f0102b66:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f0102b6b	obj/kern/kernel.asm	/^f0102b6b:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f0102b70	obj/kern/kernel.asm	/^f0102b70:	e8 24 e7 ff ff       	call   f0101299 <boot_map_region>$/;"	l
f0102b75	obj/kern/kernel.asm	/^f0102b75:	a1 90 5e 20 f0       	mov    0xf0205e90,%eax$/;"	l
f0102b7a	obj/kern/kernel.asm	/^f0102b7a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102b7e	obj/kern/kernel.asm	/^f0102b7e:	c7 04 24 ea 81 10 f0 	movl   $0xf01081ea,(%esp)$/;"	l
f0102b85	obj/kern/kernel.asm	/^f0102b85:	e8 84 13 00 00       	call   f0103f0e <cprintf>$/;"	l
f0102b8a	obj/kern/kernel.asm	/^f0102b8a:	a1 90 5e 20 f0       	mov    0xf0205e90,%eax$/;"	l
f0102b8f	obj/kern/kernel.asm	/^f0102b8f:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102b94	obj/kern/kernel.asm	/^f0102b94:	77 20                	ja     f0102bb6 <mem_init+0x1708>$/;"	l
f0102b96	obj/kern/kernel.asm	/^f0102b96:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102b9a	obj/kern/kernel.asm	/^f0102b9a:	c7 44 24 08 a8 70 10 	movl   $0xf01070a8,0x8(%esp)$/;"	l
f0102ba1	obj/kern/kernel.asm	/^f0102ba1:	f0 $/;"	l
f0102ba2	obj/kern/kernel.asm	/^f0102ba2:	c7 44 24 04 ba 00 00 	movl   $0xba,0x4(%esp)$/;"	l
f0102ba9	obj/kern/kernel.asm	/^f0102ba9:	00 $/;"	l
f0102baa	obj/kern/kernel.asm	/^f0102baa:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0102bb1	obj/kern/kernel.asm	/^f0102bb1:	e8 8a d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bb6	obj/kern/kernel.asm	/^f0102bb6:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102bbb	obj/kern/kernel.asm	/^f0102bbb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102bbf	obj/kern/kernel.asm	/^f0102bbf:	c7 04 24 f6 81 10 f0 	movl   $0xf01081f6,(%esp)$/;"	l
f0102bc6	obj/kern/kernel.asm	/^f0102bc6:	e8 43 13 00 00       	call   f0103f0e <cprintf>$/;"	l
f0102bcb	obj/kern/kernel.asm	/^f0102bcb:	c7 44 24 04 00 00 00 	movl   $0xef000000,0x4(%esp)$/;"	l
f0102bd2	obj/kern/kernel.asm	/^f0102bd2:	ef $/;"	l
f0102bd3	obj/kern/kernel.asm	/^f0102bd3:	c7 04 24 09 82 10 f0 	movl   $0xf0108209,(%esp)$/;"	l
f0102bda	obj/kern/kernel.asm	/^f0102bda:	e8 2f 13 00 00       	call   f0103f0e <cprintf>$/;"	l
f0102bdf	obj/kern/kernel.asm	/^f0102bdf:	a1 48 52 20 f0       	mov    0xf0205248,%eax$/;"	l
f0102be4	obj/kern/kernel.asm	/^f0102be4:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102be9	obj/kern/kernel.asm	/^f0102be9:	77 20                	ja     f0102c0b <mem_init+0x175d>$/;"	l
f0102beb	obj/kern/kernel.asm	/^f0102beb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102bef	obj/kern/kernel.asm	/^f0102bef:	c7 44 24 08 a8 70 10 	movl   $0xf01070a8,0x8(%esp)$/;"	l
f0102bf6	obj/kern/kernel.asm	/^f0102bf6:	f0 $/;"	l
f0102bf7	obj/kern/kernel.asm	/^f0102bf7:	c7 44 24 04 c7 00 00 	movl   $0xc7,0x4(%esp)$/;"	l
f0102bfe	obj/kern/kernel.asm	/^f0102bfe:	00 $/;"	l
f0102bff	obj/kern/kernel.asm	/^f0102bff:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0102c06	obj/kern/kernel.asm	/^f0102c06:	e8 35 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c0b	obj/kern/kernel.asm	/^f0102c0b:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)$/;"	l
f0102c12	obj/kern/kernel.asm	/^f0102c12:	00 $/;"	l
f0102c13	obj/kern/kernel.asm	/^f0102c13:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102c18	obj/kern/kernel.asm	/^f0102c18:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102c1b	obj/kern/kernel.asm	/^f0102c1b:	b9 00 00 02 00       	mov    $0x20000,%ecx$/;"	l
f0102c20	obj/kern/kernel.asm	/^f0102c20:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0102c25	obj/kern/kernel.asm	/^f0102c25:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f0102c2a	obj/kern/kernel.asm	/^f0102c2a:	e8 6a e6 ff ff       	call   f0101299 <boot_map_region>$/;"	l
f0102c2f	obj/kern/kernel.asm	/^f0102c2f:	b8 00 70 11 f0       	mov    $0xf0117000,%eax$/;"	l
f0102c34	obj/kern/kernel.asm	/^f0102c34:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102c39	obj/kern/kernel.asm	/^f0102c39:	77 20                	ja     f0102c5b <mem_init+0x17ad>$/;"	l
f0102c3b	obj/kern/kernel.asm	/^f0102c3b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102c3f	obj/kern/kernel.asm	/^f0102c3f:	c7 44 24 08 a8 70 10 	movl   $0xf01070a8,0x8(%esp)$/;"	l
f0102c46	obj/kern/kernel.asm	/^f0102c46:	f0 $/;"	l
f0102c47	obj/kern/kernel.asm	/^f0102c47:	c7 44 24 04 d7 00 00 	movl   $0xd7,0x4(%esp)$/;"	l
f0102c4e	obj/kern/kernel.asm	/^f0102c4e:	00 $/;"	l
f0102c4f	obj/kern/kernel.asm	/^f0102c4f:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0102c56	obj/kern/kernel.asm	/^f0102c56:	e8 e5 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c5b	obj/kern/kernel.asm	/^f0102c5b:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0102c62	obj/kern/kernel.asm	/^f0102c62:	00 $/;"	l
f0102c63	obj/kern/kernel.asm	/^f0102c63:	c7 04 24 00 70 11 00 	movl   $0x117000,(%esp)$/;"	l
f0102c6a	obj/kern/kernel.asm	/^f0102c6a:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102c6f	obj/kern/kernel.asm	/^f0102c6f:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
f0102c74	obj/kern/kernel.asm	/^f0102c74:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f0102c79	obj/kern/kernel.asm	/^f0102c79:	e8 1b e6 ff ff       	call   f0101299 <boot_map_region>$/;"	l
f0102c7e	obj/kern/kernel.asm	/^f0102c7e:	c7 44 24 04 00 70 11 	movl   $0xf0117000,0x4(%esp)$/;"	l
f0102c85	obj/kern/kernel.asm	/^f0102c85:	f0 $/;"	l
f0102c86	obj/kern/kernel.asm	/^f0102c86:	c7 04 24 16 82 10 f0 	movl   $0xf0108216,(%esp)$/;"	l
f0102c8d	obj/kern/kernel.asm	/^f0102c8d:	e8 7c 12 00 00       	call   f0103f0e <cprintf>$/;"	l
f0102c92	obj/kern/kernel.asm	/^f0102c92:	c7 44 24 04 00 70 11 	movl   $0x117000,0x4(%esp)$/;"	l
f0102c99	obj/kern/kernel.asm	/^f0102c99:	00 $/;"	l
f0102c9a	obj/kern/kernel.asm	/^f0102c9a:	c7 04 24 26 82 10 f0 	movl   $0xf0108226,(%esp)$/;"	l
f0102ca1	obj/kern/kernel.asm	/^f0102ca1:	e8 68 12 00 00       	call   f0103f0e <cprintf>$/;"	l
f0102ca6	obj/kern/kernel.asm	/^f0102ca6:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0102cad	obj/kern/kernel.asm	/^f0102cad:	00 $/;"	l
f0102cae	obj/kern/kernel.asm	/^f0102cae:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102cb5	obj/kern/kernel.asm	/^f0102cb5:	b9 00 00 00 10       	mov    $0x10000000,%ecx$/;"	l
f0102cba	obj/kern/kernel.asm	/^f0102cba:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f0102cbf	obj/kern/kernel.asm	/^f0102cbf:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f0102cc4	obj/kern/kernel.asm	/^f0102cc4:	e8 d0 e5 ff ff       	call   f0101299 <boot_map_region>$/;"	l
f0102cc9	obj/kern/kernel.asm	/^f0102cc9:	b8 00 70 20 f0       	mov    $0xf0207000,%eax$/;"	l
f0102cce	obj/kern/kernel.asm	/^f0102cce:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102cd3	obj/kern/kernel.asm	/^f0102cd3:	0f 87 30 07 00 00    	ja     f0103409 <mem_init+0x1f5b>$/;"	l
f0102cd9	obj/kern/kernel.asm	/^f0102cd9:	eb 0c                	jmp    f0102ce7 <mem_init+0x1839>$/;"	l
f0102cdb	obj/kern/kernel.asm	/^f0102cdb:	89 d8                	mov    %ebx,%eax$/;"	l
f0102cdd	obj/kern/kernel.asm	/^f0102cdd:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0102ce3	obj/kern/kernel.asm	/^f0102ce3:	77 27                	ja     f0102d0c <mem_init+0x185e>$/;"	l
f0102ce5	obj/kern/kernel.asm	/^f0102ce5:	eb 05                	jmp    f0102cec <mem_init+0x183e>$/;"	l
f0102ce7	obj/kern/kernel.asm	/^f0102ce7:	b8 00 70 20 f0       	mov    $0xf0207000,%eax$/;"	l
f0102cec	obj/kern/kernel.asm	/^f0102cec:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102cf0	obj/kern/kernel.asm	/^f0102cf0:	c7 44 24 08 a8 70 10 	movl   $0xf01070a8,0x8(%esp)$/;"	l
f0102cf7	obj/kern/kernel.asm	/^f0102cf7:	f0 $/;"	l
f0102cf8	obj/kern/kernel.asm	/^f0102cf8:	c7 44 24 04 26 01 00 	movl   $0x126,0x4(%esp)$/;"	l
f0102cff	obj/kern/kernel.asm	/^f0102cff:	00 $/;"	l
f0102d00	obj/kern/kernel.asm	/^f0102d00:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0102d07	obj/kern/kernel.asm	/^f0102d07:	e8 34 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d0c	obj/kern/kernel.asm	/^f0102d0c:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0102d13	obj/kern/kernel.asm	/^f0102d13:	00 $/;"	l
f0102d14	obj/kern/kernel.asm	/^f0102d14:	8d 83 00 00 00 10    	lea    0x10000000(%ebx),%eax$/;"	l
f0102d1a	obj/kern/kernel.asm	/^f0102d1a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102d1d	obj/kern/kernel.asm	/^f0102d1d:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102d22	obj/kern/kernel.asm	/^f0102d22:	89 f2                	mov    %esi,%edx$/;"	l
f0102d24	obj/kern/kernel.asm	/^f0102d24:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f0102d29	obj/kern/kernel.asm	/^f0102d29:	e8 6b e5 ff ff       	call   f0101299 <boot_map_region>$/;"	l
f0102d2e	obj/kern/kernel.asm	/^f0102d2e:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f0102d34	obj/kern/kernel.asm	/^f0102d34:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f0102d3a	obj/kern/kernel.asm	/^f0102d3a:	39 fb                	cmp    %edi,%ebx$/;"	l
f0102d3c	obj/kern/kernel.asm	/^f0102d3c:	75 9d                	jne    f0102cdb <mem_init+0x182d>$/;"	l
f0102d3e	obj/kern/kernel.asm	/^f0102d3e:	8b 35 8c 5e 20 f0    	mov    0xf0205e8c,%esi$/;"	l
f0102d44	obj/kern/kernel.asm	/^f0102d44:	a1 88 5e 20 f0       	mov    0xf0205e88,%eax$/;"	l
f0102d49	obj/kern/kernel.asm	/^f0102d49:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102d4c	obj/kern/kernel.asm	/^f0102d4c:	8d 04 c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%eax$/;"	l
f0102d53	obj/kern/kernel.asm	/^f0102d53:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102d58	obj/kern/kernel.asm	/^f0102d58:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0102d5b	obj/kern/kernel.asm	/^f0102d5b:	75 30                	jne    f0102d8d <mem_init+0x18df>$/;"	l
f0102d5d	obj/kern/kernel.asm	/^f0102d5d:	8b 1d 48 52 20 f0    	mov    0xf0205248,%ebx$/;"	l
f0102d63	obj/kern/kernel.asm	/^f0102d63:	89 df                	mov    %ebx,%edi$/;"	l
f0102d65	obj/kern/kernel.asm	/^f0102d65:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0102d6a	obj/kern/kernel.asm	/^f0102d6a:	89 f0                	mov    %esi,%eax$/;"	l
f0102d6c	obj/kern/kernel.asm	/^f0102d6c:	e8 8c de ff ff       	call   f0100bfd <check_va2pa>$/;"	l
f0102d71	obj/kern/kernel.asm	/^f0102d71:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0102d77	obj/kern/kernel.asm	/^f0102d77:	0f 86 94 00 00 00    	jbe    f0102e11 <mem_init+0x1963>$/;"	l
f0102d7d	obj/kern/kernel.asm	/^f0102d7d:	bb 00 00 c0 ee       	mov    $0xeec00000,%ebx$/;"	l
f0102d82	obj/kern/kernel.asm	/^f0102d82:	81 c7 00 00 40 21    	add    $0x21400000,%edi$/;"	l
f0102d88	obj/kern/kernel.asm	/^f0102d88:	e9 a4 00 00 00       	jmp    f0102e31 <mem_init+0x1983>$/;"	l
f0102d8d	obj/kern/kernel.asm	/^f0102d8d:	8b 1d 90 5e 20 f0    	mov    0xf0205e90,%ebx$/;"	l
f0102d93	obj/kern/kernel.asm	/^f0102d93:	8d bb 00 00 00 10    	lea    0x10000000(%ebx),%edi$/;"	l
f0102d99	obj/kern/kernel.asm	/^f0102d99:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f0102d9e	obj/kern/kernel.asm	/^f0102d9e:	89 f0                	mov    %esi,%eax$/;"	l
f0102da0	obj/kern/kernel.asm	/^f0102da0:	e8 58 de ff ff       	call   f0100bfd <check_va2pa>$/;"	l
f0102da5	obj/kern/kernel.asm	/^f0102da5:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0102dab	obj/kern/kernel.asm	/^f0102dab:	77 20                	ja     f0102dcd <mem_init+0x191f>$/;"	l
f0102dad	obj/kern/kernel.asm	/^f0102dad:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0102db1	obj/kern/kernel.asm	/^f0102db1:	c7 44 24 08 a8 70 10 	movl   $0xf01070a8,0x8(%esp)$/;"	l
f0102db8	obj/kern/kernel.asm	/^f0102db8:	f0 $/;"	l
f0102db9	obj/kern/kernel.asm	/^f0102db9:	c7 44 24 04 42 03 00 	movl   $0x342,0x4(%esp)$/;"	l
f0102dc0	obj/kern/kernel.asm	/^f0102dc0:	00 $/;"	l
f0102dc1	obj/kern/kernel.asm	/^f0102dc1:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0102dc8	obj/kern/kernel.asm	/^f0102dc8:	e8 73 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102dcd	obj/kern/kernel.asm	/^f0102dcd:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102dd2	obj/kern/kernel.asm	/^f0102dd2:	8d 0c 17             	lea    (%edi,%edx,1),%ecx$/;"	l
f0102dd5	obj/kern/kernel.asm	/^f0102dd5:	39 c1                	cmp    %eax,%ecx$/;"	l
f0102dd7	obj/kern/kernel.asm	/^f0102dd7:	74 24                	je     f0102dfd <mem_init+0x194f>$/;"	l
f0102dd9	obj/kern/kernel.asm	/^f0102dd9:	c7 44 24 0c 50 7d 10 	movl   $0xf0107d50,0xc(%esp)$/;"	l
f0102de0	obj/kern/kernel.asm	/^f0102de0:	f0 $/;"	l
f0102de1	obj/kern/kernel.asm	/^f0102de1:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0102de8	obj/kern/kernel.asm	/^f0102de8:	f0 $/;"	l
f0102de9	obj/kern/kernel.asm	/^f0102de9:	c7 44 24 04 42 03 00 	movl   $0x342,0x4(%esp)$/;"	l
f0102df0	obj/kern/kernel.asm	/^f0102df0:	00 $/;"	l
f0102df1	obj/kern/kernel.asm	/^f0102df1:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0102df8	obj/kern/kernel.asm	/^f0102df8:	e8 43 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102dfd	obj/kern/kernel.asm	/^f0102dfd:	8d 9a 00 10 00 00    	lea    0x1000(%edx),%ebx$/;"	l
f0102e03	obj/kern/kernel.asm	/^f0102e03:	39 5d d0             	cmp    %ebx,-0x30(%ebp)$/;"	l
f0102e06	obj/kern/kernel.asm	/^f0102e06:	0f 87 50 06 00 00    	ja     f010345c <mem_init+0x1fae>$/;"	l
f0102e0c	obj/kern/kernel.asm	/^f0102e0c:	e9 4c ff ff ff       	jmp    f0102d5d <mem_init+0x18af>$/;"	l
f0102e11	obj/kern/kernel.asm	/^f0102e11:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0102e15	obj/kern/kernel.asm	/^f0102e15:	c7 44 24 08 a8 70 10 	movl   $0xf01070a8,0x8(%esp)$/;"	l
f0102e1c	obj/kern/kernel.asm	/^f0102e1c:	f0 $/;"	l
f0102e1d	obj/kern/kernel.asm	/^f0102e1d:	c7 44 24 04 47 03 00 	movl   $0x347,0x4(%esp)$/;"	l
f0102e24	obj/kern/kernel.asm	/^f0102e24:	00 $/;"	l
f0102e25	obj/kern/kernel.asm	/^f0102e25:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0102e2c	obj/kern/kernel.asm	/^f0102e2c:	e8 0f d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e31	obj/kern/kernel.asm	/^f0102e31:	8d 14 1f             	lea    (%edi,%ebx,1),%edx$/;"	l
f0102e34	obj/kern/kernel.asm	/^f0102e34:	39 d0                	cmp    %edx,%eax$/;"	l
f0102e36	obj/kern/kernel.asm	/^f0102e36:	74 24                	je     f0102e5c <mem_init+0x19ae>$/;"	l
f0102e38	obj/kern/kernel.asm	/^f0102e38:	c7 44 24 0c 84 7d 10 	movl   $0xf0107d84,0xc(%esp)$/;"	l
f0102e3f	obj/kern/kernel.asm	/^f0102e3f:	f0 $/;"	l
f0102e40	obj/kern/kernel.asm	/^f0102e40:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0102e47	obj/kern/kernel.asm	/^f0102e47:	f0 $/;"	l
f0102e48	obj/kern/kernel.asm	/^f0102e48:	c7 44 24 04 47 03 00 	movl   $0x347,0x4(%esp)$/;"	l
f0102e4f	obj/kern/kernel.asm	/^f0102e4f:	00 $/;"	l
f0102e50	obj/kern/kernel.asm	/^f0102e50:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0102e57	obj/kern/kernel.asm	/^f0102e57:	e8 e4 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e5c	obj/kern/kernel.asm	/^f0102e5c:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102e62	obj/kern/kernel.asm	/^f0102e62:	81 fb 00 00 c2 ee    	cmp    $0xeec20000,%ebx$/;"	l
f0102e68	obj/kern/kernel.asm	/^f0102e68:	0f 85 e0 05 00 00    	jne    f010344e <mem_init+0x1fa0>$/;"	l
f0102e6e	obj/kern/kernel.asm	/^f0102e6e:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0102e71	obj/kern/kernel.asm	/^f0102e71:	c1 e7 0c             	shl    $0xc,%edi$/;"	l
f0102e74	obj/kern/kernel.asm	/^f0102e74:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0102e79	obj/kern/kernel.asm	/^f0102e79:	85 ff                	test   %edi,%edi$/;"	l
f0102e7b	obj/kern/kernel.asm	/^f0102e7b:	75 22                	jne    f0102e9f <mem_init+0x19f1>$/;"	l
f0102e7d	obj/kern/kernel.asm	/^f0102e7d:	c7 45 d4 00 70 20 f0 	movl   $0xf0207000,-0x2c(%ebp)$/;"	l
f0102e84	obj/kern/kernel.asm	/^f0102e84:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)$/;"	l
f0102e8b	obj/kern/kernel.asm	/^f0102e8b:	bf 00 80 ff ef       	mov    $0xefff8000,%edi$/;"	l
f0102e90	obj/kern/kernel.asm	/^f0102e90:	b8 00 70 20 f0       	mov    $0xf0207000,%eax$/;"	l
f0102e95	obj/kern/kernel.asm	/^f0102e95:	05 00 80 00 20       	add    $0x20008000,%eax$/;"	l
f0102e9a	obj/kern/kernel.asm	/^f0102e9a:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0102e9d	obj/kern/kernel.asm	/^f0102e9d:	eb 41                	jmp    f0102ee0 <mem_init+0x1a32>$/;"	l
f0102e9f	obj/kern/kernel.asm	/^f0102e9f:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f0102ea5	obj/kern/kernel.asm	/^f0102ea5:	89 f0                	mov    %esi,%eax$/;"	l
f0102ea7	obj/kern/kernel.asm	/^f0102ea7:	e8 51 dd ff ff       	call   f0100bfd <check_va2pa>$/;"	l
f0102eac	obj/kern/kernel.asm	/^f0102eac:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102eae	obj/kern/kernel.asm	/^f0102eae:	74 24                	je     f0102ed4 <mem_init+0x1a26>$/;"	l
f0102eb0	obj/kern/kernel.asm	/^f0102eb0:	c7 44 24 0c b8 7d 10 	movl   $0xf0107db8,0xc(%esp)$/;"	l
f0102eb7	obj/kern/kernel.asm	/^f0102eb7:	f0 $/;"	l
f0102eb8	obj/kern/kernel.asm	/^f0102eb8:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0102ebf	obj/kern/kernel.asm	/^f0102ebf:	f0 $/;"	l
f0102ec0	obj/kern/kernel.asm	/^f0102ec0:	c7 44 24 04 4b 03 00 	movl   $0x34b,0x4(%esp)$/;"	l
f0102ec7	obj/kern/kernel.asm	/^f0102ec7:	00 $/;"	l
f0102ec8	obj/kern/kernel.asm	/^f0102ec8:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0102ecf	obj/kern/kernel.asm	/^f0102ecf:	e8 6c d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ed4	obj/kern/kernel.asm	/^f0102ed4:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102eda	obj/kern/kernel.asm	/^f0102eda:	39 fb                	cmp    %edi,%ebx$/;"	l
f0102edc	obj/kern/kernel.asm	/^f0102edc:	72 c1                	jb     f0102e9f <mem_init+0x19f1>$/;"	l
f0102ede	obj/kern/kernel.asm	/^f0102ede:	eb 9d                	jmp    f0102e7d <mem_init+0x19cf>$/;"	l
f0102ee0	obj/kern/kernel.asm	/^f0102ee0:	8d 87 00 80 00 00    	lea    0x8000(%edi),%eax$/;"	l
f0102ee6	obj/kern/kernel.asm	/^f0102ee6:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0102ee9	obj/kern/kernel.asm	/^f0102ee9:	89 fa                	mov    %edi,%edx$/;"	l
f0102eeb	obj/kern/kernel.asm	/^f0102eeb:	89 f0                	mov    %esi,%eax$/;"	l
f0102eed	obj/kern/kernel.asm	/^f0102eed:	e8 0b dd ff ff       	call   f0100bfd <check_va2pa>$/;"	l
f0102ef2	obj/kern/kernel.asm	/^f0102ef2:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0102ef5	obj/kern/kernel.asm	/^f0102ef5:	81 f9 ff ff ff ef    	cmp    $0xefffffff,%ecx$/;"	l
f0102efb	obj/kern/kernel.asm	/^f0102efb:	77 20                	ja     f0102f1d <mem_init+0x1a6f>$/;"	l
f0102efd	obj/kern/kernel.asm	/^f0102efd:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0102f01	obj/kern/kernel.asm	/^f0102f01:	c7 44 24 08 a8 70 10 	movl   $0xf01070a8,0x8(%esp)$/;"	l
f0102f08	obj/kern/kernel.asm	/^f0102f08:	f0 $/;"	l
f0102f09	obj/kern/kernel.asm	/^f0102f09:	c7 44 24 04 53 03 00 	movl   $0x353,0x4(%esp)$/;"	l
f0102f10	obj/kern/kernel.asm	/^f0102f10:	00 $/;"	l
f0102f11	obj/kern/kernel.asm	/^f0102f11:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0102f18	obj/kern/kernel.asm	/^f0102f18:	e8 23 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f1d	obj/kern/kernel.asm	/^f0102f1d:	89 fb                	mov    %edi,%ebx$/;"	l
f0102f1f	obj/kern/kernel.asm	/^f0102f1f:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0102f22	obj/kern/kernel.asm	/^f0102f22:	03 4d c4             	add    -0x3c(%ebp),%ecx$/;"	l
f0102f25	obj/kern/kernel.asm	/^f0102f25:	89 4d c8             	mov    %ecx,-0x38(%ebp)$/;"	l
f0102f28	obj/kern/kernel.asm	/^f0102f28:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f0102f2b	obj/kern/kernel.asm	/^f0102f2b:	8d 14 19             	lea    (%ecx,%ebx,1),%edx$/;"	l
f0102f2e	obj/kern/kernel.asm	/^f0102f2e:	39 c2                	cmp    %eax,%edx$/;"	l
f0102f30	obj/kern/kernel.asm	/^f0102f30:	74 24                	je     f0102f56 <mem_init+0x1aa8>$/;"	l
f0102f32	obj/kern/kernel.asm	/^f0102f32:	c7 44 24 0c e0 7d 10 	movl   $0xf0107de0,0xc(%esp)$/;"	l
f0102f39	obj/kern/kernel.asm	/^f0102f39:	f0 $/;"	l
f0102f3a	obj/kern/kernel.asm	/^f0102f3a:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0102f41	obj/kern/kernel.asm	/^f0102f41:	f0 $/;"	l
f0102f42	obj/kern/kernel.asm	/^f0102f42:	c7 44 24 04 53 03 00 	movl   $0x353,0x4(%esp)$/;"	l
f0102f49	obj/kern/kernel.asm	/^f0102f49:	00 $/;"	l
f0102f4a	obj/kern/kernel.asm	/^f0102f4a:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0102f51	obj/kern/kernel.asm	/^f0102f51:	e8 ea d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f56	obj/kern/kernel.asm	/^f0102f56:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102f5c	obj/kern/kernel.asm	/^f0102f5c:	3b 5d cc             	cmp    -0x34(%ebp),%ebx$/;"	l
f0102f5f	obj/kern/kernel.asm	/^f0102f5f:	0f 85 db 04 00 00    	jne    f0103440 <mem_init+0x1f92>$/;"	l
f0102f65	obj/kern/kernel.asm	/^f0102f65:	8d 9f 00 80 ff ff    	lea    -0x8000(%edi),%ebx$/;"	l
f0102f6b	obj/kern/kernel.asm	/^f0102f6b:	89 da                	mov    %ebx,%edx$/;"	l
f0102f6d	obj/kern/kernel.asm	/^f0102f6d:	89 f0                	mov    %esi,%eax$/;"	l
f0102f6f	obj/kern/kernel.asm	/^f0102f6f:	e8 89 dc ff ff       	call   f0100bfd <check_va2pa>$/;"	l
f0102f74	obj/kern/kernel.asm	/^f0102f74:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102f77	obj/kern/kernel.asm	/^f0102f77:	74 24                	je     f0102f9d <mem_init+0x1aef>$/;"	l
f0102f79	obj/kern/kernel.asm	/^f0102f79:	c7 44 24 0c 28 7e 10 	movl   $0xf0107e28,0xc(%esp)$/;"	l
f0102f80	obj/kern/kernel.asm	/^f0102f80:	f0 $/;"	l
f0102f81	obj/kern/kernel.asm	/^f0102f81:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0102f88	obj/kern/kernel.asm	/^f0102f88:	f0 $/;"	l
f0102f89	obj/kern/kernel.asm	/^f0102f89:	c7 44 24 04 55 03 00 	movl   $0x355,0x4(%esp)$/;"	l
f0102f90	obj/kern/kernel.asm	/^f0102f90:	00 $/;"	l
f0102f91	obj/kern/kernel.asm	/^f0102f91:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0102f98	obj/kern/kernel.asm	/^f0102f98:	e8 a3 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f9d	obj/kern/kernel.asm	/^f0102f9d:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0102fa3	obj/kern/kernel.asm	/^f0102fa3:	39 fb                	cmp    %edi,%ebx$/;"	l
f0102fa5	obj/kern/kernel.asm	/^f0102fa5:	75 c4                	jne    f0102f6b <mem_init+0x1abd>$/;"	l
f0102fa7	obj/kern/kernel.asm	/^f0102fa7:	81 ef 00 00 01 00    	sub    $0x10000,%edi$/;"	l
f0102fad	obj/kern/kernel.asm	/^f0102fad:	81 45 d0 00 80 01 00 	addl   $0x18000,-0x30(%ebp)$/;"	l
f0102fb4	obj/kern/kernel.asm	/^f0102fb4:	81 45 d4 00 80 00 00 	addl   $0x8000,-0x2c(%ebp)$/;"	l
f0102fbb	obj/kern/kernel.asm	/^f0102fbb:	81 ff 00 80 f7 ef    	cmp    $0xeff78000,%edi$/;"	l
f0102fc1	obj/kern/kernel.asm	/^f0102fc1:	0f 85 19 ff ff ff    	jne    f0102ee0 <mem_init+0x1a32>$/;"	l
f0102fc7	obj/kern/kernel.asm	/^f0102fc7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102fcc	obj/kern/kernel.asm	/^f0102fcc:	8d 90 45 fc ff ff    	lea    -0x3bb(%eax),%edx$/;"	l
f0102fd2	obj/kern/kernel.asm	/^f0102fd2:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f0102fd5	obj/kern/kernel.asm	/^f0102fd5:	77 2e                	ja     f0103005 <mem_init+0x1b57>$/;"	l
f0102fd7	obj/kern/kernel.asm	/^f0102fd7:	f6 04 86 01          	testb  $0x1,(%esi,%eax,4)$/;"	l
f0102fdb	obj/kern/kernel.asm	/^f0102fdb:	0f 85 aa 00 00 00    	jne    f010308b <mem_init+0x1bdd>$/;"	l
f0102fe1	obj/kern/kernel.asm	/^f0102fe1:	c7 44 24 0c 3d 82 10 	movl   $0xf010823d,0xc(%esp)$/;"	l
f0102fe8	obj/kern/kernel.asm	/^f0102fe8:	f0 $/;"	l
f0102fe9	obj/kern/kernel.asm	/^f0102fe9:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0102ff0	obj/kern/kernel.asm	/^f0102ff0:	f0 $/;"	l
f0102ff1	obj/kern/kernel.asm	/^f0102ff1:	c7 44 24 04 60 03 00 	movl   $0x360,0x4(%esp)$/;"	l
f0102ff8	obj/kern/kernel.asm	/^f0102ff8:	00 $/;"	l
f0102ff9	obj/kern/kernel.asm	/^f0102ff9:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0103000	obj/kern/kernel.asm	/^f0103000:	e8 3b d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0103005	obj/kern/kernel.asm	/^f0103005:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f010300a	obj/kern/kernel.asm	/^f010300a:	76 55                	jbe    f0103061 <mem_init+0x1bb3>$/;"	l
f010300c	obj/kern/kernel.asm	/^f010300c:	8b 14 86             	mov    (%esi,%eax,4),%edx$/;"	l
f010300f	obj/kern/kernel.asm	/^f010300f:	f6 c2 01             	test   $0x1,%dl$/;"	l
f0103012	obj/kern/kernel.asm	/^f0103012:	75 24                	jne    f0103038 <mem_init+0x1b8a>$/;"	l
f0103014	obj/kern/kernel.asm	/^f0103014:	c7 44 24 0c 3d 82 10 	movl   $0xf010823d,0xc(%esp)$/;"	l
f010301b	obj/kern/kernel.asm	/^f010301b:	f0 $/;"	l
f010301c	obj/kern/kernel.asm	/^f010301c:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0103023	obj/kern/kernel.asm	/^f0103023:	f0 $/;"	l
f0103024	obj/kern/kernel.asm	/^f0103024:	c7 44 24 04 64 03 00 	movl   $0x364,0x4(%esp)$/;"	l
f010302b	obj/kern/kernel.asm	/^f010302b:	00 $/;"	l
f010302c	obj/kern/kernel.asm	/^f010302c:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0103033	obj/kern/kernel.asm	/^f0103033:	e8 08 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0103038	obj/kern/kernel.asm	/^f0103038:	f6 c2 02             	test   $0x2,%dl$/;"	l
f010303b	obj/kern/kernel.asm	/^f010303b:	75 4e                	jne    f010308b <mem_init+0x1bdd>$/;"	l
f010303d	obj/kern/kernel.asm	/^f010303d:	c7 44 24 0c 4e 82 10 	movl   $0xf010824e,0xc(%esp)$/;"	l
f0103044	obj/kern/kernel.asm	/^f0103044:	f0 $/;"	l
f0103045	obj/kern/kernel.asm	/^f0103045:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f010304c	obj/kern/kernel.asm	/^f010304c:	f0 $/;"	l
f010304d	obj/kern/kernel.asm	/^f010304d:	c7 44 24 04 65 03 00 	movl   $0x365,0x4(%esp)$/;"	l
f0103054	obj/kern/kernel.asm	/^f0103054:	00 $/;"	l
f0103055	obj/kern/kernel.asm	/^f0103055:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f010305c	obj/kern/kernel.asm	/^f010305c:	e8 df cf ff ff       	call   f0100040 <_panic>$/;"	l
f0103061	obj/kern/kernel.asm	/^f0103061:	83 3c 86 00          	cmpl   $0x0,(%esi,%eax,4)$/;"	l
f0103065	obj/kern/kernel.asm	/^f0103065:	74 24                	je     f010308b <mem_init+0x1bdd>$/;"	l
f0103067	obj/kern/kernel.asm	/^f0103067:	c7 44 24 0c 5f 82 10 	movl   $0xf010825f,0xc(%esp)$/;"	l
f010306e	obj/kern/kernel.asm	/^f010306e:	f0 $/;"	l
f010306f	obj/kern/kernel.asm	/^f010306f:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0103076	obj/kern/kernel.asm	/^f0103076:	f0 $/;"	l
f0103077	obj/kern/kernel.asm	/^f0103077:	c7 44 24 04 67 03 00 	movl   $0x367,0x4(%esp)$/;"	l
f010307e	obj/kern/kernel.asm	/^f010307e:	00 $/;"	l
f010307f	obj/kern/kernel.asm	/^f010307f:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0103086	obj/kern/kernel.asm	/^f0103086:	e8 b5 cf ff ff       	call   f0100040 <_panic>$/;"	l
f010308b	obj/kern/kernel.asm	/^f010308b:	83 c0 01             	add    $0x1,%eax$/;"	l
f010308e	obj/kern/kernel.asm	/^f010308e:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0103093	obj/kern/kernel.asm	/^f0103093:	0f 85 33 ff ff ff    	jne    f0102fcc <mem_init+0x1b1e>$/;"	l
f0103099	obj/kern/kernel.asm	/^f0103099:	c7 04 24 4c 7e 10 f0 	movl   $0xf0107e4c,(%esp)$/;"	l
f01030a0	obj/kern/kernel.asm	/^f01030a0:	e8 69 0e 00 00       	call   f0103f0e <cprintf>$/;"	l
f01030a5	obj/kern/kernel.asm	/^f01030a5:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f01030aa	obj/kern/kernel.asm	/^f01030aa:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01030af	obj/kern/kernel.asm	/^f01030af:	77 20                	ja     f01030d1 <mem_init+0x1c23>$/;"	l
f01030b1	obj/kern/kernel.asm	/^f01030b1:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01030b5	obj/kern/kernel.asm	/^f01030b5:	c7 44 24 08 a8 70 10 	movl   $0xf01070a8,0x8(%esp)$/;"	l
f01030bc	obj/kern/kernel.asm	/^f01030bc:	f0 $/;"	l
f01030bd	obj/kern/kernel.asm	/^f01030bd:	c7 44 24 04 fb 00 00 	movl   $0xfb,0x4(%esp)$/;"	l
f01030c4	obj/kern/kernel.asm	/^f01030c4:	00 $/;"	l
f01030c5	obj/kern/kernel.asm	/^f01030c5:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f01030cc	obj/kern/kernel.asm	/^f01030cc:	e8 6f cf ff ff       	call   f0100040 <_panic>$/;"	l
f01030d1	obj/kern/kernel.asm	/^f01030d1:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01030d6	obj/kern/kernel.asm	/^f01030d6:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01030d9	obj/kern/kernel.asm	/^f01030d9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01030de	obj/kern/kernel.asm	/^f01030de:	e8 89 db ff ff       	call   f0100c6c <check_page_free_list>$/;"	l
f01030e3	obj/kern/kernel.asm	/^f01030e3:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f01030e6	obj/kern/kernel.asm	/^f01030e6:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f01030e9	obj/kern/kernel.asm	/^f01030e9:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f01030ee	obj/kern/kernel.asm	/^f01030ee:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f01030f1	obj/kern/kernel.asm	/^f01030f1:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01030f8	obj/kern/kernel.asm	/^f01030f8:	e8 04 e0 ff ff       	call   f0101101 <page_alloc>$/;"	l
f01030fd	obj/kern/kernel.asm	/^f01030fd:	89 c3                	mov    %eax,%ebx$/;"	l
f01030ff	obj/kern/kernel.asm	/^f01030ff:	85 c0                	test   %eax,%eax$/;"	l
f0103101	obj/kern/kernel.asm	/^f0103101:	75 24                	jne    f0103127 <mem_init+0x1c79>$/;"	l
f0103103	obj/kern/kernel.asm	/^f0103103:	c7 44 24 0c 2f 80 10 	movl   $0xf010802f,0xc(%esp)$/;"	l
f010310a	obj/kern/kernel.asm	/^f010310a:	f0 $/;"	l
f010310b	obj/kern/kernel.asm	/^f010310b:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0103112	obj/kern/kernel.asm	/^f0103112:	f0 $/;"	l
f0103113	obj/kern/kernel.asm	/^f0103113:	c7 44 24 04 34 04 00 	movl   $0x434,0x4(%esp)$/;"	l
f010311a	obj/kern/kernel.asm	/^f010311a:	00 $/;"	l
f010311b	obj/kern/kernel.asm	/^f010311b:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0103122	obj/kern/kernel.asm	/^f0103122:	e8 19 cf ff ff       	call   f0100040 <_panic>$/;"	l
f0103127	obj/kern/kernel.asm	/^f0103127:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010312e	obj/kern/kernel.asm	/^f010312e:	e8 ce df ff ff       	call   f0101101 <page_alloc>$/;"	l
f0103133	obj/kern/kernel.asm	/^f0103133:	89 c7                	mov    %eax,%edi$/;"	l
f0103135	obj/kern/kernel.asm	/^f0103135:	85 c0                	test   %eax,%eax$/;"	l
f0103137	obj/kern/kernel.asm	/^f0103137:	75 24                	jne    f010315d <mem_init+0x1caf>$/;"	l
f0103139	obj/kern/kernel.asm	/^f0103139:	c7 44 24 0c 45 80 10 	movl   $0xf0108045,0xc(%esp)$/;"	l
f0103140	obj/kern/kernel.asm	/^f0103140:	f0 $/;"	l
f0103141	obj/kern/kernel.asm	/^f0103141:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0103148	obj/kern/kernel.asm	/^f0103148:	f0 $/;"	l
f0103149	obj/kern/kernel.asm	/^f0103149:	c7 44 24 04 35 04 00 	movl   $0x435,0x4(%esp)$/;"	l
f0103150	obj/kern/kernel.asm	/^f0103150:	00 $/;"	l
f0103151	obj/kern/kernel.asm	/^f0103151:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0103158	obj/kern/kernel.asm	/^f0103158:	e8 e3 ce ff ff       	call   f0100040 <_panic>$/;"	l
f010315d	obj/kern/kernel.asm	/^f010315d:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103164	obj/kern/kernel.asm	/^f0103164:	e8 98 df ff ff       	call   f0101101 <page_alloc>$/;"	l
f0103169	obj/kern/kernel.asm	/^f0103169:	89 c6                	mov    %eax,%esi$/;"	l
f010316b	obj/kern/kernel.asm	/^f010316b:	85 c0                	test   %eax,%eax$/;"	l
f010316d	obj/kern/kernel.asm	/^f010316d:	75 24                	jne    f0103193 <mem_init+0x1ce5>$/;"	l
f010316f	obj/kern/kernel.asm	/^f010316f:	c7 44 24 0c 5b 80 10 	movl   $0xf010805b,0xc(%esp)$/;"	l
f0103176	obj/kern/kernel.asm	/^f0103176:	f0 $/;"	l
f0103177	obj/kern/kernel.asm	/^f0103177:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f010317e	obj/kern/kernel.asm	/^f010317e:	f0 $/;"	l
f010317f	obj/kern/kernel.asm	/^f010317f:	c7 44 24 04 36 04 00 	movl   $0x436,0x4(%esp)$/;"	l
f0103186	obj/kern/kernel.asm	/^f0103186:	00 $/;"	l
f0103187	obj/kern/kernel.asm	/^f0103187:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f010318e	obj/kern/kernel.asm	/^f010318e:	e8 ad ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103193	obj/kern/kernel.asm	/^f0103193:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103196	obj/kern/kernel.asm	/^f0103196:	e8 16 e0 ff ff       	call   f01011b1 <page_free>$/;"	l
f010319b	obj/kern/kernel.asm	/^f010319b:	89 f8                	mov    %edi,%eax$/;"	l
f010319d	obj/kern/kernel.asm	/^f010319d:	e8 16 da ff ff       	call   f0100bb8 <page2kva>$/;"	l
f01031a2	obj/kern/kernel.asm	/^f01031a2:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01031a9	obj/kern/kernel.asm	/^f01031a9:	00 $/;"	l
f01031aa	obj/kern/kernel.asm	/^f01031aa:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f01031b1	obj/kern/kernel.asm	/^f01031b1:	00 $/;"	l
f01031b2	obj/kern/kernel.asm	/^f01031b2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01031b5	obj/kern/kernel.asm	/^f01031b5:	e8 ef 30 00 00       	call   f01062a9 <memset>$/;"	l
f01031ba	obj/kern/kernel.asm	/^f01031ba:	89 f0                	mov    %esi,%eax$/;"	l
f01031bc	obj/kern/kernel.asm	/^f01031bc:	e8 f7 d9 ff ff       	call   f0100bb8 <page2kva>$/;"	l
f01031c1	obj/kern/kernel.asm	/^f01031c1:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01031c8	obj/kern/kernel.asm	/^f01031c8:	00 $/;"	l
f01031c9	obj/kern/kernel.asm	/^f01031c9:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f01031d0	obj/kern/kernel.asm	/^f01031d0:	00 $/;"	l
f01031d1	obj/kern/kernel.asm	/^f01031d1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01031d4	obj/kern/kernel.asm	/^f01031d4:	e8 d0 30 00 00       	call   f01062a9 <memset>$/;"	l
f01031d9	obj/kern/kernel.asm	/^f01031d9:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01031e0	obj/kern/kernel.asm	/^f01031e0:	00 $/;"	l
f01031e1	obj/kern/kernel.asm	/^f01031e1:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01031e8	obj/kern/kernel.asm	/^f01031e8:	00 $/;"	l
f01031e9	obj/kern/kernel.asm	/^f01031e9:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01031ed	obj/kern/kernel.asm	/^f01031ed:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f01031f2	obj/kern/kernel.asm	/^f01031f2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01031f5	obj/kern/kernel.asm	/^f01031f5:	e8 f4 e1 ff ff       	call   f01013ee <page_insert>$/;"	l
f01031fa	obj/kern/kernel.asm	/^f01031fa:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f01031ff	obj/kern/kernel.asm	/^f01031ff:	74 24                	je     f0103225 <mem_init+0x1d77>$/;"	l
f0103201	obj/kern/kernel.asm	/^f0103201:	c7 44 24 0c 2c 81 10 	movl   $0xf010812c,0xc(%esp)$/;"	l
f0103208	obj/kern/kernel.asm	/^f0103208:	f0 $/;"	l
f0103209	obj/kern/kernel.asm	/^f0103209:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0103210	obj/kern/kernel.asm	/^f0103210:	f0 $/;"	l
f0103211	obj/kern/kernel.asm	/^f0103211:	c7 44 24 04 3b 04 00 	movl   $0x43b,0x4(%esp)$/;"	l
f0103218	obj/kern/kernel.asm	/^f0103218:	00 $/;"	l
f0103219	obj/kern/kernel.asm	/^f0103219:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0103220	obj/kern/kernel.asm	/^f0103220:	e8 1b ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103225	obj/kern/kernel.asm	/^f0103225:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f010322c	obj/kern/kernel.asm	/^f010322c:	01 01 01 $/;"	l
f010322f	obj/kern/kernel.asm	/^f010322f:	74 24                	je     f0103255 <mem_init+0x1da7>$/;"	l
f0103231	obj/kern/kernel.asm	/^f0103231:	c7 44 24 0c 6c 7e 10 	movl   $0xf0107e6c,0xc(%esp)$/;"	l
f0103238	obj/kern/kernel.asm	/^f0103238:	f0 $/;"	l
f0103239	obj/kern/kernel.asm	/^f0103239:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0103240	obj/kern/kernel.asm	/^f0103240:	f0 $/;"	l
f0103241	obj/kern/kernel.asm	/^f0103241:	c7 44 24 04 3c 04 00 	movl   $0x43c,0x4(%esp)$/;"	l
f0103248	obj/kern/kernel.asm	/^f0103248:	00 $/;"	l
f0103249	obj/kern/kernel.asm	/^f0103249:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0103250	obj/kern/kernel.asm	/^f0103250:	e8 eb cd ff ff       	call   f0100040 <_panic>$/;"	l
f0103255	obj/kern/kernel.asm	/^f0103255:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f010325c	obj/kern/kernel.asm	/^f010325c:	00 $/;"	l
f010325d	obj/kern/kernel.asm	/^f010325d:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103264	obj/kern/kernel.asm	/^f0103264:	00 $/;"	l
f0103265	obj/kern/kernel.asm	/^f0103265:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0103269	obj/kern/kernel.asm	/^f0103269:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f010326e	obj/kern/kernel.asm	/^f010326e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103271	obj/kern/kernel.asm	/^f0103271:	e8 78 e1 ff ff       	call   f01013ee <page_insert>$/;"	l
f0103276	obj/kern/kernel.asm	/^f0103276:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f010327d	obj/kern/kernel.asm	/^f010327d:	02 02 02 $/;"	l
f0103280	obj/kern/kernel.asm	/^f0103280:	74 24                	je     f01032a6 <mem_init+0x1df8>$/;"	l
f0103282	obj/kern/kernel.asm	/^f0103282:	c7 44 24 0c 90 7e 10 	movl   $0xf0107e90,0xc(%esp)$/;"	l
f0103289	obj/kern/kernel.asm	/^f0103289:	f0 $/;"	l
f010328a	obj/kern/kernel.asm	/^f010328a:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0103291	obj/kern/kernel.asm	/^f0103291:	f0 $/;"	l
f0103292	obj/kern/kernel.asm	/^f0103292:	c7 44 24 04 3e 04 00 	movl   $0x43e,0x4(%esp)$/;"	l
f0103299	obj/kern/kernel.asm	/^f0103299:	00 $/;"	l
f010329a	obj/kern/kernel.asm	/^f010329a:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f01032a1	obj/kern/kernel.asm	/^f01032a1:	e8 9a cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032a6	obj/kern/kernel.asm	/^f01032a6:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f01032ab	obj/kern/kernel.asm	/^f01032ab:	74 24                	je     f01032d1 <mem_init+0x1e23>$/;"	l
f01032ad	obj/kern/kernel.asm	/^f01032ad:	c7 44 24 0c 4e 81 10 	movl   $0xf010814e,0xc(%esp)$/;"	l
f01032b4	obj/kern/kernel.asm	/^f01032b4:	f0 $/;"	l
f01032b5	obj/kern/kernel.asm	/^f01032b5:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f01032bc	obj/kern/kernel.asm	/^f01032bc:	f0 $/;"	l
f01032bd	obj/kern/kernel.asm	/^f01032bd:	c7 44 24 04 3f 04 00 	movl   $0x43f,0x4(%esp)$/;"	l
f01032c4	obj/kern/kernel.asm	/^f01032c4:	00 $/;"	l
f01032c5	obj/kern/kernel.asm	/^f01032c5:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f01032cc	obj/kern/kernel.asm	/^f01032cc:	e8 6f cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032d1	obj/kern/kernel.asm	/^f01032d1:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f01032d6	obj/kern/kernel.asm	/^f01032d6:	74 24                	je     f01032fc <mem_init+0x1e4e>$/;"	l
f01032d8	obj/kern/kernel.asm	/^f01032d8:	c7 44 24 0c 97 81 10 	movl   $0xf0108197,0xc(%esp)$/;"	l
f01032df	obj/kern/kernel.asm	/^f01032df:	f0 $/;"	l
f01032e0	obj/kern/kernel.asm	/^f01032e0:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f01032e7	obj/kern/kernel.asm	/^f01032e7:	f0 $/;"	l
f01032e8	obj/kern/kernel.asm	/^f01032e8:	c7 44 24 04 40 04 00 	movl   $0x440,0x4(%esp)$/;"	l
f01032ef	obj/kern/kernel.asm	/^f01032ef:	00 $/;"	l
f01032f0	obj/kern/kernel.asm	/^f01032f0:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f01032f7	obj/kern/kernel.asm	/^f01032f7:	e8 44 cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032fc	obj/kern/kernel.asm	/^f01032fc:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f0103303	obj/kern/kernel.asm	/^f0103303:	03 03 03 $/;"	l
f0103306	obj/kern/kernel.asm	/^f0103306:	89 f0                	mov    %esi,%eax$/;"	l
f0103308	obj/kern/kernel.asm	/^f0103308:	e8 ab d8 ff ff       	call   f0100bb8 <page2kva>$/;"	l
f010330d	obj/kern/kernel.asm	/^f010330d:	81 38 03 03 03 03    	cmpl   $0x3030303,(%eax)$/;"	l
f0103313	obj/kern/kernel.asm	/^f0103313:	74 24                	je     f0103339 <mem_init+0x1e8b>$/;"	l
f0103315	obj/kern/kernel.asm	/^f0103315:	c7 44 24 0c b4 7e 10 	movl   $0xf0107eb4,0xc(%esp)$/;"	l
f010331c	obj/kern/kernel.asm	/^f010331c:	f0 $/;"	l
f010331d	obj/kern/kernel.asm	/^f010331d:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0103324	obj/kern/kernel.asm	/^f0103324:	f0 $/;"	l
f0103325	obj/kern/kernel.asm	/^f0103325:	c7 44 24 04 42 04 00 	movl   $0x442,0x4(%esp)$/;"	l
f010332c	obj/kern/kernel.asm	/^f010332c:	00 $/;"	l
f010332d	obj/kern/kernel.asm	/^f010332d:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0103334	obj/kern/kernel.asm	/^f0103334:	e8 07 cd ff ff       	call   f0100040 <_panic>$/;"	l
f0103339	obj/kern/kernel.asm	/^f0103339:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0103340	obj/kern/kernel.asm	/^f0103340:	00 $/;"	l
f0103341	obj/kern/kernel.asm	/^f0103341:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f0103346	obj/kern/kernel.asm	/^f0103346:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103349	obj/kern/kernel.asm	/^f0103349:	e8 53 e0 ff ff       	call   f01013a1 <page_remove>$/;"	l
f010334e	obj/kern/kernel.asm	/^f010334e:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0103353	obj/kern/kernel.asm	/^f0103353:	74 24                	je     f0103379 <mem_init+0x1ecb>$/;"	l
f0103355	obj/kern/kernel.asm	/^f0103355:	c7 44 24 0c 86 81 10 	movl   $0xf0108186,0xc(%esp)$/;"	l
f010335c	obj/kern/kernel.asm	/^f010335c:	f0 $/;"	l
f010335d	obj/kern/kernel.asm	/^f010335d:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0103364	obj/kern/kernel.asm	/^f0103364:	f0 $/;"	l
f0103365	obj/kern/kernel.asm	/^f0103365:	c7 44 24 04 44 04 00 	movl   $0x444,0x4(%esp)$/;"	l
f010336c	obj/kern/kernel.asm	/^f010336c:	00 $/;"	l
f010336d	obj/kern/kernel.asm	/^f010336d:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0103374	obj/kern/kernel.asm	/^f0103374:	e8 c7 cc ff ff       	call   f0100040 <_panic>$/;"	l
f0103379	obj/kern/kernel.asm	/^f0103379:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f010337e	obj/kern/kernel.asm	/^f010337e:	8b 08                	mov    (%eax),%ecx$/;"	l
f0103380	obj/kern/kernel.asm	/^f0103380:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0103386	obj/kern/kernel.asm	/^f0103386:	89 da                	mov    %ebx,%edx$/;"	l
f0103388	obj/kern/kernel.asm	/^f0103388:	2b 15 90 5e 20 f0    	sub    0xf0205e90,%edx$/;"	l
f010338e	obj/kern/kernel.asm	/^f010338e:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0103391	obj/kern/kernel.asm	/^f0103391:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0103394	obj/kern/kernel.asm	/^f0103394:	39 d1                	cmp    %edx,%ecx$/;"	l
f0103396	obj/kern/kernel.asm	/^f0103396:	74 24                	je     f01033bc <mem_init+0x1f0e>$/;"	l
f0103398	obj/kern/kernel.asm	/^f0103398:	c7 44 24 0c 74 78 10 	movl   $0xf0107874,0xc(%esp)$/;"	l
f010339f	obj/kern/kernel.asm	/^f010339f:	f0 $/;"	l
f01033a0	obj/kern/kernel.asm	/^f01033a0:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f01033a7	obj/kern/kernel.asm	/^f01033a7:	f0 $/;"	l
f01033a8	obj/kern/kernel.asm	/^f01033a8:	c7 44 24 04 47 04 00 	movl   $0x447,0x4(%esp)$/;"	l
f01033af	obj/kern/kernel.asm	/^f01033af:	00 $/;"	l
f01033b0	obj/kern/kernel.asm	/^f01033b0:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f01033b7	obj/kern/kernel.asm	/^f01033b7:	e8 84 cc ff ff       	call   f0100040 <_panic>$/;"	l
f01033bc	obj/kern/kernel.asm	/^f01033bc:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01033c2	obj/kern/kernel.asm	/^f01033c2:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f01033c7	obj/kern/kernel.asm	/^f01033c7:	74 24                	je     f01033ed <mem_init+0x1f3f>$/;"	l
f01033c9	obj/kern/kernel.asm	/^f01033c9:	c7 44 24 0c 3d 81 10 	movl   $0xf010813d,0xc(%esp)$/;"	l
f01033d0	obj/kern/kernel.asm	/^f01033d0:	f0 $/;"	l
f01033d1	obj/kern/kernel.asm	/^f01033d1:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f01033d8	obj/kern/kernel.asm	/^f01033d8:	f0 $/;"	l
f01033d9	obj/kern/kernel.asm	/^f01033d9:	c7 44 24 04 49 04 00 	movl   $0x449,0x4(%esp)$/;"	l
f01033e0	obj/kern/kernel.asm	/^f01033e0:	00 $/;"	l
f01033e1	obj/kern/kernel.asm	/^f01033e1:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f01033e8	obj/kern/kernel.asm	/^f01033e8:	e8 53 cc ff ff       	call   f0100040 <_panic>$/;"	l
f01033ed	obj/kern/kernel.asm	/^f01033ed:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f01033f3	obj/kern/kernel.asm	/^f01033f3:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01033f6	obj/kern/kernel.asm	/^f01033f6:	e8 b6 dd ff ff       	call   f01011b1 <page_free>$/;"	l
f01033fb	obj/kern/kernel.asm	/^f01033fb:	c7 04 24 e0 7e 10 f0 	movl   $0xf0107ee0,(%esp)$/;"	l
f0103402	obj/kern/kernel.asm	/^f0103402:	e8 07 0b 00 00       	call   f0103f0e <cprintf>$/;"	l
f0103407	obj/kern/kernel.asm	/^f0103407:	eb 67                	jmp    f0103470 <mem_init+0x1fc2>$/;"	l
f0103409	obj/kern/kernel.asm	/^f0103409:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0103410	obj/kern/kernel.asm	/^f0103410:	00 $/;"	l
f0103411	obj/kern/kernel.asm	/^f0103411:	c7 04 24 00 70 20 00 	movl   $0x207000,(%esp)$/;"	l
f0103418	obj/kern/kernel.asm	/^f0103418:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f010341d	obj/kern/kernel.asm	/^f010341d:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
f0103422	obj/kern/kernel.asm	/^f0103422:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f0103427	obj/kern/kernel.asm	/^f0103427:	e8 6d de ff ff       	call   f0101299 <boot_map_region>$/;"	l
f010342c	obj/kern/kernel.asm	/^f010342c:	bb 00 f0 20 f0       	mov    $0xf020f000,%ebx$/;"	l
f0103431	obj/kern/kernel.asm	/^f0103431:	bf 00 70 24 f0       	mov    $0xf0247000,%edi$/;"	l
f0103436	obj/kern/kernel.asm	/^f0103436:	be 00 80 fe ef       	mov    $0xeffe8000,%esi$/;"	l
f010343b	obj/kern/kernel.asm	/^f010343b:	e9 9b f8 ff ff       	jmp    f0102cdb <mem_init+0x182d>$/;"	l
f0103440	obj/kern/kernel.asm	/^f0103440:	89 da                	mov    %ebx,%edx$/;"	l
f0103442	obj/kern/kernel.asm	/^f0103442:	89 f0                	mov    %esi,%eax$/;"	l
f0103444	obj/kern/kernel.asm	/^f0103444:	e8 b4 d7 ff ff       	call   f0100bfd <check_va2pa>$/;"	l
f0103449	obj/kern/kernel.asm	/^f0103449:	e9 da fa ff ff       	jmp    f0102f28 <mem_init+0x1a7a>$/;"	l
f010344e	obj/kern/kernel.asm	/^f010344e:	89 da                	mov    %ebx,%edx$/;"	l
f0103450	obj/kern/kernel.asm	/^f0103450:	89 f0                	mov    %esi,%eax$/;"	l
f0103452	obj/kern/kernel.asm	/^f0103452:	e8 a6 d7 ff ff       	call   f0100bfd <check_va2pa>$/;"	l
f0103457	obj/kern/kernel.asm	/^f0103457:	e9 d5 f9 ff ff       	jmp    f0102e31 <mem_init+0x1983>$/;"	l
f010345c	obj/kern/kernel.asm	/^f010345c:	81 ea 00 f0 ff 10    	sub    $0x10fff000,%edx$/;"	l
f0103462	obj/kern/kernel.asm	/^f0103462:	89 f0                	mov    %esi,%eax$/;"	l
f0103464	obj/kern/kernel.asm	/^f0103464:	e8 94 d7 ff ff       	call   f0100bfd <check_va2pa>$/;"	l
f0103469	obj/kern/kernel.asm	/^f0103469:	89 da                	mov    %ebx,%edx$/;"	l
f010346b	obj/kern/kernel.asm	/^f010346b:	e9 62 f9 ff ff       	jmp    f0102dd2 <mem_init+0x1924>$/;"	l
f0103470	obj/kern/kernel.asm	/^f0103470:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0103473	obj/kern/kernel.asm	/^f0103473:	5b                   	pop    %ebx$/;"	l
f0103474	obj/kern/kernel.asm	/^f0103474:	5e                   	pop    %esi$/;"	l
f0103475	obj/kern/kernel.asm	/^f0103475:	5f                   	pop    %edi$/;"	l
f0103476	obj/kern/kernel.asm	/^f0103476:	5d                   	pop    %ebp$/;"	l
f0103477	obj/kern/kernel.asm	/^f0103477:	c3                   	ret    $/;"	l
f0103478	obj/kern/kernel.asm	/^f0103478 <user_mem_check>:$/;"	l
f0103478	obj/kern/kernel.asm	/^f0103478:	55                   	push   %ebp$/;"	l
f0103479	obj/kern/kernel.asm	/^f0103479:	89 e5                	mov    %esp,%ebp$/;"	l
f010347b	obj/kern/kernel.asm	/^f010347b:	57                   	push   %edi$/;"	l
f010347c	obj/kern/kernel.asm	/^f010347c:	56                   	push   %esi$/;"	l
f010347d	obj/kern/kernel.asm	/^f010347d:	53                   	push   %ebx$/;"	l
f010347e	obj/kern/kernel.asm	/^f010347e:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0103481	obj/kern/kernel.asm	/^f0103481:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103484	obj/kern/kernel.asm	/^f0103484:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0103487	obj/kern/kernel.asm	/^f0103487:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f010348a	obj/kern/kernel.asm	/^f010348a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010348f	obj/kern/kernel.asm	/^f010348f:	85 c9                	test   %ecx,%ecx$/;"	l
f0103491	obj/kern/kernel.asm	/^f0103491:	0f 84 90 00 00 00    	je     f0103527 <user_mem_check+0xaf>$/;"	l
f0103497	obj/kern/kernel.asm	/^f0103497:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f010349a	obj/kern/kernel.asm	/^f010349a:	83 ce 01             	or     $0x1,%esi$/;"	l
f010349d	obj/kern/kernel.asm	/^f010349d:	89 d3                	mov    %edx,%ebx$/;"	l
f010349f	obj/kern/kernel.asm	/^f010349f:	8d 84 0a ff 0f 00 00 	lea    0xfff(%edx,%ecx,1),%eax$/;"	l
f01034a6	obj/kern/kernel.asm	/^f01034a6:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01034ab	obj/kern/kernel.asm	/^f01034ab:	89 c1                	mov    %eax,%ecx$/;"	l
f01034ad	obj/kern/kernel.asm	/^f01034ad:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01034b0	obj/kern/kernel.asm	/^f01034b0:	89 d0                	mov    %edx,%eax$/;"	l
f01034b2	obj/kern/kernel.asm	/^f01034b2:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01034b7	obj/kern/kernel.asm	/^f01034b7:	39 c1                	cmp    %eax,%ecx$/;"	l
f01034b9	obj/kern/kernel.asm	/^f01034b9:	74 67                	je     f0103522 <user_mem_check+0xaa>$/;"	l
f01034bb	obj/kern/kernel.asm	/^f01034bb:	81 fa ff ff 7f ef    	cmp    $0xef7fffff,%edx$/;"	l
f01034c1	obj/kern/kernel.asm	/^f01034c1:	76 17                	jbe    f01034da <user_mem_check+0x62>$/;"	l
f01034c3	obj/kern/kernel.asm	/^f01034c3:	eb 08                	jmp    f01034cd <user_mem_check+0x55>$/;"	l
f01034c5	obj/kern/kernel.asm	/^f01034c5:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f01034cb	obj/kern/kernel.asm	/^f01034cb:	76 0d                	jbe    f01034da <user_mem_check+0x62>$/;"	l
f01034cd	obj/kern/kernel.asm	/^f01034cd:	89 1d 3c 52 20 f0    	mov    %ebx,0xf020523c$/;"	l
f01034d3	obj/kern/kernel.asm	/^f01034d3:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f01034d8	obj/kern/kernel.asm	/^f01034d8:	eb 4d                	jmp    f0103527 <user_mem_check+0xaf>$/;"	l
f01034da	obj/kern/kernel.asm	/^f01034da:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01034e1	obj/kern/kernel.asm	/^f01034e1:	00 $/;"	l
f01034e2	obj/kern/kernel.asm	/^f01034e2:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01034e6	obj/kern/kernel.asm	/^f01034e6:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f01034e9	obj/kern/kernel.asm	/^f01034e9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01034ec	obj/kern/kernel.asm	/^f01034ec:	e8 03 dd ff ff       	call   f01011f4 <pgdir_walk>$/;"	l
f01034f1	obj/kern/kernel.asm	/^f01034f1:	85 c0                	test   %eax,%eax$/;"	l
f01034f3	obj/kern/kernel.asm	/^f01034f3:	74 08                	je     f01034fd <user_mem_check+0x85>$/;"	l
f01034f5	obj/kern/kernel.asm	/^f01034f5:	89 f1                	mov    %esi,%ecx$/;"	l
f01034f7	obj/kern/kernel.asm	/^f01034f7:	23 08                	and    (%eax),%ecx$/;"	l
f01034f9	obj/kern/kernel.asm	/^f01034f9:	39 ce                	cmp    %ecx,%esi$/;"	l
f01034fb	obj/kern/kernel.asm	/^f01034fb:	74 0d                	je     f010350a <user_mem_check+0x92>$/;"	l
f01034fd	obj/kern/kernel.asm	/^f01034fd:	89 1d 3c 52 20 f0    	mov    %ebx,0xf020523c$/;"	l
f0103503	obj/kern/kernel.asm	/^f0103503:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0103508	obj/kern/kernel.asm	/^f0103508:	eb 1d                	jmp    f0103527 <user_mem_check+0xaf>$/;"	l
f010350a	obj/kern/kernel.asm	/^f010350a:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103510	obj/kern/kernel.asm	/^f0103510:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0103516	obj/kern/kernel.asm	/^f0103516:	39 5d e4             	cmp    %ebx,-0x1c(%ebp)$/;"	l
f0103519	obj/kern/kernel.asm	/^f0103519:	75 aa                	jne    f01034c5 <user_mem_check+0x4d>$/;"	l
f010351b	obj/kern/kernel.asm	/^f010351b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103520	obj/kern/kernel.asm	/^f0103520:	eb 05                	jmp    f0103527 <user_mem_check+0xaf>$/;"	l
f0103522	obj/kern/kernel.asm	/^f0103522:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103527	obj/kern/kernel.asm	/^f0103527:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010352a	obj/kern/kernel.asm	/^f010352a:	5b                   	pop    %ebx$/;"	l
f010352b	obj/kern/kernel.asm	/^f010352b:	5e                   	pop    %esi$/;"	l
f010352c	obj/kern/kernel.asm	/^f010352c:	5f                   	pop    %edi$/;"	l
f010352d	obj/kern/kernel.asm	/^f010352d:	5d                   	pop    %ebp$/;"	l
f010352e	obj/kern/kernel.asm	/^f010352e:	c3                   	ret    $/;"	l
f010352f	obj/kern/kernel.asm	/^f010352f <user_mem_assert>:$/;"	l
f010352f	obj/kern/kernel.asm	/^f010352f:	55                   	push   %ebp$/;"	l
f0103530	obj/kern/kernel.asm	/^f0103530:	89 e5                	mov    %esp,%ebp$/;"	l
f0103532	obj/kern/kernel.asm	/^f0103532:	53                   	push   %ebx$/;"	l
f0103533	obj/kern/kernel.asm	/^f0103533:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103536	obj/kern/kernel.asm	/^f0103536:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103539	obj/kern/kernel.asm	/^f0103539:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010353c	obj/kern/kernel.asm	/^f010353c:	83 c8 04             	or     $0x4,%eax$/;"	l
f010353f	obj/kern/kernel.asm	/^f010353f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103543	obj/kern/kernel.asm	/^f0103543:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0103546	obj/kern/kernel.asm	/^f0103546:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010354a	obj/kern/kernel.asm	/^f010354a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010354d	obj/kern/kernel.asm	/^f010354d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103551	obj/kern/kernel.asm	/^f0103551:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103554	obj/kern/kernel.asm	/^f0103554:	e8 1f ff ff ff       	call   f0103478 <user_mem_check>$/;"	l
f0103559	obj/kern/kernel.asm	/^f0103559:	85 c0                	test   %eax,%eax$/;"	l
f010355b	obj/kern/kernel.asm	/^f010355b:	79 24                	jns    f0103581 <user_mem_assert+0x52>$/;"	l
f010355d	obj/kern/kernel.asm	/^f010355d:	a1 3c 52 20 f0       	mov    0xf020523c,%eax$/;"	l
f0103562	obj/kern/kernel.asm	/^f0103562:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103566	obj/kern/kernel.asm	/^f0103566:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0103569	obj/kern/kernel.asm	/^f0103569:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010356d	obj/kern/kernel.asm	/^f010356d:	c7 04 24 0c 7f 10 f0 	movl   $0xf0107f0c,(%esp)$/;"	l
f0103574	obj/kern/kernel.asm	/^f0103574:	e8 95 09 00 00       	call   f0103f0e <cprintf>$/;"	l
f0103579	obj/kern/kernel.asm	/^f0103579:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010357c	obj/kern/kernel.asm	/^f010357c:	e8 69 06 00 00       	call   f0103bea <env_destroy>$/;"	l
f0103581	obj/kern/kernel.asm	/^f0103581:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103584	obj/kern/kernel.asm	/^f0103584:	5b                   	pop    %ebx$/;"	l
f0103585	obj/kern/kernel.asm	/^f0103585:	5d                   	pop    %ebp$/;"	l
f0103586	obj/kern/kernel.asm	/^f0103586:	c3                   	ret    $/;"	l
f0103587	obj/kern/kernel.asm	/^f0103587:	90                   	nop$/;"	l
f0103588	obj/kern/kernel.asm	/^f0103588 <region_alloc>:$/;"	l
f0103588	obj/kern/kernel.asm	/^f0103588:	55                   	push   %ebp$/;"	l
f0103589	obj/kern/kernel.asm	/^f0103589:	89 e5                	mov    %esp,%ebp$/;"	l
f010358b	obj/kern/kernel.asm	/^f010358b:	57                   	push   %edi$/;"	l
f010358c	obj/kern/kernel.asm	/^f010358c:	56                   	push   %esi$/;"	l
f010358d	obj/kern/kernel.asm	/^f010358d:	53                   	push   %ebx$/;"	l
f010358e	obj/kern/kernel.asm	/^f010358e:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0103591	obj/kern/kernel.asm	/^f0103591:	89 c7                	mov    %eax,%edi$/;"	l
f0103593	obj/kern/kernel.asm	/^f0103593:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0103599	obj/kern/kernel.asm	/^f0103599:	89 d3                	mov    %edx,%ebx$/;"	l
f010359b	obj/kern/kernel.asm	/^f010359b:	8d b1 ff 0f 00 00    	lea    0xfff(%ecx),%esi$/;"	l
f01035a1	obj/kern/kernel.asm	/^f01035a1:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f01035a7	obj/kern/kernel.asm	/^f01035a7:	01 d6                	add    %edx,%esi$/;"	l
f01035a9	obj/kern/kernel.asm	/^f01035a9:	39 f2                	cmp    %esi,%edx$/;"	l
f01035ab	obj/kern/kernel.asm	/^f01035ab:	73 75                	jae    f0103622 <region_alloc+0x9a>$/;"	l
f01035ad	obj/kern/kernel.asm	/^f01035ad:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01035b4	obj/kern/kernel.asm	/^f01035b4:	e8 48 db ff ff       	call   f0101101 <page_alloc>$/;"	l
f01035b9	obj/kern/kernel.asm	/^f01035b9:	85 c0                	test   %eax,%eax$/;"	l
f01035bb	obj/kern/kernel.asm	/^f01035bb:	75 1c                	jne    f01035d9 <region_alloc+0x51>$/;"	l
f01035bd	obj/kern/kernel.asm	/^f01035bd:	c7 44 24 08 6d 82 10 	movl   $0xf010826d,0x8(%esp)$/;"	l
f01035c4	obj/kern/kernel.asm	/^f01035c4:	f0 $/;"	l
f01035c5	obj/kern/kernel.asm	/^f01035c5:	c7 44 24 04 36 01 00 	movl   $0x136,0x4(%esp)$/;"	l
f01035cc	obj/kern/kernel.asm	/^f01035cc:	00 $/;"	l
f01035cd	obj/kern/kernel.asm	/^f01035cd:	c7 04 24 88 82 10 f0 	movl   $0xf0108288,(%esp)$/;"	l
f01035d4	obj/kern/kernel.asm	/^f01035d4:	e8 67 ca ff ff       	call   f0100040 <_panic>$/;"	l
f01035d9	obj/kern/kernel.asm	/^f01035d9:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f01035e0	obj/kern/kernel.asm	/^f01035e0:	00 $/;"	l
f01035e1	obj/kern/kernel.asm	/^f01035e1:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f01035e5	obj/kern/kernel.asm	/^f01035e5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01035e9	obj/kern/kernel.asm	/^f01035e9:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f01035ec	obj/kern/kernel.asm	/^f01035ec:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01035ef	obj/kern/kernel.asm	/^f01035ef:	e8 fa dd ff ff       	call   f01013ee <page_insert>$/;"	l
f01035f4	obj/kern/kernel.asm	/^f01035f4:	85 c0                	test   %eax,%eax$/;"	l
f01035f6	obj/kern/kernel.asm	/^f01035f6:	74 20                	je     f0103618 <region_alloc+0x90>$/;"	l
f01035f8	obj/kern/kernel.asm	/^f01035f8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01035fc	obj/kern/kernel.asm	/^f01035fc:	c7 44 24 08 93 82 10 	movl   $0xf0108293,0x8(%esp)$/;"	l
f0103603	obj/kern/kernel.asm	/^f0103603:	f0 $/;"	l
f0103604	obj/kern/kernel.asm	/^f0103604:	c7 44 24 04 39 01 00 	movl   $0x139,0x4(%esp)$/;"	l
f010360b	obj/kern/kernel.asm	/^f010360b:	00 $/;"	l
f010360c	obj/kern/kernel.asm	/^f010360c:	c7 04 24 88 82 10 f0 	movl   $0xf0108288,(%esp)$/;"	l
f0103613	obj/kern/kernel.asm	/^f0103613:	e8 28 ca ff ff       	call   f0100040 <_panic>$/;"	l
f0103618	obj/kern/kernel.asm	/^f0103618:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010361e	obj/kern/kernel.asm	/^f010361e:	39 de                	cmp    %ebx,%esi$/;"	l
f0103620	obj/kern/kernel.asm	/^f0103620:	77 8b                	ja     f01035ad <region_alloc+0x25>$/;"	l
f0103622	obj/kern/kernel.asm	/^f0103622:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0103625	obj/kern/kernel.asm	/^f0103625:	5b                   	pop    %ebx$/;"	l
f0103626	obj/kern/kernel.asm	/^f0103626:	5e                   	pop    %esi$/;"	l
f0103627	obj/kern/kernel.asm	/^f0103627:	5f                   	pop    %edi$/;"	l
f0103628	obj/kern/kernel.asm	/^f0103628:	5d                   	pop    %ebp$/;"	l
f0103629	obj/kern/kernel.asm	/^f0103629:	c3                   	ret    $/;"	l
f010362a	obj/kern/kernel.asm	/^f010362a <envid2env>:$/;"	l
f010362a	obj/kern/kernel.asm	/^f010362a:	55                   	push   %ebp$/;"	l
f010362b	obj/kern/kernel.asm	/^f010362b:	89 e5                	mov    %esp,%ebp$/;"	l
f010362d	obj/kern/kernel.asm	/^f010362d:	56                   	push   %esi$/;"	l
f010362e	obj/kern/kernel.asm	/^f010362e:	53                   	push   %ebx$/;"	l
f010362f	obj/kern/kernel.asm	/^f010362f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103632	obj/kern/kernel.asm	/^f0103632:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0103635	obj/kern/kernel.asm	/^f0103635:	85 c0                	test   %eax,%eax$/;"	l
f0103637	obj/kern/kernel.asm	/^f0103637:	75 1a                	jne    f0103653 <envid2env+0x29>$/;"	l
f0103639	obj/kern/kernel.asm	/^f0103639:	e8 06 33 00 00       	call   f0106944 <cpunum>$/;"	l
f010363e	obj/kern/kernel.asm	/^f010363e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103641	obj/kern/kernel.asm	/^f0103641:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f0103647	obj/kern/kernel.asm	/^f0103647:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010364a	obj/kern/kernel.asm	/^f010364a:	89 01                	mov    %eax,(%ecx)$/;"	l
f010364c	obj/kern/kernel.asm	/^f010364c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103651	obj/kern/kernel.asm	/^f0103651:	eb 70                	jmp    f01036c3 <envid2env+0x99>$/;"	l
f0103653	obj/kern/kernel.asm	/^f0103653:	89 c3                	mov    %eax,%ebx$/;"	l
f0103655	obj/kern/kernel.asm	/^f0103655:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f010365b	obj/kern/kernel.asm	/^f010365b:	c1 e3 07             	shl    $0x7,%ebx$/;"	l
f010365e	obj/kern/kernel.asm	/^f010365e:	03 1d 48 52 20 f0    	add    0xf0205248,%ebx$/;"	l
f0103664	obj/kern/kernel.asm	/^f0103664:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f0103668	obj/kern/kernel.asm	/^f0103668:	74 05                	je     f010366f <envid2env+0x45>$/;"	l
f010366a	obj/kern/kernel.asm	/^f010366a:	39 43 48             	cmp    %eax,0x48(%ebx)$/;"	l
f010366d	obj/kern/kernel.asm	/^f010366d:	74 10                	je     f010367f <envid2env+0x55>$/;"	l
f010366f	obj/kern/kernel.asm	/^f010366f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103672	obj/kern/kernel.asm	/^f0103672:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103678	obj/kern/kernel.asm	/^f0103678:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f010367d	obj/kern/kernel.asm	/^f010367d:	eb 44                	jmp    f01036c3 <envid2env+0x99>$/;"	l
f010367f	obj/kern/kernel.asm	/^f010367f:	84 d2                	test   %dl,%dl$/;"	l
f0103681	obj/kern/kernel.asm	/^f0103681:	74 36                	je     f01036b9 <envid2env+0x8f>$/;"	l
f0103683	obj/kern/kernel.asm	/^f0103683:	e8 bc 32 00 00       	call   f0106944 <cpunum>$/;"	l
f0103688	obj/kern/kernel.asm	/^f0103688:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010368b	obj/kern/kernel.asm	/^f010368b:	39 98 28 60 20 f0    	cmp    %ebx,-0xfdf9fd8(%eax)$/;"	l
f0103691	obj/kern/kernel.asm	/^f0103691:	74 26                	je     f01036b9 <envid2env+0x8f>$/;"	l
f0103693	obj/kern/kernel.asm	/^f0103693:	8b 73 4c             	mov    0x4c(%ebx),%esi$/;"	l
f0103696	obj/kern/kernel.asm	/^f0103696:	e8 a9 32 00 00       	call   f0106944 <cpunum>$/;"	l
f010369b	obj/kern/kernel.asm	/^f010369b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010369e	obj/kern/kernel.asm	/^f010369e:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f01036a4	obj/kern/kernel.asm	/^f01036a4:	3b 70 48             	cmp    0x48(%eax),%esi$/;"	l
f01036a7	obj/kern/kernel.asm	/^f01036a7:	74 10                	je     f01036b9 <envid2env+0x8f>$/;"	l
f01036a9	obj/kern/kernel.asm	/^f01036a9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01036ac	obj/kern/kernel.asm	/^f01036ac:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01036b2	obj/kern/kernel.asm	/^f01036b2:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f01036b7	obj/kern/kernel.asm	/^f01036b7:	eb 0a                	jmp    f01036c3 <envid2env+0x99>$/;"	l
f01036b9	obj/kern/kernel.asm	/^f01036b9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01036bc	obj/kern/kernel.asm	/^f01036bc:	89 18                	mov    %ebx,(%eax)$/;"	l
f01036be	obj/kern/kernel.asm	/^f01036be:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01036c3	obj/kern/kernel.asm	/^f01036c3:	5b                   	pop    %ebx$/;"	l
f01036c4	obj/kern/kernel.asm	/^f01036c4:	5e                   	pop    %esi$/;"	l
f01036c5	obj/kern/kernel.asm	/^f01036c5:	5d                   	pop    %ebp$/;"	l
f01036c6	obj/kern/kernel.asm	/^f01036c6:	c3                   	ret    $/;"	l
f01036c7	obj/kern/kernel.asm	/^f01036c7 <env_init_percpu>:$/;"	l
f01036c7	obj/kern/kernel.asm	/^f01036c7:	55                   	push   %ebp$/;"	l
f01036c8	obj/kern/kernel.asm	/^f01036c8:	89 e5                	mov    %esp,%ebp$/;"	l
f01036ca	obj/kern/kernel.asm	/^f01036ca:	b8 20 13 12 f0       	mov    $0xf0121320,%eax$/;"	l
f01036cf	obj/kern/kernel.asm	/^f01036cf:	0f 01 10             	lgdtl  (%eax)$/;"	l
f01036d2	obj/kern/kernel.asm	/^f01036d2:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f01036d7	obj/kern/kernel.asm	/^f01036d7:	8e e8                	mov    %eax,%gs$/;"	l
f01036d9	obj/kern/kernel.asm	/^f01036d9:	8e e0                	mov    %eax,%fs$/;"	l
f01036db	obj/kern/kernel.asm	/^f01036db:	b0 10                	mov    $0x10,%al$/;"	l
f01036dd	obj/kern/kernel.asm	/^f01036dd:	8e c0                	mov    %eax,%es$/;"	l
f01036df	obj/kern/kernel.asm	/^f01036df:	8e d8                	mov    %eax,%ds$/;"	l
f01036e1	obj/kern/kernel.asm	/^f01036e1:	8e d0                	mov    %eax,%ss$/;"	l
f01036e3	obj/kern/kernel.asm	/^f01036e3:	ea ea 36 10 f0 08 00 	ljmp   $0x8,$0xf01036ea$/;"	l
f01036ea	obj/kern/kernel.asm	/^f01036ea:	b0 00                	mov    $0x0,%al$/;"	l
f01036ec	obj/kern/kernel.asm	/^f01036ec:	0f 00 d0             	lldt   %ax$/;"	l
f01036ef	obj/kern/kernel.asm	/^f01036ef:	5d                   	pop    %ebp$/;"	l
f01036f0	obj/kern/kernel.asm	/^f01036f0:	c3                   	ret    $/;"	l
f01036f1	obj/kern/kernel.asm	/^f01036f1 <env_init>:$/;"	l
f01036f1	obj/kern/kernel.asm	/^f01036f1:	8b 0d 48 52 20 f0    	mov    0xf0205248,%ecx$/;"	l
f01036f7	obj/kern/kernel.asm	/^f01036f7:	89 0d 4c 52 20 f0    	mov    %ecx,0xf020524c$/;"	l
f01036fd	obj/kern/kernel.asm	/^f01036fd:	8d 81 80 00 00 00    	lea    0x80(%ecx),%eax$/;"	l
f0103703	obj/kern/kernel.asm	/^f0103703:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0103708	obj/kern/kernel.asm	/^f0103708:	c7 40 c8 00 00 00 00 	movl   $0x0,-0x38(%eax)$/;"	l
f010370f	obj/kern/kernel.asm	/^f010370f:	83 c2 01             	add    $0x1,%edx$/;"	l
f0103712	obj/kern/kernel.asm	/^f0103712:	89 40 c4             	mov    %eax,-0x3c(%eax)$/;"	l
f0103715	obj/kern/kernel.asm	/^f0103715:	83 e8 80             	sub    $0xffffff80,%eax$/;"	l
f0103718	obj/kern/kernel.asm	/^f0103718:	81 fa ff 03 00 00    	cmp    $0x3ff,%edx$/;"	l
f010371e	obj/kern/kernel.asm	/^f010371e:	75 e8                	jne    f0103708 <env_init+0x17>$/;"	l
f0103720	obj/kern/kernel.asm	/^f0103720:	55                   	push   %ebp$/;"	l
f0103721	obj/kern/kernel.asm	/^f0103721:	89 e5                	mov    %esp,%ebp$/;"	l
f0103723	obj/kern/kernel.asm	/^f0103723:	c7 81 c8 ff 01 00 00 	movl   $0x0,0x1ffc8(%ecx)$/;"	l
f010372a	obj/kern/kernel.asm	/^f010372a:	00 00 00 $/;"	l
f010372d	obj/kern/kernel.asm	/^f010372d:	c7 81 c4 ff 01 00 00 	movl   $0x0,0x1ffc4(%ecx)$/;"	l
f0103734	obj/kern/kernel.asm	/^f0103734:	00 00 00 $/;"	l
f0103737	obj/kern/kernel.asm	/^f0103737:	e8 8b ff ff ff       	call   f01036c7 <env_init_percpu>$/;"	l
f010373c	obj/kern/kernel.asm	/^f010373c:	5d                   	pop    %ebp$/;"	l
f010373d	obj/kern/kernel.asm	/^f010373d:	c3                   	ret    $/;"	l
f010373e	obj/kern/kernel.asm	/^f010373e <env_alloc>:$/;"	l
f010373e	obj/kern/kernel.asm	/^f010373e:	55                   	push   %ebp$/;"	l
f010373f	obj/kern/kernel.asm	/^f010373f:	89 e5                	mov    %esp,%ebp$/;"	l
f0103741	obj/kern/kernel.asm	/^f0103741:	53                   	push   %ebx$/;"	l
f0103742	obj/kern/kernel.asm	/^f0103742:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103745	obj/kern/kernel.asm	/^f0103745:	8b 1d 4c 52 20 f0    	mov    0xf020524c,%ebx$/;"	l
f010374b	obj/kern/kernel.asm	/^f010374b:	85 db                	test   %ebx,%ebx$/;"	l
f010374d	obj/kern/kernel.asm	/^f010374d:	0f 84 71 01 00 00    	je     f01038c4 <env_alloc+0x186>$/;"	l
f0103753	obj/kern/kernel.asm	/^f0103753:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f010375a	obj/kern/kernel.asm	/^f010375a:	e8 a2 d9 ff ff       	call   f0101101 <page_alloc>$/;"	l
f010375f	obj/kern/kernel.asm	/^f010375f:	85 c0                	test   %eax,%eax$/;"	l
f0103761	obj/kern/kernel.asm	/^f0103761:	0f 84 64 01 00 00    	je     f01038cb <env_alloc+0x18d>$/;"	l
f0103767	obj/kern/kernel.asm	/^f0103767:	89 c2                	mov    %eax,%edx$/;"	l
f0103769	obj/kern/kernel.asm	/^f0103769:	2b 15 90 5e 20 f0    	sub    0xf0205e90,%edx$/;"	l
f010376f	obj/kern/kernel.asm	/^f010376f:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0103772	obj/kern/kernel.asm	/^f0103772:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0103775	obj/kern/kernel.asm	/^f0103775:	89 d1                	mov    %edx,%ecx$/;"	l
f0103777	obj/kern/kernel.asm	/^f0103777:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f010377a	obj/kern/kernel.asm	/^f010377a:	3b 0d 88 5e 20 f0    	cmp    0xf0205e88,%ecx$/;"	l
f0103780	obj/kern/kernel.asm	/^f0103780:	72 20                	jb     f01037a2 <env_alloc+0x64>$/;"	l
f0103782	obj/kern/kernel.asm	/^f0103782:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0103786	obj/kern/kernel.asm	/^f0103786:	c7 44 24 08 84 70 10 	movl   $0xf0107084,0x8(%esp)$/;"	l
f010378d	obj/kern/kernel.asm	/^f010378d:	f0 $/;"	l
f010378e	obj/kern/kernel.asm	/^f010378e:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0103795	obj/kern/kernel.asm	/^f0103795:	00 $/;"	l
f0103796	obj/kern/kernel.asm	/^f0103796:	c7 04 24 41 7f 10 f0 	movl   $0xf0107f41,(%esp)$/;"	l
f010379d	obj/kern/kernel.asm	/^f010379d:	e8 9e c8 ff ff       	call   f0100040 <_panic>$/;"	l
f01037a2	obj/kern/kernel.asm	/^f01037a2:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f01037a8	obj/kern/kernel.asm	/^f01037a8:	89 53 60             	mov    %edx,0x60(%ebx)$/;"	l
f01037ab	obj/kern/kernel.asm	/^f01037ab:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f01037b0	obj/kern/kernel.asm	/^f01037b0:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01037b7	obj/kern/kernel.asm	/^f01037b7:	00 $/;"	l
f01037b8	obj/kern/kernel.asm	/^f01037b8:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f01037bd	obj/kern/kernel.asm	/^f01037bd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01037c1	obj/kern/kernel.asm	/^f01037c1:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f01037c4	obj/kern/kernel.asm	/^f01037c4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01037c7	obj/kern/kernel.asm	/^f01037c7:	e8 92 2b 00 00       	call   f010635e <memcpy>$/;"	l
f01037cc	obj/kern/kernel.asm	/^f01037cc:	c7 44 24 08 ec 0e 00 	movl   $0xeec,0x8(%esp)$/;"	l
f01037d3	obj/kern/kernel.asm	/^f01037d3:	00 $/;"	l
f01037d4	obj/kern/kernel.asm	/^f01037d4:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01037db	obj/kern/kernel.asm	/^f01037db:	00 $/;"	l
f01037dc	obj/kern/kernel.asm	/^f01037dc:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f01037df	obj/kern/kernel.asm	/^f01037df:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01037e2	obj/kern/kernel.asm	/^f01037e2:	e8 c2 2a 00 00       	call   f01062a9 <memset>$/;"	l
f01037e7	obj/kern/kernel.asm	/^f01037e7:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f01037ea	obj/kern/kernel.asm	/^f01037ea:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01037ef	obj/kern/kernel.asm	/^f01037ef:	77 20                	ja     f0103811 <env_alloc+0xd3>$/;"	l
f01037f1	obj/kern/kernel.asm	/^f01037f1:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01037f5	obj/kern/kernel.asm	/^f01037f5:	c7 44 24 08 a8 70 10 	movl   $0xf01070a8,0x8(%esp)$/;"	l
f01037fc	obj/kern/kernel.asm	/^f01037fc:	f0 $/;"	l
f01037fd	obj/kern/kernel.asm	/^f01037fd:	c7 44 24 04 ca 00 00 	movl   $0xca,0x4(%esp)$/;"	l
f0103804	obj/kern/kernel.asm	/^f0103804:	00 $/;"	l
f0103805	obj/kern/kernel.asm	/^f0103805:	c7 04 24 88 82 10 f0 	movl   $0xf0108288,(%esp)$/;"	l
f010380c	obj/kern/kernel.asm	/^f010380c:	e8 2f c8 ff ff       	call   f0100040 <_panic>$/;"	l
f0103811	obj/kern/kernel.asm	/^f0103811:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0103817	obj/kern/kernel.asm	/^f0103817:	83 ca 05             	or     $0x5,%edx$/;"	l
f010381a	obj/kern/kernel.asm	/^f010381a:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0103820	obj/kern/kernel.asm	/^f0103820:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0103823	obj/kern/kernel.asm	/^f0103823:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f0103828	obj/kern/kernel.asm	/^f0103828:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f010382d	obj/kern/kernel.asm	/^f010382d:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0103832	obj/kern/kernel.asm	/^f0103832:	0f 4e c2             	cmovle %edx,%eax$/;"	l
f0103835	obj/kern/kernel.asm	/^f0103835:	89 da                	mov    %ebx,%edx$/;"	l
f0103837	obj/kern/kernel.asm	/^f0103837:	2b 15 48 52 20 f0    	sub    0xf0205248,%edx$/;"	l
f010383d	obj/kern/kernel.asm	/^f010383d:	c1 fa 07             	sar    $0x7,%edx$/;"	l
f0103840	obj/kern/kernel.asm	/^f0103840:	09 d0                	or     %edx,%eax$/;"	l
f0103842	obj/kern/kernel.asm	/^f0103842:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f0103845	obj/kern/kernel.asm	/^f0103845:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103848	obj/kern/kernel.asm	/^f0103848:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f010384b	obj/kern/kernel.asm	/^f010384b:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f0103852	obj/kern/kernel.asm	/^f0103852:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f0103859	obj/kern/kernel.asm	/^f0103859:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f0103860	obj/kern/kernel.asm	/^f0103860:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f0103867	obj/kern/kernel.asm	/^f0103867:	00 $/;"	l
f0103868	obj/kern/kernel.asm	/^f0103868:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010386f	obj/kern/kernel.asm	/^f010386f:	00 $/;"	l
f0103870	obj/kern/kernel.asm	/^f0103870:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103873	obj/kern/kernel.asm	/^f0103873:	e8 31 2a 00 00       	call   f01062a9 <memset>$/;"	l
f0103878	obj/kern/kernel.asm	/^f0103878:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f010387e	obj/kern/kernel.asm	/^f010387e:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f0103884	obj/kern/kernel.asm	/^f0103884:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f010388a	obj/kern/kernel.asm	/^f010388a:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f0103891	obj/kern/kernel.asm	/^f0103891:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f0103897	obj/kern/kernel.asm	/^f0103897:	81 4b 38 00 02 00 00 	orl    $0x200,0x38(%ebx)$/;"	l
f010389e	obj/kern/kernel.asm	/^f010389e:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f01038a5	obj/kern/kernel.asm	/^f01038a5:	c6 43 68 00          	movb   $0x0,0x68(%ebx)$/;"	l
f01038a9	obj/kern/kernel.asm	/^f01038a9:	c7 43 7c 00 10 00 00 	movl   $0x1000,0x7c(%ebx)$/;"	l
f01038b0	obj/kern/kernel.asm	/^f01038b0:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f01038b3	obj/kern/kernel.asm	/^f01038b3:	a3 4c 52 20 f0       	mov    %eax,0xf020524c$/;"	l
f01038b8	obj/kern/kernel.asm	/^f01038b8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01038bb	obj/kern/kernel.asm	/^f01038bb:	89 18                	mov    %ebx,(%eax)$/;"	l
f01038bd	obj/kern/kernel.asm	/^f01038bd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01038c2	obj/kern/kernel.asm	/^f01038c2:	eb 0c                	jmp    f01038d0 <env_alloc+0x192>$/;"	l
f01038c4	obj/kern/kernel.asm	/^f01038c4:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f01038c9	obj/kern/kernel.asm	/^f01038c9:	eb 05                	jmp    f01038d0 <env_alloc+0x192>$/;"	l
f01038cb	obj/kern/kernel.asm	/^f01038cb:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f01038d0	obj/kern/kernel.asm	/^f01038d0:	83 c4 14             	add    $0x14,%esp$/;"	l
f01038d3	obj/kern/kernel.asm	/^f01038d3:	5b                   	pop    %ebx$/;"	l
f01038d4	obj/kern/kernel.asm	/^f01038d4:	5d                   	pop    %ebp$/;"	l
f01038d5	obj/kern/kernel.asm	/^f01038d5:	c3                   	ret    $/;"	l
f01038d6	obj/kern/kernel.asm	/^f01038d6 <env_create>:$/;"	l
f01038d6	obj/kern/kernel.asm	/^f01038d6:	55                   	push   %ebp$/;"	l
f01038d7	obj/kern/kernel.asm	/^f01038d7:	89 e5                	mov    %esp,%ebp$/;"	l
f01038d9	obj/kern/kernel.asm	/^f01038d9:	57                   	push   %edi$/;"	l
f01038da	obj/kern/kernel.asm	/^f01038da:	56                   	push   %esi$/;"	l
f01038db	obj/kern/kernel.asm	/^f01038db:	53                   	push   %ebx$/;"	l
f01038dc	obj/kern/kernel.asm	/^f01038dc:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f01038df	obj/kern/kernel.asm	/^f01038df:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01038e2	obj/kern/kernel.asm	/^f01038e2:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01038e9	obj/kern/kernel.asm	/^f01038e9:	00 $/;"	l
f01038ea	obj/kern/kernel.asm	/^f01038ea:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01038ed	obj/kern/kernel.asm	/^f01038ed:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01038f0	obj/kern/kernel.asm	/^f01038f0:	e8 49 fe ff ff       	call   f010373e <env_alloc>$/;"	l
f01038f5	obj/kern/kernel.asm	/^f01038f5:	c1 e8 1f             	shr    $0x1f,%eax$/;"	l
f01038f8	obj/kern/kernel.asm	/^f01038f8:	85 c0                	test   %eax,%eax$/;"	l
f01038fa	obj/kern/kernel.asm	/^f01038fa:	74 20                	je     f010391c <env_create+0x46>$/;"	l
f01038fc	obj/kern/kernel.asm	/^f01038fc:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103900	obj/kern/kernel.asm	/^f0103900:	c7 44 24 08 a4 82 10 	movl   $0xf01082a4,0x8(%esp)$/;"	l
f0103907	obj/kern/kernel.asm	/^f0103907:	f0 $/;"	l
f0103908	obj/kern/kernel.asm	/^f0103908:	c7 44 24 04 a4 01 00 	movl   $0x1a4,0x4(%esp)$/;"	l
f010390f	obj/kern/kernel.asm	/^f010390f:	00 $/;"	l
f0103910	obj/kern/kernel.asm	/^f0103910:	c7 04 24 88 82 10 f0 	movl   $0xf0108288,(%esp)$/;"	l
f0103917	obj/kern/kernel.asm	/^f0103917:	e8 24 c7 ff ff       	call   f0100040 <_panic>$/;"	l
f010391c	obj/kern/kernel.asm	/^f010391c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010391f	obj/kern/kernel.asm	/^f010391f:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103922	obj/kern/kernel.asm	/^f0103922:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0103925	obj/kern/kernel.asm	/^f0103925:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010392a	obj/kern/kernel.asm	/^f010392a:	77 20                	ja     f010394c <env_create+0x76>$/;"	l
f010392c	obj/kern/kernel.asm	/^f010392c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103930	obj/kern/kernel.asm	/^f0103930:	c7 44 24 08 a8 70 10 	movl   $0xf01070a8,0x8(%esp)$/;"	l
f0103937	obj/kern/kernel.asm	/^f0103937:	f0 $/;"	l
f0103938	obj/kern/kernel.asm	/^f0103938:	c7 44 24 04 77 01 00 	movl   $0x177,0x4(%esp)$/;"	l
f010393f	obj/kern/kernel.asm	/^f010393f:	00 $/;"	l
f0103940	obj/kern/kernel.asm	/^f0103940:	c7 04 24 88 82 10 f0 	movl   $0xf0108288,(%esp)$/;"	l
f0103947	obj/kern/kernel.asm	/^f0103947:	e8 f4 c6 ff ff       	call   f0100040 <_panic>$/;"	l
f010394c	obj/kern/kernel.asm	/^f010394c:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103951	obj/kern/kernel.asm	/^f0103951:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103954	obj/kern/kernel.asm	/^f0103954:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%edi)$/;"	l
f010395a	obj/kern/kernel.asm	/^f010395a:	74 1c                	je     f0103978 <env_create+0xa2>$/;"	l
f010395c	obj/kern/kernel.asm	/^f010395c:	c7 44 24 08 b2 82 10 	movl   $0xf01082b2,0x8(%esp)$/;"	l
f0103963	obj/kern/kernel.asm	/^f0103963:	f0 $/;"	l
f0103964	obj/kern/kernel.asm	/^f0103964:	c7 44 24 04 7a 01 00 	movl   $0x17a,0x4(%esp)$/;"	l
f010396b	obj/kern/kernel.asm	/^f010396b:	00 $/;"	l
f010396c	obj/kern/kernel.asm	/^f010396c:	c7 04 24 88 82 10 f0 	movl   $0xf0108288,(%esp)$/;"	l
f0103973	obj/kern/kernel.asm	/^f0103973:	e8 c8 c6 ff ff       	call   f0100040 <_panic>$/;"	l
f0103978	obj/kern/kernel.asm	/^f0103978:	89 fb                	mov    %edi,%ebx$/;"	l
f010397a	obj/kern/kernel.asm	/^f010397a:	03 5f 1c             	add    0x1c(%edi),%ebx$/;"	l
f010397d	obj/kern/kernel.asm	/^f010397d:	0f b7 77 2c          	movzwl 0x2c(%edi),%esi$/;"	l
f0103981	obj/kern/kernel.asm	/^f0103981:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f0103984	obj/kern/kernel.asm	/^f0103984:	01 de                	add    %ebx,%esi$/;"	l
f0103986	obj/kern/kernel.asm	/^f0103986:	39 f3                	cmp    %esi,%ebx$/;"	l
f0103988	obj/kern/kernel.asm	/^f0103988:	73 5e                	jae    f01039e8 <env_create+0x112>$/;"	l
f010398a	obj/kern/kernel.asm	/^f010398a:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f010398d	obj/kern/kernel.asm	/^f010398d:	75 52                	jne    f01039e1 <env_create+0x10b>$/;"	l
f010398f	obj/kern/kernel.asm	/^f010398f:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f0103992	obj/kern/kernel.asm	/^f0103992:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f0103995	obj/kern/kernel.asm	/^f0103995:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103998	obj/kern/kernel.asm	/^f0103998:	e8 eb fb ff ff       	call   f0103588 <region_alloc>$/;"	l
f010399d	obj/kern/kernel.asm	/^f010399d:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f01039a0	obj/kern/kernel.asm	/^f01039a0:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f01039a5	obj/kern/kernel.asm	/^f01039a5:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01039aa	obj/kern/kernel.asm	/^f01039aa:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01039ae	obj/kern/kernel.asm	/^f01039ae:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01039b5	obj/kern/kernel.asm	/^f01039b5:	00 $/;"	l
f01039b6	obj/kern/kernel.asm	/^f01039b6:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01039b9	obj/kern/kernel.asm	/^f01039b9:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01039be	obj/kern/kernel.asm	/^f01039be:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01039c1	obj/kern/kernel.asm	/^f01039c1:	e8 e3 28 00 00       	call   f01062a9 <memset>$/;"	l
f01039c6	obj/kern/kernel.asm	/^f01039c6:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f01039c9	obj/kern/kernel.asm	/^f01039c9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01039cd	obj/kern/kernel.asm	/^f01039cd:	89 f8                	mov    %edi,%eax$/;"	l
f01039cf	obj/kern/kernel.asm	/^f01039cf:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f01039d2	obj/kern/kernel.asm	/^f01039d2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01039d6	obj/kern/kernel.asm	/^f01039d6:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01039d9	obj/kern/kernel.asm	/^f01039d9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01039dc	obj/kern/kernel.asm	/^f01039dc:	e8 15 29 00 00       	call   f01062f6 <memmove>$/;"	l
f01039e1	obj/kern/kernel.asm	/^f01039e1:	83 c3 20             	add    $0x20,%ebx$/;"	l
f01039e4	obj/kern/kernel.asm	/^f01039e4:	39 de                	cmp    %ebx,%esi$/;"	l
f01039e6	obj/kern/kernel.asm	/^f01039e6:	77 a2                	ja     f010398a <env_create+0xb4>$/;"	l
f01039e8	obj/kern/kernel.asm	/^f01039e8:	8b 47 18             	mov    0x18(%edi),%eax$/;"	l
f01039eb	obj/kern/kernel.asm	/^f01039eb:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f01039ee	obj/kern/kernel.asm	/^f01039ee:	89 47 30             	mov    %eax,0x30(%edi)$/;"	l
f01039f1	obj/kern/kernel.asm	/^f01039f1:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f01039f6	obj/kern/kernel.asm	/^f01039f6:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f01039fb	obj/kern/kernel.asm	/^f01039fb:	89 f8                	mov    %edi,%eax$/;"	l
f01039fd	obj/kern/kernel.asm	/^f01039fd:	e8 86 fb ff ff       	call   f0103588 <region_alloc>$/;"	l
f0103a02	obj/kern/kernel.asm	/^f0103a02:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103a05	obj/kern/kernel.asm	/^f0103a05:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0103a08	obj/kern/kernel.asm	/^f0103a08:	89 48 50             	mov    %ecx,0x50(%eax)$/;"	l
f0103a0b	obj/kern/kernel.asm	/^f0103a0b:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0103a0e	obj/kern/kernel.asm	/^f0103a0e:	75 07                	jne    f0103a17 <env_create+0x141>$/;"	l
f0103a10	obj/kern/kernel.asm	/^f0103a10:	81 48 38 00 30 00 00 	orl    $0x3000,0x38(%eax)$/;"	l
f0103a17	obj/kern/kernel.asm	/^f0103a17:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0103a1a	obj/kern/kernel.asm	/^f0103a1a:	5b                   	pop    %ebx$/;"	l
f0103a1b	obj/kern/kernel.asm	/^f0103a1b:	5e                   	pop    %esi$/;"	l
f0103a1c	obj/kern/kernel.asm	/^f0103a1c:	5f                   	pop    %edi$/;"	l
f0103a1d	obj/kern/kernel.asm	/^f0103a1d:	5d                   	pop    %ebp$/;"	l
f0103a1e	obj/kern/kernel.asm	/^f0103a1e:	c3                   	ret    $/;"	l
f0103a1f	obj/kern/kernel.asm	/^f0103a1f <env_free>:$/;"	l
f0103a1f	obj/kern/kernel.asm	/^f0103a1f:	55                   	push   %ebp$/;"	l
f0103a20	obj/kern/kernel.asm	/^f0103a20:	89 e5                	mov    %esp,%ebp$/;"	l
f0103a22	obj/kern/kernel.asm	/^f0103a22:	57                   	push   %edi$/;"	l
f0103a23	obj/kern/kernel.asm	/^f0103a23:	56                   	push   %esi$/;"	l
f0103a24	obj/kern/kernel.asm	/^f0103a24:	53                   	push   %ebx$/;"	l
f0103a25	obj/kern/kernel.asm	/^f0103a25:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0103a28	obj/kern/kernel.asm	/^f0103a28:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103a2b	obj/kern/kernel.asm	/^f0103a2b:	e8 14 2f 00 00       	call   f0106944 <cpunum>$/;"	l
f0103a30	obj/kern/kernel.asm	/^f0103a30:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103a33	obj/kern/kernel.asm	/^f0103a33:	39 b8 28 60 20 f0    	cmp    %edi,-0xfdf9fd8(%eax)$/;"	l
f0103a39	obj/kern/kernel.asm	/^f0103a39:	74 09                	je     f0103a44 <env_free+0x25>$/;"	l
f0103a3b	obj/kern/kernel.asm	/^f0103a3b:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103a42	obj/kern/kernel.asm	/^f0103a42:	eb 36                	jmp    f0103a7a <env_free+0x5b>$/;"	l
f0103a44	obj/kern/kernel.asm	/^f0103a44:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f0103a49	obj/kern/kernel.asm	/^f0103a49:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103a4e	obj/kern/kernel.asm	/^f0103a4e:	77 20                	ja     f0103a70 <env_free+0x51>$/;"	l
f0103a50	obj/kern/kernel.asm	/^f0103a50:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103a54	obj/kern/kernel.asm	/^f0103a54:	c7 44 24 08 a8 70 10 	movl   $0xf01070a8,0x8(%esp)$/;"	l
f0103a5b	obj/kern/kernel.asm	/^f0103a5b:	f0 $/;"	l
f0103a5c	obj/kern/kernel.asm	/^f0103a5c:	c7 44 24 04 bd 01 00 	movl   $0x1bd,0x4(%esp)$/;"	l
f0103a63	obj/kern/kernel.asm	/^f0103a63:	00 $/;"	l
f0103a64	obj/kern/kernel.asm	/^f0103a64:	c7 04 24 88 82 10 f0 	movl   $0xf0108288,(%esp)$/;"	l
f0103a6b	obj/kern/kernel.asm	/^f0103a6b:	e8 d0 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a70	obj/kern/kernel.asm	/^f0103a70:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103a75	obj/kern/kernel.asm	/^f0103a75:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103a78	obj/kern/kernel.asm	/^f0103a78:	eb c1                	jmp    f0103a3b <env_free+0x1c>$/;"	l
f0103a7a	obj/kern/kernel.asm	/^f0103a7a:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0103a7d	obj/kern/kernel.asm	/^f0103a7d:	89 c8                	mov    %ecx,%eax$/;"	l
f0103a7f	obj/kern/kernel.asm	/^f0103a7f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0103a82	obj/kern/kernel.asm	/^f0103a82:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0103a85	obj/kern/kernel.asm	/^f0103a85:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103a88	obj/kern/kernel.asm	/^f0103a88:	8b 34 88             	mov    (%eax,%ecx,4),%esi$/;"	l
f0103a8b	obj/kern/kernel.asm	/^f0103a8b:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f0103a91	obj/kern/kernel.asm	/^f0103a91:	0f 84 b7 00 00 00    	je     f0103b4e <env_free+0x12f>$/;"	l
f0103a97	obj/kern/kernel.asm	/^f0103a97:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103a9d	obj/kern/kernel.asm	/^f0103a9d:	89 f0                	mov    %esi,%eax$/;"	l
f0103a9f	obj/kern/kernel.asm	/^f0103a9f:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103aa2	obj/kern/kernel.asm	/^f0103aa2:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103aa5	obj/kern/kernel.asm	/^f0103aa5:	3b 05 88 5e 20 f0    	cmp    0xf0205e88,%eax$/;"	l
f0103aab	obj/kern/kernel.asm	/^f0103aab:	72 20                	jb     f0103acd <env_free+0xae>$/;"	l
f0103aad	obj/kern/kernel.asm	/^f0103aad:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0103ab1	obj/kern/kernel.asm	/^f0103ab1:	c7 44 24 08 84 70 10 	movl   $0xf0107084,0x8(%esp)$/;"	l
f0103ab8	obj/kern/kernel.asm	/^f0103ab8:	f0 $/;"	l
f0103ab9	obj/kern/kernel.asm	/^f0103ab9:	c7 44 24 04 cc 01 00 	movl   $0x1cc,0x4(%esp)$/;"	l
f0103ac0	obj/kern/kernel.asm	/^f0103ac0:	00 $/;"	l
f0103ac1	obj/kern/kernel.asm	/^f0103ac1:	c7 04 24 88 82 10 f0 	movl   $0xf0108288,(%esp)$/;"	l
f0103ac8	obj/kern/kernel.asm	/^f0103ac8:	e8 73 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103acd	obj/kern/kernel.asm	/^f0103acd:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103ad0	obj/kern/kernel.asm	/^f0103ad0:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f0103ad3	obj/kern/kernel.asm	/^f0103ad3:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103ad6	obj/kern/kernel.asm	/^f0103ad6:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103adb	obj/kern/kernel.asm	/^f0103adb:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f0103ae2	obj/kern/kernel.asm	/^f0103ae2:	01 $/;"	l
f0103ae3	obj/kern/kernel.asm	/^f0103ae3:	74 17                	je     f0103afc <env_free+0xdd>$/;"	l
f0103ae5	obj/kern/kernel.asm	/^f0103ae5:	89 d8                	mov    %ebx,%eax$/;"	l
f0103ae7	obj/kern/kernel.asm	/^f0103ae7:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103aea	obj/kern/kernel.asm	/^f0103aea:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f0103aed	obj/kern/kernel.asm	/^f0103aed:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103af1	obj/kern/kernel.asm	/^f0103af1:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103af4	obj/kern/kernel.asm	/^f0103af4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103af7	obj/kern/kernel.asm	/^f0103af7:	e8 a5 d8 ff ff       	call   f01013a1 <page_remove>$/;"	l
f0103afc	obj/kern/kernel.asm	/^f0103afc:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103aff	obj/kern/kernel.asm	/^f0103aff:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f0103b05	obj/kern/kernel.asm	/^f0103b05:	75 d4                	jne    f0103adb <env_free+0xbc>$/;"	l
f0103b07	obj/kern/kernel.asm	/^f0103b07:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103b0a	obj/kern/kernel.asm	/^f0103b0a:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103b0d	obj/kern/kernel.asm	/^f0103b0d:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f0103b14	obj/kern/kernel.asm	/^f0103b14:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0103b17	obj/kern/kernel.asm	/^f0103b17:	3b 05 88 5e 20 f0    	cmp    0xf0205e88,%eax$/;"	l
f0103b1d	obj/kern/kernel.asm	/^f0103b1d:	72 1c                	jb     f0103b3b <env_free+0x11c>$/;"	l
f0103b1f	obj/kern/kernel.asm	/^f0103b1f:	c7 44 24 08 40 77 10 	movl   $0xf0107740,0x8(%esp)$/;"	l
f0103b26	obj/kern/kernel.asm	/^f0103b26:	f0 $/;"	l
f0103b27	obj/kern/kernel.asm	/^f0103b27:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0103b2e	obj/kern/kernel.asm	/^f0103b2e:	00 $/;"	l
f0103b2f	obj/kern/kernel.asm	/^f0103b2f:	c7 04 24 41 7f 10 f0 	movl   $0xf0107f41,(%esp)$/;"	l
f0103b36	obj/kern/kernel.asm	/^f0103b36:	e8 05 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103b3b	obj/kern/kernel.asm	/^f0103b3b:	a1 90 5e 20 f0       	mov    0xf0205e90,%eax$/;"	l
f0103b40	obj/kern/kernel.asm	/^f0103b40:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0103b43	obj/kern/kernel.asm	/^f0103b43:	8d 04 d0             	lea    (%eax,%edx,8),%eax$/;"	l
f0103b46	obj/kern/kernel.asm	/^f0103b46:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103b49	obj/kern/kernel.asm	/^f0103b49:	e8 83 d6 ff ff       	call   f01011d1 <page_decref>$/;"	l
f0103b4e	obj/kern/kernel.asm	/^f0103b4e:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
f0103b52	obj/kern/kernel.asm	/^f0103b52:	81 7d e0 bb 03 00 00 	cmpl   $0x3bb,-0x20(%ebp)$/;"	l
f0103b59	obj/kern/kernel.asm	/^f0103b59:	0f 85 1b ff ff ff    	jne    f0103a7a <env_free+0x5b>$/;"	l
f0103b5f	obj/kern/kernel.asm	/^f0103b5f:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103b62	obj/kern/kernel.asm	/^f0103b62:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103b67	obj/kern/kernel.asm	/^f0103b67:	77 20                	ja     f0103b89 <env_free+0x16a>$/;"	l
f0103b69	obj/kern/kernel.asm	/^f0103b69:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103b6d	obj/kern/kernel.asm	/^f0103b6d:	c7 44 24 08 a8 70 10 	movl   $0xf01070a8,0x8(%esp)$/;"	l
f0103b74	obj/kern/kernel.asm	/^f0103b74:	f0 $/;"	l
f0103b75	obj/kern/kernel.asm	/^f0103b75:	c7 44 24 04 da 01 00 	movl   $0x1da,0x4(%esp)$/;"	l
f0103b7c	obj/kern/kernel.asm	/^f0103b7c:	00 $/;"	l
f0103b7d	obj/kern/kernel.asm	/^f0103b7d:	c7 04 24 88 82 10 f0 	movl   $0xf0108288,(%esp)$/;"	l
f0103b84	obj/kern/kernel.asm	/^f0103b84:	e8 b7 c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103b89	obj/kern/kernel.asm	/^f0103b89:	c7 47 60 00 00 00 00 	movl   $0x0,0x60(%edi)$/;"	l
f0103b90	obj/kern/kernel.asm	/^f0103b90:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103b95	obj/kern/kernel.asm	/^f0103b95:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103b98	obj/kern/kernel.asm	/^f0103b98:	3b 05 88 5e 20 f0    	cmp    0xf0205e88,%eax$/;"	l
f0103b9e	obj/kern/kernel.asm	/^f0103b9e:	72 1c                	jb     f0103bbc <env_free+0x19d>$/;"	l
f0103ba0	obj/kern/kernel.asm	/^f0103ba0:	c7 44 24 08 40 77 10 	movl   $0xf0107740,0x8(%esp)$/;"	l
f0103ba7	obj/kern/kernel.asm	/^f0103ba7:	f0 $/;"	l
f0103ba8	obj/kern/kernel.asm	/^f0103ba8:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0103baf	obj/kern/kernel.asm	/^f0103baf:	00 $/;"	l
f0103bb0	obj/kern/kernel.asm	/^f0103bb0:	c7 04 24 41 7f 10 f0 	movl   $0xf0107f41,(%esp)$/;"	l
f0103bb7	obj/kern/kernel.asm	/^f0103bb7:	e8 84 c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103bbc	obj/kern/kernel.asm	/^f0103bbc:	8b 15 90 5e 20 f0    	mov    0xf0205e90,%edx$/;"	l
f0103bc2	obj/kern/kernel.asm	/^f0103bc2:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0103bc5	obj/kern/kernel.asm	/^f0103bc5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103bc8	obj/kern/kernel.asm	/^f0103bc8:	e8 04 d6 ff ff       	call   f01011d1 <page_decref>$/;"	l
f0103bcd	obj/kern/kernel.asm	/^f0103bcd:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f0103bd4	obj/kern/kernel.asm	/^f0103bd4:	a1 4c 52 20 f0       	mov    0xf020524c,%eax$/;"	l
f0103bd9	obj/kern/kernel.asm	/^f0103bd9:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f0103bdc	obj/kern/kernel.asm	/^f0103bdc:	89 3d 4c 52 20 f0    	mov    %edi,0xf020524c$/;"	l
f0103be2	obj/kern/kernel.asm	/^f0103be2:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0103be5	obj/kern/kernel.asm	/^f0103be5:	5b                   	pop    %ebx$/;"	l
f0103be6	obj/kern/kernel.asm	/^f0103be6:	5e                   	pop    %esi$/;"	l
f0103be7	obj/kern/kernel.asm	/^f0103be7:	5f                   	pop    %edi$/;"	l
f0103be8	obj/kern/kernel.asm	/^f0103be8:	5d                   	pop    %ebp$/;"	l
f0103be9	obj/kern/kernel.asm	/^f0103be9:	c3                   	ret    $/;"	l
f0103bea	obj/kern/kernel.asm	/^f0103bea <env_destroy>:$/;"	l
f0103bea	obj/kern/kernel.asm	/^f0103bea:	55                   	push   %ebp$/;"	l
f0103beb	obj/kern/kernel.asm	/^f0103beb:	89 e5                	mov    %esp,%ebp$/;"	l
f0103bed	obj/kern/kernel.asm	/^f0103bed:	53                   	push   %ebx$/;"	l
f0103bee	obj/kern/kernel.asm	/^f0103bee:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103bf1	obj/kern/kernel.asm	/^f0103bf1:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103bf4	obj/kern/kernel.asm	/^f0103bf4:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f0103bf8	obj/kern/kernel.asm	/^f0103bf8:	75 19                	jne    f0103c13 <env_destroy+0x29>$/;"	l
f0103bfa	obj/kern/kernel.asm	/^f0103bfa:	e8 45 2d 00 00       	call   f0106944 <cpunum>$/;"	l
f0103bff	obj/kern/kernel.asm	/^f0103bff:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c02	obj/kern/kernel.asm	/^f0103c02:	39 98 28 60 20 f0    	cmp    %ebx,-0xfdf9fd8(%eax)$/;"	l
f0103c08	obj/kern/kernel.asm	/^f0103c08:	74 09                	je     f0103c13 <env_destroy+0x29>$/;"	l
f0103c0a	obj/kern/kernel.asm	/^f0103c0a:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f0103c11	obj/kern/kernel.asm	/^f0103c11:	eb 2f                	jmp    f0103c42 <env_destroy+0x58>$/;"	l
f0103c13	obj/kern/kernel.asm	/^f0103c13:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103c16	obj/kern/kernel.asm	/^f0103c16:	e8 04 fe ff ff       	call   f0103a1f <env_free>$/;"	l
f0103c1b	obj/kern/kernel.asm	/^f0103c1b:	e8 24 2d 00 00       	call   f0106944 <cpunum>$/;"	l
f0103c20	obj/kern/kernel.asm	/^f0103c20:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c23	obj/kern/kernel.asm	/^f0103c23:	39 98 28 60 20 f0    	cmp    %ebx,-0xfdf9fd8(%eax)$/;"	l
f0103c29	obj/kern/kernel.asm	/^f0103c29:	75 17                	jne    f0103c42 <env_destroy+0x58>$/;"	l
f0103c2b	obj/kern/kernel.asm	/^f0103c2b:	e8 14 2d 00 00       	call   f0106944 <cpunum>$/;"	l
f0103c30	obj/kern/kernel.asm	/^f0103c30:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c33	obj/kern/kernel.asm	/^f0103c33:	c7 80 28 60 20 f0 00 	movl   $0x0,-0xfdf9fd8(%eax)$/;"	l
f0103c3a	obj/kern/kernel.asm	/^f0103c3a:	00 00 00 $/;"	l
f0103c3d	obj/kern/kernel.asm	/^f0103c3d:	e8 d1 13 00 00       	call   f0105013 <sched_yield>$/;"	l
f0103c42	obj/kern/kernel.asm	/^f0103c42:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103c45	obj/kern/kernel.asm	/^f0103c45:	5b                   	pop    %ebx$/;"	l
f0103c46	obj/kern/kernel.asm	/^f0103c46:	5d                   	pop    %ebp$/;"	l
f0103c47	obj/kern/kernel.asm	/^f0103c47:	c3                   	ret    $/;"	l
f0103c48	obj/kern/kernel.asm	/^f0103c48 <env_pop_tf>:$/;"	l
f0103c48	obj/kern/kernel.asm	/^f0103c48:	55                   	push   %ebp$/;"	l
f0103c49	obj/kern/kernel.asm	/^f0103c49:	89 e5                	mov    %esp,%ebp$/;"	l
f0103c4b	obj/kern/kernel.asm	/^f0103c4b:	53                   	push   %ebx$/;"	l
f0103c4c	obj/kern/kernel.asm	/^f0103c4c:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103c4f	obj/kern/kernel.asm	/^f0103c4f:	e8 f0 2c 00 00       	call   f0106944 <cpunum>$/;"	l
f0103c54	obj/kern/kernel.asm	/^f0103c54:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c57	obj/kern/kernel.asm	/^f0103c57:	8b 98 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%ebx$/;"	l
f0103c5d	obj/kern/kernel.asm	/^f0103c5d:	e8 e2 2c 00 00       	call   f0106944 <cpunum>$/;"	l
f0103c62	obj/kern/kernel.asm	/^f0103c62:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f0103c65	obj/kern/kernel.asm	/^f0103c65:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f0103c68	obj/kern/kernel.asm	/^f0103c68:	61                   	popa   $/;"	l
f0103c69	obj/kern/kernel.asm	/^f0103c69:	07                   	pop    %es$/;"	l
f0103c6a	obj/kern/kernel.asm	/^f0103c6a:	1f                   	pop    %ds$/;"	l
f0103c6b	obj/kern/kernel.asm	/^f0103c6b:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103c6e	obj/kern/kernel.asm	/^f0103c6e:	cf                   	iret   $/;"	l
f0103c6f	obj/kern/kernel.asm	/^f0103c6f:	c7 44 24 08 c9 82 10 	movl   $0xf01082c9,0x8(%esp)$/;"	l
f0103c76	obj/kern/kernel.asm	/^f0103c76:	f0 $/;"	l
f0103c77	obj/kern/kernel.asm	/^f0103c77:	c7 44 24 04 10 02 00 	movl   $0x210,0x4(%esp)$/;"	l
f0103c7e	obj/kern/kernel.asm	/^f0103c7e:	00 $/;"	l
f0103c7f	obj/kern/kernel.asm	/^f0103c7f:	c7 04 24 88 82 10 f0 	movl   $0xf0108288,(%esp)$/;"	l
f0103c86	obj/kern/kernel.asm	/^f0103c86:	e8 b5 c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103c8b	obj/kern/kernel.asm	/^f0103c8b <env_run>:$/;"	l
f0103c8b	obj/kern/kernel.asm	/^f0103c8b:	55                   	push   %ebp$/;"	l
f0103c8c	obj/kern/kernel.asm	/^f0103c8c:	89 e5                	mov    %esp,%ebp$/;"	l
f0103c8e	obj/kern/kernel.asm	/^f0103c8e:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103c91	obj/kern/kernel.asm	/^f0103c91:	e8 ae 2c 00 00       	call   f0106944 <cpunum>$/;"	l
f0103c96	obj/kern/kernel.asm	/^f0103c96:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103c99	obj/kern/kernel.asm	/^f0103c99:	83 b8 28 60 20 f0 00 	cmpl   $0x0,-0xfdf9fd8(%eax)$/;"	l
f0103ca0	obj/kern/kernel.asm	/^f0103ca0:	74 29                	je     f0103ccb <env_run+0x40>$/;"	l
f0103ca2	obj/kern/kernel.asm	/^f0103ca2:	e8 9d 2c 00 00       	call   f0106944 <cpunum>$/;"	l
f0103ca7	obj/kern/kernel.asm	/^f0103ca7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103caa	obj/kern/kernel.asm	/^f0103caa:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f0103cb0	obj/kern/kernel.asm	/^f0103cb0:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0103cb4	obj/kern/kernel.asm	/^f0103cb4:	75 15                	jne    f0103ccb <env_run+0x40>$/;"	l
f0103cb6	obj/kern/kernel.asm	/^f0103cb6:	e8 89 2c 00 00       	call   f0106944 <cpunum>$/;"	l
f0103cbb	obj/kern/kernel.asm	/^f0103cbb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103cbe	obj/kern/kernel.asm	/^f0103cbe:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f0103cc4	obj/kern/kernel.asm	/^f0103cc4:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0103ccb	obj/kern/kernel.asm	/^f0103ccb:	e8 74 2c 00 00       	call   f0106944 <cpunum>$/;"	l
f0103cd0	obj/kern/kernel.asm	/^f0103cd0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103cd3	obj/kern/kernel.asm	/^f0103cd3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0103cd6	obj/kern/kernel.asm	/^f0103cd6:	89 90 28 60 20 f0    	mov    %edx,-0xfdf9fd8(%eax)$/;"	l
f0103cdc	obj/kern/kernel.asm	/^f0103cdc:	e8 63 2c 00 00       	call   f0106944 <cpunum>$/;"	l
f0103ce1	obj/kern/kernel.asm	/^f0103ce1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ce4	obj/kern/kernel.asm	/^f0103ce4:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f0103cea	obj/kern/kernel.asm	/^f0103cea:	83 78 54 02          	cmpl   $0x2,0x54(%eax)$/;"	l
f0103cee	obj/kern/kernel.asm	/^f0103cee:	74 24                	je     f0103d14 <env_run+0x89>$/;"	l
f0103cf0	obj/kern/kernel.asm	/^f0103cf0:	c7 44 24 0c d8 82 10 	movl   $0xf01082d8,0xc(%esp)$/;"	l
f0103cf7	obj/kern/kernel.asm	/^f0103cf7:	f0 $/;"	l
f0103cf8	obj/kern/kernel.asm	/^f0103cf8:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0103cff	obj/kern/kernel.asm	/^f0103cff:	f0 $/;"	l
f0103d00	obj/kern/kernel.asm	/^f0103d00:	c7 44 24 04 34 02 00 	movl   $0x234,0x4(%esp)$/;"	l
f0103d07	obj/kern/kernel.asm	/^f0103d07:	00 $/;"	l
f0103d08	obj/kern/kernel.asm	/^f0103d08:	c7 04 24 88 82 10 f0 	movl   $0xf0108288,(%esp)$/;"	l
f0103d0f	obj/kern/kernel.asm	/^f0103d0f:	e8 2c c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103d14	obj/kern/kernel.asm	/^f0103d14:	e8 2b 2c 00 00       	call   f0106944 <cpunum>$/;"	l
f0103d19	obj/kern/kernel.asm	/^f0103d19:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d1c	obj/kern/kernel.asm	/^f0103d1c:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f0103d22	obj/kern/kernel.asm	/^f0103d22:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f0103d29	obj/kern/kernel.asm	/^f0103d29:	e8 16 2c 00 00       	call   f0106944 <cpunum>$/;"	l
f0103d2e	obj/kern/kernel.asm	/^f0103d2e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d31	obj/kern/kernel.asm	/^f0103d31:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f0103d37	obj/kern/kernel.asm	/^f0103d37:	83 40 58 01          	addl   $0x1,0x58(%eax)$/;"	l
f0103d3b	obj/kern/kernel.asm	/^f0103d3b:	e8 04 2c 00 00       	call   f0106944 <cpunum>$/;"	l
f0103d40	obj/kern/kernel.asm	/^f0103d40:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d43	obj/kern/kernel.asm	/^f0103d43:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f0103d49	obj/kern/kernel.asm	/^f0103d49:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0103d4c	obj/kern/kernel.asm	/^f0103d4c:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103d51	obj/kern/kernel.asm	/^f0103d51:	77 20                	ja     f0103d73 <env_run+0xe8>$/;"	l
f0103d53	obj/kern/kernel.asm	/^f0103d53:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103d57	obj/kern/kernel.asm	/^f0103d57:	c7 44 24 08 a8 70 10 	movl   $0xf01070a8,0x8(%esp)$/;"	l
f0103d5e	obj/kern/kernel.asm	/^f0103d5e:	f0 $/;"	l
f0103d5f	obj/kern/kernel.asm	/^f0103d5f:	c7 44 24 04 38 02 00 	movl   $0x238,0x4(%esp)$/;"	l
f0103d66	obj/kern/kernel.asm	/^f0103d66:	00 $/;"	l
f0103d67	obj/kern/kernel.asm	/^f0103d67:	c7 04 24 88 82 10 f0 	movl   $0xf0108288,(%esp)$/;"	l
f0103d6e	obj/kern/kernel.asm	/^f0103d6e:	e8 cd c2 ff ff       	call   f0100040 <_panic>$/;"	l
f0103d73	obj/kern/kernel.asm	/^f0103d73:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103d78	obj/kern/kernel.asm	/^f0103d78:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103d7b	obj/kern/kernel.asm	/^f0103d7b:	c7 04 24 c0 13 12 f0 	movl   $0xf01213c0,(%esp)$/;"	l
f0103d82	obj/kern/kernel.asm	/^f0103d82:	e8 12 2f 00 00       	call   f0106c99 <spin_unlock>$/;"	l
f0103d87	obj/kern/kernel.asm	/^f0103d87:	f3 90                	pause  $/;"	l
f0103d89	obj/kern/kernel.asm	/^f0103d89:	e8 b6 2b 00 00       	call   f0106944 <cpunum>$/;"	l
f0103d8e	obj/kern/kernel.asm	/^f0103d8e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103d91	obj/kern/kernel.asm	/^f0103d91:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f0103d97	obj/kern/kernel.asm	/^f0103d97:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103d9a	obj/kern/kernel.asm	/^f0103d9a:	e8 a9 fe ff ff       	call   f0103c48 <env_pop_tf>$/;"	l
f0103d9f	obj/kern/kernel.asm	/^f0103d9f:	90                   	nop$/;"	l
f0103da0	obj/kern/kernel.asm	/^f0103da0 <mc146818_read>:$/;"	l
f0103da0	obj/kern/kernel.asm	/^f0103da0:	55                   	push   %ebp$/;"	l
f0103da1	obj/kern/kernel.asm	/^f0103da1:	89 e5                	mov    %esp,%ebp$/;"	l
f0103da3	obj/kern/kernel.asm	/^f0103da3:	0f b6 45 08          	movzbl 0x8(%ebp),%eax$/;"	l
f0103da7	obj/kern/kernel.asm	/^f0103da7:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103dac	obj/kern/kernel.asm	/^f0103dac:	ee                   	out    %al,(%dx)$/;"	l
f0103dad	obj/kern/kernel.asm	/^f0103dad:	b2 71                	mov    $0x71,%dl$/;"	l
f0103daf	obj/kern/kernel.asm	/^f0103daf:	ec                   	in     (%dx),%al$/;"	l
f0103db0	obj/kern/kernel.asm	/^f0103db0:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0103db3	obj/kern/kernel.asm	/^f0103db3:	5d                   	pop    %ebp$/;"	l
f0103db4	obj/kern/kernel.asm	/^f0103db4:	c3                   	ret    $/;"	l
f0103db5	obj/kern/kernel.asm	/^f0103db5 <mc146818_write>:$/;"	l
f0103db5	obj/kern/kernel.asm	/^f0103db5:	55                   	push   %ebp$/;"	l
f0103db6	obj/kern/kernel.asm	/^f0103db6:	89 e5                	mov    %esp,%ebp$/;"	l
f0103db8	obj/kern/kernel.asm	/^f0103db8:	0f b6 45 08          	movzbl 0x8(%ebp),%eax$/;"	l
f0103dbc	obj/kern/kernel.asm	/^f0103dbc:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103dc1	obj/kern/kernel.asm	/^f0103dc1:	ee                   	out    %al,(%dx)$/;"	l
f0103dc2	obj/kern/kernel.asm	/^f0103dc2:	b2 71                	mov    $0x71,%dl$/;"	l
f0103dc4	obj/kern/kernel.asm	/^f0103dc4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103dc7	obj/kern/kernel.asm	/^f0103dc7:	ee                   	out    %al,(%dx)$/;"	l
f0103dc8	obj/kern/kernel.asm	/^f0103dc8:	5d                   	pop    %ebp$/;"	l
f0103dc9	obj/kern/kernel.asm	/^f0103dc9:	c3                   	ret    $/;"	l
f0103dca	obj/kern/kernel.asm	/^f0103dca:	66 90                	xchg   %ax,%ax$/;"	l
f0103dcc	obj/kern/kernel.asm	/^f0103dcc <irq_setmask_8259A>:$/;"	l
f0103dcc	obj/kern/kernel.asm	/^f0103dcc:	55                   	push   %ebp$/;"	l
f0103dcd	obj/kern/kernel.asm	/^f0103dcd:	89 e5                	mov    %esp,%ebp$/;"	l
f0103dcf	obj/kern/kernel.asm	/^f0103dcf:	56                   	push   %esi$/;"	l
f0103dd0	obj/kern/kernel.asm	/^f0103dd0:	53                   	push   %ebx$/;"	l
f0103dd1	obj/kern/kernel.asm	/^f0103dd1:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0103dd4	obj/kern/kernel.asm	/^f0103dd4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103dd7	obj/kern/kernel.asm	/^f0103dd7:	66 a3 a8 13 12 f0    	mov    %ax,0xf01213a8$/;"	l
f0103ddd	obj/kern/kernel.asm	/^f0103ddd:	80 3d 50 52 20 f0 00 	cmpb   $0x0,0xf0205250$/;"	l
f0103de4	obj/kern/kernel.asm	/^f0103de4:	74 4e                	je     f0103e34 <irq_setmask_8259A+0x68>$/;"	l
f0103de6	obj/kern/kernel.asm	/^f0103de6:	89 c6                	mov    %eax,%esi$/;"	l
f0103de8	obj/kern/kernel.asm	/^f0103de8:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103ded	obj/kern/kernel.asm	/^f0103ded:	ee                   	out    %al,(%dx)$/;"	l
f0103dee	obj/kern/kernel.asm	/^f0103dee:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0103df2	obj/kern/kernel.asm	/^f0103df2:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103df4	obj/kern/kernel.asm	/^f0103df4:	ee                   	out    %al,(%dx)$/;"	l
f0103df5	obj/kern/kernel.asm	/^f0103df5:	c7 04 24 f9 82 10 f0 	movl   $0xf01082f9,(%esp)$/;"	l
f0103dfc	obj/kern/kernel.asm	/^f0103dfc:	e8 0d 01 00 00       	call   f0103f0e <cprintf>$/;"	l
f0103e01	obj/kern/kernel.asm	/^f0103e01:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103e06	obj/kern/kernel.asm	/^f0103e06:	0f b7 f6             	movzwl %si,%esi$/;"	l
f0103e09	obj/kern/kernel.asm	/^f0103e09:	f7 d6                	not    %esi$/;"	l
f0103e0b	obj/kern/kernel.asm	/^f0103e0b:	0f a3 de             	bt     %ebx,%esi$/;"	l
f0103e0e	obj/kern/kernel.asm	/^f0103e0e:	73 10                	jae    f0103e20 <irq_setmask_8259A+0x54>$/;"	l
f0103e10	obj/kern/kernel.asm	/^f0103e10:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103e14	obj/kern/kernel.asm	/^f0103e14:	c7 04 24 cf 87 10 f0 	movl   $0xf01087cf,(%esp)$/;"	l
f0103e1b	obj/kern/kernel.asm	/^f0103e1b:	e8 ee 00 00 00       	call   f0103f0e <cprintf>$/;"	l
f0103e20	obj/kern/kernel.asm	/^f0103e20:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103e23	obj/kern/kernel.asm	/^f0103e23:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0103e26	obj/kern/kernel.asm	/^f0103e26:	75 e3                	jne    f0103e0b <irq_setmask_8259A+0x3f>$/;"	l
f0103e28	obj/kern/kernel.asm	/^f0103e28:	c7 04 24 e8 81 10 f0 	movl   $0xf01081e8,(%esp)$/;"	l
f0103e2f	obj/kern/kernel.asm	/^f0103e2f:	e8 da 00 00 00       	call   f0103f0e <cprintf>$/;"	l
f0103e34	obj/kern/kernel.asm	/^f0103e34:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103e37	obj/kern/kernel.asm	/^f0103e37:	5b                   	pop    %ebx$/;"	l
f0103e38	obj/kern/kernel.asm	/^f0103e38:	5e                   	pop    %esi$/;"	l
f0103e39	obj/kern/kernel.asm	/^f0103e39:	5d                   	pop    %ebp$/;"	l
f0103e3a	obj/kern/kernel.asm	/^f0103e3a:	c3                   	ret    $/;"	l
f0103e3b	obj/kern/kernel.asm	/^f0103e3b <pic_init>:$/;"	l
f0103e3b	obj/kern/kernel.asm	/^f0103e3b:	c6 05 50 52 20 f0 01 	movb   $0x1,0xf0205250$/;"	l
f0103e42	obj/kern/kernel.asm	/^f0103e42:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103e47	obj/kern/kernel.asm	/^f0103e47:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0103e4c	obj/kern/kernel.asm	/^f0103e4c:	ee                   	out    %al,(%dx)$/;"	l
f0103e4d	obj/kern/kernel.asm	/^f0103e4d:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103e4f	obj/kern/kernel.asm	/^f0103e4f:	ee                   	out    %al,(%dx)$/;"	l
f0103e50	obj/kern/kernel.asm	/^f0103e50:	b2 20                	mov    $0x20,%dl$/;"	l
f0103e52	obj/kern/kernel.asm	/^f0103e52:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0103e57	obj/kern/kernel.asm	/^f0103e57:	ee                   	out    %al,(%dx)$/;"	l
f0103e58	obj/kern/kernel.asm	/^f0103e58:	b2 21                	mov    $0x21,%dl$/;"	l
f0103e5a	obj/kern/kernel.asm	/^f0103e5a:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0103e5f	obj/kern/kernel.asm	/^f0103e5f:	ee                   	out    %al,(%dx)$/;"	l
f0103e60	obj/kern/kernel.asm	/^f0103e60:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f0103e65	obj/kern/kernel.asm	/^f0103e65:	ee                   	out    %al,(%dx)$/;"	l
f0103e66	obj/kern/kernel.asm	/^f0103e66:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0103e6b	obj/kern/kernel.asm	/^f0103e6b:	ee                   	out    %al,(%dx)$/;"	l
f0103e6c	obj/kern/kernel.asm	/^f0103e6c:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0103e6e	obj/kern/kernel.asm	/^f0103e6e:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0103e73	obj/kern/kernel.asm	/^f0103e73:	ee                   	out    %al,(%dx)$/;"	l
f0103e74	obj/kern/kernel.asm	/^f0103e74:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103e76	obj/kern/kernel.asm	/^f0103e76:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f0103e7b	obj/kern/kernel.asm	/^f0103e7b:	ee                   	out    %al,(%dx)$/;"	l
f0103e7c	obj/kern/kernel.asm	/^f0103e7c:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0103e81	obj/kern/kernel.asm	/^f0103e81:	ee                   	out    %al,(%dx)$/;"	l
f0103e82	obj/kern/kernel.asm	/^f0103e82:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0103e87	obj/kern/kernel.asm	/^f0103e87:	ee                   	out    %al,(%dx)$/;"	l
f0103e88	obj/kern/kernel.asm	/^f0103e88:	b2 20                	mov    $0x20,%dl$/;"	l
f0103e8a	obj/kern/kernel.asm	/^f0103e8a:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103e8f	obj/kern/kernel.asm	/^f0103e8f:	ee                   	out    %al,(%dx)$/;"	l
f0103e90	obj/kern/kernel.asm	/^f0103e90:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0103e95	obj/kern/kernel.asm	/^f0103e95:	ee                   	out    %al,(%dx)$/;"	l
f0103e96	obj/kern/kernel.asm	/^f0103e96:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0103e98	obj/kern/kernel.asm	/^f0103e98:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103e9d	obj/kern/kernel.asm	/^f0103e9d:	ee                   	out    %al,(%dx)$/;"	l
f0103e9e	obj/kern/kernel.asm	/^f0103e9e:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0103ea3	obj/kern/kernel.asm	/^f0103ea3:	ee                   	out    %al,(%dx)$/;"	l
f0103ea4	obj/kern/kernel.asm	/^f0103ea4:	0f b7 05 a8 13 12 f0 	movzwl 0xf01213a8,%eax$/;"	l
f0103eab	obj/kern/kernel.asm	/^f0103eab:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f0103eaf	obj/kern/kernel.asm	/^f0103eaf:	74 12                	je     f0103ec3 <pic_init+0x88>$/;"	l
f0103eb1	obj/kern/kernel.asm	/^f0103eb1:	55                   	push   %ebp$/;"	l
f0103eb2	obj/kern/kernel.asm	/^f0103eb2:	89 e5                	mov    %esp,%ebp$/;"	l
f0103eb4	obj/kern/kernel.asm	/^f0103eb4:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103eb7	obj/kern/kernel.asm	/^f0103eb7:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0103eba	obj/kern/kernel.asm	/^f0103eba:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103ebd	obj/kern/kernel.asm	/^f0103ebd:	e8 0a ff ff ff       	call   f0103dcc <irq_setmask_8259A>$/;"	l
f0103ec2	obj/kern/kernel.asm	/^f0103ec2:	c9                   	leave  $/;"	l
f0103ec3	obj/kern/kernel.asm	/^f0103ec3:	f3 c3                	repz ret $/;"	l
f0103ec5	obj/kern/kernel.asm	/^f0103ec5:	66 90                	xchg   %ax,%ax$/;"	l
f0103ec7	obj/kern/kernel.asm	/^f0103ec7:	90                   	nop$/;"	l
f0103ec8	obj/kern/kernel.asm	/^f0103ec8 <putch>:$/;"	l
f0103ec8	obj/kern/kernel.asm	/^f0103ec8:	55                   	push   %ebp$/;"	l
f0103ec9	obj/kern/kernel.asm	/^f0103ec9:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ecb	obj/kern/kernel.asm	/^f0103ecb:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103ece	obj/kern/kernel.asm	/^f0103ece:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103ed1	obj/kern/kernel.asm	/^f0103ed1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103ed4	obj/kern/kernel.asm	/^f0103ed4:	e8 fe c8 ff ff       	call   f01007d7 <cputchar>$/;"	l
f0103ed9	obj/kern/kernel.asm	/^f0103ed9:	c9                   	leave  $/;"	l
f0103eda	obj/kern/kernel.asm	/^f0103eda:	c3                   	ret    $/;"	l
f0103edb	obj/kern/kernel.asm	/^f0103edb <vcprintf>:$/;"	l
f0103edb	obj/kern/kernel.asm	/^f0103edb:	55                   	push   %ebp$/;"	l
f0103edc	obj/kern/kernel.asm	/^f0103edc:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ede	obj/kern/kernel.asm	/^f0103ede:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0103ee1	obj/kern/kernel.asm	/^f0103ee1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0103ee8	obj/kern/kernel.asm	/^f0103ee8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103eeb	obj/kern/kernel.asm	/^f0103eeb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103eef	obj/kern/kernel.asm	/^f0103eef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103ef2	obj/kern/kernel.asm	/^f0103ef2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103ef6	obj/kern/kernel.asm	/^f0103ef6:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0103ef9	obj/kern/kernel.asm	/^f0103ef9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103efd	obj/kern/kernel.asm	/^f0103efd:	c7 04 24 c8 3e 10 f0 	movl   $0xf0103ec8,(%esp)$/;"	l
f0103f04	obj/kern/kernel.asm	/^f0103f04:	e8 4b 1c 00 00       	call   f0105b54 <vprintfmt>$/;"	l
f0103f09	obj/kern/kernel.asm	/^f0103f09:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0103f0c	obj/kern/kernel.asm	/^f0103f0c:	c9                   	leave  $/;"	l
f0103f0d	obj/kern/kernel.asm	/^f0103f0d:	c3                   	ret    $/;"	l
f0103f0e	obj/kern/kernel.asm	/^f0103f0e <cprintf>:$/;"	l
f0103f0e	obj/kern/kernel.asm	/^f0103f0e:	55                   	push   %ebp$/;"	l
f0103f0f	obj/kern/kernel.asm	/^f0103f0f:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f11	obj/kern/kernel.asm	/^f0103f11:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103f14	obj/kern/kernel.asm	/^f0103f14:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0103f17	obj/kern/kernel.asm	/^f0103f17:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103f1b	obj/kern/kernel.asm	/^f0103f1b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103f1e	obj/kern/kernel.asm	/^f0103f1e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103f21	obj/kern/kernel.asm	/^f0103f21:	e8 b5 ff ff ff       	call   f0103edb <vcprintf>$/;"	l
f0103f26	obj/kern/kernel.asm	/^f0103f26:	c9                   	leave  $/;"	l
f0103f27	obj/kern/kernel.asm	/^f0103f27:	c3                   	ret    $/;"	l
f0103f28	obj/kern/kernel.asm	/^f0103f28:	66 90                	xchg   %ax,%ax$/;"	l
f0103f2a	obj/kern/kernel.asm	/^f0103f2a:	66 90                	xchg   %ax,%ax$/;"	l
f0103f2c	obj/kern/kernel.asm	/^f0103f2c:	66 90                	xchg   %ax,%ax$/;"	l
f0103f2e	obj/kern/kernel.asm	/^f0103f2e:	66 90                	xchg   %ax,%ax$/;"	l
f0103f30	obj/kern/kernel.asm	/^f0103f30 <trap_init_percpu>:$/;"	l
f0103f30	obj/kern/kernel.asm	/^f0103f30:	55                   	push   %ebp$/;"	l
f0103f31	obj/kern/kernel.asm	/^f0103f31:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f33	obj/kern/kernel.asm	/^f0103f33:	57                   	push   %edi$/;"	l
f0103f34	obj/kern/kernel.asm	/^f0103f34:	56                   	push   %esi$/;"	l
f0103f35	obj/kern/kernel.asm	/^f0103f35:	53                   	push   %ebx$/;"	l
f0103f36	obj/kern/kernel.asm	/^f0103f36:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0103f39	obj/kern/kernel.asm	/^f0103f39:	e8 06 2a 00 00       	call   f0106944 <cpunum>$/;"	l
f0103f3e	obj/kern/kernel.asm	/^f0103f3e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f41	obj/kern/kernel.asm	/^f0103f41:	0f b6 80 20 60 20 f0 	movzbl -0xfdf9fe0(%eax),%eax$/;"	l
f0103f48	obj/kern/kernel.asm	/^f0103f48:	89 c3                	mov    %eax,%ebx$/;"	l
f0103f4a	obj/kern/kernel.asm	/^f0103f4a:	e8 f5 29 00 00       	call   f0106944 <cpunum>$/;"	l
f0103f4f	obj/kern/kernel.asm	/^f0103f4f:	88 5d e7             	mov    %bl,-0x19(%ebp)$/;"	l
f0103f52	obj/kern/kernel.asm	/^f0103f52:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f0103f55	obj/kern/kernel.asm	/^f0103f55:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f58	obj/kern/kernel.asm	/^f0103f58:	89 da                	mov    %ebx,%edx$/;"	l
f0103f5a	obj/kern/kernel.asm	/^f0103f5a:	f7 da                	neg    %edx$/;"	l
f0103f5c	obj/kern/kernel.asm	/^f0103f5c:	c1 e2 10             	shl    $0x10,%edx$/;"	l
f0103f5f	obj/kern/kernel.asm	/^f0103f5f:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f0103f65	obj/kern/kernel.asm	/^f0103f65:	89 90 30 60 20 f0    	mov    %edx,-0xfdf9fd0(%eax)$/;"	l
f0103f6b	obj/kern/kernel.asm	/^f0103f6b:	e8 d4 29 00 00       	call   f0106944 <cpunum>$/;"	l
f0103f70	obj/kern/kernel.asm	/^f0103f70:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f73	obj/kern/kernel.asm	/^f0103f73:	66 c7 80 34 60 20 f0 	movw   $0x10,-0xfdf9fcc(%eax)$/;"	l
f0103f7a	obj/kern/kernel.asm	/^f0103f7a:	10 00 $/;"	l
f0103f7c	obj/kern/kernel.asm	/^f0103f7c:	83 c3 05             	add    $0x5,%ebx$/;"	l
f0103f7f	obj/kern/kernel.asm	/^f0103f7f:	e8 c0 29 00 00       	call   f0106944 <cpunum>$/;"	l
f0103f84	obj/kern/kernel.asm	/^f0103f84:	89 c7                	mov    %eax,%edi$/;"	l
f0103f86	obj/kern/kernel.asm	/^f0103f86:	e8 b9 29 00 00       	call   f0106944 <cpunum>$/;"	l
f0103f8b	obj/kern/kernel.asm	/^f0103f8b:	89 c6                	mov    %eax,%esi$/;"	l
f0103f8d	obj/kern/kernel.asm	/^f0103f8d:	e8 b2 29 00 00       	call   f0106944 <cpunum>$/;"	l
f0103f92	obj/kern/kernel.asm	/^f0103f92:	66 c7 04 dd 40 13 12 	movw   $0x68,-0xfedecc0(,%ebx,8)$/;"	l
f0103f99	obj/kern/kernel.asm	/^f0103f99:	f0 68 00 $/;"	l
f0103f9c	obj/kern/kernel.asm	/^f0103f9c:	6b ff 74             	imul   $0x74,%edi,%edi$/;"	l
f0103f9f	obj/kern/kernel.asm	/^f0103f9f:	81 c7 2c 60 20 f0    	add    $0xf020602c,%edi$/;"	l
f0103fa5	obj/kern/kernel.asm	/^f0103fa5:	66 89 3c dd 42 13 12 	mov    %di,-0xfedecbe(,%ebx,8)$/;"	l
f0103fac	obj/kern/kernel.asm	/^f0103fac:	f0 $/;"	l
f0103fad	obj/kern/kernel.asm	/^f0103fad:	6b d6 74             	imul   $0x74,%esi,%edx$/;"	l
f0103fb0	obj/kern/kernel.asm	/^f0103fb0:	81 c2 2c 60 20 f0    	add    $0xf020602c,%edx$/;"	l
f0103fb6	obj/kern/kernel.asm	/^f0103fb6:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0103fb9	obj/kern/kernel.asm	/^f0103fb9:	88 14 dd 44 13 12 f0 	mov    %dl,-0xfedecbc(,%ebx,8)$/;"	l
f0103fc0	obj/kern/kernel.asm	/^f0103fc0:	c6 04 dd 46 13 12 f0 	movb   $0x40,-0xfedecba(,%ebx,8)$/;"	l
f0103fc7	obj/kern/kernel.asm	/^f0103fc7:	40 $/;"	l
f0103fc8	obj/kern/kernel.asm	/^f0103fc8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103fcb	obj/kern/kernel.asm	/^f0103fcb:	05 2c 60 20 f0       	add    $0xf020602c,%eax$/;"	l
f0103fd0	obj/kern/kernel.asm	/^f0103fd0:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0103fd3	obj/kern/kernel.asm	/^f0103fd3:	88 04 dd 47 13 12 f0 	mov    %al,-0xfedecb9(,%ebx,8)$/;"	l
f0103fda	obj/kern/kernel.asm	/^f0103fda:	c6 04 dd 45 13 12 f0 	movb   $0x89,-0xfedecbb(,%ebx,8)$/;"	l
f0103fe1	obj/kern/kernel.asm	/^f0103fe1:	89 $/;"	l
f0103fe2	obj/kern/kernel.asm	/^f0103fe2:	0f b6 75 e7          	movzbl -0x19(%ebp),%esi$/;"	l
f0103fe6	obj/kern/kernel.asm	/^f0103fe6:	8d 34 f5 28 00 00 00 	lea    0x28(,%esi,8),%esi$/;"	l
f0103fed	obj/kern/kernel.asm	/^f0103fed:	0f 00 de             	ltr    %si$/;"	l
f0103ff0	obj/kern/kernel.asm	/^f0103ff0:	b8 ac 13 12 f0       	mov    $0xf01213ac,%eax$/;"	l
f0103ff5	obj/kern/kernel.asm	/^f0103ff5:	0f 01 18             	lidtl  (%eax)$/;"	l
f0103ff8	obj/kern/kernel.asm	/^f0103ff8:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0103ffb	obj/kern/kernel.asm	/^f0103ffb:	5b                   	pop    %ebx$/;"	l
f0103ffc	obj/kern/kernel.asm	/^f0103ffc:	5e                   	pop    %esi$/;"	l
f0103ffd	obj/kern/kernel.asm	/^f0103ffd:	5f                   	pop    %edi$/;"	l
f0103ffe	obj/kern/kernel.asm	/^f0103ffe:	5d                   	pop    %ebp$/;"	l
f0103fff	obj/kern/kernel.asm	/^f0103fff:	c3                   	ret    $/;"	l
f0104000	obj/kern/kernel.asm	/^f0104000 <trap_init>:$/;"	l
f0104000	obj/kern/kernel.asm	/^f0104000:	b8 bc 4c 10 f0       	mov    $0xf0104cbc,%eax$/;"	l
f0104005	obj/kern/kernel.asm	/^f0104005:	66 a3 60 52 20 f0    	mov    %ax,0xf0205260$/;"	l
f010400b	obj/kern/kernel.asm	/^f010400b:	66 c7 05 62 52 20 f0 	movw   $0x8,0xf0205262$/;"	l
f0104012	obj/kern/kernel.asm	/^f0104012:	08 00 $/;"	l
f0104014	obj/kern/kernel.asm	/^f0104014:	c6 05 64 52 20 f0 00 	movb   $0x0,0xf0205264$/;"	l
f010401b	obj/kern/kernel.asm	/^f010401b:	c6 05 65 52 20 f0 8e 	movb   $0x8e,0xf0205265$/;"	l
f0104022	obj/kern/kernel.asm	/^f0104022:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104025	obj/kern/kernel.asm	/^f0104025:	66 a3 66 52 20 f0    	mov    %ax,0xf0205266$/;"	l
f010402b	obj/kern/kernel.asm	/^f010402b:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
f0104030	obj/kern/kernel.asm	/^f0104030:	a1 60 52 20 f0       	mov    0xf0205260,%eax$/;"	l
f0104035	obj/kern/kernel.asm	/^f0104035:	8b 15 64 52 20 f0    	mov    0xf0205264,%edx$/;"	l
f010403b	obj/kern/kernel.asm	/^f010403b:	89 04 cd 60 52 20 f0 	mov    %eax,-0xfdfada0(,%ecx,8)$/;"	l
f0104042	obj/kern/kernel.asm	/^f0104042:	89 14 cd 64 52 20 f0 	mov    %edx,-0xfdfad9c(,%ecx,8)$/;"	l
f0104049	obj/kern/kernel.asm	/^f0104049:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010404c	obj/kern/kernel.asm	/^f010404c:	81 f9 ff 00 00 00    	cmp    $0xff,%ecx$/;"	l
f0104052	obj/kern/kernel.asm	/^f0104052:	75 dc                	jne    f0104030 <trap_init+0x30>$/;"	l
f0104054	obj/kern/kernel.asm	/^f0104054:	55                   	push   %ebp$/;"	l
f0104055	obj/kern/kernel.asm	/^f0104055:	89 e5                	mov    %esp,%ebp$/;"	l
f0104057	obj/kern/kernel.asm	/^f0104057:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010405a	obj/kern/kernel.asm	/^f010405a:	b8 18 4c 10 f0       	mov    $0xf0104c18,%eax$/;"	l
f010405f	obj/kern/kernel.asm	/^f010405f:	66 a3 60 52 20 f0    	mov    %ax,0xf0205260$/;"	l
f0104065	obj/kern/kernel.asm	/^f0104065:	66 c7 05 62 52 20 f0 	movw   $0x8,0xf0205262$/;"	l
f010406c	obj/kern/kernel.asm	/^f010406c:	08 00 $/;"	l
f010406e	obj/kern/kernel.asm	/^f010406e:	c6 05 64 52 20 f0 00 	movb   $0x0,0xf0205264$/;"	l
f0104075	obj/kern/kernel.asm	/^f0104075:	c6 05 65 52 20 f0 8f 	movb   $0x8f,0xf0205265$/;"	l
f010407c	obj/kern/kernel.asm	/^f010407c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010407f	obj/kern/kernel.asm	/^f010407f:	66 a3 66 52 20 f0    	mov    %ax,0xf0205266$/;"	l
f0104085	obj/kern/kernel.asm	/^f0104085:	b8 22 4c 10 f0       	mov    $0xf0104c22,%eax$/;"	l
f010408a	obj/kern/kernel.asm	/^f010408a:	66 a3 68 52 20 f0    	mov    %ax,0xf0205268$/;"	l
f0104090	obj/kern/kernel.asm	/^f0104090:	66 c7 05 6a 52 20 f0 	movw   $0x8,0xf020526a$/;"	l
f0104097	obj/kern/kernel.asm	/^f0104097:	08 00 $/;"	l
f0104099	obj/kern/kernel.asm	/^f0104099:	c6 05 6c 52 20 f0 00 	movb   $0x0,0xf020526c$/;"	l
f01040a0	obj/kern/kernel.asm	/^f01040a0:	c6 05 6d 52 20 f0 8e 	movb   $0x8e,0xf020526d$/;"	l
f01040a7	obj/kern/kernel.asm	/^f01040a7:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01040aa	obj/kern/kernel.asm	/^f01040aa:	66 a3 6e 52 20 f0    	mov    %ax,0xf020526e$/;"	l
f01040b0	obj/kern/kernel.asm	/^f01040b0:	b8 2c 4c 10 f0       	mov    $0xf0104c2c,%eax$/;"	l
f01040b5	obj/kern/kernel.asm	/^f01040b5:	66 a3 70 52 20 f0    	mov    %ax,0xf0205270$/;"	l
f01040bb	obj/kern/kernel.asm	/^f01040bb:	66 c7 05 72 52 20 f0 	movw   $0x8,0xf0205272$/;"	l
f01040c2	obj/kern/kernel.asm	/^f01040c2:	08 00 $/;"	l
f01040c4	obj/kern/kernel.asm	/^f01040c4:	c6 05 74 52 20 f0 00 	movb   $0x0,0xf0205274$/;"	l
f01040cb	obj/kern/kernel.asm	/^f01040cb:	c6 05 75 52 20 f0 8e 	movb   $0x8e,0xf0205275$/;"	l
f01040d2	obj/kern/kernel.asm	/^f01040d2:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01040d5	obj/kern/kernel.asm	/^f01040d5:	66 a3 76 52 20 f0    	mov    %ax,0xf0205276$/;"	l
f01040db	obj/kern/kernel.asm	/^f01040db:	b8 36 4c 10 f0       	mov    $0xf0104c36,%eax$/;"	l
f01040e0	obj/kern/kernel.asm	/^f01040e0:	66 a3 78 52 20 f0    	mov    %ax,0xf0205278$/;"	l
f01040e6	obj/kern/kernel.asm	/^f01040e6:	66 c7 05 7a 52 20 f0 	movw   $0x8,0xf020527a$/;"	l
f01040ed	obj/kern/kernel.asm	/^f01040ed:	08 00 $/;"	l
f01040ef	obj/kern/kernel.asm	/^f01040ef:	c6 05 7c 52 20 f0 00 	movb   $0x0,0xf020527c$/;"	l
f01040f6	obj/kern/kernel.asm	/^f01040f6:	c6 05 7d 52 20 f0 ef 	movb   $0xef,0xf020527d$/;"	l
f01040fd	obj/kern/kernel.asm	/^f01040fd:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104100	obj/kern/kernel.asm	/^f0104100:	66 a3 7e 52 20 f0    	mov    %ax,0xf020527e$/;"	l
f0104106	obj/kern/kernel.asm	/^f0104106:	b8 40 4c 10 f0       	mov    $0xf0104c40,%eax$/;"	l
f010410b	obj/kern/kernel.asm	/^f010410b:	66 a3 80 52 20 f0    	mov    %ax,0xf0205280$/;"	l
f0104111	obj/kern/kernel.asm	/^f0104111:	66 c7 05 82 52 20 f0 	movw   $0x8,0xf0205282$/;"	l
f0104118	obj/kern/kernel.asm	/^f0104118:	08 00 $/;"	l
f010411a	obj/kern/kernel.asm	/^f010411a:	c6 05 84 52 20 f0 00 	movb   $0x0,0xf0205284$/;"	l
f0104121	obj/kern/kernel.asm	/^f0104121:	c6 05 85 52 20 f0 8f 	movb   $0x8f,0xf0205285$/;"	l
f0104128	obj/kern/kernel.asm	/^f0104128:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010412b	obj/kern/kernel.asm	/^f010412b:	66 a3 86 52 20 f0    	mov    %ax,0xf0205286$/;"	l
f0104131	obj/kern/kernel.asm	/^f0104131:	b8 4a 4c 10 f0       	mov    $0xf0104c4a,%eax$/;"	l
f0104136	obj/kern/kernel.asm	/^f0104136:	66 a3 88 52 20 f0    	mov    %ax,0xf0205288$/;"	l
f010413c	obj/kern/kernel.asm	/^f010413c:	66 c7 05 8a 52 20 f0 	movw   $0x8,0xf020528a$/;"	l
f0104143	obj/kern/kernel.asm	/^f0104143:	08 00 $/;"	l
f0104145	obj/kern/kernel.asm	/^f0104145:	c6 05 8c 52 20 f0 00 	movb   $0x0,0xf020528c$/;"	l
f010414c	obj/kern/kernel.asm	/^f010414c:	c6 05 8d 52 20 f0 8f 	movb   $0x8f,0xf020528d$/;"	l
f0104153	obj/kern/kernel.asm	/^f0104153:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104156	obj/kern/kernel.asm	/^f0104156:	66 a3 8e 52 20 f0    	mov    %ax,0xf020528e$/;"	l
f010415c	obj/kern/kernel.asm	/^f010415c:	b8 54 4c 10 f0       	mov    $0xf0104c54,%eax$/;"	l
f0104161	obj/kern/kernel.asm	/^f0104161:	66 a3 90 52 20 f0    	mov    %ax,0xf0205290$/;"	l
f0104167	obj/kern/kernel.asm	/^f0104167:	66 c7 05 92 52 20 f0 	movw   $0x8,0xf0205292$/;"	l
f010416e	obj/kern/kernel.asm	/^f010416e:	08 00 $/;"	l
f0104170	obj/kern/kernel.asm	/^f0104170:	c6 05 94 52 20 f0 00 	movb   $0x0,0xf0205294$/;"	l
f0104177	obj/kern/kernel.asm	/^f0104177:	c6 05 95 52 20 f0 8f 	movb   $0x8f,0xf0205295$/;"	l
f010417e	obj/kern/kernel.asm	/^f010417e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104181	obj/kern/kernel.asm	/^f0104181:	66 a3 96 52 20 f0    	mov    %ax,0xf0205296$/;"	l
f0104187	obj/kern/kernel.asm	/^f0104187:	b8 5e 4c 10 f0       	mov    $0xf0104c5e,%eax$/;"	l
f010418c	obj/kern/kernel.asm	/^f010418c:	66 a3 98 52 20 f0    	mov    %ax,0xf0205298$/;"	l
f0104192	obj/kern/kernel.asm	/^f0104192:	66 c7 05 9a 52 20 f0 	movw   $0x8,0xf020529a$/;"	l
f0104199	obj/kern/kernel.asm	/^f0104199:	08 00 $/;"	l
f010419b	obj/kern/kernel.asm	/^f010419b:	c6 05 9c 52 20 f0 00 	movb   $0x0,0xf020529c$/;"	l
f01041a2	obj/kern/kernel.asm	/^f01041a2:	c6 05 9d 52 20 f0 8f 	movb   $0x8f,0xf020529d$/;"	l
f01041a9	obj/kern/kernel.asm	/^f01041a9:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01041ac	obj/kern/kernel.asm	/^f01041ac:	66 a3 9e 52 20 f0    	mov    %ax,0xf020529e$/;"	l
f01041b2	obj/kern/kernel.asm	/^f01041b2:	b8 68 4c 10 f0       	mov    $0xf0104c68,%eax$/;"	l
f01041b7	obj/kern/kernel.asm	/^f01041b7:	66 a3 a0 52 20 f0    	mov    %ax,0xf02052a0$/;"	l
f01041bd	obj/kern/kernel.asm	/^f01041bd:	66 c7 05 a2 52 20 f0 	movw   $0x8,0xf02052a2$/;"	l
f01041c4	obj/kern/kernel.asm	/^f01041c4:	08 00 $/;"	l
f01041c6	obj/kern/kernel.asm	/^f01041c6:	c6 05 a4 52 20 f0 00 	movb   $0x0,0xf02052a4$/;"	l
f01041cd	obj/kern/kernel.asm	/^f01041cd:	c6 05 a5 52 20 f0 8f 	movb   $0x8f,0xf02052a5$/;"	l
f01041d4	obj/kern/kernel.asm	/^f01041d4:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01041d7	obj/kern/kernel.asm	/^f01041d7:	66 a3 a6 52 20 f0    	mov    %ax,0xf02052a6$/;"	l
f01041dd	obj/kern/kernel.asm	/^f01041dd:	b8 70 4c 10 f0       	mov    $0xf0104c70,%eax$/;"	l
f01041e2	obj/kern/kernel.asm	/^f01041e2:	66 a3 b0 52 20 f0    	mov    %ax,0xf02052b0$/;"	l
f01041e8	obj/kern/kernel.asm	/^f01041e8:	66 c7 05 b2 52 20 f0 	movw   $0x8,0xf02052b2$/;"	l
f01041ef	obj/kern/kernel.asm	/^f01041ef:	08 00 $/;"	l
f01041f1	obj/kern/kernel.asm	/^f01041f1:	c6 05 b4 52 20 f0 00 	movb   $0x0,0xf02052b4$/;"	l
f01041f8	obj/kern/kernel.asm	/^f01041f8:	c6 05 b5 52 20 f0 8f 	movb   $0x8f,0xf02052b5$/;"	l
f01041ff	obj/kern/kernel.asm	/^f01041ff:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104202	obj/kern/kernel.asm	/^f0104202:	66 a3 b6 52 20 f0    	mov    %ax,0xf02052b6$/;"	l
f0104208	obj/kern/kernel.asm	/^f0104208:	b8 78 4c 10 f0       	mov    $0xf0104c78,%eax$/;"	l
f010420d	obj/kern/kernel.asm	/^f010420d:	66 a3 b8 52 20 f0    	mov    %ax,0xf02052b8$/;"	l
f0104213	obj/kern/kernel.asm	/^f0104213:	66 c7 05 ba 52 20 f0 	movw   $0x8,0xf02052ba$/;"	l
f010421a	obj/kern/kernel.asm	/^f010421a:	08 00 $/;"	l
f010421c	obj/kern/kernel.asm	/^f010421c:	c6 05 bc 52 20 f0 00 	movb   $0x0,0xf02052bc$/;"	l
f0104223	obj/kern/kernel.asm	/^f0104223:	c6 05 bd 52 20 f0 8f 	movb   $0x8f,0xf02052bd$/;"	l
f010422a	obj/kern/kernel.asm	/^f010422a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010422d	obj/kern/kernel.asm	/^f010422d:	66 a3 be 52 20 f0    	mov    %ax,0xf02052be$/;"	l
f0104233	obj/kern/kernel.asm	/^f0104233:	b8 80 4c 10 f0       	mov    $0xf0104c80,%eax$/;"	l
f0104238	obj/kern/kernel.asm	/^f0104238:	66 a3 c0 52 20 f0    	mov    %ax,0xf02052c0$/;"	l
f010423e	obj/kern/kernel.asm	/^f010423e:	66 c7 05 c2 52 20 f0 	movw   $0x8,0xf02052c2$/;"	l
f0104245	obj/kern/kernel.asm	/^f0104245:	08 00 $/;"	l
f0104247	obj/kern/kernel.asm	/^f0104247:	c6 05 c4 52 20 f0 00 	movb   $0x0,0xf02052c4$/;"	l
f010424e	obj/kern/kernel.asm	/^f010424e:	c6 05 c5 52 20 f0 8f 	movb   $0x8f,0xf02052c5$/;"	l
f0104255	obj/kern/kernel.asm	/^f0104255:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104258	obj/kern/kernel.asm	/^f0104258:	66 a3 c6 52 20 f0    	mov    %ax,0xf02052c6$/;"	l
f010425e	obj/kern/kernel.asm	/^f010425e:	b8 88 4c 10 f0       	mov    $0xf0104c88,%eax$/;"	l
f0104263	obj/kern/kernel.asm	/^f0104263:	66 a3 c8 52 20 f0    	mov    %ax,0xf02052c8$/;"	l
f0104269	obj/kern/kernel.asm	/^f0104269:	66 c7 05 ca 52 20 f0 	movw   $0x8,0xf02052ca$/;"	l
f0104270	obj/kern/kernel.asm	/^f0104270:	08 00 $/;"	l
f0104272	obj/kern/kernel.asm	/^f0104272:	c6 05 cc 52 20 f0 00 	movb   $0x0,0xf02052cc$/;"	l
f0104279	obj/kern/kernel.asm	/^f0104279:	c6 05 cd 52 20 f0 8f 	movb   $0x8f,0xf02052cd$/;"	l
f0104280	obj/kern/kernel.asm	/^f0104280:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104283	obj/kern/kernel.asm	/^f0104283:	66 a3 ce 52 20 f0    	mov    %ax,0xf02052ce$/;"	l
f0104289	obj/kern/kernel.asm	/^f0104289:	b8 90 4c 10 f0       	mov    $0xf0104c90,%eax$/;"	l
f010428e	obj/kern/kernel.asm	/^f010428e:	66 a3 d0 52 20 f0    	mov    %ax,0xf02052d0$/;"	l
f0104294	obj/kern/kernel.asm	/^f0104294:	66 c7 05 d2 52 20 f0 	movw   $0x8,0xf02052d2$/;"	l
f010429b	obj/kern/kernel.asm	/^f010429b:	08 00 $/;"	l
f010429d	obj/kern/kernel.asm	/^f010429d:	c6 05 d4 52 20 f0 00 	movb   $0x0,0xf02052d4$/;"	l
f01042a4	obj/kern/kernel.asm	/^f01042a4:	c6 05 d5 52 20 f0 8f 	movb   $0x8f,0xf02052d5$/;"	l
f01042ab	obj/kern/kernel.asm	/^f01042ab:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01042ae	obj/kern/kernel.asm	/^f01042ae:	66 a3 d6 52 20 f0    	mov    %ax,0xf02052d6$/;"	l
f01042b4	obj/kern/kernel.asm	/^f01042b4:	b8 98 4c 10 f0       	mov    $0xf0104c98,%eax$/;"	l
f01042b9	obj/kern/kernel.asm	/^f01042b9:	66 a3 e0 52 20 f0    	mov    %ax,0xf02052e0$/;"	l
f01042bf	obj/kern/kernel.asm	/^f01042bf:	66 c7 05 e2 52 20 f0 	movw   $0x8,0xf02052e2$/;"	l
f01042c6	obj/kern/kernel.asm	/^f01042c6:	08 00 $/;"	l
f01042c8	obj/kern/kernel.asm	/^f01042c8:	c6 05 e4 52 20 f0 00 	movb   $0x0,0xf02052e4$/;"	l
f01042cf	obj/kern/kernel.asm	/^f01042cf:	c6 05 e5 52 20 f0 8f 	movb   $0x8f,0xf02052e5$/;"	l
f01042d6	obj/kern/kernel.asm	/^f01042d6:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01042d9	obj/kern/kernel.asm	/^f01042d9:	66 a3 e6 52 20 f0    	mov    %ax,0xf02052e6$/;"	l
f01042df	obj/kern/kernel.asm	/^f01042df:	b8 a2 4c 10 f0       	mov    $0xf0104ca2,%eax$/;"	l
f01042e4	obj/kern/kernel.asm	/^f01042e4:	66 a3 e8 52 20 f0    	mov    %ax,0xf02052e8$/;"	l
f01042ea	obj/kern/kernel.asm	/^f01042ea:	66 c7 05 ea 52 20 f0 	movw   $0x8,0xf02052ea$/;"	l
f01042f1	obj/kern/kernel.asm	/^f01042f1:	08 00 $/;"	l
f01042f3	obj/kern/kernel.asm	/^f01042f3:	c6 05 ec 52 20 f0 00 	movb   $0x0,0xf02052ec$/;"	l
f01042fa	obj/kern/kernel.asm	/^f01042fa:	c6 05 ed 52 20 f0 8f 	movb   $0x8f,0xf02052ed$/;"	l
f0104301	obj/kern/kernel.asm	/^f0104301:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104304	obj/kern/kernel.asm	/^f0104304:	66 a3 ee 52 20 f0    	mov    %ax,0xf02052ee$/;"	l
f010430a	obj/kern/kernel.asm	/^f010430a:	b8 aa 4c 10 f0       	mov    $0xf0104caa,%eax$/;"	l
f010430f	obj/kern/kernel.asm	/^f010430f:	66 a3 f0 52 20 f0    	mov    %ax,0xf02052f0$/;"	l
f0104315	obj/kern/kernel.asm	/^f0104315:	66 c7 05 f2 52 20 f0 	movw   $0x8,0xf02052f2$/;"	l
f010431c	obj/kern/kernel.asm	/^f010431c:	08 00 $/;"	l
f010431e	obj/kern/kernel.asm	/^f010431e:	c6 05 f4 52 20 f0 00 	movb   $0x0,0xf02052f4$/;"	l
f0104325	obj/kern/kernel.asm	/^f0104325:	c6 05 f5 52 20 f0 8f 	movb   $0x8f,0xf02052f5$/;"	l
f010432c	obj/kern/kernel.asm	/^f010432c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010432f	obj/kern/kernel.asm	/^f010432f:	66 a3 f6 52 20 f0    	mov    %ax,0xf02052f6$/;"	l
f0104335	obj/kern/kernel.asm	/^f0104335:	b8 b0 4c 10 f0       	mov    $0xf0104cb0,%eax$/;"	l
f010433a	obj/kern/kernel.asm	/^f010433a:	66 a3 f8 52 20 f0    	mov    %ax,0xf02052f8$/;"	l
f0104340	obj/kern/kernel.asm	/^f0104340:	66 c7 05 fa 52 20 f0 	movw   $0x8,0xf02052fa$/;"	l
f0104347	obj/kern/kernel.asm	/^f0104347:	08 00 $/;"	l
f0104349	obj/kern/kernel.asm	/^f0104349:	c6 05 fc 52 20 f0 00 	movb   $0x0,0xf02052fc$/;"	l
f0104350	obj/kern/kernel.asm	/^f0104350:	c6 05 fd 52 20 f0 8f 	movb   $0x8f,0xf02052fd$/;"	l
f0104357	obj/kern/kernel.asm	/^f0104357:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010435a	obj/kern/kernel.asm	/^f010435a:	66 a3 fe 52 20 f0    	mov    %ax,0xf02052fe$/;"	l
f0104360	obj/kern/kernel.asm	/^f0104360:	b8 b6 4c 10 f0       	mov    $0xf0104cb6,%eax$/;"	l
f0104365	obj/kern/kernel.asm	/^f0104365:	66 a3 e0 53 20 f0    	mov    %ax,0xf02053e0$/;"	l
f010436b	obj/kern/kernel.asm	/^f010436b:	66 c7 05 e2 53 20 f0 	movw   $0x8,0xf02053e2$/;"	l
f0104372	obj/kern/kernel.asm	/^f0104372:	08 00 $/;"	l
f0104374	obj/kern/kernel.asm	/^f0104374:	c6 05 e4 53 20 f0 00 	movb   $0x0,0xf02053e4$/;"	l
f010437b	obj/kern/kernel.asm	/^f010437b:	c6 05 e5 53 20 f0 ee 	movb   $0xee,0xf02053e5$/;"	l
f0104382	obj/kern/kernel.asm	/^f0104382:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104385	obj/kern/kernel.asm	/^f0104385:	66 a3 e6 53 20 f0    	mov    %ax,0xf02053e6$/;"	l
f010438b	obj/kern/kernel.asm	/^f010438b:	b8 c4 4c 10 f0       	mov    $0xf0104cc4,%eax$/;"	l
f0104390	obj/kern/kernel.asm	/^f0104390:	66 a3 60 53 20 f0    	mov    %ax,0xf0205360$/;"	l
f0104396	obj/kern/kernel.asm	/^f0104396:	66 c7 05 62 53 20 f0 	movw   $0x8,0xf0205362$/;"	l
f010439d	obj/kern/kernel.asm	/^f010439d:	08 00 $/;"	l
f010439f	obj/kern/kernel.asm	/^f010439f:	c6 05 64 53 20 f0 00 	movb   $0x0,0xf0205364$/;"	l
f01043a6	obj/kern/kernel.asm	/^f01043a6:	c6 05 65 53 20 f0 8e 	movb   $0x8e,0xf0205365$/;"	l
f01043ad	obj/kern/kernel.asm	/^f01043ad:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01043b0	obj/kern/kernel.asm	/^f01043b0:	66 a3 66 53 20 f0    	mov    %ax,0xf0205366$/;"	l
f01043b6	obj/kern/kernel.asm	/^f01043b6:	b8 ca 4c 10 f0       	mov    $0xf0104cca,%eax$/;"	l
f01043bb	obj/kern/kernel.asm	/^f01043bb:	66 a3 68 53 20 f0    	mov    %ax,0xf0205368$/;"	l
f01043c1	obj/kern/kernel.asm	/^f01043c1:	66 c7 05 6a 53 20 f0 	movw   $0x8,0xf020536a$/;"	l
f01043c8	obj/kern/kernel.asm	/^f01043c8:	08 00 $/;"	l
f01043ca	obj/kern/kernel.asm	/^f01043ca:	c6 05 6c 53 20 f0 00 	movb   $0x0,0xf020536c$/;"	l
f01043d1	obj/kern/kernel.asm	/^f01043d1:	c6 05 6d 53 20 f0 8e 	movb   $0x8e,0xf020536d$/;"	l
f01043d8	obj/kern/kernel.asm	/^f01043d8:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01043db	obj/kern/kernel.asm	/^f01043db:	66 a3 6e 53 20 f0    	mov    %ax,0xf020536e$/;"	l
f01043e1	obj/kern/kernel.asm	/^f01043e1:	b8 d0 4c 10 f0       	mov    $0xf0104cd0,%eax$/;"	l
f01043e6	obj/kern/kernel.asm	/^f01043e6:	66 a3 70 53 20 f0    	mov    %ax,0xf0205370$/;"	l
f01043ec	obj/kern/kernel.asm	/^f01043ec:	66 c7 05 72 53 20 f0 	movw   $0x8,0xf0205372$/;"	l
f01043f3	obj/kern/kernel.asm	/^f01043f3:	08 00 $/;"	l
f01043f5	obj/kern/kernel.asm	/^f01043f5:	c6 05 74 53 20 f0 00 	movb   $0x0,0xf0205374$/;"	l
f01043fc	obj/kern/kernel.asm	/^f01043fc:	c6 05 75 53 20 f0 8e 	movb   $0x8e,0xf0205375$/;"	l
f0104403	obj/kern/kernel.asm	/^f0104403:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104406	obj/kern/kernel.asm	/^f0104406:	66 a3 76 53 20 f0    	mov    %ax,0xf0205376$/;"	l
f010440c	obj/kern/kernel.asm	/^f010440c:	b8 d6 4c 10 f0       	mov    $0xf0104cd6,%eax$/;"	l
f0104411	obj/kern/kernel.asm	/^f0104411:	66 a3 78 53 20 f0    	mov    %ax,0xf0205378$/;"	l
f0104417	obj/kern/kernel.asm	/^f0104417:	66 c7 05 7a 53 20 f0 	movw   $0x8,0xf020537a$/;"	l
f010441e	obj/kern/kernel.asm	/^f010441e:	08 00 $/;"	l
f0104420	obj/kern/kernel.asm	/^f0104420:	c6 05 7c 53 20 f0 00 	movb   $0x0,0xf020537c$/;"	l
f0104427	obj/kern/kernel.asm	/^f0104427:	c6 05 7d 53 20 f0 8e 	movb   $0x8e,0xf020537d$/;"	l
f010442e	obj/kern/kernel.asm	/^f010442e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104431	obj/kern/kernel.asm	/^f0104431:	66 a3 7e 53 20 f0    	mov    %ax,0xf020537e$/;"	l
f0104437	obj/kern/kernel.asm	/^f0104437:	b8 dc 4c 10 f0       	mov    $0xf0104cdc,%eax$/;"	l
f010443c	obj/kern/kernel.asm	/^f010443c:	66 a3 80 53 20 f0    	mov    %ax,0xf0205380$/;"	l
f0104442	obj/kern/kernel.asm	/^f0104442:	66 c7 05 82 53 20 f0 	movw   $0x8,0xf0205382$/;"	l
f0104449	obj/kern/kernel.asm	/^f0104449:	08 00 $/;"	l
f010444b	obj/kern/kernel.asm	/^f010444b:	c6 05 84 53 20 f0 00 	movb   $0x0,0xf0205384$/;"	l
f0104452	obj/kern/kernel.asm	/^f0104452:	c6 05 85 53 20 f0 8e 	movb   $0x8e,0xf0205385$/;"	l
f0104459	obj/kern/kernel.asm	/^f0104459:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010445c	obj/kern/kernel.asm	/^f010445c:	66 a3 86 53 20 f0    	mov    %ax,0xf0205386$/;"	l
f0104462	obj/kern/kernel.asm	/^f0104462:	b8 e2 4c 10 f0       	mov    $0xf0104ce2,%eax$/;"	l
f0104467	obj/kern/kernel.asm	/^f0104467:	66 a3 88 53 20 f0    	mov    %ax,0xf0205388$/;"	l
f010446d	obj/kern/kernel.asm	/^f010446d:	66 c7 05 8a 53 20 f0 	movw   $0x8,0xf020538a$/;"	l
f0104474	obj/kern/kernel.asm	/^f0104474:	08 00 $/;"	l
f0104476	obj/kern/kernel.asm	/^f0104476:	c6 05 8c 53 20 f0 00 	movb   $0x0,0xf020538c$/;"	l
f010447d	obj/kern/kernel.asm	/^f010447d:	c6 05 8d 53 20 f0 8e 	movb   $0x8e,0xf020538d$/;"	l
f0104484	obj/kern/kernel.asm	/^f0104484:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104487	obj/kern/kernel.asm	/^f0104487:	66 a3 8e 53 20 f0    	mov    %ax,0xf020538e$/;"	l
f010448d	obj/kern/kernel.asm	/^f010448d:	b8 e8 4c 10 f0       	mov    $0xf0104ce8,%eax$/;"	l
f0104492	obj/kern/kernel.asm	/^f0104492:	66 a3 90 53 20 f0    	mov    %ax,0xf0205390$/;"	l
f0104498	obj/kern/kernel.asm	/^f0104498:	66 c7 05 92 53 20 f0 	movw   $0x8,0xf0205392$/;"	l
f010449f	obj/kern/kernel.asm	/^f010449f:	08 00 $/;"	l
f01044a1	obj/kern/kernel.asm	/^f01044a1:	c6 05 94 53 20 f0 00 	movb   $0x0,0xf0205394$/;"	l
f01044a8	obj/kern/kernel.asm	/^f01044a8:	c6 05 95 53 20 f0 8e 	movb   $0x8e,0xf0205395$/;"	l
f01044af	obj/kern/kernel.asm	/^f01044af:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01044b2	obj/kern/kernel.asm	/^f01044b2:	66 a3 96 53 20 f0    	mov    %ax,0xf0205396$/;"	l
f01044b8	obj/kern/kernel.asm	/^f01044b8:	b8 ee 4c 10 f0       	mov    $0xf0104cee,%eax$/;"	l
f01044bd	obj/kern/kernel.asm	/^f01044bd:	66 a3 98 53 20 f0    	mov    %ax,0xf0205398$/;"	l
f01044c3	obj/kern/kernel.asm	/^f01044c3:	66 c7 05 9a 53 20 f0 	movw   $0x8,0xf020539a$/;"	l
f01044ca	obj/kern/kernel.asm	/^f01044ca:	08 00 $/;"	l
f01044cc	obj/kern/kernel.asm	/^f01044cc:	c6 05 9c 53 20 f0 00 	movb   $0x0,0xf020539c$/;"	l
f01044d3	obj/kern/kernel.asm	/^f01044d3:	c6 05 9d 53 20 f0 8e 	movb   $0x8e,0xf020539d$/;"	l
f01044da	obj/kern/kernel.asm	/^f01044da:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01044dd	obj/kern/kernel.asm	/^f01044dd:	66 a3 9e 53 20 f0    	mov    %ax,0xf020539e$/;"	l
f01044e3	obj/kern/kernel.asm	/^f01044e3:	b8 f4 4c 10 f0       	mov    $0xf0104cf4,%eax$/;"	l
f01044e8	obj/kern/kernel.asm	/^f01044e8:	66 a3 a0 53 20 f0    	mov    %ax,0xf02053a0$/;"	l
f01044ee	obj/kern/kernel.asm	/^f01044ee:	66 c7 05 a2 53 20 f0 	movw   $0x8,0xf02053a2$/;"	l
f01044f5	obj/kern/kernel.asm	/^f01044f5:	08 00 $/;"	l
f01044f7	obj/kern/kernel.asm	/^f01044f7:	c6 05 a4 53 20 f0 00 	movb   $0x0,0xf02053a4$/;"	l
f01044fe	obj/kern/kernel.asm	/^f01044fe:	c6 05 a5 53 20 f0 8e 	movb   $0x8e,0xf02053a5$/;"	l
f0104505	obj/kern/kernel.asm	/^f0104505:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104508	obj/kern/kernel.asm	/^f0104508:	66 a3 a6 53 20 f0    	mov    %ax,0xf02053a6$/;"	l
f010450e	obj/kern/kernel.asm	/^f010450e:	b8 fa 4c 10 f0       	mov    $0xf0104cfa,%eax$/;"	l
f0104513	obj/kern/kernel.asm	/^f0104513:	66 a3 a8 53 20 f0    	mov    %ax,0xf02053a8$/;"	l
f0104519	obj/kern/kernel.asm	/^f0104519:	66 c7 05 aa 53 20 f0 	movw   $0x8,0xf02053aa$/;"	l
f0104520	obj/kern/kernel.asm	/^f0104520:	08 00 $/;"	l
f0104522	obj/kern/kernel.asm	/^f0104522:	c6 05 ac 53 20 f0 00 	movb   $0x0,0xf02053ac$/;"	l
f0104529	obj/kern/kernel.asm	/^f0104529:	c6 05 ad 53 20 f0 8e 	movb   $0x8e,0xf02053ad$/;"	l
f0104530	obj/kern/kernel.asm	/^f0104530:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104533	obj/kern/kernel.asm	/^f0104533:	66 a3 ae 53 20 f0    	mov    %ax,0xf02053ae$/;"	l
f0104539	obj/kern/kernel.asm	/^f0104539:	b8 00 4d 10 f0       	mov    $0xf0104d00,%eax$/;"	l
f010453e	obj/kern/kernel.asm	/^f010453e:	66 a3 b0 53 20 f0    	mov    %ax,0xf02053b0$/;"	l
f0104544	obj/kern/kernel.asm	/^f0104544:	66 c7 05 b2 53 20 f0 	movw   $0x8,0xf02053b2$/;"	l
f010454b	obj/kern/kernel.asm	/^f010454b:	08 00 $/;"	l
f010454d	obj/kern/kernel.asm	/^f010454d:	c6 05 b4 53 20 f0 00 	movb   $0x0,0xf02053b4$/;"	l
f0104554	obj/kern/kernel.asm	/^f0104554:	c6 05 b5 53 20 f0 8e 	movb   $0x8e,0xf02053b5$/;"	l
f010455b	obj/kern/kernel.asm	/^f010455b:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010455e	obj/kern/kernel.asm	/^f010455e:	66 a3 b6 53 20 f0    	mov    %ax,0xf02053b6$/;"	l
f0104564	obj/kern/kernel.asm	/^f0104564:	b8 06 4d 10 f0       	mov    $0xf0104d06,%eax$/;"	l
f0104569	obj/kern/kernel.asm	/^f0104569:	66 a3 b8 53 20 f0    	mov    %ax,0xf02053b8$/;"	l
f010456f	obj/kern/kernel.asm	/^f010456f:	66 c7 05 ba 53 20 f0 	movw   $0x8,0xf02053ba$/;"	l
f0104576	obj/kern/kernel.asm	/^f0104576:	08 00 $/;"	l
f0104578	obj/kern/kernel.asm	/^f0104578:	c6 05 bc 53 20 f0 00 	movb   $0x0,0xf02053bc$/;"	l
f010457f	obj/kern/kernel.asm	/^f010457f:	c6 05 bd 53 20 f0 8e 	movb   $0x8e,0xf02053bd$/;"	l
f0104586	obj/kern/kernel.asm	/^f0104586:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104589	obj/kern/kernel.asm	/^f0104589:	66 a3 be 53 20 f0    	mov    %ax,0xf02053be$/;"	l
f010458f	obj/kern/kernel.asm	/^f010458f:	b8 0c 4d 10 f0       	mov    $0xf0104d0c,%eax$/;"	l
f0104594	obj/kern/kernel.asm	/^f0104594:	66 a3 c0 53 20 f0    	mov    %ax,0xf02053c0$/;"	l
f010459a	obj/kern/kernel.asm	/^f010459a:	66 c7 05 c2 53 20 f0 	movw   $0x8,0xf02053c2$/;"	l
f01045a1	obj/kern/kernel.asm	/^f01045a1:	08 00 $/;"	l
f01045a3	obj/kern/kernel.asm	/^f01045a3:	c6 05 c4 53 20 f0 00 	movb   $0x0,0xf02053c4$/;"	l
f01045aa	obj/kern/kernel.asm	/^f01045aa:	c6 05 c5 53 20 f0 8e 	movb   $0x8e,0xf02053c5$/;"	l
f01045b1	obj/kern/kernel.asm	/^f01045b1:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01045b4	obj/kern/kernel.asm	/^f01045b4:	66 a3 c6 53 20 f0    	mov    %ax,0xf02053c6$/;"	l
f01045ba	obj/kern/kernel.asm	/^f01045ba:	b8 12 4d 10 f0       	mov    $0xf0104d12,%eax$/;"	l
f01045bf	obj/kern/kernel.asm	/^f01045bf:	66 a3 c8 53 20 f0    	mov    %ax,0xf02053c8$/;"	l
f01045c5	obj/kern/kernel.asm	/^f01045c5:	66 c7 05 ca 53 20 f0 	movw   $0x8,0xf02053ca$/;"	l
f01045cc	obj/kern/kernel.asm	/^f01045cc:	08 00 $/;"	l
f01045ce	obj/kern/kernel.asm	/^f01045ce:	c6 05 cc 53 20 f0 00 	movb   $0x0,0xf02053cc$/;"	l
f01045d5	obj/kern/kernel.asm	/^f01045d5:	c6 05 cd 53 20 f0 8e 	movb   $0x8e,0xf02053cd$/;"	l
f01045dc	obj/kern/kernel.asm	/^f01045dc:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01045df	obj/kern/kernel.asm	/^f01045df:	66 a3 ce 53 20 f0    	mov    %ax,0xf02053ce$/;"	l
f01045e5	obj/kern/kernel.asm	/^f01045e5:	b8 18 4d 10 f0       	mov    $0xf0104d18,%eax$/;"	l
f01045ea	obj/kern/kernel.asm	/^f01045ea:	66 a3 d0 53 20 f0    	mov    %ax,0xf02053d0$/;"	l
f01045f0	obj/kern/kernel.asm	/^f01045f0:	66 c7 05 d2 53 20 f0 	movw   $0x8,0xf02053d2$/;"	l
f01045f7	obj/kern/kernel.asm	/^f01045f7:	08 00 $/;"	l
f01045f9	obj/kern/kernel.asm	/^f01045f9:	c6 05 d4 53 20 f0 00 	movb   $0x0,0xf02053d4$/;"	l
f0104600	obj/kern/kernel.asm	/^f0104600:	c6 05 d5 53 20 f0 8e 	movb   $0x8e,0xf02053d5$/;"	l
f0104607	obj/kern/kernel.asm	/^f0104607:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010460a	obj/kern/kernel.asm	/^f010460a:	66 a3 d6 53 20 f0    	mov    %ax,0xf02053d6$/;"	l
f0104610	obj/kern/kernel.asm	/^f0104610:	b8 1e 4d 10 f0       	mov    $0xf0104d1e,%eax$/;"	l
f0104615	obj/kern/kernel.asm	/^f0104615:	66 a3 d8 53 20 f0    	mov    %ax,0xf02053d8$/;"	l
f010461b	obj/kern/kernel.asm	/^f010461b:	66 c7 05 da 53 20 f0 	movw   $0x8,0xf02053da$/;"	l
f0104622	obj/kern/kernel.asm	/^f0104622:	08 00 $/;"	l
f0104624	obj/kern/kernel.asm	/^f0104624:	c6 05 dc 53 20 f0 00 	movb   $0x0,0xf02053dc$/;"	l
f010462b	obj/kern/kernel.asm	/^f010462b:	c6 05 dd 53 20 f0 8e 	movb   $0x8e,0xf02053dd$/;"	l
f0104632	obj/kern/kernel.asm	/^f0104632:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104635	obj/kern/kernel.asm	/^f0104635:	66 a3 de 53 20 f0    	mov    %ax,0xf02053de$/;"	l
f010463b	obj/kern/kernel.asm	/^f010463b:	e8 f0 f8 ff ff       	call   f0103f30 <trap_init_percpu>$/;"	l
f0104640	obj/kern/kernel.asm	/^f0104640:	c9                   	leave  $/;"	l
f0104641	obj/kern/kernel.asm	/^f0104641:	c3                   	ret    $/;"	l
f0104642	obj/kern/kernel.asm	/^f0104642 <print_regs>:$/;"	l
f0104642	obj/kern/kernel.asm	/^f0104642:	55                   	push   %ebp$/;"	l
f0104643	obj/kern/kernel.asm	/^f0104643:	89 e5                	mov    %esp,%ebp$/;"	l
f0104645	obj/kern/kernel.asm	/^f0104645:	53                   	push   %ebx$/;"	l
f0104646	obj/kern/kernel.asm	/^f0104646:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104649	obj/kern/kernel.asm	/^f0104649:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010464c	obj/kern/kernel.asm	/^f010464c:	8b 03                	mov    (%ebx),%eax$/;"	l
f010464e	obj/kern/kernel.asm	/^f010464e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104652	obj/kern/kernel.asm	/^f0104652:	c7 04 24 0d 83 10 f0 	movl   $0xf010830d,(%esp)$/;"	l
f0104659	obj/kern/kernel.asm	/^f0104659:	e8 b0 f8 ff ff       	call   f0103f0e <cprintf>$/;"	l
f010465e	obj/kern/kernel.asm	/^f010465e:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0104661	obj/kern/kernel.asm	/^f0104661:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104665	obj/kern/kernel.asm	/^f0104665:	c7 04 24 1c 83 10 f0 	movl   $0xf010831c,(%esp)$/;"	l
f010466c	obj/kern/kernel.asm	/^f010466c:	e8 9d f8 ff ff       	call   f0103f0e <cprintf>$/;"	l
f0104671	obj/kern/kernel.asm	/^f0104671:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0104674	obj/kern/kernel.asm	/^f0104674:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104678	obj/kern/kernel.asm	/^f0104678:	c7 04 24 2b 83 10 f0 	movl   $0xf010832b,(%esp)$/;"	l
f010467f	obj/kern/kernel.asm	/^f010467f:	e8 8a f8 ff ff       	call   f0103f0e <cprintf>$/;"	l
f0104684	obj/kern/kernel.asm	/^f0104684:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0104687	obj/kern/kernel.asm	/^f0104687:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010468b	obj/kern/kernel.asm	/^f010468b:	c7 04 24 3a 83 10 f0 	movl   $0xf010833a,(%esp)$/;"	l
f0104692	obj/kern/kernel.asm	/^f0104692:	e8 77 f8 ff ff       	call   f0103f0e <cprintf>$/;"	l
f0104697	obj/kern/kernel.asm	/^f0104697:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f010469a	obj/kern/kernel.asm	/^f010469a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010469e	obj/kern/kernel.asm	/^f010469e:	c7 04 24 49 83 10 f0 	movl   $0xf0108349,(%esp)$/;"	l
f01046a5	obj/kern/kernel.asm	/^f01046a5:	e8 64 f8 ff ff       	call   f0103f0e <cprintf>$/;"	l
f01046aa	obj/kern/kernel.asm	/^f01046aa:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f01046ad	obj/kern/kernel.asm	/^f01046ad:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046b1	obj/kern/kernel.asm	/^f01046b1:	c7 04 24 58 83 10 f0 	movl   $0xf0108358,(%esp)$/;"	l
f01046b8	obj/kern/kernel.asm	/^f01046b8:	e8 51 f8 ff ff       	call   f0103f0e <cprintf>$/;"	l
f01046bd	obj/kern/kernel.asm	/^f01046bd:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f01046c0	obj/kern/kernel.asm	/^f01046c0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046c4	obj/kern/kernel.asm	/^f01046c4:	c7 04 24 67 83 10 f0 	movl   $0xf0108367,(%esp)$/;"	l
f01046cb	obj/kern/kernel.asm	/^f01046cb:	e8 3e f8 ff ff       	call   f0103f0e <cprintf>$/;"	l
f01046d0	obj/kern/kernel.asm	/^f01046d0:	8b 43 1c             	mov    0x1c(%ebx),%eax$/;"	l
f01046d3	obj/kern/kernel.asm	/^f01046d3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046d7	obj/kern/kernel.asm	/^f01046d7:	c7 04 24 76 83 10 f0 	movl   $0xf0108376,(%esp)$/;"	l
f01046de	obj/kern/kernel.asm	/^f01046de:	e8 2b f8 ff ff       	call   f0103f0e <cprintf>$/;"	l
f01046e3	obj/kern/kernel.asm	/^f01046e3:	83 c4 14             	add    $0x14,%esp$/;"	l
f01046e6	obj/kern/kernel.asm	/^f01046e6:	5b                   	pop    %ebx$/;"	l
f01046e7	obj/kern/kernel.asm	/^f01046e7:	5d                   	pop    %ebp$/;"	l
f01046e8	obj/kern/kernel.asm	/^f01046e8:	c3                   	ret    $/;"	l
f01046e9	obj/kern/kernel.asm	/^f01046e9 <print_trapframe>:$/;"	l
f01046e9	obj/kern/kernel.asm	/^f01046e9:	55                   	push   %ebp$/;"	l
f01046ea	obj/kern/kernel.asm	/^f01046ea:	89 e5                	mov    %esp,%ebp$/;"	l
f01046ec	obj/kern/kernel.asm	/^f01046ec:	56                   	push   %esi$/;"	l
f01046ed	obj/kern/kernel.asm	/^f01046ed:	53                   	push   %ebx$/;"	l
f01046ee	obj/kern/kernel.asm	/^f01046ee:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01046f1	obj/kern/kernel.asm	/^f01046f1:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01046f4	obj/kern/kernel.asm	/^f01046f4:	e8 4b 22 00 00       	call   f0106944 <cpunum>$/;"	l
f01046f9	obj/kern/kernel.asm	/^f01046f9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01046fd	obj/kern/kernel.asm	/^f01046fd:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104701	obj/kern/kernel.asm	/^f0104701:	c7 04 24 da 83 10 f0 	movl   $0xf01083da,(%esp)$/;"	l
f0104708	obj/kern/kernel.asm	/^f0104708:	e8 01 f8 ff ff       	call   f0103f0e <cprintf>$/;"	l
f010470d	obj/kern/kernel.asm	/^f010470d:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104710	obj/kern/kernel.asm	/^f0104710:	e8 2d ff ff ff       	call   f0104642 <print_regs>$/;"	l
f0104715	obj/kern/kernel.asm	/^f0104715:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f0104719	obj/kern/kernel.asm	/^f0104719:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010471d	obj/kern/kernel.asm	/^f010471d:	c7 04 24 f8 83 10 f0 	movl   $0xf01083f8,(%esp)$/;"	l
f0104724	obj/kern/kernel.asm	/^f0104724:	e8 e5 f7 ff ff       	call   f0103f0e <cprintf>$/;"	l
f0104729	obj/kern/kernel.asm	/^f0104729:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f010472d	obj/kern/kernel.asm	/^f010472d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104731	obj/kern/kernel.asm	/^f0104731:	c7 04 24 0b 84 10 f0 	movl   $0xf010840b,(%esp)$/;"	l
f0104738	obj/kern/kernel.asm	/^f0104738:	e8 d1 f7 ff ff       	call   f0103f0e <cprintf>$/;"	l
f010473d	obj/kern/kernel.asm	/^f010473d:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f0104740	obj/kern/kernel.asm	/^f0104740:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f0104743	obj/kern/kernel.asm	/^f0104743:	77 09                	ja     f010474e <print_trapframe+0x65>$/;"	l
f0104745	obj/kern/kernel.asm	/^f0104745:	8b 14 85 e0 86 10 f0 	mov    -0xfef7920(,%eax,4),%edx$/;"	l
f010474c	obj/kern/kernel.asm	/^f010474c:	eb 1f                	jmp    f010476d <print_trapframe+0x84>$/;"	l
f010474e	obj/kern/kernel.asm	/^f010474e:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0104751	obj/kern/kernel.asm	/^f0104751:	74 15                	je     f0104768 <print_trapframe+0x7f>$/;"	l
f0104753	obj/kern/kernel.asm	/^f0104753:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f0104756	obj/kern/kernel.asm	/^f0104756:	83 fa 0f             	cmp    $0xf,%edx$/;"	l
f0104759	obj/kern/kernel.asm	/^f0104759:	ba 91 83 10 f0       	mov    $0xf0108391,%edx$/;"	l
f010475e	obj/kern/kernel.asm	/^f010475e:	b9 a4 83 10 f0       	mov    $0xf01083a4,%ecx$/;"	l
f0104763	obj/kern/kernel.asm	/^f0104763:	0f 47 d1             	cmova  %ecx,%edx$/;"	l
f0104766	obj/kern/kernel.asm	/^f0104766:	eb 05                	jmp    f010476d <print_trapframe+0x84>$/;"	l
f0104768	obj/kern/kernel.asm	/^f0104768:	ba 85 83 10 f0       	mov    $0xf0108385,%edx$/;"	l
f010476d	obj/kern/kernel.asm	/^f010476d:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0104771	obj/kern/kernel.asm	/^f0104771:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104775	obj/kern/kernel.asm	/^f0104775:	c7 04 24 1e 84 10 f0 	movl   $0xf010841e,(%esp)$/;"	l
f010477c	obj/kern/kernel.asm	/^f010477c:	e8 8d f7 ff ff       	call   f0103f0e <cprintf>$/;"	l
f0104781	obj/kern/kernel.asm	/^f0104781:	3b 1d 60 5a 20 f0    	cmp    0xf0205a60,%ebx$/;"	l
f0104787	obj/kern/kernel.asm	/^f0104787:	75 19                	jne    f01047a2 <print_trapframe+0xb9>$/;"	l
f0104789	obj/kern/kernel.asm	/^f0104789:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f010478d	obj/kern/kernel.asm	/^f010478d:	75 13                	jne    f01047a2 <print_trapframe+0xb9>$/;"	l
f010478f	obj/kern/kernel.asm	/^f010478f:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f0104792	obj/kern/kernel.asm	/^f0104792:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104796	obj/kern/kernel.asm	/^f0104796:	c7 04 24 30 84 10 f0 	movl   $0xf0108430,(%esp)$/;"	l
f010479d	obj/kern/kernel.asm	/^f010479d:	e8 6c f7 ff ff       	call   f0103f0e <cprintf>$/;"	l
f01047a2	obj/kern/kernel.asm	/^f01047a2:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f01047a5	obj/kern/kernel.asm	/^f01047a5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01047a9	obj/kern/kernel.asm	/^f01047a9:	c7 04 24 3f 84 10 f0 	movl   $0xf010843f,(%esp)$/;"	l
f01047b0	obj/kern/kernel.asm	/^f01047b0:	e8 59 f7 ff ff       	call   f0103f0e <cprintf>$/;"	l
f01047b5	obj/kern/kernel.asm	/^f01047b5:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f01047b9	obj/kern/kernel.asm	/^f01047b9:	75 51                	jne    f010480c <print_trapframe+0x123>$/;"	l
f01047bb	obj/kern/kernel.asm	/^f01047bb:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f01047be	obj/kern/kernel.asm	/^f01047be:	89 c2                	mov    %eax,%edx$/;"	l
f01047c0	obj/kern/kernel.asm	/^f01047c0:	83 e2 01             	and    $0x1,%edx$/;"	l
f01047c3	obj/kern/kernel.asm	/^f01047c3:	ba b3 83 10 f0       	mov    $0xf01083b3,%edx$/;"	l
f01047c8	obj/kern/kernel.asm	/^f01047c8:	b9 be 83 10 f0       	mov    $0xf01083be,%ecx$/;"	l
f01047cd	obj/kern/kernel.asm	/^f01047cd:	0f 45 ca             	cmovne %edx,%ecx$/;"	l
f01047d0	obj/kern/kernel.asm	/^f01047d0:	89 c2                	mov    %eax,%edx$/;"	l
f01047d2	obj/kern/kernel.asm	/^f01047d2:	83 e2 02             	and    $0x2,%edx$/;"	l
f01047d5	obj/kern/kernel.asm	/^f01047d5:	ba ca 83 10 f0       	mov    $0xf01083ca,%edx$/;"	l
f01047da	obj/kern/kernel.asm	/^f01047da:	be d0 83 10 f0       	mov    $0xf01083d0,%esi$/;"	l
f01047df	obj/kern/kernel.asm	/^f01047df:	0f 44 d6             	cmove  %esi,%edx$/;"	l
f01047e2	obj/kern/kernel.asm	/^f01047e2:	83 e0 04             	and    $0x4,%eax$/;"	l
f01047e5	obj/kern/kernel.asm	/^f01047e5:	b8 d5 83 10 f0       	mov    $0xf01083d5,%eax$/;"	l
f01047ea	obj/kern/kernel.asm	/^f01047ea:	be f1 84 10 f0       	mov    $0xf01084f1,%esi$/;"	l
f01047ef	obj/kern/kernel.asm	/^f01047ef:	0f 44 c6             	cmove  %esi,%eax$/;"	l
f01047f2	obj/kern/kernel.asm	/^f01047f2:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f01047f6	obj/kern/kernel.asm	/^f01047f6:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01047fa	obj/kern/kernel.asm	/^f01047fa:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01047fe	obj/kern/kernel.asm	/^f01047fe:	c7 04 24 4d 84 10 f0 	movl   $0xf010844d,(%esp)$/;"	l
f0104805	obj/kern/kernel.asm	/^f0104805:	e8 04 f7 ff ff       	call   f0103f0e <cprintf>$/;"	l
f010480a	obj/kern/kernel.asm	/^f010480a:	eb 0c                	jmp    f0104818 <print_trapframe+0x12f>$/;"	l
f010480c	obj/kern/kernel.asm	/^f010480c:	c7 04 24 e8 81 10 f0 	movl   $0xf01081e8,(%esp)$/;"	l
f0104813	obj/kern/kernel.asm	/^f0104813:	e8 f6 f6 ff ff       	call   f0103f0e <cprintf>$/;"	l
f0104818	obj/kern/kernel.asm	/^f0104818:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f010481b	obj/kern/kernel.asm	/^f010481b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010481f	obj/kern/kernel.asm	/^f010481f:	c7 04 24 5c 84 10 f0 	movl   $0xf010845c,(%esp)$/;"	l
f0104826	obj/kern/kernel.asm	/^f0104826:	e8 e3 f6 ff ff       	call   f0103f0e <cprintf>$/;"	l
f010482b	obj/kern/kernel.asm	/^f010482b:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f010482f	obj/kern/kernel.asm	/^f010482f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104833	obj/kern/kernel.asm	/^f0104833:	c7 04 24 6b 84 10 f0 	movl   $0xf010846b,(%esp)$/;"	l
f010483a	obj/kern/kernel.asm	/^f010483a:	e8 cf f6 ff ff       	call   f0103f0e <cprintf>$/;"	l
f010483f	obj/kern/kernel.asm	/^f010483f:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f0104842	obj/kern/kernel.asm	/^f0104842:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104846	obj/kern/kernel.asm	/^f0104846:	c7 04 24 7e 84 10 f0 	movl   $0xf010847e,(%esp)$/;"	l
f010484d	obj/kern/kernel.asm	/^f010484d:	e8 bc f6 ff ff       	call   f0103f0e <cprintf>$/;"	l
f0104852	obj/kern/kernel.asm	/^f0104852:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0104856	obj/kern/kernel.asm	/^f0104856:	74 27                	je     f010487f <print_trapframe+0x196>$/;"	l
f0104858	obj/kern/kernel.asm	/^f0104858:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f010485b	obj/kern/kernel.asm	/^f010485b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010485f	obj/kern/kernel.asm	/^f010485f:	c7 04 24 8d 84 10 f0 	movl   $0xf010848d,(%esp)$/;"	l
f0104866	obj/kern/kernel.asm	/^f0104866:	e8 a3 f6 ff ff       	call   f0103f0e <cprintf>$/;"	l
f010486b	obj/kern/kernel.asm	/^f010486b:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f010486f	obj/kern/kernel.asm	/^f010486f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104873	obj/kern/kernel.asm	/^f0104873:	c7 04 24 9c 84 10 f0 	movl   $0xf010849c,(%esp)$/;"	l
f010487a	obj/kern/kernel.asm	/^f010487a:	e8 8f f6 ff ff       	call   f0103f0e <cprintf>$/;"	l
f010487f	obj/kern/kernel.asm	/^f010487f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104882	obj/kern/kernel.asm	/^f0104882:	5b                   	pop    %ebx$/;"	l
f0104883	obj/kern/kernel.asm	/^f0104883:	5e                   	pop    %esi$/;"	l
f0104884	obj/kern/kernel.asm	/^f0104884:	5d                   	pop    %ebp$/;"	l
f0104885	obj/kern/kernel.asm	/^f0104885:	c3                   	ret    $/;"	l
f0104886	obj/kern/kernel.asm	/^f0104886 <page_fault_handler>:$/;"	l
f0104886	obj/kern/kernel.asm	/^f0104886:	55                   	push   %ebp$/;"	l
f0104887	obj/kern/kernel.asm	/^f0104887:	89 e5                	mov    %esp,%ebp$/;"	l
f0104889	obj/kern/kernel.asm	/^f0104889:	57                   	push   %edi$/;"	l
f010488a	obj/kern/kernel.asm	/^f010488a:	56                   	push   %esi$/;"	l
f010488b	obj/kern/kernel.asm	/^f010488b:	53                   	push   %ebx$/;"	l
f010488c	obj/kern/kernel.asm	/^f010488c:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010488f	obj/kern/kernel.asm	/^f010488f:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104892	obj/kern/kernel.asm	/^f0104892:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f0104895	obj/kern/kernel.asm	/^f0104895:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0104898	obj/kern/kernel.asm	/^f0104898:	66 83 7b 34 08       	cmpw   $0x8,0x34(%ebx)$/;"	l
f010489d	obj/kern/kernel.asm	/^f010489d:	75 1c                	jne    f01048bb <page_fault_handler+0x35>$/;"	l
f010489f	obj/kern/kernel.asm	/^f010489f:	c7 44 24 08 3c 86 10 	movl   $0xf010863c,0x8(%esp)$/;"	l
f01048a6	obj/kern/kernel.asm	/^f01048a6:	f0 $/;"	l
f01048a7	obj/kern/kernel.asm	/^f01048a7:	c7 44 24 04 8c 01 00 	movl   $0x18c,0x4(%esp)$/;"	l
f01048ae	obj/kern/kernel.asm	/^f01048ae:	00 $/;"	l
f01048af	obj/kern/kernel.asm	/^f01048af:	c7 04 24 af 84 10 f0 	movl   $0xf01084af,(%esp)$/;"	l
f01048b6	obj/kern/kernel.asm	/^f01048b6:	e8 85 b7 ff ff       	call   f0100040 <_panic>$/;"	l
f01048bb	obj/kern/kernel.asm	/^f01048bb:	e8 84 20 00 00       	call   f0106944 <cpunum>$/;"	l
f01048c0	obj/kern/kernel.asm	/^f01048c0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01048c3	obj/kern/kernel.asm	/^f01048c3:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f01048c9	obj/kern/kernel.asm	/^f01048c9:	83 78 64 00          	cmpl   $0x0,0x64(%eax)$/;"	l
f01048cd	obj/kern/kernel.asm	/^f01048cd:	0f 84 cb 00 00 00    	je     f010499e <page_fault_handler+0x118>$/;"	l
f01048d3	obj/kern/kernel.asm	/^f01048d3:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f01048d6	obj/kern/kernel.asm	/^f01048d6:	8d 90 00 10 40 11    	lea    0x11401000(%eax),%edx$/;"	l
f01048dc	obj/kern/kernel.asm	/^f01048dc:	8d 48 c8             	lea    -0x38(%eax),%ecx$/;"	l
f01048df	obj/kern/kernel.asm	/^f01048df:	81 fa ff 0f 00 00    	cmp    $0xfff,%edx$/;"	l
f01048e5	obj/kern/kernel.asm	/^f01048e5:	ba cc ff bf ee       	mov    $0xeebfffcc,%edx$/;"	l
f01048ea	obj/kern/kernel.asm	/^f01048ea:	0f 46 d1             	cmovbe %ecx,%edx$/;"	l
f01048ed	obj/kern/kernel.asm	/^f01048ed:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f01048f0	obj/kern/kernel.asm	/^f01048f0:	89 42 30             	mov    %eax,0x30(%edx)$/;"	l
f01048f3	obj/kern/kernel.asm	/^f01048f3:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f01048f6	obj/kern/kernel.asm	/^f01048f6:	89 42 2c             	mov    %eax,0x2c(%edx)$/;"	l
f01048f9	obj/kern/kernel.asm	/^f01048f9:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f01048fc	obj/kern/kernel.asm	/^f01048fc:	89 42 28             	mov    %eax,0x28(%edx)$/;"	l
f01048ff	obj/kern/kernel.asm	/^f01048ff:	8d 7a 08             	lea    0x8(%edx),%edi$/;"	l
f0104902	obj/kern/kernel.asm	/^f0104902:	89 de                	mov    %ebx,%esi$/;"	l
f0104904	obj/kern/kernel.asm	/^f0104904:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0104909	obj/kern/kernel.asm	/^f0104909:	f7 c7 01 00 00 00    	test   $0x1,%edi$/;"	l
f010490f	obj/kern/kernel.asm	/^f010490f:	74 03                	je     f0104914 <page_fault_handler+0x8e>$/;"	l
f0104911	obj/kern/kernel.asm	/^f0104911:	a4                   	movsb  %ds:(%esi),%es:(%edi)$/;"	l
f0104912	obj/kern/kernel.asm	/^f0104912:	b0 1f                	mov    $0x1f,%al$/;"	l
f0104914	obj/kern/kernel.asm	/^f0104914:	f7 c7 02 00 00 00    	test   $0x2,%edi$/;"	l
f010491a	obj/kern/kernel.asm	/^f010491a:	74 05                	je     f0104921 <page_fault_handler+0x9b>$/;"	l
f010491c	obj/kern/kernel.asm	/^f010491c:	66 a5                	movsw  %ds:(%esi),%es:(%edi)$/;"	l
f010491e	obj/kern/kernel.asm	/^f010491e:	83 e8 02             	sub    $0x2,%eax$/;"	l
f0104921	obj/kern/kernel.asm	/^f0104921:	89 c1                	mov    %eax,%ecx$/;"	l
f0104923	obj/kern/kernel.asm	/^f0104923:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0104926	obj/kern/kernel.asm	/^f0104926:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104928	obj/kern/kernel.asm	/^f0104928:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010492d	obj/kern/kernel.asm	/^f010492d:	a8 02                	test   $0x2,%al$/;"	l
f010492f	obj/kern/kernel.asm	/^f010492f:	74 0b                	je     f010493c <page_fault_handler+0xb6>$/;"	l
f0104931	obj/kern/kernel.asm	/^f0104931:	0f b7 16             	movzwl (%esi),%edx$/;"	l
f0104934	obj/kern/kernel.asm	/^f0104934:	66 89 17             	mov    %dx,(%edi)$/;"	l
f0104937	obj/kern/kernel.asm	/^f0104937:	ba 02 00 00 00       	mov    $0x2,%edx$/;"	l
f010493c	obj/kern/kernel.asm	/^f010493c:	a8 01                	test   $0x1,%al$/;"	l
f010493e	obj/kern/kernel.asm	/^f010493e:	74 07                	je     f0104947 <page_fault_handler+0xc1>$/;"	l
f0104940	obj/kern/kernel.asm	/^f0104940:	0f b6 04 16          	movzbl (%esi,%edx,1),%eax$/;"	l
f0104944	obj/kern/kernel.asm	/^f0104944:	88 04 17             	mov    %al,(%edi,%edx,1)$/;"	l
f0104947	obj/kern/kernel.asm	/^f0104947:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f010494a	obj/kern/kernel.asm	/^f010494a:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f010494d	obj/kern/kernel.asm	/^f010494d:	89 47 04             	mov    %eax,0x4(%edi)$/;"	l
f0104950	obj/kern/kernel.asm	/^f0104950:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104953	obj/kern/kernel.asm	/^f0104953:	89 07                	mov    %eax,(%edi)$/;"	l
f0104955	obj/kern/kernel.asm	/^f0104955:	e8 ea 1f 00 00       	call   f0106944 <cpunum>$/;"	l
f010495a	obj/kern/kernel.asm	/^f010495a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010495d	obj/kern/kernel.asm	/^f010495d:	8b 98 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%ebx$/;"	l
f0104963	obj/kern/kernel.asm	/^f0104963:	e8 dc 1f 00 00       	call   f0106944 <cpunum>$/;"	l
f0104968	obj/kern/kernel.asm	/^f0104968:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010496b	obj/kern/kernel.asm	/^f010496b:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f0104971	obj/kern/kernel.asm	/^f0104971:	8b 40 64             	mov    0x64(%eax),%eax$/;"	l
f0104974	obj/kern/kernel.asm	/^f0104974:	89 43 30             	mov    %eax,0x30(%ebx)$/;"	l
f0104977	obj/kern/kernel.asm	/^f0104977:	e8 c8 1f 00 00       	call   f0106944 <cpunum>$/;"	l
f010497c	obj/kern/kernel.asm	/^f010497c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010497f	obj/kern/kernel.asm	/^f010497f:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f0104985	obj/kern/kernel.asm	/^f0104985:	89 78 3c             	mov    %edi,0x3c(%eax)$/;"	l
f0104988	obj/kern/kernel.asm	/^f0104988:	e8 b7 1f 00 00       	call   f0106944 <cpunum>$/;"	l
f010498d	obj/kern/kernel.asm	/^f010498d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104990	obj/kern/kernel.asm	/^f0104990:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f0104996	obj/kern/kernel.asm	/^f0104996:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104999	obj/kern/kernel.asm	/^f0104999:	e8 ed f2 ff ff       	call   f0103c8b <env_run>$/;"	l
f010499e	obj/kern/kernel.asm	/^f010499e:	c7 04 24 70 86 10 f0 	movl   $0xf0108670,(%esp)$/;"	l
f01049a5	obj/kern/kernel.asm	/^f01049a5:	e8 64 f5 ff ff       	call   f0103f0e <cprintf>$/;"	l
f01049aa	obj/kern/kernel.asm	/^f01049aa:	8b 73 30             	mov    0x30(%ebx),%esi$/;"	l
f01049ad	obj/kern/kernel.asm	/^f01049ad:	e8 92 1f 00 00       	call   f0106944 <cpunum>$/;"	l
f01049b2	obj/kern/kernel.asm	/^f01049b2:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f01049b6	obj/kern/kernel.asm	/^f01049b6:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f01049b9	obj/kern/kernel.asm	/^f01049b9:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f01049bd	obj/kern/kernel.asm	/^f01049bd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01049c0	obj/kern/kernel.asm	/^f01049c0:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f01049c6	obj/kern/kernel.asm	/^f01049c6:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01049c9	obj/kern/kernel.asm	/^f01049c9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01049cd	obj/kern/kernel.asm	/^f01049cd:	c7 04 24 a0 86 10 f0 	movl   $0xf01086a0,(%esp)$/;"	l
f01049d4	obj/kern/kernel.asm	/^f01049d4:	e8 35 f5 ff ff       	call   f0103f0e <cprintf>$/;"	l
f01049d9	obj/kern/kernel.asm	/^f01049d9:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01049dc	obj/kern/kernel.asm	/^f01049dc:	e8 08 fd ff ff       	call   f01046e9 <print_trapframe>$/;"	l
f01049e1	obj/kern/kernel.asm	/^f01049e1:	e8 5e 1f 00 00       	call   f0106944 <cpunum>$/;"	l
f01049e6	obj/kern/kernel.asm	/^f01049e6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01049e9	obj/kern/kernel.asm	/^f01049e9:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f01049ef	obj/kern/kernel.asm	/^f01049ef:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01049f2	obj/kern/kernel.asm	/^f01049f2:	e8 f3 f1 ff ff       	call   f0103bea <env_destroy>$/;"	l
f01049f7	obj/kern/kernel.asm	/^f01049f7:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f01049fa	obj/kern/kernel.asm	/^f01049fa:	5b                   	pop    %ebx$/;"	l
f01049fb	obj/kern/kernel.asm	/^f01049fb:	5e                   	pop    %esi$/;"	l
f01049fc	obj/kern/kernel.asm	/^f01049fc:	5f                   	pop    %edi$/;"	l
f01049fd	obj/kern/kernel.asm	/^f01049fd:	5d                   	pop    %ebp$/;"	l
f01049fe	obj/kern/kernel.asm	/^f01049fe:	c3                   	ret    $/;"	l
f01049ff	obj/kern/kernel.asm	/^f01049ff <trap>:$/;"	l
f01049ff	obj/kern/kernel.asm	/^f01049ff:	55                   	push   %ebp$/;"	l
f0104a00	obj/kern/kernel.asm	/^f0104a00:	89 e5                	mov    %esp,%ebp$/;"	l
f0104a02	obj/kern/kernel.asm	/^f0104a02:	57                   	push   %edi$/;"	l
f0104a03	obj/kern/kernel.asm	/^f0104a03:	56                   	push   %esi$/;"	l
f0104a04	obj/kern/kernel.asm	/^f0104a04:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0104a07	obj/kern/kernel.asm	/^f0104a07:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104a0a	obj/kern/kernel.asm	/^f0104a0a:	fc                   	cld    $/;"	l
f0104a0b	obj/kern/kernel.asm	/^f0104a0b:	83 3d 80 5e 20 f0 00 	cmpl   $0x0,0xf0205e80$/;"	l
f0104a12	obj/kern/kernel.asm	/^f0104a12:	74 01                	je     f0104a15 <trap+0x16>$/;"	l
f0104a14	obj/kern/kernel.asm	/^f0104a14:	f4                   	hlt    $/;"	l
f0104a15	obj/kern/kernel.asm	/^f0104a15:	e8 2a 1f 00 00       	call   f0106944 <cpunum>$/;"	l
f0104a1a	obj/kern/kernel.asm	/^f0104a1a:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0104a1d	obj/kern/kernel.asm	/^f0104a1d:	81 c2 20 60 20 f0    	add    $0xf0206020,%edx$/;"	l
f0104a23	obj/kern/kernel.asm	/^f0104a23:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104a28	obj/kern/kernel.asm	/^f0104a28:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0104a2c	obj/kern/kernel.asm	/^f0104a2c:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0104a2f	obj/kern/kernel.asm	/^f0104a2f:	75 0c                	jne    f0104a3d <trap+0x3e>$/;"	l
f0104a31	obj/kern/kernel.asm	/^f0104a31:	c7 04 24 c0 13 12 f0 	movl   $0xf01213c0,(%esp)$/;"	l
f0104a38	obj/kern/kernel.asm	/^f0104a38:	e8 86 21 00 00       	call   f0106bc3 <spin_lock>$/;"	l
f0104a3d	obj/kern/kernel.asm	/^f0104a3d:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f0104a41	obj/kern/kernel.asm	/^f0104a41:	83 e0 03             	and    $0x3,%eax$/;"	l
f0104a44	obj/kern/kernel.asm	/^f0104a44:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
f0104a48	obj/kern/kernel.asm	/^f0104a48:	0f 85 a7 00 00 00    	jne    f0104af5 <trap+0xf6>$/;"	l
f0104a4e	obj/kern/kernel.asm	/^f0104a4e:	c7 04 24 c0 13 12 f0 	movl   $0xf01213c0,(%esp)$/;"	l
f0104a55	obj/kern/kernel.asm	/^f0104a55:	e8 69 21 00 00       	call   f0106bc3 <spin_lock>$/;"	l
f0104a5a	obj/kern/kernel.asm	/^f0104a5a:	e8 e5 1e 00 00       	call   f0106944 <cpunum>$/;"	l
f0104a5f	obj/kern/kernel.asm	/^f0104a5f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a62	obj/kern/kernel.asm	/^f0104a62:	83 b8 28 60 20 f0 00 	cmpl   $0x0,-0xfdf9fd8(%eax)$/;"	l
f0104a69	obj/kern/kernel.asm	/^f0104a69:	75 24                	jne    f0104a8f <trap+0x90>$/;"	l
f0104a6b	obj/kern/kernel.asm	/^f0104a6b:	c7 44 24 0c bb 84 10 	movl   $0xf01084bb,0xc(%esp)$/;"	l
f0104a72	obj/kern/kernel.asm	/^f0104a72:	f0 $/;"	l
f0104a73	obj/kern/kernel.asm	/^f0104a73:	c7 44 24 08 67 7f 10 	movl   $0xf0107f67,0x8(%esp)$/;"	l
f0104a7a	obj/kern/kernel.asm	/^f0104a7a:	f0 $/;"	l
f0104a7b	obj/kern/kernel.asm	/^f0104a7b:	c7 44 24 04 5d 01 00 	movl   $0x15d,0x4(%esp)$/;"	l
f0104a82	obj/kern/kernel.asm	/^f0104a82:	00 $/;"	l
f0104a83	obj/kern/kernel.asm	/^f0104a83:	c7 04 24 af 84 10 f0 	movl   $0xf01084af,(%esp)$/;"	l
f0104a8a	obj/kern/kernel.asm	/^f0104a8a:	e8 b1 b5 ff ff       	call   f0100040 <_panic>$/;"	l
f0104a8f	obj/kern/kernel.asm	/^f0104a8f:	e8 b0 1e 00 00       	call   f0106944 <cpunum>$/;"	l
f0104a94	obj/kern/kernel.asm	/^f0104a94:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a97	obj/kern/kernel.asm	/^f0104a97:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f0104a9d	obj/kern/kernel.asm	/^f0104a9d:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f0104aa1	obj/kern/kernel.asm	/^f0104aa1:	75 2d                	jne    f0104ad0 <trap+0xd1>$/;"	l
f0104aa3	obj/kern/kernel.asm	/^f0104aa3:	e8 9c 1e 00 00       	call   f0106944 <cpunum>$/;"	l
f0104aa8	obj/kern/kernel.asm	/^f0104aa8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104aab	obj/kern/kernel.asm	/^f0104aab:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f0104ab1	obj/kern/kernel.asm	/^f0104ab1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104ab4	obj/kern/kernel.asm	/^f0104ab4:	e8 66 ef ff ff       	call   f0103a1f <env_free>$/;"	l
f0104ab9	obj/kern/kernel.asm	/^f0104ab9:	e8 86 1e 00 00       	call   f0106944 <cpunum>$/;"	l
f0104abe	obj/kern/kernel.asm	/^f0104abe:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ac1	obj/kern/kernel.asm	/^f0104ac1:	c7 80 28 60 20 f0 00 	movl   $0x0,-0xfdf9fd8(%eax)$/;"	l
f0104ac8	obj/kern/kernel.asm	/^f0104ac8:	00 00 00 $/;"	l
f0104acb	obj/kern/kernel.asm	/^f0104acb:	e8 43 05 00 00       	call   f0105013 <sched_yield>$/;"	l
f0104ad0	obj/kern/kernel.asm	/^f0104ad0:	e8 6f 1e 00 00       	call   f0106944 <cpunum>$/;"	l
f0104ad5	obj/kern/kernel.asm	/^f0104ad5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ad8	obj/kern/kernel.asm	/^f0104ad8:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f0104ade	obj/kern/kernel.asm	/^f0104ade:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104ae3	obj/kern/kernel.asm	/^f0104ae3:	89 c7                	mov    %eax,%edi$/;"	l
f0104ae5	obj/kern/kernel.asm	/^f0104ae5:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104ae7	obj/kern/kernel.asm	/^f0104ae7:	e8 58 1e 00 00       	call   f0106944 <cpunum>$/;"	l
f0104aec	obj/kern/kernel.asm	/^f0104aec:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104aef	obj/kern/kernel.asm	/^f0104aef:	8b b0 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%esi$/;"	l
f0104af5	obj/kern/kernel.asm	/^f0104af5:	89 35 60 5a 20 f0    	mov    %esi,0xf0205a60$/;"	l
f0104afb	obj/kern/kernel.asm	/^f0104afb:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f0104afe	obj/kern/kernel.asm	/^f0104afe:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f0104b01	obj/kern/kernel.asm	/^f0104b01:	75 19                	jne    f0104b1c <trap+0x11d>$/;"	l
f0104b03	obj/kern/kernel.asm	/^f0104b03:	c7 04 24 c2 84 10 f0 	movl   $0xf01084c2,(%esp)$/;"	l
f0104b0a	obj/kern/kernel.asm	/^f0104b0a:	e8 ff f3 ff ff       	call   f0103f0e <cprintf>$/;"	l
f0104b0f	obj/kern/kernel.asm	/^f0104b0f:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104b12	obj/kern/kernel.asm	/^f0104b12:	e8 d2 fb ff ff       	call   f01046e9 <print_trapframe>$/;"	l
f0104b17	obj/kern/kernel.asm	/^f0104b17:	e9 ba 00 00 00       	jmp    f0104bd6 <trap+0x1d7>$/;"	l
f0104b1c	obj/kern/kernel.asm	/^f0104b1c:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0104b1f	obj/kern/kernel.asm	/^f0104b1f:	90                   	nop$/;"	l
f0104b20	obj/kern/kernel.asm	/^f0104b20:	74 20                	je     f0104b42 <trap+0x143>$/;"	l
f0104b22	obj/kern/kernel.asm	/^f0104b22:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0104b25	obj/kern/kernel.asm	/^f0104b25:	77 0b                	ja     f0104b32 <trap+0x133>$/;"	l
f0104b27	obj/kern/kernel.asm	/^f0104b27:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104b2a	obj/kern/kernel.asm	/^f0104b2a:	74 20                	je     f0104b4c <trap+0x14d>$/;"	l
f0104b2c	obj/kern/kernel.asm	/^f0104b2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104b30	obj/kern/kernel.asm	/^f0104b30:	eb 63                	jmp    f0104b95 <trap+0x196>$/;"	l
f0104b32	obj/kern/kernel.asm	/^f0104b32:	83 f8 20             	cmp    $0x20,%eax$/;"	l
f0104b35	obj/kern/kernel.asm	/^f0104b35:	74 51                	je     f0104b88 <trap+0x189>$/;"	l
f0104b37	obj/kern/kernel.asm	/^f0104b37:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0104b3a	obj/kern/kernel.asm	/^f0104b3a:	74 1a                	je     f0104b56 <trap+0x157>$/;"	l
f0104b3c	obj/kern/kernel.asm	/^f0104b3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104b40	obj/kern/kernel.asm	/^f0104b40:	eb 53                	jmp    f0104b95 <trap+0x196>$/;"	l
f0104b42	obj/kern/kernel.asm	/^f0104b42:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104b45	obj/kern/kernel.asm	/^f0104b45:	e8 3c fd ff ff       	call   f0104886 <page_fault_handler>$/;"	l
f0104b4a	obj/kern/kernel.asm	/^f0104b4a:	eb 49                	jmp    f0104b95 <trap+0x196>$/;"	l
f0104b4c	obj/kern/kernel.asm	/^f0104b4c:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104b4f	obj/kern/kernel.asm	/^f0104b4f:	e8 da be ff ff       	call   f0100a2e <monitor>$/;"	l
f0104b54	obj/kern/kernel.asm	/^f0104b54:	eb 3f                	jmp    f0104b95 <trap+0x196>$/;"	l
f0104b56	obj/kern/kernel.asm	/^f0104b56:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0104b59	obj/kern/kernel.asm	/^f0104b59:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0104b5d	obj/kern/kernel.asm	/^f0104b5d:	8b 06                	mov    (%esi),%eax$/;"	l
f0104b5f	obj/kern/kernel.asm	/^f0104b5f:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0104b63	obj/kern/kernel.asm	/^f0104b63:	8b 46 10             	mov    0x10(%esi),%eax$/;"	l
f0104b66	obj/kern/kernel.asm	/^f0104b66:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104b6a	obj/kern/kernel.asm	/^f0104b6a:	8b 46 18             	mov    0x18(%esi),%eax$/;"	l
f0104b6d	obj/kern/kernel.asm	/^f0104b6d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104b71	obj/kern/kernel.asm	/^f0104b71:	8b 46 14             	mov    0x14(%esi),%eax$/;"	l
f0104b74	obj/kern/kernel.asm	/^f0104b74:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104b78	obj/kern/kernel.asm	/^f0104b78:	8b 46 1c             	mov    0x1c(%esi),%eax$/;"	l
f0104b7b	obj/kern/kernel.asm	/^f0104b7b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104b7e	obj/kern/kernel.asm	/^f0104b7e:	e8 ad 04 00 00       	call   f0105030 <syscall>$/;"	l
f0104b83	obj/kern/kernel.asm	/^f0104b83:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f0104b86	obj/kern/kernel.asm	/^f0104b86:	eb 4e                	jmp    f0104bd6 <trap+0x1d7>$/;"	l
f0104b88	obj/kern/kernel.asm	/^f0104b88:	e8 04 1f 00 00       	call   f0106a91 <lapic_eoi>$/;"	l
f0104b8d	obj/kern/kernel.asm	/^f0104b8d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0104b90	obj/kern/kernel.asm	/^f0104b90:	e8 7e 04 00 00       	call   f0105013 <sched_yield>$/;"	l
f0104b95	obj/kern/kernel.asm	/^f0104b95:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104b98	obj/kern/kernel.asm	/^f0104b98:	e8 4c fb ff ff       	call   f01046e9 <print_trapframe>$/;"	l
f0104b9d	obj/kern/kernel.asm	/^f0104b9d:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f0104ba2	obj/kern/kernel.asm	/^f0104ba2:	75 1c                	jne    f0104bc0 <trap+0x1c1>$/;"	l
f0104ba4	obj/kern/kernel.asm	/^f0104ba4:	c7 44 24 08 df 84 10 	movl   $0xf01084df,0x8(%esp)$/;"	l
f0104bab	obj/kern/kernel.asm	/^f0104bab:	f0 $/;"	l
f0104bac	obj/kern/kernel.asm	/^f0104bac:	c7 44 24 04 39 01 00 	movl   $0x139,0x4(%esp)$/;"	l
f0104bb3	obj/kern/kernel.asm	/^f0104bb3:	00 $/;"	l
f0104bb4	obj/kern/kernel.asm	/^f0104bb4:	c7 04 24 af 84 10 f0 	movl   $0xf01084af,(%esp)$/;"	l
f0104bbb	obj/kern/kernel.asm	/^f0104bbb:	e8 80 b4 ff ff       	call   f0100040 <_panic>$/;"	l
f0104bc0	obj/kern/kernel.asm	/^f0104bc0:	e8 7f 1d 00 00       	call   f0106944 <cpunum>$/;"	l
f0104bc5	obj/kern/kernel.asm	/^f0104bc5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104bc8	obj/kern/kernel.asm	/^f0104bc8:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f0104bce	obj/kern/kernel.asm	/^f0104bce:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104bd1	obj/kern/kernel.asm	/^f0104bd1:	e8 14 f0 ff ff       	call   f0103bea <env_destroy>$/;"	l
f0104bd6	obj/kern/kernel.asm	/^f0104bd6:	e8 69 1d 00 00       	call   f0106944 <cpunum>$/;"	l
f0104bdb	obj/kern/kernel.asm	/^f0104bdb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104bde	obj/kern/kernel.asm	/^f0104bde:	83 b8 28 60 20 f0 00 	cmpl   $0x0,-0xfdf9fd8(%eax)$/;"	l
f0104be5	obj/kern/kernel.asm	/^f0104be5:	74 2a                	je     f0104c11 <trap+0x212>$/;"	l
f0104be7	obj/kern/kernel.asm	/^f0104be7:	e8 58 1d 00 00       	call   f0106944 <cpunum>$/;"	l
f0104bec	obj/kern/kernel.asm	/^f0104bec:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104bef	obj/kern/kernel.asm	/^f0104bef:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f0104bf5	obj/kern/kernel.asm	/^f0104bf5:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104bf9	obj/kern/kernel.asm	/^f0104bf9:	75 16                	jne    f0104c11 <trap+0x212>$/;"	l
f0104bfb	obj/kern/kernel.asm	/^f0104bfb:	e8 44 1d 00 00       	call   f0106944 <cpunum>$/;"	l
f0104c00	obj/kern/kernel.asm	/^f0104c00:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104c03	obj/kern/kernel.asm	/^f0104c03:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f0104c09	obj/kern/kernel.asm	/^f0104c09:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104c0c	obj/kern/kernel.asm	/^f0104c0c:	e8 7a f0 ff ff       	call   f0103c8b <env_run>$/;"	l
f0104c11	obj/kern/kernel.asm	/^f0104c11:	e8 fd 03 00 00       	call   f0105013 <sched_yield>$/;"	l
f0104c16	obj/kern/kernel.asm	/^f0104c16:	66 90                	xchg   %ax,%ax$/;"	l
f0104c18	obj/kern/kernel.asm	/^f0104c18 <__idt_divide>:$/;"	l
f0104c18	obj/kern/kernel.asm	/^f0104c18:	6a 00                	push   $0x0$/;"	l
f0104c1a	obj/kern/kernel.asm	/^f0104c1a:	6a 00                	push   $0x0$/;"	l
f0104c1c	obj/kern/kernel.asm	/^f0104c1c:	e9 09 01 00 00       	jmp    f0104d2a <_alltraps>$/;"	l
f0104c21	obj/kern/kernel.asm	/^f0104c21:	90                   	nop$/;"	l
f0104c22	obj/kern/kernel.asm	/^f0104c22 <__idt_debug>:$/;"	l
f0104c22	obj/kern/kernel.asm	/^f0104c22:	6a 00                	push   $0x0$/;"	l
f0104c24	obj/kern/kernel.asm	/^f0104c24:	6a 01                	push   $0x1$/;"	l
f0104c26	obj/kern/kernel.asm	/^f0104c26:	e9 ff 00 00 00       	jmp    f0104d2a <_alltraps>$/;"	l
f0104c2b	obj/kern/kernel.asm	/^f0104c2b:	90                   	nop$/;"	l
f0104c2c	obj/kern/kernel.asm	/^f0104c2c <__idt_nmi>:$/;"	l
f0104c2c	obj/kern/kernel.asm	/^f0104c2c:	6a 00                	push   $0x0$/;"	l
f0104c2e	obj/kern/kernel.asm	/^f0104c2e:	6a 02                	push   $0x2$/;"	l
f0104c30	obj/kern/kernel.asm	/^f0104c30:	e9 f5 00 00 00       	jmp    f0104d2a <_alltraps>$/;"	l
f0104c35	obj/kern/kernel.asm	/^f0104c35:	90                   	nop$/;"	l
f0104c36	obj/kern/kernel.asm	/^f0104c36 <__idt_breakpoint>:$/;"	l
f0104c36	obj/kern/kernel.asm	/^f0104c36:	6a 00                	push   $0x0$/;"	l
f0104c38	obj/kern/kernel.asm	/^f0104c38:	6a 03                	push   $0x3$/;"	l
f0104c3a	obj/kern/kernel.asm	/^f0104c3a:	e9 eb 00 00 00       	jmp    f0104d2a <_alltraps>$/;"	l
f0104c3f	obj/kern/kernel.asm	/^f0104c3f:	90                   	nop$/;"	l
f0104c40	obj/kern/kernel.asm	/^f0104c40 <__idt_overflow>:$/;"	l
f0104c40	obj/kern/kernel.asm	/^f0104c40:	6a 00                	push   $0x0$/;"	l
f0104c42	obj/kern/kernel.asm	/^f0104c42:	6a 04                	push   $0x4$/;"	l
f0104c44	obj/kern/kernel.asm	/^f0104c44:	e9 e1 00 00 00       	jmp    f0104d2a <_alltraps>$/;"	l
f0104c49	obj/kern/kernel.asm	/^f0104c49:	90                   	nop$/;"	l
f0104c4a	obj/kern/kernel.asm	/^f0104c4a <__idt_bound>:$/;"	l
f0104c4a	obj/kern/kernel.asm	/^f0104c4a:	6a 00                	push   $0x0$/;"	l
f0104c4c	obj/kern/kernel.asm	/^f0104c4c:	6a 05                	push   $0x5$/;"	l
f0104c4e	obj/kern/kernel.asm	/^f0104c4e:	e9 d7 00 00 00       	jmp    f0104d2a <_alltraps>$/;"	l
f0104c53	obj/kern/kernel.asm	/^f0104c53:	90                   	nop$/;"	l
f0104c54	obj/kern/kernel.asm	/^f0104c54 <__idt_illop>:$/;"	l
f0104c54	obj/kern/kernel.asm	/^f0104c54:	6a 00                	push   $0x0$/;"	l
f0104c56	obj/kern/kernel.asm	/^f0104c56:	6a 06                	push   $0x6$/;"	l
f0104c58	obj/kern/kernel.asm	/^f0104c58:	e9 cd 00 00 00       	jmp    f0104d2a <_alltraps>$/;"	l
f0104c5d	obj/kern/kernel.asm	/^f0104c5d:	90                   	nop$/;"	l
f0104c5e	obj/kern/kernel.asm	/^f0104c5e <__idt_device>:$/;"	l
f0104c5e	obj/kern/kernel.asm	/^f0104c5e:	6a 00                	push   $0x0$/;"	l
f0104c60	obj/kern/kernel.asm	/^f0104c60:	6a 07                	push   $0x7$/;"	l
f0104c62	obj/kern/kernel.asm	/^f0104c62:	e9 c3 00 00 00       	jmp    f0104d2a <_alltraps>$/;"	l
f0104c67	obj/kern/kernel.asm	/^f0104c67:	90                   	nop$/;"	l
f0104c68	obj/kern/kernel.asm	/^f0104c68 <__idt_dblflt>:$/;"	l
f0104c68	obj/kern/kernel.asm	/^f0104c68:	6a 08                	push   $0x8$/;"	l
f0104c6a	obj/kern/kernel.asm	/^f0104c6a:	e9 bb 00 00 00       	jmp    f0104d2a <_alltraps>$/;"	l
f0104c6f	obj/kern/kernel.asm	/^f0104c6f:	90                   	nop$/;"	l
f0104c70	obj/kern/kernel.asm	/^f0104c70 <__idt_tss>:$/;"	l
f0104c70	obj/kern/kernel.asm	/^f0104c70:	6a 0a                	push   $0xa$/;"	l
f0104c72	obj/kern/kernel.asm	/^f0104c72:	e9 b3 00 00 00       	jmp    f0104d2a <_alltraps>$/;"	l
f0104c77	obj/kern/kernel.asm	/^f0104c77:	90                   	nop$/;"	l
f0104c78	obj/kern/kernel.asm	/^f0104c78 <__idt_segnp>:$/;"	l
f0104c78	obj/kern/kernel.asm	/^f0104c78:	6a 0b                	push   $0xb$/;"	l
f0104c7a	obj/kern/kernel.asm	/^f0104c7a:	e9 ab 00 00 00       	jmp    f0104d2a <_alltraps>$/;"	l
f0104c7f	obj/kern/kernel.asm	/^f0104c7f:	90                   	nop$/;"	l
f0104c80	obj/kern/kernel.asm	/^f0104c80 <__idt_stack>:$/;"	l
f0104c80	obj/kern/kernel.asm	/^f0104c80:	6a 0c                	push   $0xc$/;"	l
f0104c82	obj/kern/kernel.asm	/^f0104c82:	e9 a3 00 00 00       	jmp    f0104d2a <_alltraps>$/;"	l
f0104c87	obj/kern/kernel.asm	/^f0104c87:	90                   	nop$/;"	l
f0104c88	obj/kern/kernel.asm	/^f0104c88 <__idt_gpflt>:$/;"	l
f0104c88	obj/kern/kernel.asm	/^f0104c88:	6a 0d                	push   $0xd$/;"	l
f0104c8a	obj/kern/kernel.asm	/^f0104c8a:	e9 9b 00 00 00       	jmp    f0104d2a <_alltraps>$/;"	l
f0104c8f	obj/kern/kernel.asm	/^f0104c8f:	90                   	nop$/;"	l
f0104c90	obj/kern/kernel.asm	/^f0104c90 <__idt_pgflt>:$/;"	l
f0104c90	obj/kern/kernel.asm	/^f0104c90:	6a 0e                	push   $0xe$/;"	l
f0104c92	obj/kern/kernel.asm	/^f0104c92:	e9 93 00 00 00       	jmp    f0104d2a <_alltraps>$/;"	l
f0104c97	obj/kern/kernel.asm	/^f0104c97:	90                   	nop$/;"	l
f0104c98	obj/kern/kernel.asm	/^f0104c98 <__idt_fperr>:$/;"	l
f0104c98	obj/kern/kernel.asm	/^f0104c98:	6a 00                	push   $0x0$/;"	l
f0104c9a	obj/kern/kernel.asm	/^f0104c9a:	6a 10                	push   $0x10$/;"	l
f0104c9c	obj/kern/kernel.asm	/^f0104c9c:	e9 89 00 00 00       	jmp    f0104d2a <_alltraps>$/;"	l
f0104ca1	obj/kern/kernel.asm	/^f0104ca1:	90                   	nop$/;"	l
f0104ca2	obj/kern/kernel.asm	/^f0104ca2 <__idt_align>:$/;"	l
f0104ca2	obj/kern/kernel.asm	/^f0104ca2:	6a 11                	push   $0x11$/;"	l
f0104ca4	obj/kern/kernel.asm	/^f0104ca4:	e9 81 00 00 00       	jmp    f0104d2a <_alltraps>$/;"	l
f0104ca9	obj/kern/kernel.asm	/^f0104ca9:	90                   	nop$/;"	l
f0104caa	obj/kern/kernel.asm	/^f0104caa <__idt_mchk>:$/;"	l
f0104caa	obj/kern/kernel.asm	/^f0104caa:	6a 00                	push   $0x0$/;"	l
f0104cac	obj/kern/kernel.asm	/^f0104cac:	6a 12                	push   $0x12$/;"	l
f0104cae	obj/kern/kernel.asm	/^f0104cae:	eb 7a                	jmp    f0104d2a <_alltraps>$/;"	l
f0104cb0	obj/kern/kernel.asm	/^f0104cb0 <__idt_simd>:$/;"	l
f0104cb0	obj/kern/kernel.asm	/^f0104cb0:	6a 00                	push   $0x0$/;"	l
f0104cb2	obj/kern/kernel.asm	/^f0104cb2:	6a 13                	push   $0x13$/;"	l
f0104cb4	obj/kern/kernel.asm	/^f0104cb4:	eb 74                	jmp    f0104d2a <_alltraps>$/;"	l
f0104cb6	obj/kern/kernel.asm	/^f0104cb6 <__idt_syscall>:$/;"	l
f0104cb6	obj/kern/kernel.asm	/^f0104cb6:	6a 00                	push   $0x0$/;"	l
f0104cb8	obj/kern/kernel.asm	/^f0104cb8:	6a 30                	push   $0x30$/;"	l
f0104cba	obj/kern/kernel.asm	/^f0104cba:	eb 6e                	jmp    f0104d2a <_alltraps>$/;"	l
f0104cbc	obj/kern/kernel.asm	/^f0104cbc <__idt_default>:$/;"	l
f0104cbc	obj/kern/kernel.asm	/^f0104cbc:	68 f4 01 00 00       	push   $0x1f4$/;"	l
f0104cc1	obj/kern/kernel.asm	/^f0104cc1:	eb 67                	jmp    f0104d2a <_alltraps>$/;"	l
f0104cc3	obj/kern/kernel.asm	/^f0104cc3:	90                   	nop$/;"	l
f0104cc4	obj/kern/kernel.asm	/^f0104cc4 <__idt_irq0>:$/;"	l
f0104cc4	obj/kern/kernel.asm	/^f0104cc4:	6a 00                	push   $0x0$/;"	l
f0104cc6	obj/kern/kernel.asm	/^f0104cc6:	6a 20                	push   $0x20$/;"	l
f0104cc8	obj/kern/kernel.asm	/^f0104cc8:	eb 60                	jmp    f0104d2a <_alltraps>$/;"	l
f0104cca	obj/kern/kernel.asm	/^f0104cca <__idt_irq1>:$/;"	l
f0104cca	obj/kern/kernel.asm	/^f0104cca:	6a 00                	push   $0x0$/;"	l
f0104ccc	obj/kern/kernel.asm	/^f0104ccc:	6a 21                	push   $0x21$/;"	l
f0104cce	obj/kern/kernel.asm	/^f0104cce:	eb 5a                	jmp    f0104d2a <_alltraps>$/;"	l
f0104cd0	obj/kern/kernel.asm	/^f0104cd0 <__idt_irq2>:$/;"	l
f0104cd0	obj/kern/kernel.asm	/^f0104cd0:	6a 00                	push   $0x0$/;"	l
f0104cd2	obj/kern/kernel.asm	/^f0104cd2:	6a 22                	push   $0x22$/;"	l
f0104cd4	obj/kern/kernel.asm	/^f0104cd4:	eb 54                	jmp    f0104d2a <_alltraps>$/;"	l
f0104cd6	obj/kern/kernel.asm	/^f0104cd6 <__idt_irq3>:$/;"	l
f0104cd6	obj/kern/kernel.asm	/^f0104cd6:	6a 00                	push   $0x0$/;"	l
f0104cd8	obj/kern/kernel.asm	/^f0104cd8:	6a 23                	push   $0x23$/;"	l
f0104cda	obj/kern/kernel.asm	/^f0104cda:	eb 4e                	jmp    f0104d2a <_alltraps>$/;"	l
f0104cdc	obj/kern/kernel.asm	/^f0104cdc <__idt_irq4>:$/;"	l
f0104cdc	obj/kern/kernel.asm	/^f0104cdc:	6a 00                	push   $0x0$/;"	l
f0104cde	obj/kern/kernel.asm	/^f0104cde:	6a 24                	push   $0x24$/;"	l
f0104ce0	obj/kern/kernel.asm	/^f0104ce0:	eb 48                	jmp    f0104d2a <_alltraps>$/;"	l
f0104ce2	obj/kern/kernel.asm	/^f0104ce2 <__idt_irq5>:$/;"	l
f0104ce2	obj/kern/kernel.asm	/^f0104ce2:	6a 00                	push   $0x0$/;"	l
f0104ce4	obj/kern/kernel.asm	/^f0104ce4:	6a 25                	push   $0x25$/;"	l
f0104ce6	obj/kern/kernel.asm	/^f0104ce6:	eb 42                	jmp    f0104d2a <_alltraps>$/;"	l
f0104ce8	obj/kern/kernel.asm	/^f0104ce8 <__idt_irq6>:$/;"	l
f0104ce8	obj/kern/kernel.asm	/^f0104ce8:	6a 00                	push   $0x0$/;"	l
f0104cea	obj/kern/kernel.asm	/^f0104cea:	6a 26                	push   $0x26$/;"	l
f0104cec	obj/kern/kernel.asm	/^f0104cec:	eb 3c                	jmp    f0104d2a <_alltraps>$/;"	l
f0104cee	obj/kern/kernel.asm	/^f0104cee <__idt_irq7>:$/;"	l
f0104cee	obj/kern/kernel.asm	/^f0104cee:	6a 00                	push   $0x0$/;"	l
f0104cf0	obj/kern/kernel.asm	/^f0104cf0:	6a 27                	push   $0x27$/;"	l
f0104cf2	obj/kern/kernel.asm	/^f0104cf2:	eb 36                	jmp    f0104d2a <_alltraps>$/;"	l
f0104cf4	obj/kern/kernel.asm	/^f0104cf4 <__idt_irq8>:$/;"	l
f0104cf4	obj/kern/kernel.asm	/^f0104cf4:	6a 00                	push   $0x0$/;"	l
f0104cf6	obj/kern/kernel.asm	/^f0104cf6:	6a 28                	push   $0x28$/;"	l
f0104cf8	obj/kern/kernel.asm	/^f0104cf8:	eb 30                	jmp    f0104d2a <_alltraps>$/;"	l
f0104cfa	obj/kern/kernel.asm	/^f0104cfa <__idt_irq9>:$/;"	l
f0104cfa	obj/kern/kernel.asm	/^f0104cfa:	6a 00                	push   $0x0$/;"	l
f0104cfc	obj/kern/kernel.asm	/^f0104cfc:	6a 29                	push   $0x29$/;"	l
f0104cfe	obj/kern/kernel.asm	/^f0104cfe:	eb 2a                	jmp    f0104d2a <_alltraps>$/;"	l
f0104d00	obj/kern/kernel.asm	/^f0104d00 <__idt_irq10>:$/;"	l
f0104d00	obj/kern/kernel.asm	/^f0104d00:	6a 00                	push   $0x0$/;"	l
f0104d02	obj/kern/kernel.asm	/^f0104d02:	6a 2a                	push   $0x2a$/;"	l
f0104d04	obj/kern/kernel.asm	/^f0104d04:	eb 24                	jmp    f0104d2a <_alltraps>$/;"	l
f0104d06	obj/kern/kernel.asm	/^f0104d06 <__idt_irq11>:$/;"	l
f0104d06	obj/kern/kernel.asm	/^f0104d06:	6a 00                	push   $0x0$/;"	l
f0104d08	obj/kern/kernel.asm	/^f0104d08:	6a 2b                	push   $0x2b$/;"	l
f0104d0a	obj/kern/kernel.asm	/^f0104d0a:	eb 1e                	jmp    f0104d2a <_alltraps>$/;"	l
f0104d0c	obj/kern/kernel.asm	/^f0104d0c <__idt_irq12>:$/;"	l
f0104d0c	obj/kern/kernel.asm	/^f0104d0c:	6a 00                	push   $0x0$/;"	l
f0104d0e	obj/kern/kernel.asm	/^f0104d0e:	6a 2c                	push   $0x2c$/;"	l
f0104d10	obj/kern/kernel.asm	/^f0104d10:	eb 18                	jmp    f0104d2a <_alltraps>$/;"	l
f0104d12	obj/kern/kernel.asm	/^f0104d12 <__idt_irq13>:$/;"	l
f0104d12	obj/kern/kernel.asm	/^f0104d12:	6a 00                	push   $0x0$/;"	l
f0104d14	obj/kern/kernel.asm	/^f0104d14:	6a 2d                	push   $0x2d$/;"	l
f0104d16	obj/kern/kernel.asm	/^f0104d16:	eb 12                	jmp    f0104d2a <_alltraps>$/;"	l
f0104d18	obj/kern/kernel.asm	/^f0104d18 <__idt_irq14>:$/;"	l
f0104d18	obj/kern/kernel.asm	/^f0104d18:	6a 00                	push   $0x0$/;"	l
f0104d1a	obj/kern/kernel.asm	/^f0104d1a:	6a 2e                	push   $0x2e$/;"	l
f0104d1c	obj/kern/kernel.asm	/^f0104d1c:	eb 0c                	jmp    f0104d2a <_alltraps>$/;"	l
f0104d1e	obj/kern/kernel.asm	/^f0104d1e <__idt_irq15>:$/;"	l
f0104d1e	obj/kern/kernel.asm	/^f0104d1e:	6a 00                	push   $0x0$/;"	l
f0104d20	obj/kern/kernel.asm	/^f0104d20:	6a 2f                	push   $0x2f$/;"	l
f0104d22	obj/kern/kernel.asm	/^f0104d22:	eb 06                	jmp    f0104d2a <_alltraps>$/;"	l
f0104d24	obj/kern/kernel.asm	/^f0104d24 <__idt_irq19>:$/;"	l
f0104d24	obj/kern/kernel.asm	/^f0104d24:	6a 00                	push   $0x0$/;"	l
f0104d26	obj/kern/kernel.asm	/^f0104d26:	6a 33                	push   $0x33$/;"	l
f0104d28	obj/kern/kernel.asm	/^f0104d28:	eb 00                	jmp    f0104d2a <_alltraps>$/;"	l
f0104d2a	obj/kern/kernel.asm	/^f0104d2a <_alltraps>:$/;"	l
f0104d2a	obj/kern/kernel.asm	/^f0104d2a:	1e                   	push   %ds$/;"	l
f0104d2b	obj/kern/kernel.asm	/^f0104d2b:	06                   	push   %es$/;"	l
f0104d2c	obj/kern/kernel.asm	/^f0104d2c:	60                   	pusha  $/;"	l
f0104d2d	obj/kern/kernel.asm	/^f0104d2d:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0104d31	obj/kern/kernel.asm	/^f0104d31:	8e d8                	mov    %eax,%ds$/;"	l
f0104d33	obj/kern/kernel.asm	/^f0104d33:	8e c0                	mov    %eax,%es$/;"	l
f0104d35	obj/kern/kernel.asm	/^f0104d35:	54                   	push   %esp$/;"	l
f0104d36	obj/kern/kernel.asm	/^f0104d36:	e8 c4 fc ff ff       	call   f01049ff <trap>$/;"	l
f0104d3b	obj/kern/kernel.asm	/^f0104d3b:	66 90                	xchg   %ax,%ax$/;"	l
f0104d3d	obj/kern/kernel.asm	/^f0104d3d:	66 90                	xchg   %ax,%ax$/;"	l
f0104d3f	obj/kern/kernel.asm	/^f0104d3f:	90                   	nop$/;"	l
f0104d40	obj/kern/kernel.asm	/^f0104d40 <RR_sched>:$/;"	l
f0104d40	obj/kern/kernel.asm	/^f0104d40:	55                   	push   %ebp$/;"	l
f0104d41	obj/kern/kernel.asm	/^f0104d41:	89 e5                	mov    %esp,%ebp$/;"	l
f0104d43	obj/kern/kernel.asm	/^f0104d43:	53                   	push   %ebx$/;"	l
f0104d44	obj/kern/kernel.asm	/^f0104d44:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104d47	obj/kern/kernel.asm	/^f0104d47:	e8 f8 1b 00 00       	call   f0106944 <cpunum>$/;"	l
f0104d4c	obj/kern/kernel.asm	/^f0104d4c:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0104d4f	obj/kern/kernel.asm	/^f0104d4f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104d54	obj/kern/kernel.asm	/^f0104d54:	83 ba 28 60 20 f0 00 	cmpl   $0x0,-0xfdf9fd8(%edx)$/;"	l
f0104d5b	obj/kern/kernel.asm	/^f0104d5b:	74 19                	je     f0104d76 <RR_sched+0x36>$/;"	l
f0104d5d	obj/kern/kernel.asm	/^f0104d5d:	e8 e2 1b 00 00       	call   f0106944 <cpunum>$/;"	l
f0104d62	obj/kern/kernel.asm	/^f0104d62:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104d65	obj/kern/kernel.asm	/^f0104d65:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f0104d6b	obj/kern/kernel.asm	/^f0104d6b:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104d6e	obj/kern/kernel.asm	/^f0104d6e:	8d 40 01             	lea    0x1(%eax),%eax$/;"	l
f0104d71	obj/kern/kernel.asm	/^f0104d71:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0104d76	obj/kern/kernel.asm	/^f0104d76:	8b 1d 48 52 20 f0    	mov    0xf0205248,%ebx$/;"	l
f0104d7c	obj/kern/kernel.asm	/^f0104d7c:	89 c1                	mov    %eax,%ecx$/;"	l
f0104d7e	obj/kern/kernel.asm	/^f0104d7e:	c1 e1 07             	shl    $0x7,%ecx$/;"	l
f0104d81	obj/kern/kernel.asm	/^f0104d81:	01 d9                	add    %ebx,%ecx$/;"	l
f0104d83	obj/kern/kernel.asm	/^f0104d83:	83 79 54 02          	cmpl   $0x2,0x54(%ecx)$/;"	l
f0104d87	obj/kern/kernel.asm	/^f0104d87:	75 6b                	jne    f0104df4 <RR_sched+0xb4>$/;"	l
f0104d89	obj/kern/kernel.asm	/^f0104d89:	eb 0d                	jmp    f0104d98 <RR_sched+0x58>$/;"	l
f0104d8b	obj/kern/kernel.asm	/^f0104d8b:	89 c1                	mov    %eax,%ecx$/;"	l
f0104d8d	obj/kern/kernel.asm	/^f0104d8d:	c1 e1 07             	shl    $0x7,%ecx$/;"	l
f0104d90	obj/kern/kernel.asm	/^f0104d90:	01 d9                	add    %ebx,%ecx$/;"	l
f0104d92	obj/kern/kernel.asm	/^f0104d92:	83 79 54 02          	cmpl   $0x2,0x54(%ecx)$/;"	l
f0104d96	obj/kern/kernel.asm	/^f0104d96:	75 08                	jne    f0104da0 <RR_sched+0x60>$/;"	l
f0104d98	obj/kern/kernel.asm	/^f0104d98:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0104d9b	obj/kern/kernel.asm	/^f0104d9b:	e8 eb ee ff ff       	call   f0103c8b <env_run>$/;"	l
f0104da0	obj/kern/kernel.asm	/^f0104da0:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104da3	obj/kern/kernel.asm	/^f0104da3:	89 c1                	mov    %eax,%ecx$/;"	l
f0104da5	obj/kern/kernel.asm	/^f0104da5:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f0104da8	obj/kern/kernel.asm	/^f0104da8:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0104dab	obj/kern/kernel.asm	/^f0104dab:	01 c8                	add    %ecx,%eax$/;"	l
f0104dad	obj/kern/kernel.asm	/^f0104dad:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0104db2	obj/kern/kernel.asm	/^f0104db2:	29 c8                	sub    %ecx,%eax$/;"	l
f0104db4	obj/kern/kernel.asm	/^f0104db4:	83 ea 01             	sub    $0x1,%edx$/;"	l
f0104db7	obj/kern/kernel.asm	/^f0104db7:	75 d2                	jne    f0104d8b <RR_sched+0x4b>$/;"	l
f0104db9	obj/kern/kernel.asm	/^f0104db9:	e8 86 1b 00 00       	call   f0106944 <cpunum>$/;"	l
f0104dbe	obj/kern/kernel.asm	/^f0104dbe:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104dc1	obj/kern/kernel.asm	/^f0104dc1:	83 b8 28 60 20 f0 00 	cmpl   $0x0,-0xfdf9fd8(%eax)$/;"	l
f0104dc8	obj/kern/kernel.asm	/^f0104dc8:	74 41                	je     f0104e0b <RR_sched+0xcb>$/;"	l
f0104dca	obj/kern/kernel.asm	/^f0104dca:	e8 75 1b 00 00       	call   f0106944 <cpunum>$/;"	l
f0104dcf	obj/kern/kernel.asm	/^f0104dcf:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104dd2	obj/kern/kernel.asm	/^f0104dd2:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f0104dd8	obj/kern/kernel.asm	/^f0104dd8:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104ddc	obj/kern/kernel.asm	/^f0104ddc:	75 2d                	jne    f0104e0b <RR_sched+0xcb>$/;"	l
f0104dde	obj/kern/kernel.asm	/^f0104dde:	e8 61 1b 00 00       	call   f0106944 <cpunum>$/;"	l
f0104de3	obj/kern/kernel.asm	/^f0104de3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104de6	obj/kern/kernel.asm	/^f0104de6:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f0104dec	obj/kern/kernel.asm	/^f0104dec:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104def	obj/kern/kernel.asm	/^f0104def:	e8 97 ee ff ff       	call   f0103c8b <env_run>$/;"	l
f0104df4	obj/kern/kernel.asm	/^f0104df4:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104df7	obj/kern/kernel.asm	/^f0104df7:	99                   	cltd   $/;"	l
f0104df8	obj/kern/kernel.asm	/^f0104df8:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0104dfb	obj/kern/kernel.asm	/^f0104dfb:	01 d0                	add    %edx,%eax$/;"	l
f0104dfd	obj/kern/kernel.asm	/^f0104dfd:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0104e02	obj/kern/kernel.asm	/^f0104e02:	29 d0                	sub    %edx,%eax$/;"	l
f0104e04	obj/kern/kernel.asm	/^f0104e04:	ba ff 03 00 00       	mov    $0x3ff,%edx$/;"	l
f0104e09	obj/kern/kernel.asm	/^f0104e09:	eb 80                	jmp    f0104d8b <RR_sched+0x4b>$/;"	l
f0104e0b	obj/kern/kernel.asm	/^f0104e0b:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104e0e	obj/kern/kernel.asm	/^f0104e0e:	5b                   	pop    %ebx$/;"	l
f0104e0f	obj/kern/kernel.asm	/^f0104e0f:	5d                   	pop    %ebp$/;"	l
f0104e10	obj/kern/kernel.asm	/^f0104e10:	c3                   	ret    $/;"	l
f0104e11	obj/kern/kernel.asm	/^f0104e11 <RR_Priority_sched>:$/;"	l
f0104e11	obj/kern/kernel.asm	/^f0104e11:	55                   	push   %ebp$/;"	l
f0104e12	obj/kern/kernel.asm	/^f0104e12:	89 e5                	mov    %esp,%ebp$/;"	l
f0104e14	obj/kern/kernel.asm	/^f0104e14:	57                   	push   %edi$/;"	l
f0104e15	obj/kern/kernel.asm	/^f0104e15:	56                   	push   %esi$/;"	l
f0104e16	obj/kern/kernel.asm	/^f0104e16:	53                   	push   %ebx$/;"	l
f0104e17	obj/kern/kernel.asm	/^f0104e17:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0104e1a	obj/kern/kernel.asm	/^f0104e1a:	e8 25 1b 00 00       	call   f0106944 <cpunum>$/;"	l
f0104e1f	obj/kern/kernel.asm	/^f0104e1f:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0104e22	obj/kern/kernel.asm	/^f0104e22:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104e27	obj/kern/kernel.asm	/^f0104e27:	83 ba 28 60 20 f0 00 	cmpl   $0x0,-0xfdf9fd8(%edx)$/;"	l
f0104e2e	obj/kern/kernel.asm	/^f0104e2e:	74 19                	je     f0104e49 <RR_Priority_sched+0x38>$/;"	l
f0104e30	obj/kern/kernel.asm	/^f0104e30:	e8 0f 1b 00 00       	call   f0106944 <cpunum>$/;"	l
f0104e35	obj/kern/kernel.asm	/^f0104e35:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104e38	obj/kern/kernel.asm	/^f0104e38:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f0104e3e	obj/kern/kernel.asm	/^f0104e3e:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104e41	obj/kern/kernel.asm	/^f0104e41:	8d 40 01             	lea    0x1(%eax),%eax$/;"	l
f0104e44	obj/kern/kernel.asm	/^f0104e44:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0104e49	obj/kern/kernel.asm	/^f0104e49:	8b 3d 48 52 20 f0    	mov    0xf0205248,%edi$/;"	l
f0104e4f	obj/kern/kernel.asm	/^f0104e4f:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0104e54	obj/kern/kernel.asm	/^f0104e54:	be ff ff ff ff       	mov    $0xffffffff,%esi$/;"	l
f0104e59	obj/kern/kernel.asm	/^f0104e59:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0104e5e	obj/kern/kernel.asm	/^f0104e5e:	89 c1                	mov    %eax,%ecx$/;"	l
f0104e60	obj/kern/kernel.asm	/^f0104e60:	c1 e1 07             	shl    $0x7,%ecx$/;"	l
f0104e63	obj/kern/kernel.asm	/^f0104e63:	01 f9                	add    %edi,%ecx$/;"	l
f0104e65	obj/kern/kernel.asm	/^f0104e65:	83 79 54 02          	cmpl   $0x2,0x54(%ecx)$/;"	l
f0104e69	obj/kern/kernel.asm	/^f0104e69:	75 1b                	jne    f0104e86 <RR_Priority_sched+0x75>$/;"	l
f0104e6b	obj/kern/kernel.asm	/^f0104e6b:	8b 49 7c             	mov    0x7c(%ecx),%ecx$/;"	l
f0104e6e	obj/kern/kernel.asm	/^f0104e6e:	39 d9                	cmp    %ebx,%ecx$/;"	l
f0104e70	obj/kern/kernel.asm	/^f0104e70:	77 07                	ja     f0104e79 <RR_Priority_sched+0x68>$/;"	l
f0104e72	obj/kern/kernel.asm	/^f0104e72:	83 fe ff             	cmp    $0xffffffff,%esi$/;"	l
f0104e75	obj/kern/kernel.asm	/^f0104e75:	75 0f                	jne    f0104e86 <RR_Priority_sched+0x75>$/;"	l
f0104e77	obj/kern/kernel.asm	/^f0104e77:	eb 09                	jmp    f0104e82 <RR_Priority_sched+0x71>$/;"	l
f0104e79	obj/kern/kernel.asm	/^f0104e79:	89 c6                	mov    %eax,%esi$/;"	l
f0104e7b	obj/kern/kernel.asm	/^f0104e7b:	89 cb                	mov    %ecx,%ebx$/;"	l
f0104e7d	obj/kern/kernel.asm	/^f0104e7d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0104e80	obj/kern/kernel.asm	/^f0104e80:	eb 04                	jmp    f0104e86 <RR_Priority_sched+0x75>$/;"	l
f0104e82	obj/kern/kernel.asm	/^f0104e82:	89 c6                	mov    %eax,%esi$/;"	l
f0104e84	obj/kern/kernel.asm	/^f0104e84:	89 cb                	mov    %ecx,%ebx$/;"	l
f0104e86	obj/kern/kernel.asm	/^f0104e86:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104e89	obj/kern/kernel.asm	/^f0104e89:	89 c1                	mov    %eax,%ecx$/;"	l
f0104e8b	obj/kern/kernel.asm	/^f0104e8b:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f0104e8e	obj/kern/kernel.asm	/^f0104e8e:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0104e91	obj/kern/kernel.asm	/^f0104e91:	01 c8                	add    %ecx,%eax$/;"	l
f0104e93	obj/kern/kernel.asm	/^f0104e93:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0104e98	obj/kern/kernel.asm	/^f0104e98:	29 c8                	sub    %ecx,%eax$/;"	l
f0104e9a	obj/kern/kernel.asm	/^f0104e9a:	83 ea 01             	sub    $0x1,%edx$/;"	l
f0104e9d	obj/kern/kernel.asm	/^f0104e9d:	75 bf                	jne    f0104e5e <RR_Priority_sched+0x4d>$/;"	l
f0104e9f	obj/kern/kernel.asm	/^f0104e9f:	85 f6                	test   %esi,%esi$/;"	l
f0104ea1	obj/kern/kernel.asm	/^f0104ea1:	78 4b                	js     f0104eee <RR_Priority_sched+0xdd>$/;"	l
f0104ea3	obj/kern/kernel.asm	/^f0104ea3:	e8 9c 1a 00 00       	call   f0106944 <cpunum>$/;"	l
f0104ea8	obj/kern/kernel.asm	/^f0104ea8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104eab	obj/kern/kernel.asm	/^f0104eab:	83 b8 28 60 20 f0 00 	cmpl   $0x0,-0xfdf9fd8(%eax)$/;"	l
f0104eb2	obj/kern/kernel.asm	/^f0104eb2:	74 27                	je     f0104edb <RR_Priority_sched+0xca>$/;"	l
f0104eb4	obj/kern/kernel.asm	/^f0104eb4:	e8 8b 1a 00 00       	call   f0106944 <cpunum>$/;"	l
f0104eb9	obj/kern/kernel.asm	/^f0104eb9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ebc	obj/kern/kernel.asm	/^f0104ebc:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f0104ec2	obj/kern/kernel.asm	/^f0104ec2:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104ec6	obj/kern/kernel.asm	/^f0104ec6:	75 13                	jne    f0104edb <RR_Priority_sched+0xca>$/;"	l
f0104ec8	obj/kern/kernel.asm	/^f0104ec8:	e8 77 1a 00 00       	call   f0106944 <cpunum>$/;"	l
f0104ecd	obj/kern/kernel.asm	/^f0104ecd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ed0	obj/kern/kernel.asm	/^f0104ed0:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f0104ed6	obj/kern/kernel.asm	/^f0104ed6:	39 58 7c             	cmp    %ebx,0x7c(%eax)$/;"	l
f0104ed9	obj/kern/kernel.asm	/^f0104ed9:	77 13                	ja     f0104eee <RR_Priority_sched+0xdd>$/;"	l
f0104edb	obj/kern/kernel.asm	/^f0104edb:	89 f0                	mov    %esi,%eax$/;"	l
f0104edd	obj/kern/kernel.asm	/^f0104edd:	c1 e0 07             	shl    $0x7,%eax$/;"	l
f0104ee0	obj/kern/kernel.asm	/^f0104ee0:	03 05 48 52 20 f0    	add    0xf0205248,%eax$/;"	l
f0104ee6	obj/kern/kernel.asm	/^f0104ee6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104ee9	obj/kern/kernel.asm	/^f0104ee9:	e8 9d ed ff ff       	call   f0103c8b <env_run>$/;"	l
f0104eee	obj/kern/kernel.asm	/^f0104eee:	e8 51 1a 00 00       	call   f0106944 <cpunum>$/;"	l
f0104ef3	obj/kern/kernel.asm	/^f0104ef3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ef6	obj/kern/kernel.asm	/^f0104ef6:	83 b8 28 60 20 f0 00 	cmpl   $0x0,-0xfdf9fd8(%eax)$/;"	l
f0104efd	obj/kern/kernel.asm	/^f0104efd:	74 2a                	je     f0104f29 <RR_Priority_sched+0x118>$/;"	l
f0104eff	obj/kern/kernel.asm	/^f0104eff:	e8 40 1a 00 00       	call   f0106944 <cpunum>$/;"	l
f0104f04	obj/kern/kernel.asm	/^f0104f04:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f07	obj/kern/kernel.asm	/^f0104f07:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f0104f0d	obj/kern/kernel.asm	/^f0104f0d:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104f11	obj/kern/kernel.asm	/^f0104f11:	75 16                	jne    f0104f29 <RR_Priority_sched+0x118>$/;"	l
f0104f13	obj/kern/kernel.asm	/^f0104f13:	e8 2c 1a 00 00       	call   f0106944 <cpunum>$/;"	l
f0104f18	obj/kern/kernel.asm	/^f0104f18:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f1b	obj/kern/kernel.asm	/^f0104f1b:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f0104f21	obj/kern/kernel.asm	/^f0104f21:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104f24	obj/kern/kernel.asm	/^f0104f24:	e8 62 ed ff ff       	call   f0103c8b <env_run>$/;"	l
f0104f29	obj/kern/kernel.asm	/^f0104f29:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0104f2c	obj/kern/kernel.asm	/^f0104f2c:	5b                   	pop    %ebx$/;"	l
f0104f2d	obj/kern/kernel.asm	/^f0104f2d:	5e                   	pop    %esi$/;"	l
f0104f2e	obj/kern/kernel.asm	/^f0104f2e:	5f                   	pop    %edi$/;"	l
f0104f2f	obj/kern/kernel.asm	/^f0104f2f:	5d                   	pop    %ebp$/;"	l
f0104f30	obj/kern/kernel.asm	/^f0104f30:	c3                   	ret    $/;"	l
f0104f31	obj/kern/kernel.asm	/^f0104f31 <sched_halt>:$/;"	l
f0104f31	obj/kern/kernel.asm	/^f0104f31:	55                   	push   %ebp$/;"	l
f0104f32	obj/kern/kernel.asm	/^f0104f32:	89 e5                	mov    %esp,%ebp$/;"	l
f0104f34	obj/kern/kernel.asm	/^f0104f34:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104f37	obj/kern/kernel.asm	/^f0104f37:	8b 15 48 52 20 f0    	mov    0xf0205248,%edx$/;"	l
f0104f3d	obj/kern/kernel.asm	/^f0104f3d:	8b 42 54             	mov    0x54(%edx),%eax$/;"	l
f0104f40	obj/kern/kernel.asm	/^f0104f40:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104f43	obj/kern/kernel.asm	/^f0104f43:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0104f46	obj/kern/kernel.asm	/^f0104f46:	76 43                	jbe    f0104f8b <sched_halt+0x5a>$/;"	l
f0104f48	obj/kern/kernel.asm	/^f0104f48:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104f4d	obj/kern/kernel.asm	/^f0104f4d:	8b 8a d4 00 00 00    	mov    0xd4(%edx),%ecx$/;"	l
f0104f53	obj/kern/kernel.asm	/^f0104f53:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f0104f56	obj/kern/kernel.asm	/^f0104f56:	83 f9 02             	cmp    $0x2,%ecx$/;"	l
f0104f59	obj/kern/kernel.asm	/^f0104f59:	76 0f                	jbe    f0104f6a <sched_halt+0x39>$/;"	l
f0104f5b	obj/kern/kernel.asm	/^f0104f5b:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104f5e	obj/kern/kernel.asm	/^f0104f5e:	83 ea 80             	sub    $0xffffff80,%edx$/;"	l
f0104f61	obj/kern/kernel.asm	/^f0104f61:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0104f66	obj/kern/kernel.asm	/^f0104f66:	75 e5                	jne    f0104f4d <sched_halt+0x1c>$/;"	l
f0104f68	obj/kern/kernel.asm	/^f0104f68:	eb 07                	jmp    f0104f71 <sched_halt+0x40>$/;"	l
f0104f6a	obj/kern/kernel.asm	/^f0104f6a:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0104f6f	obj/kern/kernel.asm	/^f0104f6f:	75 1a                	jne    f0104f8b <sched_halt+0x5a>$/;"	l
f0104f71	obj/kern/kernel.asm	/^f0104f71:	c7 04 24 30 87 10 f0 	movl   $0xf0108730,(%esp)$/;"	l
f0104f78	obj/kern/kernel.asm	/^f0104f78:	e8 91 ef ff ff       	call   f0103f0e <cprintf>$/;"	l
f0104f7d	obj/kern/kernel.asm	/^f0104f7d:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0104f84	obj/kern/kernel.asm	/^f0104f84:	e8 a5 ba ff ff       	call   f0100a2e <monitor>$/;"	l
f0104f89	obj/kern/kernel.asm	/^f0104f89:	eb f2                	jmp    f0104f7d <sched_halt+0x4c>$/;"	l
f0104f8b	obj/kern/kernel.asm	/^f0104f8b:	e8 b4 19 00 00       	call   f0106944 <cpunum>$/;"	l
f0104f90	obj/kern/kernel.asm	/^f0104f90:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f93	obj/kern/kernel.asm	/^f0104f93:	c7 80 28 60 20 f0 00 	movl   $0x0,-0xfdf9fd8(%eax)$/;"	l
f0104f9a	obj/kern/kernel.asm	/^f0104f9a:	00 00 00 $/;"	l
f0104f9d	obj/kern/kernel.asm	/^f0104f9d:	a1 8c 5e 20 f0       	mov    0xf0205e8c,%eax$/;"	l
f0104fa2	obj/kern/kernel.asm	/^f0104fa2:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0104fa7	obj/kern/kernel.asm	/^f0104fa7:	77 20                	ja     f0104fc9 <sched_halt+0x98>$/;"	l
f0104fa9	obj/kern/kernel.asm	/^f0104fa9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104fad	obj/kern/kernel.asm	/^f0104fad:	c7 44 24 08 a8 70 10 	movl   $0xf01070a8,0x8(%esp)$/;"	l
f0104fb4	obj/kern/kernel.asm	/^f0104fb4:	f0 $/;"	l
f0104fb5	obj/kern/kernel.asm	/^f0104fb5:	c7 44 24 04 97 00 00 	movl   $0x97,0x4(%esp)$/;"	l
f0104fbc	obj/kern/kernel.asm	/^f0104fbc:	00 $/;"	l
f0104fbd	obj/kern/kernel.asm	/^f0104fbd:	c7 04 24 59 87 10 f0 	movl   $0xf0108759,(%esp)$/;"	l
f0104fc4	obj/kern/kernel.asm	/^f0104fc4:	e8 77 b0 ff ff       	call   f0100040 <_panic>$/;"	l
f0104fc9	obj/kern/kernel.asm	/^f0104fc9:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0104fce	obj/kern/kernel.asm	/^f0104fce:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0104fd1	obj/kern/kernel.asm	/^f0104fd1:	e8 6e 19 00 00       	call   f0106944 <cpunum>$/;"	l
f0104fd6	obj/kern/kernel.asm	/^f0104fd6:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0104fd9	obj/kern/kernel.asm	/^f0104fd9:	81 c2 20 60 20 f0    	add    $0xf0206020,%edx$/;"	l
f0104fdf	obj/kern/kernel.asm	/^f0104fdf:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0104fe4	obj/kern/kernel.asm	/^f0104fe4:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0104fe8	obj/kern/kernel.asm	/^f0104fe8:	c7 04 24 c0 13 12 f0 	movl   $0xf01213c0,(%esp)$/;"	l
f0104fef	obj/kern/kernel.asm	/^f0104fef:	e8 a5 1c 00 00       	call   f0106c99 <spin_unlock>$/;"	l
f0104ff4	obj/kern/kernel.asm	/^f0104ff4:	f3 90                	pause  $/;"	l
f0104ff6	obj/kern/kernel.asm	/^f0104ff6:	e8 49 19 00 00       	call   f0106944 <cpunum>$/;"	l
f0104ffb	obj/kern/kernel.asm	/^f0104ffb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ffe	obj/kern/kernel.asm	/^f0104ffe:	8b 80 30 60 20 f0    	mov    -0xfdf9fd0(%eax),%eax$/;"	l
f0105004	obj/kern/kernel.asm	/^f0105004:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0105009	obj/kern/kernel.asm	/^f0105009:	89 c4                	mov    %eax,%esp$/;"	l
f010500b	obj/kern/kernel.asm	/^f010500b:	6a 00                	push   $0x0$/;"	l
f010500d	obj/kern/kernel.asm	/^f010500d:	6a 00                	push   $0x0$/;"	l
f010500f	obj/kern/kernel.asm	/^f010500f:	fb                   	sti    $/;"	l
f0105010	obj/kern/kernel.asm	/^f0105010:	f4                   	hlt    $/;"	l
f0105011	obj/kern/kernel.asm	/^f0105011:	c9                   	leave  $/;"	l
f0105012	obj/kern/kernel.asm	/^f0105012:	c3                   	ret    $/;"	l
f0105013	obj/kern/kernel.asm	/^f0105013 <sched_yield>:$/;"	l
f0105013	obj/kern/kernel.asm	/^f0105013:	55                   	push   %ebp$/;"	l
f0105014	obj/kern/kernel.asm	/^f0105014:	89 e5                	mov    %esp,%ebp$/;"	l
f0105016	obj/kern/kernel.asm	/^f0105016:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105019	obj/kern/kernel.asm	/^f0105019:	e8 22 fd ff ff       	call   f0104d40 <RR_sched>$/;"	l
f010501e	obj/kern/kernel.asm	/^f010501e:	e8 0e ff ff ff       	call   f0104f31 <sched_halt>$/;"	l
f0105023	obj/kern/kernel.asm	/^f0105023:	c9                   	leave  $/;"	l
f0105024	obj/kern/kernel.asm	/^f0105024:	c3                   	ret    $/;"	l
f0105025	obj/kern/kernel.asm	/^f0105025:	66 90                	xchg   %ax,%ax$/;"	l
f0105027	obj/kern/kernel.asm	/^f0105027:	66 90                	xchg   %ax,%ax$/;"	l
f0105029	obj/kern/kernel.asm	/^f0105029:	66 90                	xchg   %ax,%ax$/;"	l
f010502b	obj/kern/kernel.asm	/^f010502b:	66 90                	xchg   %ax,%ax$/;"	l
f010502d	obj/kern/kernel.asm	/^f010502d:	66 90                	xchg   %ax,%ax$/;"	l
f010502f	obj/kern/kernel.asm	/^f010502f:	90                   	nop$/;"	l
f0105030	obj/kern/kernel.asm	/^f0105030 <syscall>:$/;"	l
f0105030	obj/kern/kernel.asm	/^f0105030:	55                   	push   %ebp$/;"	l
f0105031	obj/kern/kernel.asm	/^f0105031:	89 e5                	mov    %esp,%ebp$/;"	l
f0105033	obj/kern/kernel.asm	/^f0105033:	57                   	push   %edi$/;"	l
f0105034	obj/kern/kernel.asm	/^f0105034:	56                   	push   %esi$/;"	l
f0105035	obj/kern/kernel.asm	/^f0105035:	53                   	push   %ebx$/;"	l
f0105036	obj/kern/kernel.asm	/^f0105036:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0105039	obj/kern/kernel.asm	/^f0105039:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010503c	obj/kern/kernel.asm	/^f010503c:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f010503f	obj/kern/kernel.asm	/^f010503f:	0f 87 43 06 00 00    	ja     f0105688 <syscall+0x658>$/;"	l
f0105045	obj/kern/kernel.asm	/^f0105045:	ff 24 85 6c 87 10 f0 	jmp    *-0xfef7894(,%eax,4)$/;"	l
f010504c	obj/kern/kernel.asm	/^f010504c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010504f	obj/kern/kernel.asm	/^f010504f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105053	obj/kern/kernel.asm	/^f0105053:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105056	obj/kern/kernel.asm	/^f0105056:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010505a	obj/kern/kernel.asm	/^f010505a:	c7 04 24 66 87 10 f0 	movl   $0xf0108766,(%esp)$/;"	l
f0105061	obj/kern/kernel.asm	/^f0105061:	e8 a8 ee ff ff       	call   f0103f0e <cprintf>$/;"	l
f0105066	obj/kern/kernel.asm	/^f0105066:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010506b	obj/kern/kernel.asm	/^f010506b:	e9 24 06 00 00       	jmp    f0105694 <syscall+0x664>$/;"	l
f0105070	obj/kern/kernel.asm	/^f0105070:	e8 f0 b5 ff ff       	call   f0100665 <cons_getc>$/;"	l
f0105075	obj/kern/kernel.asm	/^f0105075:	e9 1a 06 00 00       	jmp    f0105694 <syscall+0x664>$/;"	l
f010507a	obj/kern/kernel.asm	/^f010507a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0105080	obj/kern/kernel.asm	/^f0105080:	e8 bf 18 00 00       	call   f0106944 <cpunum>$/;"	l
f0105085	obj/kern/kernel.asm	/^f0105085:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105088	obj/kern/kernel.asm	/^f0105088:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f010508e	obj/kern/kernel.asm	/^f010508e:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0105091	obj/kern/kernel.asm	/^f0105091:	e9 fe 05 00 00       	jmp    f0105694 <syscall+0x664>$/;"	l
f0105096	obj/kern/kernel.asm	/^f0105096:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010509d	obj/kern/kernel.asm	/^f010509d:	00 $/;"	l
f010509e	obj/kern/kernel.asm	/^f010509e:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01050a1	obj/kern/kernel.asm	/^f01050a1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01050a5	obj/kern/kernel.asm	/^f01050a5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01050a8	obj/kern/kernel.asm	/^f01050a8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01050ab	obj/kern/kernel.asm	/^f01050ab:	e8 7a e5 ff ff       	call   f010362a <envid2env>$/;"	l
f01050b0	obj/kern/kernel.asm	/^f01050b0:	89 c2                	mov    %eax,%edx$/;"	l
f01050b2	obj/kern/kernel.asm	/^f01050b2:	85 c0                	test   %eax,%eax$/;"	l
f01050b4	obj/kern/kernel.asm	/^f01050b4:	78 10                	js     f01050c6 <syscall+0x96>$/;"	l
f01050b6	obj/kern/kernel.asm	/^f01050b6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01050b9	obj/kern/kernel.asm	/^f01050b9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01050bc	obj/kern/kernel.asm	/^f01050bc:	e8 29 eb ff ff       	call   f0103bea <env_destroy>$/;"	l
f01050c1	obj/kern/kernel.asm	/^f01050c1:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01050c6	obj/kern/kernel.asm	/^f01050c6:	89 d0                	mov    %edx,%eax$/;"	l
f01050c8	obj/kern/kernel.asm	/^f01050c8:	e9 c7 05 00 00       	jmp    f0105694 <syscall+0x664>$/;"	l
f01050cd	obj/kern/kernel.asm	/^f01050cd:	e8 72 18 00 00       	call   f0106944 <cpunum>$/;"	l
f01050d2	obj/kern/kernel.asm	/^f01050d2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01050d5	obj/kern/kernel.asm	/^f01050d5:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f01050db	obj/kern/kernel.asm	/^f01050db:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01050de	obj/kern/kernel.asm	/^f01050de:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01050e2	obj/kern/kernel.asm	/^f01050e2:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01050e5	obj/kern/kernel.asm	/^f01050e5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01050e8	obj/kern/kernel.asm	/^f01050e8:	e8 51 e6 ff ff       	call   f010373e <env_alloc>$/;"	l
f01050ed	obj/kern/kernel.asm	/^f01050ed:	89 c2                	mov    %eax,%edx$/;"	l
f01050ef	obj/kern/kernel.asm	/^f01050ef:	85 c0                	test   %eax,%eax$/;"	l
f01050f1	obj/kern/kernel.asm	/^f01050f1:	78 3c                	js     f010512f <syscall+0xff>$/;"	l
f01050f3	obj/kern/kernel.asm	/^f01050f3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01050f6	obj/kern/kernel.asm	/^f01050f6:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f01050fd	obj/kern/kernel.asm	/^f01050fd:	e8 42 18 00 00       	call   f0106944 <cpunum>$/;"	l
f0105102	obj/kern/kernel.asm	/^f0105102:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f0105109	obj/kern/kernel.asm	/^f0105109:	00 $/;"	l
f010510a	obj/kern/kernel.asm	/^f010510a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010510d	obj/kern/kernel.asm	/^f010510d:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f0105113	obj/kern/kernel.asm	/^f0105113:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105117	obj/kern/kernel.asm	/^f0105117:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010511a	obj/kern/kernel.asm	/^f010511a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010511d	obj/kern/kernel.asm	/^f010511d:	e8 d4 11 00 00       	call   f01062f6 <memmove>$/;"	l
f0105122	obj/kern/kernel.asm	/^f0105122:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105125	obj/kern/kernel.asm	/^f0105125:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f010512c	obj/kern/kernel.asm	/^f010512c:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f010512f	obj/kern/kernel.asm	/^f010512f:	89 d0                	mov    %edx,%eax$/;"	l
f0105131	obj/kern/kernel.asm	/^f0105131:	e9 5e 05 00 00       	jmp    f0105694 <syscall+0x664>$/;"	l
f0105136	obj/kern/kernel.asm	/^f0105136:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010513d	obj/kern/kernel.asm	/^f010513d:	00 $/;"	l
f010513e	obj/kern/kernel.asm	/^f010513e:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105141	obj/kern/kernel.asm	/^f0105141:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105145	obj/kern/kernel.asm	/^f0105145:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105148	obj/kern/kernel.asm	/^f0105148:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010514b	obj/kern/kernel.asm	/^f010514b:	e8 da e4 ff ff       	call   f010362a <envid2env>$/;"	l
f0105150	obj/kern/kernel.asm	/^f0105150:	85 c0                	test   %eax,%eax$/;"	l
f0105152	obj/kern/kernel.asm	/^f0105152:	78 13                	js     f0105167 <syscall+0x137>$/;"	l
f0105154	obj/kern/kernel.asm	/^f0105154:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105157	obj/kern/kernel.asm	/^f0105157:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f010515a	obj/kern/kernel.asm	/^f010515a:	89 78 64             	mov    %edi,0x64(%eax)$/;"	l
f010515d	obj/kern/kernel.asm	/^f010515d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105162	obj/kern/kernel.asm	/^f0105162:	e9 2d 05 00 00       	jmp    f0105694 <syscall+0x664>$/;"	l
f0105167	obj/kern/kernel.asm	/^f0105167:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f010516c	obj/kern/kernel.asm	/^f010516c:	e9 23 05 00 00       	jmp    f0105694 <syscall+0x664>$/;"	l
f0105171	obj/kern/kernel.asm	/^f0105171:	83 7d 10 04          	cmpl   $0x4,0x10(%ebp)$/;"	l
f0105175	obj/kern/kernel.asm	/^f0105175:	74 06                	je     f010517d <syscall+0x14d>$/;"	l
f0105177	obj/kern/kernel.asm	/^f0105177:	83 7d 10 02          	cmpl   $0x2,0x10(%ebp)$/;"	l
f010517b	obj/kern/kernel.asm	/^f010517b:	75 35                	jne    f01051b2 <syscall+0x182>$/;"	l
f010517d	obj/kern/kernel.asm	/^f010517d:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105184	obj/kern/kernel.asm	/^f0105184:	00 $/;"	l
f0105185	obj/kern/kernel.asm	/^f0105185:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105188	obj/kern/kernel.asm	/^f0105188:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010518c	obj/kern/kernel.asm	/^f010518c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010518f	obj/kern/kernel.asm	/^f010518f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105192	obj/kern/kernel.asm	/^f0105192:	e8 93 e4 ff ff       	call   f010362a <envid2env>$/;"	l
f0105197	obj/kern/kernel.asm	/^f0105197:	85 c0                	test   %eax,%eax$/;"	l
f0105199	obj/kern/kernel.asm	/^f0105199:	0f 88 f5 04 00 00    	js     f0105694 <syscall+0x664>$/;"	l
f010519f	obj/kern/kernel.asm	/^f010519f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01051a2	obj/kern/kernel.asm	/^f01051a2:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01051a5	obj/kern/kernel.asm	/^f01051a5:	89 48 54             	mov    %ecx,0x54(%eax)$/;"	l
f01051a8	obj/kern/kernel.asm	/^f01051a8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01051ad	obj/kern/kernel.asm	/^f01051ad:	e9 e2 04 00 00       	jmp    f0105694 <syscall+0x664>$/;"	l
f01051b2	obj/kern/kernel.asm	/^f01051b2:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01051b7	obj/kern/kernel.asm	/^f01051b7:	e9 d8 04 00 00       	jmp    f0105694 <syscall+0x664>$/;"	l
f01051bc	obj/kern/kernel.asm	/^f01051bc:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f01051c3	obj/kern/kernel.asm	/^f01051c3:	0f 87 86 00 00 00    	ja     f010524f <syscall+0x21f>$/;"	l
f01051c9	obj/kern/kernel.asm	/^f01051c9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01051cc	obj/kern/kernel.asm	/^f01051cc:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f01051d1	obj/kern/kernel.asm	/^f01051d1:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01051d6	obj/kern/kernel.asm	/^f01051d6:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f01051d9	obj/kern/kernel.asm	/^f01051d9:	75 7b                	jne    f0105256 <syscall+0x226>$/;"	l
f01051db	obj/kern/kernel.asm	/^f01051db:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01051de	obj/kern/kernel.asm	/^f01051de:	25 fd f1 ff ff       	and    $0xfffff1fd,%eax$/;"	l
f01051e3	obj/kern/kernel.asm	/^f01051e3:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f01051e6	obj/kern/kernel.asm	/^f01051e6:	75 75                	jne    f010525d <syscall+0x22d>$/;"	l
f01051e8	obj/kern/kernel.asm	/^f01051e8:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01051ef	obj/kern/kernel.asm	/^f01051ef:	00 $/;"	l
f01051f0	obj/kern/kernel.asm	/^f01051f0:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01051f3	obj/kern/kernel.asm	/^f01051f3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01051f7	obj/kern/kernel.asm	/^f01051f7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01051fa	obj/kern/kernel.asm	/^f01051fa:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01051fd	obj/kern/kernel.asm	/^f01051fd:	e8 28 e4 ff ff       	call   f010362a <envid2env>$/;"	l
f0105202	obj/kern/kernel.asm	/^f0105202:	85 c0                	test   %eax,%eax$/;"	l
f0105204	obj/kern/kernel.asm	/^f0105204:	78 5e                	js     f0105264 <syscall+0x234>$/;"	l
f0105206	obj/kern/kernel.asm	/^f0105206:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f010520d	obj/kern/kernel.asm	/^f010520d:	e8 ef be ff ff       	call   f0101101 <page_alloc>$/;"	l
f0105212	obj/kern/kernel.asm	/^f0105212:	89 c3                	mov    %eax,%ebx$/;"	l
f0105214	obj/kern/kernel.asm	/^f0105214:	85 c0                	test   %eax,%eax$/;"	l
f0105216	obj/kern/kernel.asm	/^f0105216:	74 53                	je     f010526b <syscall+0x23b>$/;"	l
f0105218	obj/kern/kernel.asm	/^f0105218:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010521b	obj/kern/kernel.asm	/^f010521b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010521f	obj/kern/kernel.asm	/^f010521f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105222	obj/kern/kernel.asm	/^f0105222:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105226	obj/kern/kernel.asm	/^f0105226:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010522a	obj/kern/kernel.asm	/^f010522a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010522d	obj/kern/kernel.asm	/^f010522d:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0105230	obj/kern/kernel.asm	/^f0105230:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105233	obj/kern/kernel.asm	/^f0105233:	e8 b6 c1 ff ff       	call   f01013ee <page_insert>$/;"	l
f0105238	obj/kern/kernel.asm	/^f0105238:	89 c6                	mov    %eax,%esi$/;"	l
f010523a	obj/kern/kernel.asm	/^f010523a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010523f	obj/kern/kernel.asm	/^f010523f:	85 c0                	test   %eax,%eax$/;"	l
f0105241	obj/kern/kernel.asm	/^f0105241:	79 2d                	jns    f0105270 <syscall+0x240>$/;"	l
f0105243	obj/kern/kernel.asm	/^f0105243:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0105246	obj/kern/kernel.asm	/^f0105246:	e8 66 bf ff ff       	call   f01011b1 <page_free>$/;"	l
f010524b	obj/kern/kernel.asm	/^f010524b:	89 f2                	mov    %esi,%edx$/;"	l
f010524d	obj/kern/kernel.asm	/^f010524d:	eb 21                	jmp    f0105270 <syscall+0x240>$/;"	l
f010524f	obj/kern/kernel.asm	/^f010524f:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0105254	obj/kern/kernel.asm	/^f0105254:	eb 1a                	jmp    f0105270 <syscall+0x240>$/;"	l
f0105256	obj/kern/kernel.asm	/^f0105256:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f010525b	obj/kern/kernel.asm	/^f010525b:	eb 13                	jmp    f0105270 <syscall+0x240>$/;"	l
f010525d	obj/kern/kernel.asm	/^f010525d:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0105262	obj/kern/kernel.asm	/^f0105262:	eb 0c                	jmp    f0105270 <syscall+0x240>$/;"	l
f0105264	obj/kern/kernel.asm	/^f0105264:	ba fe ff ff ff       	mov    $0xfffffffe,%edx$/;"	l
f0105269	obj/kern/kernel.asm	/^f0105269:	eb 05                	jmp    f0105270 <syscall+0x240>$/;"	l
f010526b	obj/kern/kernel.asm	/^f010526b:	ba fc ff ff ff       	mov    $0xfffffffc,%edx$/;"	l
f0105270	obj/kern/kernel.asm	/^f0105270:	89 d0                	mov    %edx,%eax$/;"	l
f0105272	obj/kern/kernel.asm	/^f0105272:	e9 1d 04 00 00       	jmp    f0105694 <syscall+0x664>$/;"	l
f0105277	obj/kern/kernel.asm	/^f0105277:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f010527e	obj/kern/kernel.asm	/^f010527e:	0f 87 e7 00 00 00    	ja     f010536b <syscall+0x33b>$/;"	l
f0105284	obj/kern/kernel.asm	/^f0105284:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105287	obj/kern/kernel.asm	/^f0105287:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f010528c	obj/kern/kernel.asm	/^f010528c:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0105291	obj/kern/kernel.asm	/^f0105291:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f0105294	obj/kern/kernel.asm	/^f0105294:	0f 85 db 00 00 00    	jne    f0105375 <syscall+0x345>$/;"	l
f010529a	obj/kern/kernel.asm	/^f010529a:	81 7d 18 ff ff bf ee 	cmpl   $0xeebfffff,0x18(%ebp)$/;"	l
f01052a1	obj/kern/kernel.asm	/^f01052a1:	0f 87 d8 00 00 00    	ja     f010537f <syscall+0x34f>$/;"	l
f01052a7	obj/kern/kernel.asm	/^f01052a7:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f01052aa	obj/kern/kernel.asm	/^f01052aa:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f01052af	obj/kern/kernel.asm	/^f01052af:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01052b4	obj/kern/kernel.asm	/^f01052b4:	39 45 18             	cmp    %eax,0x18(%ebp)$/;"	l
f01052b7	obj/kern/kernel.asm	/^f01052b7:	0f 85 cc 00 00 00    	jne    f0105389 <syscall+0x359>$/;"	l
f01052bd	obj/kern/kernel.asm	/^f01052bd:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
f01052c0	obj/kern/kernel.asm	/^f01052c0:	25 fd f1 ff ff       	and    $0xfffff1fd,%eax$/;"	l
f01052c5	obj/kern/kernel.asm	/^f01052c5:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f01052c8	obj/kern/kernel.asm	/^f01052c8:	0f 85 c5 00 00 00    	jne    f0105393 <syscall+0x363>$/;"	l
f01052ce	obj/kern/kernel.asm	/^f01052ce:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01052d5	obj/kern/kernel.asm	/^f01052d5:	00 $/;"	l
f01052d6	obj/kern/kernel.asm	/^f01052d6:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f01052d9	obj/kern/kernel.asm	/^f01052d9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01052dd	obj/kern/kernel.asm	/^f01052dd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01052e0	obj/kern/kernel.asm	/^f01052e0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01052e3	obj/kern/kernel.asm	/^f01052e3:	e8 42 e3 ff ff       	call   f010362a <envid2env>$/;"	l
f01052e8	obj/kern/kernel.asm	/^f01052e8:	85 c0                	test   %eax,%eax$/;"	l
f01052ea	obj/kern/kernel.asm	/^f01052ea:	0f 88 ad 00 00 00    	js     f010539d <syscall+0x36d>$/;"	l
f01052f0	obj/kern/kernel.asm	/^f01052f0:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01052f7	obj/kern/kernel.asm	/^f01052f7:	00 $/;"	l
f01052f8	obj/kern/kernel.asm	/^f01052f8:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f01052fb	obj/kern/kernel.asm	/^f01052fb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01052ff	obj/kern/kernel.asm	/^f01052ff:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105302	obj/kern/kernel.asm	/^f0105302:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105305	obj/kern/kernel.asm	/^f0105305:	e8 20 e3 ff ff       	call   f010362a <envid2env>$/;"	l
f010530a	obj/kern/kernel.asm	/^f010530a:	85 c0                	test   %eax,%eax$/;"	l
f010530c	obj/kern/kernel.asm	/^f010530c:	0f 88 95 00 00 00    	js     f01053a7 <syscall+0x377>$/;"	l
f0105312	obj/kern/kernel.asm	/^f0105312:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105315	obj/kern/kernel.asm	/^f0105315:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105319	obj/kern/kernel.asm	/^f0105319:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010531c	obj/kern/kernel.asm	/^f010531c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105320	obj/kern/kernel.asm	/^f0105320:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105323	obj/kern/kernel.asm	/^f0105323:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0105326	obj/kern/kernel.asm	/^f0105326:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105329	obj/kern/kernel.asm	/^f0105329:	e8 c5 bf ff ff       	call   f01012f3 <page_lookup>$/;"	l
f010532e	obj/kern/kernel.asm	/^f010532e:	85 c0                	test   %eax,%eax$/;"	l
f0105330	obj/kern/kernel.asm	/^f0105330:	74 7f                	je     f01053b1 <syscall+0x381>$/;"	l
f0105332	obj/kern/kernel.asm	/^f0105332:	f6 45 1c 02          	testb  $0x2,0x1c(%ebp)$/;"	l
f0105336	obj/kern/kernel.asm	/^f0105336:	74 08                	je     f0105340 <syscall+0x310>$/;"	l
f0105338	obj/kern/kernel.asm	/^f0105338:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f010533b	obj/kern/kernel.asm	/^f010533b:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f010533e	obj/kern/kernel.asm	/^f010533e:	74 7b                	je     f01053bb <syscall+0x38b>$/;"	l
f0105340	obj/kern/kernel.asm	/^f0105340:	8b 5d 1c             	mov    0x1c(%ebp),%ebx$/;"	l
f0105343	obj/kern/kernel.asm	/^f0105343:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0105347	obj/kern/kernel.asm	/^f0105347:	8b 7d 18             	mov    0x18(%ebp),%edi$/;"	l
f010534a	obj/kern/kernel.asm	/^f010534a:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f010534e	obj/kern/kernel.asm	/^f010534e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105352	obj/kern/kernel.asm	/^f0105352:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105355	obj/kern/kernel.asm	/^f0105355:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0105358	obj/kern/kernel.asm	/^f0105358:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010535b	obj/kern/kernel.asm	/^f010535b:	e8 8e c0 ff ff       	call   f01013ee <page_insert>$/;"	l
f0105360	obj/kern/kernel.asm	/^f0105360:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0105363	obj/kern/kernel.asm	/^f0105363:	83 e0 fc             	and    $0xfffffffc,%eax$/;"	l
f0105366	obj/kern/kernel.asm	/^f0105366:	e9 29 03 00 00       	jmp    f0105694 <syscall+0x664>$/;"	l
f010536b	obj/kern/kernel.asm	/^f010536b:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105370	obj/kern/kernel.asm	/^f0105370:	e9 1f 03 00 00       	jmp    f0105694 <syscall+0x664>$/;"	l
f0105375	obj/kern/kernel.asm	/^f0105375:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010537a	obj/kern/kernel.asm	/^f010537a:	e9 15 03 00 00       	jmp    f0105694 <syscall+0x664>$/;"	l
f010537f	obj/kern/kernel.asm	/^f010537f:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105384	obj/kern/kernel.asm	/^f0105384:	e9 0b 03 00 00       	jmp    f0105694 <syscall+0x664>$/;"	l
f0105389	obj/kern/kernel.asm	/^f0105389:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010538e	obj/kern/kernel.asm	/^f010538e:	e9 01 03 00 00       	jmp    f0105694 <syscall+0x664>$/;"	l
f0105393	obj/kern/kernel.asm	/^f0105393:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105398	obj/kern/kernel.asm	/^f0105398:	e9 f7 02 00 00       	jmp    f0105694 <syscall+0x664>$/;"	l
f010539d	obj/kern/kernel.asm	/^f010539d:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f01053a2	obj/kern/kernel.asm	/^f01053a2:	e9 ed 02 00 00       	jmp    f0105694 <syscall+0x664>$/;"	l
f01053a7	obj/kern/kernel.asm	/^f01053a7:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f01053ac	obj/kern/kernel.asm	/^f01053ac:	e9 e3 02 00 00       	jmp    f0105694 <syscall+0x664>$/;"	l
f01053b1	obj/kern/kernel.asm	/^f01053b1:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01053b6	obj/kern/kernel.asm	/^f01053b6:	e9 d9 02 00 00       	jmp    f0105694 <syscall+0x664>$/;"	l
f01053bb	obj/kern/kernel.asm	/^f01053bb:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01053c0	obj/kern/kernel.asm	/^f01053c0:	e9 cf 02 00 00       	jmp    f0105694 <syscall+0x664>$/;"	l
f01053c5	obj/kern/kernel.asm	/^f01053c5:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f01053cc	obj/kern/kernel.asm	/^f01053cc:	77 5a                	ja     f0105428 <syscall+0x3f8>$/;"	l
f01053ce	obj/kern/kernel.asm	/^f01053ce:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01053d1	obj/kern/kernel.asm	/^f01053d1:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f01053d7	obj/kern/kernel.asm	/^f01053d7:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01053dd	obj/kern/kernel.asm	/^f01053dd:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01053e2	obj/kern/kernel.asm	/^f01053e2:	39 55 10             	cmp    %edx,0x10(%ebp)$/;"	l
f01053e5	obj/kern/kernel.asm	/^f01053e5:	0f 85 a9 02 00 00    	jne    f0105694 <syscall+0x664>$/;"	l
f01053eb	obj/kern/kernel.asm	/^f01053eb:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01053f2	obj/kern/kernel.asm	/^f01053f2:	00 $/;"	l
f01053f3	obj/kern/kernel.asm	/^f01053f3:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01053f6	obj/kern/kernel.asm	/^f01053f6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01053fa	obj/kern/kernel.asm	/^f01053fa:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01053fd	obj/kern/kernel.asm	/^f01053fd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105400	obj/kern/kernel.asm	/^f0105400:	e8 25 e2 ff ff       	call   f010362a <envid2env>$/;"	l
f0105405	obj/kern/kernel.asm	/^f0105405:	85 c0                	test   %eax,%eax$/;"	l
f0105407	obj/kern/kernel.asm	/^f0105407:	78 29                	js     f0105432 <syscall+0x402>$/;"	l
f0105409	obj/kern/kernel.asm	/^f0105409:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010540c	obj/kern/kernel.asm	/^f010540c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105410	obj/kern/kernel.asm	/^f0105410:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105413	obj/kern/kernel.asm	/^f0105413:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0105416	obj/kern/kernel.asm	/^f0105416:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105419	obj/kern/kernel.asm	/^f0105419:	e8 83 bf ff ff       	call   f01013a1 <page_remove>$/;"	l
f010541e	obj/kern/kernel.asm	/^f010541e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105423	obj/kern/kernel.asm	/^f0105423:	e9 6c 02 00 00       	jmp    f0105694 <syscall+0x664>$/;"	l
f0105428	obj/kern/kernel.asm	/^f0105428:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010542d	obj/kern/kernel.asm	/^f010542d:	e9 62 02 00 00       	jmp    f0105694 <syscall+0x664>$/;"	l
f0105432	obj/kern/kernel.asm	/^f0105432:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0105437	obj/kern/kernel.asm	/^f0105437:	e9 58 02 00 00       	jmp    f0105694 <syscall+0x664>$/;"	l
f010543c	obj/kern/kernel.asm	/^f010543c:	e8 d2 fb ff ff       	call   f0105013 <sched_yield>$/;"	l
f0105441	obj/kern/kernel.asm	/^f0105441:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105448	obj/kern/kernel.asm	/^f0105448:	00 $/;"	l
f0105449	obj/kern/kernel.asm	/^f0105449:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010544c	obj/kern/kernel.asm	/^f010544c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105450	obj/kern/kernel.asm	/^f0105450:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105453	obj/kern/kernel.asm	/^f0105453:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105456	obj/kern/kernel.asm	/^f0105456:	e8 cf e1 ff ff       	call   f010362a <envid2env>$/;"	l
f010545b	obj/kern/kernel.asm	/^f010545b:	85 c0                	test   %eax,%eax$/;"	l
f010545d	obj/kern/kernel.asm	/^f010545d:	0f 85 31 02 00 00    	jne    f0105694 <syscall+0x664>$/;"	l
f0105463	obj/kern/kernel.asm	/^f0105463:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105466	obj/kern/kernel.asm	/^f0105466:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0105469	obj/kern/kernel.asm	/^f0105469:	89 7a 7c             	mov    %edi,0x7c(%edx)$/;"	l
f010546c	obj/kern/kernel.asm	/^f010546c:	e9 23 02 00 00       	jmp    f0105694 <syscall+0x664>$/;"	l
f0105471	obj/kern/kernel.asm	/^f0105471:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0105478	obj/kern/kernel.asm	/^f0105478:	00 $/;"	l
f0105479	obj/kern/kernel.asm	/^f0105479:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f010547c	obj/kern/kernel.asm	/^f010547c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105480	obj/kern/kernel.asm	/^f0105480:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105483	obj/kern/kernel.asm	/^f0105483:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105486	obj/kern/kernel.asm	/^f0105486:	e8 9f e1 ff ff       	call   f010362a <envid2env>$/;"	l
f010548b	obj/kern/kernel.asm	/^f010548b:	85 c0                	test   %eax,%eax$/;"	l
f010548d	obj/kern/kernel.asm	/^f010548d:	0f 88 fc 00 00 00    	js     f010558f <syscall+0x55f>$/;"	l
f0105493	obj/kern/kernel.asm	/^f0105493:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105496	obj/kern/kernel.asm	/^f0105496:	80 78 68 00          	cmpb   $0x0,0x68(%eax)$/;"	l
f010549a	obj/kern/kernel.asm	/^f010549a:	0f 84 f6 00 00 00    	je     f0105596 <syscall+0x566>$/;"	l
f01054a0	obj/kern/kernel.asm	/^f01054a0:	8b 58 74             	mov    0x74(%eax),%ebx$/;"	l
f01054a3	obj/kern/kernel.asm	/^f01054a3:	85 db                	test   %ebx,%ebx$/;"	l
f01054a5	obj/kern/kernel.asm	/^f01054a5:	0f 85 f2 00 00 00    	jne    f010559d <syscall+0x56d>$/;"	l
f01054ab	obj/kern/kernel.asm	/^f01054ab:	81 7d 14 ff ff bf ee 	cmpl   $0xeebfffff,0x14(%ebp)$/;"	l
f01054b2	obj/kern/kernel.asm	/^f01054b2:	0f 87 a3 00 00 00    	ja     f010555b <syscall+0x52b>$/;"	l
f01054b8	obj/kern/kernel.asm	/^f01054b8:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01054bb	obj/kern/kernel.asm	/^f01054bb:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f01054c0	obj/kern/kernel.asm	/^f01054c0:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01054c5	obj/kern/kernel.asm	/^f01054c5:	39 45 14             	cmp    %eax,0x14(%ebp)$/;"	l
f01054c8	obj/kern/kernel.asm	/^f01054c8:	0f 85 d6 00 00 00    	jne    f01055a4 <syscall+0x574>$/;"	l
f01054ce	obj/kern/kernel.asm	/^f01054ce:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f01054d1	obj/kern/kernel.asm	/^f01054d1:	25 fd f1 ff ff       	and    $0xfffff1fd,%eax$/;"	l
f01054d6	obj/kern/kernel.asm	/^f01054d6:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f01054d9	obj/kern/kernel.asm	/^f01054d9:	0f 85 cc 00 00 00    	jne    f01055ab <syscall+0x57b>$/;"	l
f01054df	obj/kern/kernel.asm	/^f01054df:	e8 60 14 00 00       	call   f0106944 <cpunum>$/;"	l
f01054e4	obj/kern/kernel.asm	/^f01054e4:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f01054e7	obj/kern/kernel.asm	/^f01054e7:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01054eb	obj/kern/kernel.asm	/^f01054eb:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
f01054ee	obj/kern/kernel.asm	/^f01054ee:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f01054f2	obj/kern/kernel.asm	/^f01054f2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01054f5	obj/kern/kernel.asm	/^f01054f5:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f01054fb	obj/kern/kernel.asm	/^f01054fb:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01054fe	obj/kern/kernel.asm	/^f01054fe:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105501	obj/kern/kernel.asm	/^f0105501:	e8 ed bd ff ff       	call   f01012f3 <page_lookup>$/;"	l
f0105506	obj/kern/kernel.asm	/^f0105506:	85 c0                	test   %eax,%eax$/;"	l
f0105508	obj/kern/kernel.asm	/^f0105508:	0f 84 a4 00 00 00    	je     f01055b2 <syscall+0x582>$/;"	l
f010550e	obj/kern/kernel.asm	/^f010550e:	f6 45 18 02          	testb  $0x2,0x18(%ebp)$/;"	l
f0105512	obj/kern/kernel.asm	/^f0105512:	74 0c                	je     f0105520 <syscall+0x4f0>$/;"	l
f0105514	obj/kern/kernel.asm	/^f0105514:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105517	obj/kern/kernel.asm	/^f0105517:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f010551a	obj/kern/kernel.asm	/^f010551a:	0f 84 99 00 00 00    	je     f01055b9 <syscall+0x589>$/;"	l
f0105520	obj/kern/kernel.asm	/^f0105520:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0105523	obj/kern/kernel.asm	/^f0105523:	8b 4a 6c             	mov    0x6c(%edx),%ecx$/;"	l
f0105526	obj/kern/kernel.asm	/^f0105526:	85 c9                	test   %ecx,%ecx$/;"	l
f0105528	obj/kern/kernel.asm	/^f0105528:	74 27                	je     f0105551 <syscall+0x521>$/;"	l
f010552a	obj/kern/kernel.asm	/^f010552a:	8b 75 18             	mov    0x18(%ebp),%esi$/;"	l
f010552d	obj/kern/kernel.asm	/^f010552d:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0105531	obj/kern/kernel.asm	/^f0105531:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0105535	obj/kern/kernel.asm	/^f0105535:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105539	obj/kern/kernel.asm	/^f0105539:	8b 42 60             	mov    0x60(%edx),%eax$/;"	l
f010553c	obj/kern/kernel.asm	/^f010553c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010553f	obj/kern/kernel.asm	/^f010553f:	e8 aa be ff ff       	call   f01013ee <page_insert>$/;"	l
f0105544	obj/kern/kernel.asm	/^f0105544:	85 c0                	test   %eax,%eax$/;"	l
f0105546	obj/kern/kernel.asm	/^f0105546:	78 78                	js     f01055c0 <syscall+0x590>$/;"	l
f0105548	obj/kern/kernel.asm	/^f0105548:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010554b	obj/kern/kernel.asm	/^f010554b:	8b 4d 18             	mov    0x18(%ebp),%ecx$/;"	l
f010554e	obj/kern/kernel.asm	/^f010554e:	89 48 78             	mov    %ecx,0x78(%eax)$/;"	l
f0105551	obj/kern/kernel.asm	/^f0105551:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105554	obj/kern/kernel.asm	/^f0105554:	c7 40 78 00 00 00 00 	movl   $0x0,0x78(%eax)$/;"	l
f010555b	obj/kern/kernel.asm	/^f010555b:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f010555e	obj/kern/kernel.asm	/^f010555e:	e8 e1 13 00 00       	call   f0106944 <cpunum>$/;"	l
f0105563	obj/kern/kernel.asm	/^f0105563:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105566	obj/kern/kernel.asm	/^f0105566:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f010556c	obj/kern/kernel.asm	/^f010556c:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f010556f	obj/kern/kernel.asm	/^f010556f:	89 46 74             	mov    %eax,0x74(%esi)$/;"	l
f0105572	obj/kern/kernel.asm	/^f0105572:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0105575	obj/kern/kernel.asm	/^f0105575:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105578	obj/kern/kernel.asm	/^f0105578:	89 42 70             	mov    %eax,0x70(%edx)$/;"	l
f010557b	obj/kern/kernel.asm	/^f010557b:	c7 42 54 02 00 00 00 	movl   $0x2,0x54(%edx)$/;"	l
f0105582	obj/kern/kernel.asm	/^f0105582:	c6 42 68 00          	movb   $0x0,0x68(%edx)$/;"	l
f0105586	obj/kern/kernel.asm	/^f0105586:	c7 42 1c 00 00 00 00 	movl   $0x0,0x1c(%edx)$/;"	l
f010558d	obj/kern/kernel.asm	/^f010558d:	eb 36                	jmp    f01055c5 <syscall+0x595>$/;"	l
f010558f	obj/kern/kernel.asm	/^f010558f:	bb fe ff ff ff       	mov    $0xfffffffe,%ebx$/;"	l
f0105594	obj/kern/kernel.asm	/^f0105594:	eb 2f                	jmp    f01055c5 <syscall+0x595>$/;"	l
f0105596	obj/kern/kernel.asm	/^f0105596:	bb f9 ff ff ff       	mov    $0xfffffff9,%ebx$/;"	l
f010559b	obj/kern/kernel.asm	/^f010559b:	eb 28                	jmp    f01055c5 <syscall+0x595>$/;"	l
f010559d	obj/kern/kernel.asm	/^f010559d:	bb f9 ff ff ff       	mov    $0xfffffff9,%ebx$/;"	l
f01055a2	obj/kern/kernel.asm	/^f01055a2:	eb 21                	jmp    f01055c5 <syscall+0x595>$/;"	l
f01055a4	obj/kern/kernel.asm	/^f01055a4:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01055a9	obj/kern/kernel.asm	/^f01055a9:	eb 1a                	jmp    f01055c5 <syscall+0x595>$/;"	l
f01055ab	obj/kern/kernel.asm	/^f01055ab:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01055b0	obj/kern/kernel.asm	/^f01055b0:	eb 13                	jmp    f01055c5 <syscall+0x595>$/;"	l
f01055b2	obj/kern/kernel.asm	/^f01055b2:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01055b7	obj/kern/kernel.asm	/^f01055b7:	eb 0c                	jmp    f01055c5 <syscall+0x595>$/;"	l
f01055b9	obj/kern/kernel.asm	/^f01055b9:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx$/;"	l
f01055be	obj/kern/kernel.asm	/^f01055be:	eb 05                	jmp    f01055c5 <syscall+0x595>$/;"	l
f01055c0	obj/kern/kernel.asm	/^f01055c0:	bb fc ff ff ff       	mov    $0xfffffffc,%ebx$/;"	l
f01055c5	obj/kern/kernel.asm	/^f01055c5:	89 d8                	mov    %ebx,%eax$/;"	l
f01055c7	obj/kern/kernel.asm	/^f01055c7:	e9 c8 00 00 00       	jmp    f0105694 <syscall+0x664>$/;"	l
f01055cc	obj/kern/kernel.asm	/^f01055cc:	81 7d 0c ff ff bf ee 	cmpl   $0xeebfffff,0xc(%ebp)$/;"	l
f01055d3	obj/kern/kernel.asm	/^f01055d3:	77 16                	ja     f01055eb <syscall+0x5bb>$/;"	l
f01055d5	obj/kern/kernel.asm	/^f01055d5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01055d8	obj/kern/kernel.asm	/^f01055d8:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f01055dd	obj/kern/kernel.asm	/^f01055dd:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01055e2	obj/kern/kernel.asm	/^f01055e2:	39 45 0c             	cmp    %eax,0xc(%ebp)$/;"	l
f01055e5	obj/kern/kernel.asm	/^f01055e5:	0f 85 a4 00 00 00    	jne    f010568f <syscall+0x65f>$/;"	l
f01055eb	obj/kern/kernel.asm	/^f01055eb:	e8 54 13 00 00       	call   f0106944 <cpunum>$/;"	l
f01055f0	obj/kern/kernel.asm	/^f01055f0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01055f3	obj/kern/kernel.asm	/^f01055f3:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f01055f9	obj/kern/kernel.asm	/^f01055f9:	c6 40 68 01          	movb   $0x1,0x68(%eax)$/;"	l
f01055fd	obj/kern/kernel.asm	/^f01055fd:	e8 42 13 00 00       	call   f0106944 <cpunum>$/;"	l
f0105602	obj/kern/kernel.asm	/^f0105602:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105605	obj/kern/kernel.asm	/^f0105605:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f010560b	obj/kern/kernel.asm	/^f010560b:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010560e	obj/kern/kernel.asm	/^f010560e:	89 48 6c             	mov    %ecx,0x6c(%eax)$/;"	l
f0105611	obj/kern/kernel.asm	/^f0105611:	e8 2e 13 00 00       	call   f0106944 <cpunum>$/;"	l
f0105616	obj/kern/kernel.asm	/^f0105616:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105619	obj/kern/kernel.asm	/^f0105619:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f010561f	obj/kern/kernel.asm	/^f010561f:	c7 40 74 00 00 00 00 	movl   $0x0,0x74(%eax)$/;"	l
f0105626	obj/kern/kernel.asm	/^f0105626:	e8 19 13 00 00       	call   f0106944 <cpunum>$/;"	l
f010562b	obj/kern/kernel.asm	/^f010562b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010562e	obj/kern/kernel.asm	/^f010562e:	8b 80 28 60 20 f0    	mov    -0xfdf9fd8(%eax),%eax$/;"	l
f0105634	obj/kern/kernel.asm	/^f0105634:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f010563b	obj/kern/kernel.asm	/^f010563b:	e8 d3 f9 ff ff       	call   f0105013 <sched_yield>$/;"	l
f0105640	obj/kern/kernel.asm	/^f0105640:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0105643	obj/kern/kernel.asm	/^f0105643:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010564a	obj/kern/kernel.asm	/^f010564a:	00 $/;"	l
f010564b	obj/kern/kernel.asm	/^f010564b:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010564e	obj/kern/kernel.asm	/^f010564e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105652	obj/kern/kernel.asm	/^f0105652:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105655	obj/kern/kernel.asm	/^f0105655:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105658	obj/kern/kernel.asm	/^f0105658:	e8 cd df ff ff       	call   f010362a <envid2env>$/;"	l
f010565d	obj/kern/kernel.asm	/^f010565d:	85 c0                	test   %eax,%eax$/;"	l
f010565f	obj/kern/kernel.asm	/^f010565f:	78 20                	js     f0105681 <syscall+0x651>$/;"	l
f0105661	obj/kern/kernel.asm	/^f0105661:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0105666	obj/kern/kernel.asm	/^f0105666:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105669	obj/kern/kernel.asm	/^f0105669:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010566b	obj/kern/kernel.asm	/^f010566b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010566e	obj/kern/kernel.asm	/^f010566e:	66 83 48 34 03       	orw    $0x3,0x34(%eax)$/;"	l
f0105673	obj/kern/kernel.asm	/^f0105673:	81 48 38 00 02 00 00 	orl    $0x200,0x38(%eax)$/;"	l
f010567a	obj/kern/kernel.asm	/^f010567a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010567f	obj/kern/kernel.asm	/^f010567f:	eb 13                	jmp    f0105694 <syscall+0x664>$/;"	l
f0105681	obj/kern/kernel.asm	/^f0105681:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0105686	obj/kern/kernel.asm	/^f0105686:	eb 0c                	jmp    f0105694 <syscall+0x664>$/;"	l
f0105688	obj/kern/kernel.asm	/^f0105688:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010568d	obj/kern/kernel.asm	/^f010568d:	eb 05                	jmp    f0105694 <syscall+0x664>$/;"	l
f010568f	obj/kern/kernel.asm	/^f010568f:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105694	obj/kern/kernel.asm	/^f0105694:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0105697	obj/kern/kernel.asm	/^f0105697:	5b                   	pop    %ebx$/;"	l
f0105698	obj/kern/kernel.asm	/^f0105698:	5e                   	pop    %esi$/;"	l
f0105699	obj/kern/kernel.asm	/^f0105699:	5f                   	pop    %edi$/;"	l
f010569a	obj/kern/kernel.asm	/^f010569a:	5d                   	pop    %ebp$/;"	l
f010569b	obj/kern/kernel.asm	/^f010569b:	c3                   	ret    $/;"	l
f010569c	obj/kern/kernel.asm	/^f010569c:	66 90                	xchg   %ax,%ax$/;"	l
f010569e	obj/kern/kernel.asm	/^f010569e:	66 90                	xchg   %ax,%ax$/;"	l
f01056a0	obj/kern/kernel.asm	/^f01056a0 <stab_binsearch>:$/;"	l
f01056a0	obj/kern/kernel.asm	/^f01056a0:	55                   	push   %ebp$/;"	l
f01056a1	obj/kern/kernel.asm	/^f01056a1:	89 e5                	mov    %esp,%ebp$/;"	l
f01056a3	obj/kern/kernel.asm	/^f01056a3:	57                   	push   %edi$/;"	l
f01056a4	obj/kern/kernel.asm	/^f01056a4:	56                   	push   %esi$/;"	l
f01056a5	obj/kern/kernel.asm	/^f01056a5:	53                   	push   %ebx$/;"	l
f01056a6	obj/kern/kernel.asm	/^f01056a6:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01056a9	obj/kern/kernel.asm	/^f01056a9:	89 c6                	mov    %eax,%esi$/;"	l
f01056ab	obj/kern/kernel.asm	/^f01056ab:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
f01056ae	obj/kern/kernel.asm	/^f01056ae:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f01056b1	obj/kern/kernel.asm	/^f01056b1:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01056b4	obj/kern/kernel.asm	/^f01056b4:	8b 1a                	mov    (%edx),%ebx$/;"	l
f01056b6	obj/kern/kernel.asm	/^f01056b6:	8b 01                	mov    (%ecx),%eax$/;"	l
f01056b8	obj/kern/kernel.asm	/^f01056b8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01056bb	obj/kern/kernel.asm	/^f01056bb:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
f01056c2	obj/kern/kernel.asm	/^f01056c2:	eb 77                	jmp    f010573b <stab_binsearch+0x9b>$/;"	l
f01056c4	obj/kern/kernel.asm	/^f01056c4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01056c7	obj/kern/kernel.asm	/^f01056c7:	01 d8                	add    %ebx,%eax$/;"	l
f01056c9	obj/kern/kernel.asm	/^f01056c9:	b9 02 00 00 00       	mov    $0x2,%ecx$/;"	l
f01056ce	obj/kern/kernel.asm	/^f01056ce:	99                   	cltd   $/;"	l
f01056cf	obj/kern/kernel.asm	/^f01056cf:	f7 f9                	idiv   %ecx$/;"	l
f01056d1	obj/kern/kernel.asm	/^f01056d1:	89 c1                	mov    %eax,%ecx$/;"	l
f01056d3	obj/kern/kernel.asm	/^f01056d3:	eb 01                	jmp    f01056d6 <stab_binsearch+0x36>$/;"	l
f01056d5	obj/kern/kernel.asm	/^f01056d5:	49                   	dec    %ecx$/;"	l
f01056d6	obj/kern/kernel.asm	/^f01056d6:	39 d9                	cmp    %ebx,%ecx$/;"	l
f01056d8	obj/kern/kernel.asm	/^f01056d8:	7c 1d                	jl     f01056f7 <stab_binsearch+0x57>$/;"	l
f01056da	obj/kern/kernel.asm	/^f01056da:	6b d1 0c             	imul   $0xc,%ecx,%edx$/;"	l
f01056dd	obj/kern/kernel.asm	/^f01056dd:	0f b6 54 16 04       	movzbl 0x4(%esi,%edx,1),%edx$/;"	l
f01056e2	obj/kern/kernel.asm	/^f01056e2:	39 fa                	cmp    %edi,%edx$/;"	l
f01056e4	obj/kern/kernel.asm	/^f01056e4:	75 ef                	jne    f01056d5 <stab_binsearch+0x35>$/;"	l
f01056e6	obj/kern/kernel.asm	/^f01056e6:	89 4d ec             	mov    %ecx,-0x14(%ebp)$/;"	l
f01056e9	obj/kern/kernel.asm	/^f01056e9:	6b d1 0c             	imul   $0xc,%ecx,%edx$/;"	l
f01056ec	obj/kern/kernel.asm	/^f01056ec:	8b 54 16 08          	mov    0x8(%esi,%edx,1),%edx$/;"	l
f01056f0	obj/kern/kernel.asm	/^f01056f0:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f01056f3	obj/kern/kernel.asm	/^f01056f3:	73 18                	jae    f010570d <stab_binsearch+0x6d>$/;"	l
f01056f5	obj/kern/kernel.asm	/^f01056f5:	eb 05                	jmp    f01056fc <stab_binsearch+0x5c>$/;"	l
f01056f7	obj/kern/kernel.asm	/^f01056f7:	8d 58 01             	lea    0x1(%eax),%ebx$/;"	l
f01056fa	obj/kern/kernel.asm	/^f01056fa:	eb 3f                	jmp    f010573b <stab_binsearch+0x9b>$/;"	l
f01056fc	obj/kern/kernel.asm	/^f01056fc:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
f01056ff	obj/kern/kernel.asm	/^f01056ff:	89 0b                	mov    %ecx,(%ebx)$/;"	l
f0105701	obj/kern/kernel.asm	/^f0105701:	8d 58 01             	lea    0x1(%eax),%ebx$/;"	l
f0105704	obj/kern/kernel.asm	/^f0105704:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)$/;"	l
f010570b	obj/kern/kernel.asm	/^f010570b:	eb 2e                	jmp    f010573b <stab_binsearch+0x9b>$/;"	l
f010570d	obj/kern/kernel.asm	/^f010570d:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0105710	obj/kern/kernel.asm	/^f0105710:	73 15                	jae    f0105727 <stab_binsearch+0x87>$/;"	l
f0105712	obj/kern/kernel.asm	/^f0105712:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0105715	obj/kern/kernel.asm	/^f0105715:	48                   	dec    %eax$/;"	l
f0105716	obj/kern/kernel.asm	/^f0105716:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0105719	obj/kern/kernel.asm	/^f0105719:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f010571c	obj/kern/kernel.asm	/^f010571c:	89 01                	mov    %eax,(%ecx)$/;"	l
f010571e	obj/kern/kernel.asm	/^f010571e:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)$/;"	l
f0105725	obj/kern/kernel.asm	/^f0105725:	eb 14                	jmp    f010573b <stab_binsearch+0x9b>$/;"	l
f0105727	obj/kern/kernel.asm	/^f0105727:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f010572a	obj/kern/kernel.asm	/^f010572a:	8b 5d ec             	mov    -0x14(%ebp),%ebx$/;"	l
f010572d	obj/kern/kernel.asm	/^f010572d:	89 18                	mov    %ebx,(%eax)$/;"	l
f010572f	obj/kern/kernel.asm	/^f010572f:	ff 45 0c             	incl   0xc(%ebp)$/;"	l
f0105732	obj/kern/kernel.asm	/^f0105732:	89 cb                	mov    %ecx,%ebx$/;"	l
f0105734	obj/kern/kernel.asm	/^f0105734:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)$/;"	l
f010573b	obj/kern/kernel.asm	/^f010573b:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f010573e	obj/kern/kernel.asm	/^f010573e:	7e 84                	jle    f01056c4 <stab_binsearch+0x24>$/;"	l
f0105740	obj/kern/kernel.asm	/^f0105740:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
f0105744	obj/kern/kernel.asm	/^f0105744:	75 0d                	jne    f0105753 <stab_binsearch+0xb3>$/;"	l
f0105746	obj/kern/kernel.asm	/^f0105746:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0105749	obj/kern/kernel.asm	/^f0105749:	8b 00                	mov    (%eax),%eax$/;"	l
f010574b	obj/kern/kernel.asm	/^f010574b:	48                   	dec    %eax$/;"	l
f010574c	obj/kern/kernel.asm	/^f010574c:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010574f	obj/kern/kernel.asm	/^f010574f:	89 07                	mov    %eax,(%edi)$/;"	l
f0105751	obj/kern/kernel.asm	/^f0105751:	eb 22                	jmp    f0105775 <stab_binsearch+0xd5>$/;"	l
f0105753	obj/kern/kernel.asm	/^f0105753:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105756	obj/kern/kernel.asm	/^f0105756:	8b 00                	mov    (%eax),%eax$/;"	l
f0105758	obj/kern/kernel.asm	/^f0105758:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
f010575b	obj/kern/kernel.asm	/^f010575b:	8b 0b                	mov    (%ebx),%ecx$/;"	l
f010575d	obj/kern/kernel.asm	/^f010575d:	eb 01                	jmp    f0105760 <stab_binsearch+0xc0>$/;"	l
f010575f	obj/kern/kernel.asm	/^f010575f:	48                   	dec    %eax$/;"	l
f0105760	obj/kern/kernel.asm	/^f0105760:	39 c1                	cmp    %eax,%ecx$/;"	l
f0105762	obj/kern/kernel.asm	/^f0105762:	7d 0c                	jge    f0105770 <stab_binsearch+0xd0>$/;"	l
f0105764	obj/kern/kernel.asm	/^f0105764:	6b d0 0c             	imul   $0xc,%eax,%edx$/;"	l
f0105767	obj/kern/kernel.asm	/^f0105767:	0f b6 54 16 04       	movzbl 0x4(%esi,%edx,1),%edx$/;"	l
f010576c	obj/kern/kernel.asm	/^f010576c:	39 fa                	cmp    %edi,%edx$/;"	l
f010576e	obj/kern/kernel.asm	/^f010576e:	75 ef                	jne    f010575f <stab_binsearch+0xbf>$/;"	l
f0105770	obj/kern/kernel.asm	/^f0105770:	8b 7d e8             	mov    -0x18(%ebp),%edi$/;"	l
f0105773	obj/kern/kernel.asm	/^f0105773:	89 07                	mov    %eax,(%edi)$/;"	l
f0105775	obj/kern/kernel.asm	/^f0105775:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105778	obj/kern/kernel.asm	/^f0105778:	5b                   	pop    %ebx$/;"	l
f0105779	obj/kern/kernel.asm	/^f0105779:	5e                   	pop    %esi$/;"	l
f010577a	obj/kern/kernel.asm	/^f010577a:	5f                   	pop    %edi$/;"	l
f010577b	obj/kern/kernel.asm	/^f010577b:	5d                   	pop    %ebp$/;"	l
f010577c	obj/kern/kernel.asm	/^f010577c:	c3                   	ret    $/;"	l
f010577d	obj/kern/kernel.asm	/^f010577d <debuginfo_eip>:$/;"	l
f010577d	obj/kern/kernel.asm	/^f010577d:	55                   	push   %ebp$/;"	l
f010577e	obj/kern/kernel.asm	/^f010577e:	89 e5                	mov    %esp,%ebp$/;"	l
f0105780	obj/kern/kernel.asm	/^f0105780:	57                   	push   %edi$/;"	l
f0105781	obj/kern/kernel.asm	/^f0105781:	56                   	push   %esi$/;"	l
f0105782	obj/kern/kernel.asm	/^f0105782:	53                   	push   %ebx$/;"	l
f0105783	obj/kern/kernel.asm	/^f0105783:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0105786	obj/kern/kernel.asm	/^f0105786:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105789	obj/kern/kernel.asm	/^f0105789:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010578c	obj/kern/kernel.asm	/^f010578c:	c7 03 a8 87 10 f0    	movl   $0xf01087a8,(%ebx)$/;"	l
f0105792	obj/kern/kernel.asm	/^f0105792:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f0105799	obj/kern/kernel.asm	/^f0105799:	c7 43 08 a8 87 10 f0 	movl   $0xf01087a8,0x8(%ebx)$/;"	l
f01057a0	obj/kern/kernel.asm	/^f01057a0:	c7 43 0c 09 00 00 00 	movl   $0x9,0xc(%ebx)$/;"	l
f01057a7	obj/kern/kernel.asm	/^f01057a7:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f01057aa	obj/kern/kernel.asm	/^f01057aa:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)$/;"	l
f01057b1	obj/kern/kernel.asm	/^f01057b1:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f01057b7	obj/kern/kernel.asm	/^f01057b7:	0f 86 d5 01 00 00    	jbe    f0105992 <debuginfo_eip+0x215>$/;"	l
f01057bd	obj/kern/kernel.asm	/^f01057bd:	b8 1e 6f 11 f0       	mov    $0xf0116f1e,%eax$/;"	l
f01057c2	obj/kern/kernel.asm	/^f01057c2:	3d e9 37 11 f0       	cmp    $0xf01137e9,%eax$/;"	l
f01057c7	obj/kern/kernel.asm	/^f01057c7:	0f 86 cc 01 00 00    	jbe    f0105999 <debuginfo_eip+0x21c>$/;"	l
f01057cd	obj/kern/kernel.asm	/^f01057cd:	80 3d 1d 6f 11 f0 00 	cmpb   $0x0,0xf0116f1d$/;"	l
f01057d4	obj/kern/kernel.asm	/^f01057d4:	0f 85 c6 01 00 00    	jne    f01059a0 <debuginfo_eip+0x223>$/;"	l
f01057da	obj/kern/kernel.asm	/^f01057da:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f01057e1	obj/kern/kernel.asm	/^f01057e1:	b8 e8 37 11 f0       	mov    $0xf01137e8,%eax$/;"	l
f01057e6	obj/kern/kernel.asm	/^f01057e6:	2d 30 8d 10 f0       	sub    $0xf0108d30,%eax$/;"	l
f01057eb	obj/kern/kernel.asm	/^f01057eb:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f01057ee	obj/kern/kernel.asm	/^f01057ee:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f01057f4	obj/kern/kernel.asm	/^f01057f4:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01057f7	obj/kern/kernel.asm	/^f01057f7:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01057fa	obj/kern/kernel.asm	/^f01057fa:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01057fe	obj/kern/kernel.asm	/^f01057fe:	c7 04 24 64 00 00 00 	movl   $0x64,(%esp)$/;"	l
f0105805	obj/kern/kernel.asm	/^f0105805:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f0105808	obj/kern/kernel.asm	/^f0105808:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f010580b	obj/kern/kernel.asm	/^f010580b:	b8 30 8d 10 f0       	mov    $0xf0108d30,%eax$/;"	l
f0105810	obj/kern/kernel.asm	/^f0105810:	e8 8b fe ff ff       	call   f01056a0 <stab_binsearch>$/;"	l
f0105815	obj/kern/kernel.asm	/^f0105815:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105818	obj/kern/kernel.asm	/^f0105818:	85 c0                	test   %eax,%eax$/;"	l
f010581a	obj/kern/kernel.asm	/^f010581a:	0f 84 87 01 00 00    	je     f01059a7 <debuginfo_eip+0x22a>$/;"	l
f0105820	obj/kern/kernel.asm	/^f0105820:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105823	obj/kern/kernel.asm	/^f0105823:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105826	obj/kern/kernel.asm	/^f0105826:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105829	obj/kern/kernel.asm	/^f0105829:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010582d	obj/kern/kernel.asm	/^f010582d:	c7 04 24 24 00 00 00 	movl   $0x24,(%esp)$/;"	l
f0105834	obj/kern/kernel.asm	/^f0105834:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f0105837	obj/kern/kernel.asm	/^f0105837:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f010583a	obj/kern/kernel.asm	/^f010583a:	b8 30 8d 10 f0       	mov    $0xf0108d30,%eax$/;"	l
f010583f	obj/kern/kernel.asm	/^f010583f:	e8 5c fe ff ff       	call   f01056a0 <stab_binsearch>$/;"	l
f0105844	obj/kern/kernel.asm	/^f0105844:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105847	obj/kern/kernel.asm	/^f0105847:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f010584a	obj/kern/kernel.asm	/^f010584a:	39 d0                	cmp    %edx,%eax$/;"	l
f010584c	obj/kern/kernel.asm	/^f010584c:	7f 3d                	jg     f010588b <debuginfo_eip+0x10e>$/;"	l
f010584e	obj/kern/kernel.asm	/^f010584e:	6b c8 0c             	imul   $0xc,%eax,%ecx$/;"	l
f0105851	obj/kern/kernel.asm	/^f0105851:	8d b9 30 8d 10 f0    	lea    -0xfef72d0(%ecx),%edi$/;"	l
f0105857	obj/kern/kernel.asm	/^f0105857:	89 7d c4             	mov    %edi,-0x3c(%ebp)$/;"	l
f010585a	obj/kern/kernel.asm	/^f010585a:	8b 89 30 8d 10 f0    	mov    -0xfef72d0(%ecx),%ecx$/;"	l
f0105860	obj/kern/kernel.asm	/^f0105860:	bf 1e 6f 11 f0       	mov    $0xf0116f1e,%edi$/;"	l
f0105865	obj/kern/kernel.asm	/^f0105865:	81 ef e9 37 11 f0    	sub    $0xf01137e9,%edi$/;"	l
f010586b	obj/kern/kernel.asm	/^f010586b:	39 f9                	cmp    %edi,%ecx$/;"	l
f010586d	obj/kern/kernel.asm	/^f010586d:	73 09                	jae    f0105878 <debuginfo_eip+0xfb>$/;"	l
f010586f	obj/kern/kernel.asm	/^f010586f:	81 c1 e9 37 11 f0    	add    $0xf01137e9,%ecx$/;"	l
f0105875	obj/kern/kernel.asm	/^f0105875:	89 4b 08             	mov    %ecx,0x8(%ebx)$/;"	l
f0105878	obj/kern/kernel.asm	/^f0105878:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f010587b	obj/kern/kernel.asm	/^f010587b:	8b 4f 08             	mov    0x8(%edi),%ecx$/;"	l
f010587e	obj/kern/kernel.asm	/^f010587e:	89 4b 10             	mov    %ecx,0x10(%ebx)$/;"	l
f0105881	obj/kern/kernel.asm	/^f0105881:	29 ce                	sub    %ecx,%esi$/;"	l
f0105883	obj/kern/kernel.asm	/^f0105883:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105886	obj/kern/kernel.asm	/^f0105886:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0105889	obj/kern/kernel.asm	/^f0105889:	eb 0f                	jmp    f010589a <debuginfo_eip+0x11d>$/;"	l
f010588b	obj/kern/kernel.asm	/^f010588b:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f010588e	obj/kern/kernel.asm	/^f010588e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105891	obj/kern/kernel.asm	/^f0105891:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105894	obj/kern/kernel.asm	/^f0105894:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105897	obj/kern/kernel.asm	/^f0105897:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010589a	obj/kern/kernel.asm	/^f010589a:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
f01058a1	obj/kern/kernel.asm	/^f01058a1:	00 $/;"	l
f01058a2	obj/kern/kernel.asm	/^f01058a2:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01058a5	obj/kern/kernel.asm	/^f01058a5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01058a8	obj/kern/kernel.asm	/^f01058a8:	e8 d2 09 00 00       	call   f010627f <strfind>$/;"	l
f01058ad	obj/kern/kernel.asm	/^f01058ad:	2b 43 08             	sub    0x8(%ebx),%eax$/;"	l
f01058b0	obj/kern/kernel.asm	/^f01058b0:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
f01058b3	obj/kern/kernel.asm	/^f01058b3:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01058b7	obj/kern/kernel.asm	/^f01058b7:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)$/;"	l
f01058be	obj/kern/kernel.asm	/^f01058be:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f01058c1	obj/kern/kernel.asm	/^f01058c1:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f01058c4	obj/kern/kernel.asm	/^f01058c4:	b8 30 8d 10 f0       	mov    $0xf0108d30,%eax$/;"	l
f01058c9	obj/kern/kernel.asm	/^f01058c9:	e8 d2 fd ff ff       	call   f01056a0 <stab_binsearch>$/;"	l
f01058ce	obj/kern/kernel.asm	/^f01058ce:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01058d1	obj/kern/kernel.asm	/^f01058d1:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
f01058d4	obj/kern/kernel.asm	/^f01058d4:	0f 8f d4 00 00 00    	jg     f01059ae <debuginfo_eip+0x231>$/;"	l
f01058da	obj/kern/kernel.asm	/^f01058da:	6b c0 0c             	imul   $0xc,%eax,%eax$/;"	l
f01058dd	obj/kern/kernel.asm	/^f01058dd:	0f b7 80 36 8d 10 f0 	movzwl -0xfef72ca(%eax),%eax$/;"	l
f01058e4	obj/kern/kernel.asm	/^f01058e4:	89 43 04             	mov    %eax,0x4(%ebx)$/;"	l
f01058e7	obj/kern/kernel.asm	/^f01058e7:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f01058ea	obj/kern/kernel.asm	/^f01058ea:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f01058ed	obj/kern/kernel.asm	/^f01058ed:	39 f2                	cmp    %esi,%edx$/;"	l
f01058ef	obj/kern/kernel.asm	/^f01058ef:	7c 5c                	jl     f010594d <debuginfo_eip+0x1d0>$/;"	l
f01058f1	obj/kern/kernel.asm	/^f01058f1:	6b c2 0c             	imul   $0xc,%edx,%eax$/;"	l
f01058f4	obj/kern/kernel.asm	/^f01058f4:	8d b8 30 8d 10 f0    	lea    -0xfef72d0(%eax),%edi$/;"	l
f01058fa	obj/kern/kernel.asm	/^f01058fa:	0f b6 4f 04          	movzbl 0x4(%edi),%ecx$/;"	l
f01058fe	obj/kern/kernel.asm	/^f01058fe:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0105901	obj/kern/kernel.asm	/^f0105901:	74 2b                	je     f010592e <debuginfo_eip+0x1b1>$/;"	l
f0105903	obj/kern/kernel.asm	/^f0105903:	05 24 8d 10 f0       	add    $0xf0108d24,%eax$/;"	l
f0105908	obj/kern/kernel.asm	/^f0105908:	eb 15                	jmp    f010591f <debuginfo_eip+0x1a2>$/;"	l
f010590a	obj/kern/kernel.asm	/^f010590a:	83 ea 01             	sub    $0x1,%edx$/;"	l
f010590d	obj/kern/kernel.asm	/^f010590d:	39 f2                	cmp    %esi,%edx$/;"	l
f010590f	obj/kern/kernel.asm	/^f010590f:	7c 3c                	jl     f010594d <debuginfo_eip+0x1d0>$/;"	l
f0105911	obj/kern/kernel.asm	/^f0105911:	89 c7                	mov    %eax,%edi$/;"	l
f0105913	obj/kern/kernel.asm	/^f0105913:	83 e8 0c             	sub    $0xc,%eax$/;"	l
f0105916	obj/kern/kernel.asm	/^f0105916:	0f b6 48 10          	movzbl 0x10(%eax),%ecx$/;"	l
f010591a	obj/kern/kernel.asm	/^f010591a:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f010591d	obj/kern/kernel.asm	/^f010591d:	74 0f                	je     f010592e <debuginfo_eip+0x1b1>$/;"	l
f010591f	obj/kern/kernel.asm	/^f010591f:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f0105922	obj/kern/kernel.asm	/^f0105922:	75 e6                	jne    f010590a <debuginfo_eip+0x18d>$/;"	l
f0105924	obj/kern/kernel.asm	/^f0105924:	83 7f 08 00          	cmpl   $0x0,0x8(%edi)$/;"	l
f0105928	obj/kern/kernel.asm	/^f0105928:	74 e0                	je     f010590a <debuginfo_eip+0x18d>$/;"	l
f010592a	obj/kern/kernel.asm	/^f010592a:	39 d6                	cmp    %edx,%esi$/;"	l
f010592c	obj/kern/kernel.asm	/^f010592c:	7f 1f                	jg     f010594d <debuginfo_eip+0x1d0>$/;"	l
f010592e	obj/kern/kernel.asm	/^f010592e:	6b d2 0c             	imul   $0xc,%edx,%edx$/;"	l
f0105931	obj/kern/kernel.asm	/^f0105931:	8b 82 30 8d 10 f0    	mov    -0xfef72d0(%edx),%eax$/;"	l
f0105937	obj/kern/kernel.asm	/^f0105937:	ba 1e 6f 11 f0       	mov    $0xf0116f1e,%edx$/;"	l
f010593c	obj/kern/kernel.asm	/^f010593c:	81 ea e9 37 11 f0    	sub    $0xf01137e9,%edx$/;"	l
f0105942	obj/kern/kernel.asm	/^f0105942:	39 d0                	cmp    %edx,%eax$/;"	l
f0105944	obj/kern/kernel.asm	/^f0105944:	73 07                	jae    f010594d <debuginfo_eip+0x1d0>$/;"	l
f0105946	obj/kern/kernel.asm	/^f0105946:	05 e9 37 11 f0       	add    $0xf01137e9,%eax$/;"	l
f010594b	obj/kern/kernel.asm	/^f010594b:	89 03                	mov    %eax,(%ebx)$/;"	l
f010594d	obj/kern/kernel.asm	/^f010594d:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0105950	obj/kern/kernel.asm	/^f0105950:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0105953	obj/kern/kernel.asm	/^f0105953:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105958	obj/kern/kernel.asm	/^f0105958:	39 d1                	cmp    %edx,%ecx$/;"	l
f010595a	obj/kern/kernel.asm	/^f010595a:	7d 73                	jge    f01059cf <debuginfo_eip+0x252>$/;"	l
f010595c	obj/kern/kernel.asm	/^f010595c:	8d 41 01             	lea    0x1(%ecx),%eax$/;"	l
f010595f	obj/kern/kernel.asm	/^f010595f:	39 c2                	cmp    %eax,%edx$/;"	l
f0105961	obj/kern/kernel.asm	/^f0105961:	7e 52                	jle    f01059b5 <debuginfo_eip+0x238>$/;"	l
f0105963	obj/kern/kernel.asm	/^f0105963:	6b c0 0c             	imul   $0xc,%eax,%eax$/;"	l
f0105966	obj/kern/kernel.asm	/^f0105966:	80 b8 34 8d 10 f0 a0 	cmpb   $0xa0,-0xfef72cc(%eax)$/;"	l
f010596d	obj/kern/kernel.asm	/^f010596d:	75 4d                	jne    f01059bc <debuginfo_eip+0x23f>$/;"	l
f010596f	obj/kern/kernel.asm	/^f010596f:	83 c1 02             	add    $0x2,%ecx$/;"	l
f0105972	obj/kern/kernel.asm	/^f0105972:	05 24 8d 10 f0       	add    $0xf0108d24,%eax$/;"	l
f0105977	obj/kern/kernel.asm	/^f0105977:	89 d6                	mov    %edx,%esi$/;"	l
f0105979	obj/kern/kernel.asm	/^f0105979:	83 43 14 01          	addl   $0x1,0x14(%ebx)$/;"	l
f010597d	obj/kern/kernel.asm	/^f010597d:	39 f1                	cmp    %esi,%ecx$/;"	l
f010597f	obj/kern/kernel.asm	/^f010597f:	74 42                	je     f01059c3 <debuginfo_eip+0x246>$/;"	l
f0105981	obj/kern/kernel.asm	/^f0105981:	0f b6 50 1c          	movzbl 0x1c(%eax),%edx$/;"	l
f0105985	obj/kern/kernel.asm	/^f0105985:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105988	obj/kern/kernel.asm	/^f0105988:	83 c0 0c             	add    $0xc,%eax$/;"	l
f010598b	obj/kern/kernel.asm	/^f010598b:	80 fa a0             	cmp    $0xa0,%dl$/;"	l
f010598e	obj/kern/kernel.asm	/^f010598e:	74 e9                	je     f0105979 <debuginfo_eip+0x1fc>$/;"	l
f0105990	obj/kern/kernel.asm	/^f0105990:	eb 38                	jmp    f01059ca <debuginfo_eip+0x24d>$/;"	l
f0105992	obj/kern/kernel.asm	/^f0105992:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105997	obj/kern/kernel.asm	/^f0105997:	eb 36                	jmp    f01059cf <debuginfo_eip+0x252>$/;"	l
f0105999	obj/kern/kernel.asm	/^f0105999:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010599e	obj/kern/kernel.asm	/^f010599e:	eb 2f                	jmp    f01059cf <debuginfo_eip+0x252>$/;"	l
f01059a0	obj/kern/kernel.asm	/^f01059a0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01059a5	obj/kern/kernel.asm	/^f01059a5:	eb 28                	jmp    f01059cf <debuginfo_eip+0x252>$/;"	l
f01059a7	obj/kern/kernel.asm	/^f01059a7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01059ac	obj/kern/kernel.asm	/^f01059ac:	eb 21                	jmp    f01059cf <debuginfo_eip+0x252>$/;"	l
f01059ae	obj/kern/kernel.asm	/^f01059ae:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01059b3	obj/kern/kernel.asm	/^f01059b3:	eb 1a                	jmp    f01059cf <debuginfo_eip+0x252>$/;"	l
f01059b5	obj/kern/kernel.asm	/^f01059b5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01059ba	obj/kern/kernel.asm	/^f01059ba:	eb 13                	jmp    f01059cf <debuginfo_eip+0x252>$/;"	l
f01059bc	obj/kern/kernel.asm	/^f01059bc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01059c1	obj/kern/kernel.asm	/^f01059c1:	eb 0c                	jmp    f01059cf <debuginfo_eip+0x252>$/;"	l
f01059c3	obj/kern/kernel.asm	/^f01059c3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01059c8	obj/kern/kernel.asm	/^f01059c8:	eb 05                	jmp    f01059cf <debuginfo_eip+0x252>$/;"	l
f01059ca	obj/kern/kernel.asm	/^f01059ca:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01059cf	obj/kern/kernel.asm	/^f01059cf:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f01059d2	obj/kern/kernel.asm	/^f01059d2:	5b                   	pop    %ebx$/;"	l
f01059d3	obj/kern/kernel.asm	/^f01059d3:	5e                   	pop    %esi$/;"	l
f01059d4	obj/kern/kernel.asm	/^f01059d4:	5f                   	pop    %edi$/;"	l
f01059d5	obj/kern/kernel.asm	/^f01059d5:	5d                   	pop    %ebp$/;"	l
f01059d6	obj/kern/kernel.asm	/^f01059d6:	c3                   	ret    $/;"	l
f01059d7	obj/kern/kernel.asm	/^f01059d7:	66 90                	xchg   %ax,%ax$/;"	l
f01059d9	obj/kern/kernel.asm	/^f01059d9:	66 90                	xchg   %ax,%ax$/;"	l
f01059db	obj/kern/kernel.asm	/^f01059db:	66 90                	xchg   %ax,%ax$/;"	l
f01059dd	obj/kern/kernel.asm	/^f01059dd:	66 90                	xchg   %ax,%ax$/;"	l
f01059df	obj/kern/kernel.asm	/^f01059df:	90                   	nop$/;"	l
f01059e0	obj/kern/kernel.asm	/^f01059e0 <printnum>:$/;"	l
f01059e0	obj/kern/kernel.asm	/^f01059e0:	55                   	push   %ebp$/;"	l
f01059e1	obj/kern/kernel.asm	/^f01059e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01059e3	obj/kern/kernel.asm	/^f01059e3:	57                   	push   %edi$/;"	l
f01059e4	obj/kern/kernel.asm	/^f01059e4:	56                   	push   %esi$/;"	l
f01059e5	obj/kern/kernel.asm	/^f01059e5:	53                   	push   %ebx$/;"	l
f01059e6	obj/kern/kernel.asm	/^f01059e6:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f01059e9	obj/kern/kernel.asm	/^f01059e9:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01059ec	obj/kern/kernel.asm	/^f01059ec:	89 d7                	mov    %edx,%edi$/;"	l
f01059ee	obj/kern/kernel.asm	/^f01059ee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01059f1	obj/kern/kernel.asm	/^f01059f1:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01059f4	obj/kern/kernel.asm	/^f01059f4:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01059f7	obj/kern/kernel.asm	/^f01059f7:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f01059fa	obj/kern/kernel.asm	/^f01059fa:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01059fd	obj/kern/kernel.asm	/^f01059fd:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105a02	obj/kern/kernel.asm	/^f0105a02:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105a05	obj/kern/kernel.asm	/^f0105a05:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0105a08	obj/kern/kernel.asm	/^f0105a08:	39 f1                	cmp    %esi,%ecx$/;"	l
f0105a0a	obj/kern/kernel.asm	/^f0105a0a:	72 14                	jb     f0105a20 <printnum+0x40>$/;"	l
f0105a0c	obj/kern/kernel.asm	/^f0105a0c:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
f0105a0f	obj/kern/kernel.asm	/^f0105a0f:	76 0f                	jbe    f0105a20 <printnum+0x40>$/;"	l
f0105a11	obj/kern/kernel.asm	/^f0105a11:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105a14	obj/kern/kernel.asm	/^f0105a14:	8d 70 ff             	lea    -0x1(%eax),%esi$/;"	l
f0105a17	obj/kern/kernel.asm	/^f0105a17:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0105a1a	obj/kern/kernel.asm	/^f0105a1a:	85 f6                	test   %esi,%esi$/;"	l
f0105a1c	obj/kern/kernel.asm	/^f0105a1c:	7f 60                	jg     f0105a7e <printnum+0x9e>$/;"	l
f0105a1e	obj/kern/kernel.asm	/^f0105a1e:	eb 72                	jmp    f0105a92 <printnum+0xb2>$/;"	l
f0105a20	obj/kern/kernel.asm	/^f0105a20:	8b 4d 18             	mov    0x18(%ebp),%ecx$/;"	l
f0105a23	obj/kern/kernel.asm	/^f0105a23:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
f0105a27	obj/kern/kernel.asm	/^f0105a27:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
f0105a2a	obj/kern/kernel.asm	/^f0105a2a:	8d 51 ff             	lea    -0x1(%ecx),%edx$/;"	l
f0105a2d	obj/kern/kernel.asm	/^f0105a2d:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0105a31	obj/kern/kernel.asm	/^f0105a31:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105a35	obj/kern/kernel.asm	/^f0105a35:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0105a39	obj/kern/kernel.asm	/^f0105a39:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f0105a3d	obj/kern/kernel.asm	/^f0105a3d:	89 c3                	mov    %eax,%ebx$/;"	l
f0105a3f	obj/kern/kernel.asm	/^f0105a3f:	89 d6                	mov    %edx,%esi$/;"	l
f0105a41	obj/kern/kernel.asm	/^f0105a41:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0105a44	obj/kern/kernel.asm	/^f0105a44:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0105a47	obj/kern/kernel.asm	/^f0105a47:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105a4b	obj/kern/kernel.asm	/^f0105a4b:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0105a4f	obj/kern/kernel.asm	/^f0105a4f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105a52	obj/kern/kernel.asm	/^f0105a52:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105a55	obj/kern/kernel.asm	/^f0105a55:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105a58	obj/kern/kernel.asm	/^f0105a58:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105a5c	obj/kern/kernel.asm	/^f0105a5c:	e8 5f 13 00 00       	call   f0106dc0 <__udivdi3>$/;"	l
f0105a61	obj/kern/kernel.asm	/^f0105a61:	89 d9                	mov    %ebx,%ecx$/;"	l
f0105a63	obj/kern/kernel.asm	/^f0105a63:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0105a67	obj/kern/kernel.asm	/^f0105a67:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0105a6b	obj/kern/kernel.asm	/^f0105a6b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105a6e	obj/kern/kernel.asm	/^f0105a6e:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105a72	obj/kern/kernel.asm	/^f0105a72:	89 fa                	mov    %edi,%edx$/;"	l
f0105a74	obj/kern/kernel.asm	/^f0105a74:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105a77	obj/kern/kernel.asm	/^f0105a77:	e8 64 ff ff ff       	call   f01059e0 <printnum>$/;"	l
f0105a7c	obj/kern/kernel.asm	/^f0105a7c:	eb 14                	jmp    f0105a92 <printnum+0xb2>$/;"	l
f0105a7e	obj/kern/kernel.asm	/^f0105a7e:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105a82	obj/kern/kernel.asm	/^f0105a82:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0105a85	obj/kern/kernel.asm	/^f0105a85:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105a88	obj/kern/kernel.asm	/^f0105a88:	ff d3                	call   *%ebx$/;"	l
f0105a8a	obj/kern/kernel.asm	/^f0105a8a:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0105a8d	obj/kern/kernel.asm	/^f0105a8d:	75 ef                	jne    f0105a7e <printnum+0x9e>$/;"	l
f0105a8f	obj/kern/kernel.asm	/^f0105a8f:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f0105a92	obj/kern/kernel.asm	/^f0105a92:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105a96	obj/kern/kernel.asm	/^f0105a96:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0105a9a	obj/kern/kernel.asm	/^f0105a9a:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0105a9d	obj/kern/kernel.asm	/^f0105a9d:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0105aa0	obj/kern/kernel.asm	/^f0105aa0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105aa4	obj/kern/kernel.asm	/^f0105aa4:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0105aa8	obj/kern/kernel.asm	/^f0105aa8:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105aab	obj/kern/kernel.asm	/^f0105aab:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105aae	obj/kern/kernel.asm	/^f0105aae:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105ab1	obj/kern/kernel.asm	/^f0105ab1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105ab5	obj/kern/kernel.asm	/^f0105ab5:	e8 36 14 00 00       	call   f0106ef0 <__umoddi3>$/;"	l
f0105aba	obj/kern/kernel.asm	/^f0105aba:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105abe	obj/kern/kernel.asm	/^f0105abe:	0f be 80 b2 87 10 f0 	movsbl -0xfef784e(%eax),%eax$/;"	l
f0105ac5	obj/kern/kernel.asm	/^f0105ac5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105ac8	obj/kern/kernel.asm	/^f0105ac8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105acb	obj/kern/kernel.asm	/^f0105acb:	ff d0                	call   *%eax$/;"	l
f0105acd	obj/kern/kernel.asm	/^f0105acd:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0105ad0	obj/kern/kernel.asm	/^f0105ad0:	5b                   	pop    %ebx$/;"	l
f0105ad1	obj/kern/kernel.asm	/^f0105ad1:	5e                   	pop    %esi$/;"	l
f0105ad2	obj/kern/kernel.asm	/^f0105ad2:	5f                   	pop    %edi$/;"	l
f0105ad3	obj/kern/kernel.asm	/^f0105ad3:	5d                   	pop    %ebp$/;"	l
f0105ad4	obj/kern/kernel.asm	/^f0105ad4:	c3                   	ret    $/;"	l
f0105ad5	obj/kern/kernel.asm	/^f0105ad5 <getuint>:$/;"	l
f0105ad5	obj/kern/kernel.asm	/^f0105ad5:	55                   	push   %ebp$/;"	l
f0105ad6	obj/kern/kernel.asm	/^f0105ad6:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ad8	obj/kern/kernel.asm	/^f0105ad8:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0105adb	obj/kern/kernel.asm	/^f0105adb:	7e 0e                	jle    f0105aeb <getuint+0x16>$/;"	l
f0105add	obj/kern/kernel.asm	/^f0105add:	8b 10                	mov    (%eax),%edx$/;"	l
f0105adf	obj/kern/kernel.asm	/^f0105adf:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f0105ae2	obj/kern/kernel.asm	/^f0105ae2:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105ae4	obj/kern/kernel.asm	/^f0105ae4:	8b 02                	mov    (%edx),%eax$/;"	l
f0105ae6	obj/kern/kernel.asm	/^f0105ae6:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f0105ae9	obj/kern/kernel.asm	/^f0105ae9:	eb 22                	jmp    f0105b0d <getuint+0x38>$/;"	l
f0105aeb	obj/kern/kernel.asm	/^f0105aeb:	85 d2                	test   %edx,%edx$/;"	l
f0105aed	obj/kern/kernel.asm	/^f0105aed:	74 10                	je     f0105aff <getuint+0x2a>$/;"	l
f0105aef	obj/kern/kernel.asm	/^f0105aef:	8b 10                	mov    (%eax),%edx$/;"	l
f0105af1	obj/kern/kernel.asm	/^f0105af1:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0105af4	obj/kern/kernel.asm	/^f0105af4:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105af6	obj/kern/kernel.asm	/^f0105af6:	8b 02                	mov    (%edx),%eax$/;"	l
f0105af8	obj/kern/kernel.asm	/^f0105af8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105afd	obj/kern/kernel.asm	/^f0105afd:	eb 0e                	jmp    f0105b0d <getuint+0x38>$/;"	l
f0105aff	obj/kern/kernel.asm	/^f0105aff:	8b 10                	mov    (%eax),%edx$/;"	l
f0105b01	obj/kern/kernel.asm	/^f0105b01:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0105b04	obj/kern/kernel.asm	/^f0105b04:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105b06	obj/kern/kernel.asm	/^f0105b06:	8b 02                	mov    (%edx),%eax$/;"	l
f0105b08	obj/kern/kernel.asm	/^f0105b08:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105b0d	obj/kern/kernel.asm	/^f0105b0d:	5d                   	pop    %ebp$/;"	l
f0105b0e	obj/kern/kernel.asm	/^f0105b0e:	c3                   	ret    $/;"	l
f0105b0f	obj/kern/kernel.asm	/^f0105b0f <sprintputch>:$/;"	l
f0105b0f	obj/kern/kernel.asm	/^f0105b0f:	55                   	push   %ebp$/;"	l
f0105b10	obj/kern/kernel.asm	/^f0105b10:	89 e5                	mov    %esp,%ebp$/;"	l
f0105b12	obj/kern/kernel.asm	/^f0105b12:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105b15	obj/kern/kernel.asm	/^f0105b15:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f0105b19	obj/kern/kernel.asm	/^f0105b19:	8b 10                	mov    (%eax),%edx$/;"	l
f0105b1b	obj/kern/kernel.asm	/^f0105b1b:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0105b1e	obj/kern/kernel.asm	/^f0105b1e:	73 0a                	jae    f0105b2a <sprintputch+0x1b>$/;"	l
f0105b20	obj/kern/kernel.asm	/^f0105b20:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f0105b23	obj/kern/kernel.asm	/^f0105b23:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105b25	obj/kern/kernel.asm	/^f0105b25:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105b28	obj/kern/kernel.asm	/^f0105b28:	88 02                	mov    %al,(%edx)$/;"	l
f0105b2a	obj/kern/kernel.asm	/^f0105b2a:	5d                   	pop    %ebp$/;"	l
f0105b2b	obj/kern/kernel.asm	/^f0105b2b:	c3                   	ret    $/;"	l
f0105b2c	obj/kern/kernel.asm	/^f0105b2c <printfmt>:$/;"	l
f0105b2c	obj/kern/kernel.asm	/^f0105b2c:	55                   	push   %ebp$/;"	l
f0105b2d	obj/kern/kernel.asm	/^f0105b2d:	89 e5                	mov    %esp,%ebp$/;"	l
f0105b2f	obj/kern/kernel.asm	/^f0105b2f:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105b32	obj/kern/kernel.asm	/^f0105b32:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105b35	obj/kern/kernel.asm	/^f0105b35:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105b39	obj/kern/kernel.asm	/^f0105b39:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105b3c	obj/kern/kernel.asm	/^f0105b3c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105b40	obj/kern/kernel.asm	/^f0105b40:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105b43	obj/kern/kernel.asm	/^f0105b43:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105b47	obj/kern/kernel.asm	/^f0105b47:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105b4a	obj/kern/kernel.asm	/^f0105b4a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105b4d	obj/kern/kernel.asm	/^f0105b4d:	e8 02 00 00 00       	call   f0105b54 <vprintfmt>$/;"	l
f0105b52	obj/kern/kernel.asm	/^f0105b52:	c9                   	leave  $/;"	l
f0105b53	obj/kern/kernel.asm	/^f0105b53:	c3                   	ret    $/;"	l
f0105b54	obj/kern/kernel.asm	/^f0105b54 <vprintfmt>:$/;"	l
f0105b54	obj/kern/kernel.asm	/^f0105b54:	55                   	push   %ebp$/;"	l
f0105b55	obj/kern/kernel.asm	/^f0105b55:	89 e5                	mov    %esp,%ebp$/;"	l
f0105b57	obj/kern/kernel.asm	/^f0105b57:	57                   	push   %edi$/;"	l
f0105b58	obj/kern/kernel.asm	/^f0105b58:	56                   	push   %esi$/;"	l
f0105b59	obj/kern/kernel.asm	/^f0105b59:	53                   	push   %ebx$/;"	l
f0105b5a	obj/kern/kernel.asm	/^f0105b5a:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0105b5d	obj/kern/kernel.asm	/^f0105b5d:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105b60	obj/kern/kernel.asm	/^f0105b60:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105b63	obj/kern/kernel.asm	/^f0105b63:	eb 18                	jmp    f0105b7d <vprintfmt+0x29>$/;"	l
f0105b65	obj/kern/kernel.asm	/^f0105b65:	85 c0                	test   %eax,%eax$/;"	l
f0105b67	obj/kern/kernel.asm	/^f0105b67:	0f 84 c3 03 00 00    	je     f0105f30 <vprintfmt+0x3dc>$/;"	l
f0105b6d	obj/kern/kernel.asm	/^f0105b6d:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105b71	obj/kern/kernel.asm	/^f0105b71:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105b74	obj/kern/kernel.asm	/^f0105b74:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105b77	obj/kern/kernel.asm	/^f0105b77:	89 f3                	mov    %esi,%ebx$/;"	l
f0105b79	obj/kern/kernel.asm	/^f0105b79:	eb 02                	jmp    f0105b7d <vprintfmt+0x29>$/;"	l
f0105b7b	obj/kern/kernel.asm	/^f0105b7b:	89 f3                	mov    %esi,%ebx$/;"	l
f0105b7d	obj/kern/kernel.asm	/^f0105b7d:	8d 73 01             	lea    0x1(%ebx),%esi$/;"	l
f0105b80	obj/kern/kernel.asm	/^f0105b80:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0105b83	obj/kern/kernel.asm	/^f0105b83:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0105b86	obj/kern/kernel.asm	/^f0105b86:	75 dd                	jne    f0105b65 <vprintfmt+0x11>$/;"	l
f0105b88	obj/kern/kernel.asm	/^f0105b88:	c6 45 e3 20          	movb   $0x20,-0x1d(%ebp)$/;"	l
f0105b8c	obj/kern/kernel.asm	/^f0105b8c:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)$/;"	l
f0105b93	obj/kern/kernel.asm	/^f0105b93:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f0105b9a	obj/kern/kernel.asm	/^f0105b9a:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
f0105ba1	obj/kern/kernel.asm	/^f0105ba1:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105ba6	obj/kern/kernel.asm	/^f0105ba6:	eb 1d                	jmp    f0105bc5 <vprintfmt+0x71>$/;"	l
f0105ba8	obj/kern/kernel.asm	/^f0105ba8:	89 de                	mov    %ebx,%esi$/;"	l
f0105baa	obj/kern/kernel.asm	/^f0105baa:	c6 45 e3 2d          	movb   $0x2d,-0x1d(%ebp)$/;"	l
f0105bae	obj/kern/kernel.asm	/^f0105bae:	eb 15                	jmp    f0105bc5 <vprintfmt+0x71>$/;"	l
f0105bb0	obj/kern/kernel.asm	/^f0105bb0:	89 de                	mov    %ebx,%esi$/;"	l
f0105bb2	obj/kern/kernel.asm	/^f0105bb2:	c6 45 e3 30          	movb   $0x30,-0x1d(%ebp)$/;"	l
f0105bb6	obj/kern/kernel.asm	/^f0105bb6:	eb 0d                	jmp    f0105bc5 <vprintfmt+0x71>$/;"	l
f0105bb8	obj/kern/kernel.asm	/^f0105bb8:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105bbb	obj/kern/kernel.asm	/^f0105bbb:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105bbe	obj/kern/kernel.asm	/^f0105bbe:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f0105bc5	obj/kern/kernel.asm	/^f0105bc5:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f0105bc8	obj/kern/kernel.asm	/^f0105bc8:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0105bcb	obj/kern/kernel.asm	/^f0105bcb:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f0105bce	obj/kern/kernel.asm	/^f0105bce:	83 e8 23             	sub    $0x23,%eax$/;"	l
f0105bd1	obj/kern/kernel.asm	/^f0105bd1:	3c 55                	cmp    $0x55,%al$/;"	l
f0105bd3	obj/kern/kernel.asm	/^f0105bd3:	0f 87 2f 03 00 00    	ja     f0105f08 <vprintfmt+0x3b4>$/;"	l
f0105bd9	obj/kern/kernel.asm	/^f0105bd9:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105bdc	obj/kern/kernel.asm	/^f0105bdc:	ff 24 85 e0 88 10 f0 	jmp    *-0xfef7720(,%eax,4)$/;"	l
f0105be3	obj/kern/kernel.asm	/^f0105be3:	8d 41 d0             	lea    -0x30(%ecx),%eax$/;"	l
f0105be6	obj/kern/kernel.asm	/^f0105be6:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105be9	obj/kern/kernel.asm	/^f0105be9:	0f be 46 01          	movsbl 0x1(%esi),%eax$/;"	l
f0105bed	obj/kern/kernel.asm	/^f0105bed:	8d 48 d0             	lea    -0x30(%eax),%ecx$/;"	l
f0105bf0	obj/kern/kernel.asm	/^f0105bf0:	83 f9 09             	cmp    $0x9,%ecx$/;"	l
f0105bf3	obj/kern/kernel.asm	/^f0105bf3:	77 50                	ja     f0105c45 <vprintfmt+0xf1>$/;"	l
f0105bf5	obj/kern/kernel.asm	/^f0105bf5:	89 de                	mov    %ebx,%esi$/;"	l
f0105bf7	obj/kern/kernel.asm	/^f0105bf7:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0105bfa	obj/kern/kernel.asm	/^f0105bfa:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105bfd	obj/kern/kernel.asm	/^f0105bfd:	8d 0c 89             	lea    (%ecx,%ecx,4),%ecx$/;"	l
f0105c00	obj/kern/kernel.asm	/^f0105c00:	8d 4c 48 d0          	lea    -0x30(%eax,%ecx,2),%ecx$/;"	l
f0105c04	obj/kern/kernel.asm	/^f0105c04:	0f be 06             	movsbl (%esi),%eax$/;"	l
f0105c07	obj/kern/kernel.asm	/^f0105c07:	8d 58 d0             	lea    -0x30(%eax),%ebx$/;"	l
f0105c0a	obj/kern/kernel.asm	/^f0105c0a:	83 fb 09             	cmp    $0x9,%ebx$/;"	l
f0105c0d	obj/kern/kernel.asm	/^f0105c0d:	76 eb                	jbe    f0105bfa <vprintfmt+0xa6>$/;"	l
f0105c0f	obj/kern/kernel.asm	/^f0105c0f:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0105c12	obj/kern/kernel.asm	/^f0105c12:	eb 33                	jmp    f0105c47 <vprintfmt+0xf3>$/;"	l
f0105c14	obj/kern/kernel.asm	/^f0105c14:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105c17	obj/kern/kernel.asm	/^f0105c17:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
f0105c1a	obj/kern/kernel.asm	/^f0105c1a:	89 4d 14             	mov    %ecx,0x14(%ebp)$/;"	l
f0105c1d	obj/kern/kernel.asm	/^f0105c1d:	8b 00                	mov    (%eax),%eax$/;"	l
f0105c1f	obj/kern/kernel.asm	/^f0105c1f:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105c22	obj/kern/kernel.asm	/^f0105c22:	89 de                	mov    %ebx,%esi$/;"	l
f0105c24	obj/kern/kernel.asm	/^f0105c24:	eb 21                	jmp    f0105c47 <vprintfmt+0xf3>$/;"	l
f0105c26	obj/kern/kernel.asm	/^f0105c26:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0105c29	obj/kern/kernel.asm	/^f0105c29:	85 c9                	test   %ecx,%ecx$/;"	l
f0105c2b	obj/kern/kernel.asm	/^f0105c2b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105c30	obj/kern/kernel.asm	/^f0105c30:	0f 49 c1             	cmovns %ecx,%eax$/;"	l
f0105c33	obj/kern/kernel.asm	/^f0105c33:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105c36	obj/kern/kernel.asm	/^f0105c36:	89 de                	mov    %ebx,%esi$/;"	l
f0105c38	obj/kern/kernel.asm	/^f0105c38:	eb 8b                	jmp    f0105bc5 <vprintfmt+0x71>$/;"	l
f0105c3a	obj/kern/kernel.asm	/^f0105c3a:	89 de                	mov    %ebx,%esi$/;"	l
f0105c3c	obj/kern/kernel.asm	/^f0105c3c:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)$/;"	l
f0105c43	obj/kern/kernel.asm	/^f0105c43:	eb 80                	jmp    f0105bc5 <vprintfmt+0x71>$/;"	l
f0105c45	obj/kern/kernel.asm	/^f0105c45:	89 de                	mov    %ebx,%esi$/;"	l
f0105c47	obj/kern/kernel.asm	/^f0105c47:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0105c4b	obj/kern/kernel.asm	/^f0105c4b:	0f 89 74 ff ff ff    	jns    f0105bc5 <vprintfmt+0x71>$/;"	l
f0105c51	obj/kern/kernel.asm	/^f0105c51:	e9 62 ff ff ff       	jmp    f0105bb8 <vprintfmt+0x64>$/;"	l
f0105c56	obj/kern/kernel.asm	/^f0105c56:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105c59	obj/kern/kernel.asm	/^f0105c59:	89 de                	mov    %ebx,%esi$/;"	l
f0105c5b	obj/kern/kernel.asm	/^f0105c5b:	e9 65 ff ff ff       	jmp    f0105bc5 <vprintfmt+0x71>$/;"	l
f0105c60	obj/kern/kernel.asm	/^f0105c60:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105c63	obj/kern/kernel.asm	/^f0105c63:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105c66	obj/kern/kernel.asm	/^f0105c66:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105c69	obj/kern/kernel.asm	/^f0105c69:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105c6d	obj/kern/kernel.asm	/^f0105c6d:	8b 00                	mov    (%eax),%eax$/;"	l
f0105c6f	obj/kern/kernel.asm	/^f0105c6f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105c72	obj/kern/kernel.asm	/^f0105c72:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105c75	obj/kern/kernel.asm	/^f0105c75:	e9 03 ff ff ff       	jmp    f0105b7d <vprintfmt+0x29>$/;"	l
f0105c7a	obj/kern/kernel.asm	/^f0105c7a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105c7d	obj/kern/kernel.asm	/^f0105c7d:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105c80	obj/kern/kernel.asm	/^f0105c80:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105c83	obj/kern/kernel.asm	/^f0105c83:	8b 00                	mov    (%eax),%eax$/;"	l
f0105c85	obj/kern/kernel.asm	/^f0105c85:	99                   	cltd   $/;"	l
f0105c86	obj/kern/kernel.asm	/^f0105c86:	31 d0                	xor    %edx,%eax$/;"	l
f0105c88	obj/kern/kernel.asm	/^f0105c88:	29 d0                	sub    %edx,%eax$/;"	l
f0105c8a	obj/kern/kernel.asm	/^f0105c8a:	83 f8 0f             	cmp    $0xf,%eax$/;"	l
f0105c8d	obj/kern/kernel.asm	/^f0105c8d:	7f 0b                	jg     f0105c9a <vprintfmt+0x146>$/;"	l
f0105c8f	obj/kern/kernel.asm	/^f0105c8f:	8b 14 85 40 8a 10 f0 	mov    -0xfef75c0(,%eax,4),%edx$/;"	l
f0105c96	obj/kern/kernel.asm	/^f0105c96:	85 d2                	test   %edx,%edx$/;"	l
f0105c98	obj/kern/kernel.asm	/^f0105c98:	75 20                	jne    f0105cba <vprintfmt+0x166>$/;"	l
f0105c9a	obj/kern/kernel.asm	/^f0105c9a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105c9e	obj/kern/kernel.asm	/^f0105c9e:	c7 44 24 08 ca 87 10 	movl   $0xf01087ca,0x8(%esp)$/;"	l
f0105ca5	obj/kern/kernel.asm	/^f0105ca5:	f0 $/;"	l
f0105ca6	obj/kern/kernel.asm	/^f0105ca6:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105caa	obj/kern/kernel.asm	/^f0105caa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105cad	obj/kern/kernel.asm	/^f0105cad:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105cb0	obj/kern/kernel.asm	/^f0105cb0:	e8 77 fe ff ff       	call   f0105b2c <printfmt>$/;"	l
f0105cb5	obj/kern/kernel.asm	/^f0105cb5:	e9 c3 fe ff ff       	jmp    f0105b7d <vprintfmt+0x29>$/;"	l
f0105cba	obj/kern/kernel.asm	/^f0105cba:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0105cbe	obj/kern/kernel.asm	/^f0105cbe:	c7 44 24 08 79 7f 10 	movl   $0xf0107f79,0x8(%esp)$/;"	l
f0105cc5	obj/kern/kernel.asm	/^f0105cc5:	f0 $/;"	l
f0105cc6	obj/kern/kernel.asm	/^f0105cc6:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105cca	obj/kern/kernel.asm	/^f0105cca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105ccd	obj/kern/kernel.asm	/^f0105ccd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105cd0	obj/kern/kernel.asm	/^f0105cd0:	e8 57 fe ff ff       	call   f0105b2c <printfmt>$/;"	l
f0105cd5	obj/kern/kernel.asm	/^f0105cd5:	e9 a3 fe ff ff       	jmp    f0105b7d <vprintfmt+0x29>$/;"	l
f0105cda	obj/kern/kernel.asm	/^f0105cda:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0105cdd	obj/kern/kernel.asm	/^f0105cdd:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0105ce0	obj/kern/kernel.asm	/^f0105ce0:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105ce3	obj/kern/kernel.asm	/^f0105ce3:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105ce6	obj/kern/kernel.asm	/^f0105ce6:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105ce9	obj/kern/kernel.asm	/^f0105ce9:	8b 00                	mov    (%eax),%eax$/;"	l
f0105ceb	obj/kern/kernel.asm	/^f0105ceb:	85 c0                	test   %eax,%eax$/;"	l
f0105ced	obj/kern/kernel.asm	/^f0105ced:	ba c3 87 10 f0       	mov    $0xf01087c3,%edx$/;"	l
f0105cf2	obj/kern/kernel.asm	/^f0105cf2:	0f 45 d0             	cmovne %eax,%edx$/;"	l
f0105cf5	obj/kern/kernel.asm	/^f0105cf5:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0105cf8	obj/kern/kernel.asm	/^f0105cf8:	80 7d e3 2d          	cmpb   $0x2d,-0x1d(%ebp)$/;"	l
f0105cfc	obj/kern/kernel.asm	/^f0105cfc:	74 04                	je     f0105d02 <vprintfmt+0x1ae>$/;"	l
f0105cfe	obj/kern/kernel.asm	/^f0105cfe:	85 f6                	test   %esi,%esi$/;"	l
f0105d00	obj/kern/kernel.asm	/^f0105d00:	7f 19                	jg     f0105d1b <vprintfmt+0x1c7>$/;"	l
f0105d02	obj/kern/kernel.asm	/^f0105d02:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0105d05	obj/kern/kernel.asm	/^f0105d05:	8d 70 01             	lea    0x1(%eax),%esi$/;"	l
f0105d08	obj/kern/kernel.asm	/^f0105d08:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0105d0b	obj/kern/kernel.asm	/^f0105d0b:	0f be c2             	movsbl %dl,%eax$/;"	l
f0105d0e	obj/kern/kernel.asm	/^f0105d0e:	85 c0                	test   %eax,%eax$/;"	l
f0105d10	obj/kern/kernel.asm	/^f0105d10:	0f 85 95 00 00 00    	jne    f0105dab <vprintfmt+0x257>$/;"	l
f0105d16	obj/kern/kernel.asm	/^f0105d16:	e9 85 00 00 00       	jmp    f0105da0 <vprintfmt+0x24c>$/;"	l
f0105d1b	obj/kern/kernel.asm	/^f0105d1b:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105d1f	obj/kern/kernel.asm	/^f0105d1f:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0105d22	obj/kern/kernel.asm	/^f0105d22:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105d25	obj/kern/kernel.asm	/^f0105d25:	e8 98 03 00 00       	call   f01060c2 <strnlen>$/;"	l
f0105d2a	obj/kern/kernel.asm	/^f0105d2a:	29 c6                	sub    %eax,%esi$/;"	l
f0105d2c	obj/kern/kernel.asm	/^f0105d2c:	89 f0                	mov    %esi,%eax$/;"	l
f0105d2e	obj/kern/kernel.asm	/^f0105d2e:	89 75 e4             	mov    %esi,-0x1c(%ebp)$/;"	l
f0105d31	obj/kern/kernel.asm	/^f0105d31:	85 f6                	test   %esi,%esi$/;"	l
f0105d33	obj/kern/kernel.asm	/^f0105d33:	7e cd                	jle    f0105d02 <vprintfmt+0x1ae>$/;"	l
f0105d35	obj/kern/kernel.asm	/^f0105d35:	0f be 75 e3          	movsbl -0x1d(%ebp),%esi$/;"	l
f0105d39	obj/kern/kernel.asm	/^f0105d39:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105d3c	obj/kern/kernel.asm	/^f0105d3c:	89 c3                	mov    %eax,%ebx$/;"	l
f0105d3e	obj/kern/kernel.asm	/^f0105d3e:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105d42	obj/kern/kernel.asm	/^f0105d42:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0105d45	obj/kern/kernel.asm	/^f0105d45:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105d48	obj/kern/kernel.asm	/^f0105d48:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105d4b	obj/kern/kernel.asm	/^f0105d4b:	75 f1                	jne    f0105d3e <vprintfmt+0x1ea>$/;"	l
f0105d4d	obj/kern/kernel.asm	/^f0105d4d:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f0105d50	obj/kern/kernel.asm	/^f0105d50:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105d53	obj/kern/kernel.asm	/^f0105d53:	eb ad                	jmp    f0105d02 <vprintfmt+0x1ae>$/;"	l
f0105d55	obj/kern/kernel.asm	/^f0105d55:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
f0105d59	obj/kern/kernel.asm	/^f0105d59:	74 1e                	je     f0105d79 <vprintfmt+0x225>$/;"	l
f0105d5b	obj/kern/kernel.asm	/^f0105d5b:	0f be d2             	movsbl %dl,%edx$/;"	l
f0105d5e	obj/kern/kernel.asm	/^f0105d5e:	83 ea 20             	sub    $0x20,%edx$/;"	l
f0105d61	obj/kern/kernel.asm	/^f0105d61:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f0105d64	obj/kern/kernel.asm	/^f0105d64:	76 13                	jbe    f0105d79 <vprintfmt+0x225>$/;"	l
f0105d66	obj/kern/kernel.asm	/^f0105d66:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105d69	obj/kern/kernel.asm	/^f0105d69:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105d6d	obj/kern/kernel.asm	/^f0105d6d:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
f0105d74	obj/kern/kernel.asm	/^f0105d74:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105d77	obj/kern/kernel.asm	/^f0105d77:	eb 0d                	jmp    f0105d86 <vprintfmt+0x232>$/;"	l
f0105d79	obj/kern/kernel.asm	/^f0105d79:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105d7c	obj/kern/kernel.asm	/^f0105d7c:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105d80	obj/kern/kernel.asm	/^f0105d80:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105d83	obj/kern/kernel.asm	/^f0105d83:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105d86	obj/kern/kernel.asm	/^f0105d86:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0105d89	obj/kern/kernel.asm	/^f0105d89:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105d8c	obj/kern/kernel.asm	/^f0105d8c:	0f b6 56 ff          	movzbl -0x1(%esi),%edx$/;"	l
f0105d90	obj/kern/kernel.asm	/^f0105d90:	0f be c2             	movsbl %dl,%eax$/;"	l
f0105d93	obj/kern/kernel.asm	/^f0105d93:	85 c0                	test   %eax,%eax$/;"	l
f0105d95	obj/kern/kernel.asm	/^f0105d95:	75 20                	jne    f0105db7 <vprintfmt+0x263>$/;"	l
f0105d97	obj/kern/kernel.asm	/^f0105d97:	89 7d e4             	mov    %edi,-0x1c(%ebp)$/;"	l
f0105d9a	obj/kern/kernel.asm	/^f0105d9a:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105d9d	obj/kern/kernel.asm	/^f0105d9d:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105da0	obj/kern/kernel.asm	/^f0105da0:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0105da4	obj/kern/kernel.asm	/^f0105da4:	7f 25                	jg     f0105dcb <vprintfmt+0x277>$/;"	l
f0105da6	obj/kern/kernel.asm	/^f0105da6:	e9 d2 fd ff ff       	jmp    f0105b7d <vprintfmt+0x29>$/;"	l
f0105dab	obj/kern/kernel.asm	/^f0105dab:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f0105dae	obj/kern/kernel.asm	/^f0105dae:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105db1	obj/kern/kernel.asm	/^f0105db1:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105db4	obj/kern/kernel.asm	/^f0105db4:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0105db7	obj/kern/kernel.asm	/^f0105db7:	85 db                	test   %ebx,%ebx$/;"	l
f0105db9	obj/kern/kernel.asm	/^f0105db9:	78 9a                	js     f0105d55 <vprintfmt+0x201>$/;"	l
f0105dbb	obj/kern/kernel.asm	/^f0105dbb:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105dbe	obj/kern/kernel.asm	/^f0105dbe:	79 95                	jns    f0105d55 <vprintfmt+0x201>$/;"	l
f0105dc0	obj/kern/kernel.asm	/^f0105dc0:	89 7d e4             	mov    %edi,-0x1c(%ebp)$/;"	l
f0105dc3	obj/kern/kernel.asm	/^f0105dc3:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105dc6	obj/kern/kernel.asm	/^f0105dc6:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105dc9	obj/kern/kernel.asm	/^f0105dc9:	eb d5                	jmp    f0105da0 <vprintfmt+0x24c>$/;"	l
f0105dcb	obj/kern/kernel.asm	/^f0105dcb:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105dce	obj/kern/kernel.asm	/^f0105dce:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0105dd1	obj/kern/kernel.asm	/^f0105dd1:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0105dd4	obj/kern/kernel.asm	/^f0105dd4:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105dd8	obj/kern/kernel.asm	/^f0105dd8:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f0105ddf	obj/kern/kernel.asm	/^f0105ddf:	ff d6                	call   *%esi$/;"	l
f0105de1	obj/kern/kernel.asm	/^f0105de1:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105de4	obj/kern/kernel.asm	/^f0105de4:	75 ee                	jne    f0105dd4 <vprintfmt+0x280>$/;"	l
f0105de6	obj/kern/kernel.asm	/^f0105de6:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105de9	obj/kern/kernel.asm	/^f0105de9:	e9 8f fd ff ff       	jmp    f0105b7d <vprintfmt+0x29>$/;"	l
f0105dee	obj/kern/kernel.asm	/^f0105dee:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0105df1	obj/kern/kernel.asm	/^f0105df1:	7e 16                	jle    f0105e09 <vprintfmt+0x2b5>$/;"	l
f0105df3	obj/kern/kernel.asm	/^f0105df3:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105df6	obj/kern/kernel.asm	/^f0105df6:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f0105df9	obj/kern/kernel.asm	/^f0105df9:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105dfc	obj/kern/kernel.asm	/^f0105dfc:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0105dff	obj/kern/kernel.asm	/^f0105dff:	8b 00                	mov    (%eax),%eax$/;"	l
f0105e01	obj/kern/kernel.asm	/^f0105e01:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105e04	obj/kern/kernel.asm	/^f0105e04:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0105e07	obj/kern/kernel.asm	/^f0105e07:	eb 32                	jmp    f0105e3b <vprintfmt+0x2e7>$/;"	l
f0105e09	obj/kern/kernel.asm	/^f0105e09:	85 d2                	test   %edx,%edx$/;"	l
f0105e0b	obj/kern/kernel.asm	/^f0105e0b:	74 18                	je     f0105e25 <vprintfmt+0x2d1>$/;"	l
f0105e0d	obj/kern/kernel.asm	/^f0105e0d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105e10	obj/kern/kernel.asm	/^f0105e10:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105e13	obj/kern/kernel.asm	/^f0105e13:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105e16	obj/kern/kernel.asm	/^f0105e16:	8b 30                	mov    (%eax),%esi$/;"	l
f0105e18	obj/kern/kernel.asm	/^f0105e18:	89 75 d8             	mov    %esi,-0x28(%ebp)$/;"	l
f0105e1b	obj/kern/kernel.asm	/^f0105e1b:	89 f0                	mov    %esi,%eax$/;"	l
f0105e1d	obj/kern/kernel.asm	/^f0105e1d:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0105e20	obj/kern/kernel.asm	/^f0105e20:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105e23	obj/kern/kernel.asm	/^f0105e23:	eb 16                	jmp    f0105e3b <vprintfmt+0x2e7>$/;"	l
f0105e25	obj/kern/kernel.asm	/^f0105e25:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105e28	obj/kern/kernel.asm	/^f0105e28:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105e2b	obj/kern/kernel.asm	/^f0105e2b:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105e2e	obj/kern/kernel.asm	/^f0105e2e:	8b 30                	mov    (%eax),%esi$/;"	l
f0105e30	obj/kern/kernel.asm	/^f0105e30:	89 75 d8             	mov    %esi,-0x28(%ebp)$/;"	l
f0105e33	obj/kern/kernel.asm	/^f0105e33:	89 f0                	mov    %esi,%eax$/;"	l
f0105e35	obj/kern/kernel.asm	/^f0105e35:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0105e38	obj/kern/kernel.asm	/^f0105e38:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105e3b	obj/kern/kernel.asm	/^f0105e3b:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0105e3e	obj/kern/kernel.asm	/^f0105e3e:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0105e41	obj/kern/kernel.asm	/^f0105e41:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0105e46	obj/kern/kernel.asm	/^f0105e46:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f0105e4a	obj/kern/kernel.asm	/^f0105e4a:	0f 89 80 00 00 00    	jns    f0105ed0 <vprintfmt+0x37c>$/;"	l
f0105e50	obj/kern/kernel.asm	/^f0105e50:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105e54	obj/kern/kernel.asm	/^f0105e54:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
f0105e5b	obj/kern/kernel.asm	/^f0105e5b:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105e5e	obj/kern/kernel.asm	/^f0105e5e:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0105e61	obj/kern/kernel.asm	/^f0105e61:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0105e64	obj/kern/kernel.asm	/^f0105e64:	f7 d8                	neg    %eax$/;"	l
f0105e66	obj/kern/kernel.asm	/^f0105e66:	83 d2 00             	adc    $0x0,%edx$/;"	l
f0105e69	obj/kern/kernel.asm	/^f0105e69:	f7 da                	neg    %edx$/;"	l
f0105e6b	obj/kern/kernel.asm	/^f0105e6b:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0105e70	obj/kern/kernel.asm	/^f0105e70:	eb 5e                	jmp    f0105ed0 <vprintfmt+0x37c>$/;"	l
f0105e72	obj/kern/kernel.asm	/^f0105e72:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105e75	obj/kern/kernel.asm	/^f0105e75:	e8 5b fc ff ff       	call   f0105ad5 <getuint>$/;"	l
f0105e7a	obj/kern/kernel.asm	/^f0105e7a:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f0105e7f	obj/kern/kernel.asm	/^f0105e7f:	eb 4f                	jmp    f0105ed0 <vprintfmt+0x37c>$/;"	l
f0105e81	obj/kern/kernel.asm	/^f0105e81:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105e84	obj/kern/kernel.asm	/^f0105e84:	e8 4c fc ff ff       	call   f0105ad5 <getuint>$/;"	l
f0105e89	obj/kern/kernel.asm	/^f0105e89:	b9 08 00 00 00       	mov    $0x8,%ecx$/;"	l
f0105e8e	obj/kern/kernel.asm	/^f0105e8e:	eb 40                	jmp    f0105ed0 <vprintfmt+0x37c>$/;"	l
f0105e90	obj/kern/kernel.asm	/^f0105e90:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105e94	obj/kern/kernel.asm	/^f0105e94:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f0105e9b	obj/kern/kernel.asm	/^f0105e9b:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105e9e	obj/kern/kernel.asm	/^f0105e9e:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105ea2	obj/kern/kernel.asm	/^f0105ea2:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
f0105ea9	obj/kern/kernel.asm	/^f0105ea9:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105eac	obj/kern/kernel.asm	/^f0105eac:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105eaf	obj/kern/kernel.asm	/^f0105eaf:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105eb2	obj/kern/kernel.asm	/^f0105eb2:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105eb5	obj/kern/kernel.asm	/^f0105eb5:	8b 00                	mov    (%eax),%eax$/;"	l
f0105eb7	obj/kern/kernel.asm	/^f0105eb7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105ebc	obj/kern/kernel.asm	/^f0105ebc:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
f0105ec1	obj/kern/kernel.asm	/^f0105ec1:	eb 0d                	jmp    f0105ed0 <vprintfmt+0x37c>$/;"	l
f0105ec3	obj/kern/kernel.asm	/^f0105ec3:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105ec6	obj/kern/kernel.asm	/^f0105ec6:	e8 0a fc ff ff       	call   f0105ad5 <getuint>$/;"	l
f0105ecb	obj/kern/kernel.asm	/^f0105ecb:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
f0105ed0	obj/kern/kernel.asm	/^f0105ed0:	0f be 75 e3          	movsbl -0x1d(%ebp),%esi$/;"	l
f0105ed4	obj/kern/kernel.asm	/^f0105ed4:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f0105ed8	obj/kern/kernel.asm	/^f0105ed8:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0105edb	obj/kern/kernel.asm	/^f0105edb:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0105edf	obj/kern/kernel.asm	/^f0105edf:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0105ee3	obj/kern/kernel.asm	/^f0105ee3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105ee6	obj/kern/kernel.asm	/^f0105ee6:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105eea	obj/kern/kernel.asm	/^f0105eea:	89 fa                	mov    %edi,%edx$/;"	l
f0105eec	obj/kern/kernel.asm	/^f0105eec:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105eef	obj/kern/kernel.asm	/^f0105eef:	e8 ec fa ff ff       	call   f01059e0 <printnum>$/;"	l
f0105ef4	obj/kern/kernel.asm	/^f0105ef4:	e9 84 fc ff ff       	jmp    f0105b7d <vprintfmt+0x29>$/;"	l
f0105ef9	obj/kern/kernel.asm	/^f0105ef9:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105efd	obj/kern/kernel.asm	/^f0105efd:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0105f00	obj/kern/kernel.asm	/^f0105f00:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105f03	obj/kern/kernel.asm	/^f0105f03:	e9 75 fc ff ff       	jmp    f0105b7d <vprintfmt+0x29>$/;"	l
f0105f08	obj/kern/kernel.asm	/^f0105f08:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105f0c	obj/kern/kernel.asm	/^f0105f0c:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
f0105f13	obj/kern/kernel.asm	/^f0105f13:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105f16	obj/kern/kernel.asm	/^f0105f16:	80 7e ff 25          	cmpb   $0x25,-0x1(%esi)$/;"	l
f0105f1a	obj/kern/kernel.asm	/^f0105f1a:	0f 84 5b fc ff ff    	je     f0105b7b <vprintfmt+0x27>$/;"	l
f0105f20	obj/kern/kernel.asm	/^f0105f20:	89 f3                	mov    %esi,%ebx$/;"	l
f0105f22	obj/kern/kernel.asm	/^f0105f22:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105f25	obj/kern/kernel.asm	/^f0105f25:	80 7b ff 25          	cmpb   $0x25,-0x1(%ebx)$/;"	l
f0105f29	obj/kern/kernel.asm	/^f0105f29:	75 f7                	jne    f0105f22 <vprintfmt+0x3ce>$/;"	l
f0105f2b	obj/kern/kernel.asm	/^f0105f2b:	e9 4d fc ff ff       	jmp    f0105b7d <vprintfmt+0x29>$/;"	l
f0105f30	obj/kern/kernel.asm	/^f0105f30:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0105f33	obj/kern/kernel.asm	/^f0105f33:	5b                   	pop    %ebx$/;"	l
f0105f34	obj/kern/kernel.asm	/^f0105f34:	5e                   	pop    %esi$/;"	l
f0105f35	obj/kern/kernel.asm	/^f0105f35:	5f                   	pop    %edi$/;"	l
f0105f36	obj/kern/kernel.asm	/^f0105f36:	5d                   	pop    %ebp$/;"	l
f0105f37	obj/kern/kernel.asm	/^f0105f37:	c3                   	ret    $/;"	l
f0105f38	obj/kern/kernel.asm	/^f0105f38 <vsnprintf>:$/;"	l
f0105f38	obj/kern/kernel.asm	/^f0105f38:	55                   	push   %ebp$/;"	l
f0105f39	obj/kern/kernel.asm	/^f0105f39:	89 e5                	mov    %esp,%ebp$/;"	l
f0105f3b	obj/kern/kernel.asm	/^f0105f3b:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0105f3e	obj/kern/kernel.asm	/^f0105f3e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105f41	obj/kern/kernel.asm	/^f0105f41:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105f44	obj/kern/kernel.asm	/^f0105f44:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0105f47	obj/kern/kernel.asm	/^f0105f47:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f0105f4b	obj/kern/kernel.asm	/^f0105f4b:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f0105f4e	obj/kern/kernel.asm	/^f0105f4e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0105f55	obj/kern/kernel.asm	/^f0105f55:	85 c0                	test   %eax,%eax$/;"	l
f0105f57	obj/kern/kernel.asm	/^f0105f57:	74 30                	je     f0105f89 <vsnprintf+0x51>$/;"	l
f0105f59	obj/kern/kernel.asm	/^f0105f59:	85 d2                	test   %edx,%edx$/;"	l
f0105f5b	obj/kern/kernel.asm	/^f0105f5b:	7e 2c                	jle    f0105f89 <vsnprintf+0x51>$/;"	l
f0105f5d	obj/kern/kernel.asm	/^f0105f5d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105f60	obj/kern/kernel.asm	/^f0105f60:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105f64	obj/kern/kernel.asm	/^f0105f64:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105f67	obj/kern/kernel.asm	/^f0105f67:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105f6b	obj/kern/kernel.asm	/^f0105f6b:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f0105f6e	obj/kern/kernel.asm	/^f0105f6e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105f72	obj/kern/kernel.asm	/^f0105f72:	c7 04 24 0f 5b 10 f0 	movl   $0xf0105b0f,(%esp)$/;"	l
f0105f79	obj/kern/kernel.asm	/^f0105f79:	e8 d6 fb ff ff       	call   f0105b54 <vprintfmt>$/;"	l
f0105f7e	obj/kern/kernel.asm	/^f0105f7e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0105f81	obj/kern/kernel.asm	/^f0105f81:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0105f84	obj/kern/kernel.asm	/^f0105f84:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0105f87	obj/kern/kernel.asm	/^f0105f87:	eb 05                	jmp    f0105f8e <vsnprintf+0x56>$/;"	l
f0105f89	obj/kern/kernel.asm	/^f0105f89:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105f8e	obj/kern/kernel.asm	/^f0105f8e:	c9                   	leave  $/;"	l
f0105f8f	obj/kern/kernel.asm	/^f0105f8f:	c3                   	ret    $/;"	l
f0105f90	obj/kern/kernel.asm	/^f0105f90 <snprintf>:$/;"	l
f0105f90	obj/kern/kernel.asm	/^f0105f90:	55                   	push   %ebp$/;"	l
f0105f91	obj/kern/kernel.asm	/^f0105f91:	89 e5                	mov    %esp,%ebp$/;"	l
f0105f93	obj/kern/kernel.asm	/^f0105f93:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105f96	obj/kern/kernel.asm	/^f0105f96:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105f99	obj/kern/kernel.asm	/^f0105f99:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105f9d	obj/kern/kernel.asm	/^f0105f9d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105fa0	obj/kern/kernel.asm	/^f0105fa0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105fa4	obj/kern/kernel.asm	/^f0105fa4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105fa7	obj/kern/kernel.asm	/^f0105fa7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105fab	obj/kern/kernel.asm	/^f0105fab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105fae	obj/kern/kernel.asm	/^f0105fae:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105fb1	obj/kern/kernel.asm	/^f0105fb1:	e8 82 ff ff ff       	call   f0105f38 <vsnprintf>$/;"	l
f0105fb6	obj/kern/kernel.asm	/^f0105fb6:	c9                   	leave  $/;"	l
f0105fb7	obj/kern/kernel.asm	/^f0105fb7:	c3                   	ret    $/;"	l
f0105fb8	obj/kern/kernel.asm	/^f0105fb8:	66 90                	xchg   %ax,%ax$/;"	l
f0105fba	obj/kern/kernel.asm	/^f0105fba:	66 90                	xchg   %ax,%ax$/;"	l
f0105fbc	obj/kern/kernel.asm	/^f0105fbc:	66 90                	xchg   %ax,%ax$/;"	l
f0105fbe	obj/kern/kernel.asm	/^f0105fbe:	66 90                	xchg   %ax,%ax$/;"	l
f0105fc0	obj/kern/kernel.asm	/^f0105fc0 <readline>:$/;"	l
f0105fc0	obj/kern/kernel.asm	/^f0105fc0:	55                   	push   %ebp$/;"	l
f0105fc1	obj/kern/kernel.asm	/^f0105fc1:	89 e5                	mov    %esp,%ebp$/;"	l
f0105fc3	obj/kern/kernel.asm	/^f0105fc3:	57                   	push   %edi$/;"	l
f0105fc4	obj/kern/kernel.asm	/^f0105fc4:	56                   	push   %esi$/;"	l
f0105fc5	obj/kern/kernel.asm	/^f0105fc5:	53                   	push   %ebx$/;"	l
f0105fc6	obj/kern/kernel.asm	/^f0105fc6:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0105fc9	obj/kern/kernel.asm	/^f0105fc9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105fcc	obj/kern/kernel.asm	/^f0105fcc:	85 c0                	test   %eax,%eax$/;"	l
f0105fce	obj/kern/kernel.asm	/^f0105fce:	74 10                	je     f0105fe0 <readline+0x20>$/;"	l
f0105fd0	obj/kern/kernel.asm	/^f0105fd0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105fd4	obj/kern/kernel.asm	/^f0105fd4:	c7 04 24 79 7f 10 f0 	movl   $0xf0107f79,(%esp)$/;"	l
f0105fdb	obj/kern/kernel.asm	/^f0105fdb:	e8 2e df ff ff       	call   f0103f0e <cprintf>$/;"	l
f0105fe0	obj/kern/kernel.asm	/^f0105fe0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0105fe7	obj/kern/kernel.asm	/^f0105fe7:	e8 0c a8 ff ff       	call   f01007f8 <iscons>$/;"	l
f0105fec	obj/kern/kernel.asm	/^f0105fec:	89 c7                	mov    %eax,%edi$/;"	l
f0105fee	obj/kern/kernel.asm	/^f0105fee:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105ff3	obj/kern/kernel.asm	/^f0105ff3:	e8 ef a7 ff ff       	call   f01007e7 <getchar>$/;"	l
f0105ff8	obj/kern/kernel.asm	/^f0105ff8:	89 c3                	mov    %eax,%ebx$/;"	l
f0105ffa	obj/kern/kernel.asm	/^f0105ffa:	85 c0                	test   %eax,%eax$/;"	l
f0105ffc	obj/kern/kernel.asm	/^f0105ffc:	79 25                	jns    f0106023 <readline+0x63>$/;"	l
f0105ffe	obj/kern/kernel.asm	/^f0105ffe:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106003	obj/kern/kernel.asm	/^f0106003:	83 fb f8             	cmp    $0xfffffff8,%ebx$/;"	l
f0106006	obj/kern/kernel.asm	/^f0106006:	0f 84 89 00 00 00    	je     f0106095 <readline+0xd5>$/;"	l
f010600c	obj/kern/kernel.asm	/^f010600c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0106010	obj/kern/kernel.asm	/^f0106010:	c7 04 24 9f 8a 10 f0 	movl   $0xf0108a9f,(%esp)$/;"	l
f0106017	obj/kern/kernel.asm	/^f0106017:	e8 f2 de ff ff       	call   f0103f0e <cprintf>$/;"	l
f010601c	obj/kern/kernel.asm	/^f010601c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106021	obj/kern/kernel.asm	/^f0106021:	eb 72                	jmp    f0106095 <readline+0xd5>$/;"	l
f0106023	obj/kern/kernel.asm	/^f0106023:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f0106026	obj/kern/kernel.asm	/^f0106026:	74 05                	je     f010602d <readline+0x6d>$/;"	l
f0106028	obj/kern/kernel.asm	/^f0106028:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f010602b	obj/kern/kernel.asm	/^f010602b:	75 1a                	jne    f0106047 <readline+0x87>$/;"	l
f010602d	obj/kern/kernel.asm	/^f010602d:	85 f6                	test   %esi,%esi$/;"	l
f010602f	obj/kern/kernel.asm	/^f010602f:	90                   	nop$/;"	l
f0106030	obj/kern/kernel.asm	/^f0106030:	7e 15                	jle    f0106047 <readline+0x87>$/;"	l
f0106032	obj/kern/kernel.asm	/^f0106032:	85 ff                	test   %edi,%edi$/;"	l
f0106034	obj/kern/kernel.asm	/^f0106034:	74 0c                	je     f0106042 <readline+0x82>$/;"	l
f0106036	obj/kern/kernel.asm	/^f0106036:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
f010603d	obj/kern/kernel.asm	/^f010603d:	e8 95 a7 ff ff       	call   f01007d7 <cputchar>$/;"	l
f0106042	obj/kern/kernel.asm	/^f0106042:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0106045	obj/kern/kernel.asm	/^f0106045:	eb ac                	jmp    f0105ff3 <readline+0x33>$/;"	l
f0106047	obj/kern/kernel.asm	/^f0106047:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f010604d	obj/kern/kernel.asm	/^f010604d:	7f 1c                	jg     f010606b <readline+0xab>$/;"	l
f010604f	obj/kern/kernel.asm	/^f010604f:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f0106052	obj/kern/kernel.asm	/^f0106052:	7e 17                	jle    f010606b <readline+0xab>$/;"	l
f0106054	obj/kern/kernel.asm	/^f0106054:	85 ff                	test   %edi,%edi$/;"	l
f0106056	obj/kern/kernel.asm	/^f0106056:	74 08                	je     f0106060 <readline+0xa0>$/;"	l
f0106058	obj/kern/kernel.asm	/^f0106058:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010605b	obj/kern/kernel.asm	/^f010605b:	e8 77 a7 ff ff       	call   f01007d7 <cputchar>$/;"	l
f0106060	obj/kern/kernel.asm	/^f0106060:	88 9e 80 5a 20 f0    	mov    %bl,-0xfdfa580(%esi)$/;"	l
f0106066	obj/kern/kernel.asm	/^f0106066:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f0106069	obj/kern/kernel.asm	/^f0106069:	eb 88                	jmp    f0105ff3 <readline+0x33>$/;"	l
f010606b	obj/kern/kernel.asm	/^f010606b:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f010606e	obj/kern/kernel.asm	/^f010606e:	74 09                	je     f0106079 <readline+0xb9>$/;"	l
f0106070	obj/kern/kernel.asm	/^f0106070:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f0106073	obj/kern/kernel.asm	/^f0106073:	0f 85 7a ff ff ff    	jne    f0105ff3 <readline+0x33>$/;"	l
f0106079	obj/kern/kernel.asm	/^f0106079:	85 ff                	test   %edi,%edi$/;"	l
f010607b	obj/kern/kernel.asm	/^f010607b:	74 0c                	je     f0106089 <readline+0xc9>$/;"	l
f010607d	obj/kern/kernel.asm	/^f010607d:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
f0106084	obj/kern/kernel.asm	/^f0106084:	e8 4e a7 ff ff       	call   f01007d7 <cputchar>$/;"	l
f0106089	obj/kern/kernel.asm	/^f0106089:	c6 86 80 5a 20 f0 00 	movb   $0x0,-0xfdfa580(%esi)$/;"	l
f0106090	obj/kern/kernel.asm	/^f0106090:	b8 80 5a 20 f0       	mov    $0xf0205a80,%eax$/;"	l
f0106095	obj/kern/kernel.asm	/^f0106095:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106098	obj/kern/kernel.asm	/^f0106098:	5b                   	pop    %ebx$/;"	l
f0106099	obj/kern/kernel.asm	/^f0106099:	5e                   	pop    %esi$/;"	l
f010609a	obj/kern/kernel.asm	/^f010609a:	5f                   	pop    %edi$/;"	l
f010609b	obj/kern/kernel.asm	/^f010609b:	5d                   	pop    %ebp$/;"	l
f010609c	obj/kern/kernel.asm	/^f010609c:	c3                   	ret    $/;"	l
f010609d	obj/kern/kernel.asm	/^f010609d:	66 90                	xchg   %ax,%ax$/;"	l
f010609f	obj/kern/kernel.asm	/^f010609f:	90                   	nop$/;"	l
f01060a0	obj/kern/kernel.asm	/^f01060a0 <strlen>:$/;"	l
f01060a0	obj/kern/kernel.asm	/^f01060a0:	55                   	push   %ebp$/;"	l
f01060a1	obj/kern/kernel.asm	/^f01060a1:	89 e5                	mov    %esp,%ebp$/;"	l
f01060a3	obj/kern/kernel.asm	/^f01060a3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01060a6	obj/kern/kernel.asm	/^f01060a6:	80 3a 00             	cmpb   $0x0,(%edx)$/;"	l
f01060a9	obj/kern/kernel.asm	/^f01060a9:	74 10                	je     f01060bb <strlen+0x1b>$/;"	l
f01060ab	obj/kern/kernel.asm	/^f01060ab:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01060b0	obj/kern/kernel.asm	/^f01060b0:	83 c0 01             	add    $0x1,%eax$/;"	l
f01060b3	obj/kern/kernel.asm	/^f01060b3:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f01060b7	obj/kern/kernel.asm	/^f01060b7:	75 f7                	jne    f01060b0 <strlen+0x10>$/;"	l
f01060b9	obj/kern/kernel.asm	/^f01060b9:	eb 05                	jmp    f01060c0 <strlen+0x20>$/;"	l
f01060bb	obj/kern/kernel.asm	/^f01060bb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01060c0	obj/kern/kernel.asm	/^f01060c0:	5d                   	pop    %ebp$/;"	l
f01060c1	obj/kern/kernel.asm	/^f01060c1:	c3                   	ret    $/;"	l
f01060c2	obj/kern/kernel.asm	/^f01060c2 <strnlen>:$/;"	l
f01060c2	obj/kern/kernel.asm	/^f01060c2:	55                   	push   %ebp$/;"	l
f01060c3	obj/kern/kernel.asm	/^f01060c3:	89 e5                	mov    %esp,%ebp$/;"	l
f01060c5	obj/kern/kernel.asm	/^f01060c5:	53                   	push   %ebx$/;"	l
f01060c6	obj/kern/kernel.asm	/^f01060c6:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01060c9	obj/kern/kernel.asm	/^f01060c9:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01060cc	obj/kern/kernel.asm	/^f01060cc:	85 c9                	test   %ecx,%ecx$/;"	l
f01060ce	obj/kern/kernel.asm	/^f01060ce:	74 1c                	je     f01060ec <strnlen+0x2a>$/;"	l
f01060d0	obj/kern/kernel.asm	/^f01060d0:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f01060d3	obj/kern/kernel.asm	/^f01060d3:	74 1e                	je     f01060f3 <strnlen+0x31>$/;"	l
f01060d5	obj/kern/kernel.asm	/^f01060d5:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f01060da	obj/kern/kernel.asm	/^f01060da:	89 d0                	mov    %edx,%eax$/;"	l
f01060dc	obj/kern/kernel.asm	/^f01060dc:	39 ca                	cmp    %ecx,%edx$/;"	l
f01060de	obj/kern/kernel.asm	/^f01060de:	74 18                	je     f01060f8 <strnlen+0x36>$/;"	l
f01060e0	obj/kern/kernel.asm	/^f01060e0:	83 c2 01             	add    $0x1,%edx$/;"	l
f01060e3	obj/kern/kernel.asm	/^f01060e3:	80 7c 13 ff 00       	cmpb   $0x0,-0x1(%ebx,%edx,1)$/;"	l
f01060e8	obj/kern/kernel.asm	/^f01060e8:	75 f0                	jne    f01060da <strnlen+0x18>$/;"	l
f01060ea	obj/kern/kernel.asm	/^f01060ea:	eb 0c                	jmp    f01060f8 <strnlen+0x36>$/;"	l
f01060ec	obj/kern/kernel.asm	/^f01060ec:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01060f1	obj/kern/kernel.asm	/^f01060f1:	eb 05                	jmp    f01060f8 <strnlen+0x36>$/;"	l
f01060f3	obj/kern/kernel.asm	/^f01060f3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01060f8	obj/kern/kernel.asm	/^f01060f8:	5b                   	pop    %ebx$/;"	l
f01060f9	obj/kern/kernel.asm	/^f01060f9:	5d                   	pop    %ebp$/;"	l
f01060fa	obj/kern/kernel.asm	/^f01060fa:	c3                   	ret    $/;"	l
f01060fb	obj/kern/kernel.asm	/^f01060fb <strcpy>:$/;"	l
f01060fb	obj/kern/kernel.asm	/^f01060fb:	55                   	push   %ebp$/;"	l
f01060fc	obj/kern/kernel.asm	/^f01060fc:	89 e5                	mov    %esp,%ebp$/;"	l
f01060fe	obj/kern/kernel.asm	/^f01060fe:	53                   	push   %ebx$/;"	l
f01060ff	obj/kern/kernel.asm	/^f01060ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106102	obj/kern/kernel.asm	/^f0106102:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0106105	obj/kern/kernel.asm	/^f0106105:	89 c2                	mov    %eax,%edx$/;"	l
f0106107	obj/kern/kernel.asm	/^f0106107:	83 c2 01             	add    $0x1,%edx$/;"	l
f010610a	obj/kern/kernel.asm	/^f010610a:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010610d	obj/kern/kernel.asm	/^f010610d:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx$/;"	l
f0106111	obj/kern/kernel.asm	/^f0106111:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f0106114	obj/kern/kernel.asm	/^f0106114:	84 db                	test   %bl,%bl$/;"	l
f0106116	obj/kern/kernel.asm	/^f0106116:	75 ef                	jne    f0106107 <strcpy+0xc>$/;"	l
f0106118	obj/kern/kernel.asm	/^f0106118:	5b                   	pop    %ebx$/;"	l
f0106119	obj/kern/kernel.asm	/^f0106119:	5d                   	pop    %ebp$/;"	l
f010611a	obj/kern/kernel.asm	/^f010611a:	c3                   	ret    $/;"	l
f010611b	obj/kern/kernel.asm	/^f010611b <strcat>:$/;"	l
f010611b	obj/kern/kernel.asm	/^f010611b:	55                   	push   %ebp$/;"	l
f010611c	obj/kern/kernel.asm	/^f010611c:	89 e5                	mov    %esp,%ebp$/;"	l
f010611e	obj/kern/kernel.asm	/^f010611e:	53                   	push   %ebx$/;"	l
f010611f	obj/kern/kernel.asm	/^f010611f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106122	obj/kern/kernel.asm	/^f0106122:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106125	obj/kern/kernel.asm	/^f0106125:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106128	obj/kern/kernel.asm	/^f0106128:	e8 73 ff ff ff       	call   f01060a0 <strlen>$/;"	l
f010612d	obj/kern/kernel.asm	/^f010612d:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106130	obj/kern/kernel.asm	/^f0106130:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0106134	obj/kern/kernel.asm	/^f0106134:	01 d8                	add    %ebx,%eax$/;"	l
f0106136	obj/kern/kernel.asm	/^f0106136:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106139	obj/kern/kernel.asm	/^f0106139:	e8 bd ff ff ff       	call   f01060fb <strcpy>$/;"	l
f010613e	obj/kern/kernel.asm	/^f010613e:	89 d8                	mov    %ebx,%eax$/;"	l
f0106140	obj/kern/kernel.asm	/^f0106140:	83 c4 08             	add    $0x8,%esp$/;"	l
f0106143	obj/kern/kernel.asm	/^f0106143:	5b                   	pop    %ebx$/;"	l
f0106144	obj/kern/kernel.asm	/^f0106144:	5d                   	pop    %ebp$/;"	l
f0106145	obj/kern/kernel.asm	/^f0106145:	c3                   	ret    $/;"	l
f0106146	obj/kern/kernel.asm	/^f0106146 <strncpy>:$/;"	l
f0106146	obj/kern/kernel.asm	/^f0106146:	55                   	push   %ebp$/;"	l
f0106147	obj/kern/kernel.asm	/^f0106147:	89 e5                	mov    %esp,%ebp$/;"	l
f0106149	obj/kern/kernel.asm	/^f0106149:	56                   	push   %esi$/;"	l
f010614a	obj/kern/kernel.asm	/^f010614a:	53                   	push   %ebx$/;"	l
f010614b	obj/kern/kernel.asm	/^f010614b:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010614e	obj/kern/kernel.asm	/^f010614e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106151	obj/kern/kernel.asm	/^f0106151:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0106154	obj/kern/kernel.asm	/^f0106154:	85 db                	test   %ebx,%ebx$/;"	l
f0106156	obj/kern/kernel.asm	/^f0106156:	74 17                	je     f010616f <strncpy+0x29>$/;"	l
f0106158	obj/kern/kernel.asm	/^f0106158:	01 f3                	add    %esi,%ebx$/;"	l
f010615a	obj/kern/kernel.asm	/^f010615a:	89 f1                	mov    %esi,%ecx$/;"	l
f010615c	obj/kern/kernel.asm	/^f010615c:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010615f	obj/kern/kernel.asm	/^f010615f:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0106162	obj/kern/kernel.asm	/^f0106162:	88 41 ff             	mov    %al,-0x1(%ecx)$/;"	l
f0106165	obj/kern/kernel.asm	/^f0106165:	80 3a 01             	cmpb   $0x1,(%edx)$/;"	l
f0106168	obj/kern/kernel.asm	/^f0106168:	83 da ff             	sbb    $0xffffffff,%edx$/;"	l
f010616b	obj/kern/kernel.asm	/^f010616b:	39 d9                	cmp    %ebx,%ecx$/;"	l
f010616d	obj/kern/kernel.asm	/^f010616d:	75 ed                	jne    f010615c <strncpy+0x16>$/;"	l
f010616f	obj/kern/kernel.asm	/^f010616f:	89 f0                	mov    %esi,%eax$/;"	l
f0106171	obj/kern/kernel.asm	/^f0106171:	5b                   	pop    %ebx$/;"	l
f0106172	obj/kern/kernel.asm	/^f0106172:	5e                   	pop    %esi$/;"	l
f0106173	obj/kern/kernel.asm	/^f0106173:	5d                   	pop    %ebp$/;"	l
f0106174	obj/kern/kernel.asm	/^f0106174:	c3                   	ret    $/;"	l
f0106175	obj/kern/kernel.asm	/^f0106175 <strlcpy>:$/;"	l
f0106175	obj/kern/kernel.asm	/^f0106175:	55                   	push   %ebp$/;"	l
f0106176	obj/kern/kernel.asm	/^f0106176:	89 e5                	mov    %esp,%ebp$/;"	l
f0106178	obj/kern/kernel.asm	/^f0106178:	57                   	push   %edi$/;"	l
f0106179	obj/kern/kernel.asm	/^f0106179:	56                   	push   %esi$/;"	l
f010617a	obj/kern/kernel.asm	/^f010617a:	53                   	push   %ebx$/;"	l
f010617b	obj/kern/kernel.asm	/^f010617b:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010617e	obj/kern/kernel.asm	/^f010617e:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0106181	obj/kern/kernel.asm	/^f0106181:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0106184	obj/kern/kernel.asm	/^f0106184:	89 f8                	mov    %edi,%eax$/;"	l
f0106186	obj/kern/kernel.asm	/^f0106186:	85 f6                	test   %esi,%esi$/;"	l
f0106188	obj/kern/kernel.asm	/^f0106188:	74 34                	je     f01061be <strlcpy+0x49>$/;"	l
f010618a	obj/kern/kernel.asm	/^f010618a:	83 fe 01             	cmp    $0x1,%esi$/;"	l
f010618d	obj/kern/kernel.asm	/^f010618d:	74 26                	je     f01061b5 <strlcpy+0x40>$/;"	l
f010618f	obj/kern/kernel.asm	/^f010618f:	0f b6 0b             	movzbl (%ebx),%ecx$/;"	l
f0106192	obj/kern/kernel.asm	/^f0106192:	84 c9                	test   %cl,%cl$/;"	l
f0106194	obj/kern/kernel.asm	/^f0106194:	74 23                	je     f01061b9 <strlcpy+0x44>$/;"	l
f0106196	obj/kern/kernel.asm	/^f0106196:	83 ee 02             	sub    $0x2,%esi$/;"	l
f0106199	obj/kern/kernel.asm	/^f0106199:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010619e	obj/kern/kernel.asm	/^f010619e:	83 c0 01             	add    $0x1,%eax$/;"	l
f01061a1	obj/kern/kernel.asm	/^f01061a1:	88 48 ff             	mov    %cl,-0x1(%eax)$/;"	l
f01061a4	obj/kern/kernel.asm	/^f01061a4:	39 f2                	cmp    %esi,%edx$/;"	l
f01061a6	obj/kern/kernel.asm	/^f01061a6:	74 13                	je     f01061bb <strlcpy+0x46>$/;"	l
f01061a8	obj/kern/kernel.asm	/^f01061a8:	83 c2 01             	add    $0x1,%edx$/;"	l
f01061ab	obj/kern/kernel.asm	/^f01061ab:	0f b6 0c 13          	movzbl (%ebx,%edx,1),%ecx$/;"	l
f01061af	obj/kern/kernel.asm	/^f01061af:	84 c9                	test   %cl,%cl$/;"	l
f01061b1	obj/kern/kernel.asm	/^f01061b1:	75 eb                	jne    f010619e <strlcpy+0x29>$/;"	l
f01061b3	obj/kern/kernel.asm	/^f01061b3:	eb 06                	jmp    f01061bb <strlcpy+0x46>$/;"	l
f01061b5	obj/kern/kernel.asm	/^f01061b5:	89 f8                	mov    %edi,%eax$/;"	l
f01061b7	obj/kern/kernel.asm	/^f01061b7:	eb 02                	jmp    f01061bb <strlcpy+0x46>$/;"	l
f01061b9	obj/kern/kernel.asm	/^f01061b9:	89 f8                	mov    %edi,%eax$/;"	l
f01061bb	obj/kern/kernel.asm	/^f01061bb:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01061be	obj/kern/kernel.asm	/^f01061be:	29 f8                	sub    %edi,%eax$/;"	l
f01061c0	obj/kern/kernel.asm	/^f01061c0:	5b                   	pop    %ebx$/;"	l
f01061c1	obj/kern/kernel.asm	/^f01061c1:	5e                   	pop    %esi$/;"	l
f01061c2	obj/kern/kernel.asm	/^f01061c2:	5f                   	pop    %edi$/;"	l
f01061c3	obj/kern/kernel.asm	/^f01061c3:	5d                   	pop    %ebp$/;"	l
f01061c4	obj/kern/kernel.asm	/^f01061c4:	c3                   	ret    $/;"	l
f01061c5	obj/kern/kernel.asm	/^f01061c5 <strcmp>:$/;"	l
f01061c5	obj/kern/kernel.asm	/^f01061c5:	55                   	push   %ebp$/;"	l
f01061c6	obj/kern/kernel.asm	/^f01061c6:	89 e5                	mov    %esp,%ebp$/;"	l
f01061c8	obj/kern/kernel.asm	/^f01061c8:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01061cb	obj/kern/kernel.asm	/^f01061cb:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01061ce	obj/kern/kernel.asm	/^f01061ce:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01061d1	obj/kern/kernel.asm	/^f01061d1:	84 c0                	test   %al,%al$/;"	l
f01061d3	obj/kern/kernel.asm	/^f01061d3:	74 15                	je     f01061ea <strcmp+0x25>$/;"	l
f01061d5	obj/kern/kernel.asm	/^f01061d5:	3a 02                	cmp    (%edx),%al$/;"	l
f01061d7	obj/kern/kernel.asm	/^f01061d7:	75 11                	jne    f01061ea <strcmp+0x25>$/;"	l
f01061d9	obj/kern/kernel.asm	/^f01061d9:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01061dc	obj/kern/kernel.asm	/^f01061dc:	83 c2 01             	add    $0x1,%edx$/;"	l
f01061df	obj/kern/kernel.asm	/^f01061df:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01061e2	obj/kern/kernel.asm	/^f01061e2:	84 c0                	test   %al,%al$/;"	l
f01061e4	obj/kern/kernel.asm	/^f01061e4:	74 04                	je     f01061ea <strcmp+0x25>$/;"	l
f01061e6	obj/kern/kernel.asm	/^f01061e6:	3a 02                	cmp    (%edx),%al$/;"	l
f01061e8	obj/kern/kernel.asm	/^f01061e8:	74 ef                	je     f01061d9 <strcmp+0x14>$/;"	l
f01061ea	obj/kern/kernel.asm	/^f01061ea:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01061ed	obj/kern/kernel.asm	/^f01061ed:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f01061f0	obj/kern/kernel.asm	/^f01061f0:	29 d0                	sub    %edx,%eax$/;"	l
f01061f2	obj/kern/kernel.asm	/^f01061f2:	5d                   	pop    %ebp$/;"	l
f01061f3	obj/kern/kernel.asm	/^f01061f3:	c3                   	ret    $/;"	l
f01061f4	obj/kern/kernel.asm	/^f01061f4 <strncmp>:$/;"	l
f01061f4	obj/kern/kernel.asm	/^f01061f4:	55                   	push   %ebp$/;"	l
f01061f5	obj/kern/kernel.asm	/^f01061f5:	89 e5                	mov    %esp,%ebp$/;"	l
f01061f7	obj/kern/kernel.asm	/^f01061f7:	56                   	push   %esi$/;"	l
f01061f8	obj/kern/kernel.asm	/^f01061f8:	53                   	push   %ebx$/;"	l
f01061f9	obj/kern/kernel.asm	/^f01061f9:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01061fc	obj/kern/kernel.asm	/^f01061fc:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01061ff	obj/kern/kernel.asm	/^f01061ff:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0106202	obj/kern/kernel.asm	/^f0106202:	85 f6                	test   %esi,%esi$/;"	l
f0106204	obj/kern/kernel.asm	/^f0106204:	74 29                	je     f010622f <strncmp+0x3b>$/;"	l
f0106206	obj/kern/kernel.asm	/^f0106206:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0106209	obj/kern/kernel.asm	/^f0106209:	84 c0                	test   %al,%al$/;"	l
f010620b	obj/kern/kernel.asm	/^f010620b:	74 30                	je     f010623d <strncmp+0x49>$/;"	l
f010620d	obj/kern/kernel.asm	/^f010620d:	3a 02                	cmp    (%edx),%al$/;"	l
f010620f	obj/kern/kernel.asm	/^f010620f:	75 2c                	jne    f010623d <strncmp+0x49>$/;"	l
f0106211	obj/kern/kernel.asm	/^f0106211:	8d 43 01             	lea    0x1(%ebx),%eax$/;"	l
f0106214	obj/kern/kernel.asm	/^f0106214:	01 de                	add    %ebx,%esi$/;"	l
f0106216	obj/kern/kernel.asm	/^f0106216:	89 c3                	mov    %eax,%ebx$/;"	l
f0106218	obj/kern/kernel.asm	/^f0106218:	83 c2 01             	add    $0x1,%edx$/;"	l
f010621b	obj/kern/kernel.asm	/^f010621b:	39 f0                	cmp    %esi,%eax$/;"	l
f010621d	obj/kern/kernel.asm	/^f010621d:	74 17                	je     f0106236 <strncmp+0x42>$/;"	l
f010621f	obj/kern/kernel.asm	/^f010621f:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0106222	obj/kern/kernel.asm	/^f0106222:	84 c9                	test   %cl,%cl$/;"	l
f0106224	obj/kern/kernel.asm	/^f0106224:	74 17                	je     f010623d <strncmp+0x49>$/;"	l
f0106226	obj/kern/kernel.asm	/^f0106226:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106229	obj/kern/kernel.asm	/^f0106229:	3a 0a                	cmp    (%edx),%cl$/;"	l
f010622b	obj/kern/kernel.asm	/^f010622b:	74 e9                	je     f0106216 <strncmp+0x22>$/;"	l
f010622d	obj/kern/kernel.asm	/^f010622d:	eb 0e                	jmp    f010623d <strncmp+0x49>$/;"	l
f010622f	obj/kern/kernel.asm	/^f010622f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106234	obj/kern/kernel.asm	/^f0106234:	eb 0f                	jmp    f0106245 <strncmp+0x51>$/;"	l
f0106236	obj/kern/kernel.asm	/^f0106236:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010623b	obj/kern/kernel.asm	/^f010623b:	eb 08                	jmp    f0106245 <strncmp+0x51>$/;"	l
f010623d	obj/kern/kernel.asm	/^f010623d:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0106240	obj/kern/kernel.asm	/^f0106240:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0106243	obj/kern/kernel.asm	/^f0106243:	29 d0                	sub    %edx,%eax$/;"	l
f0106245	obj/kern/kernel.asm	/^f0106245:	5b                   	pop    %ebx$/;"	l
f0106246	obj/kern/kernel.asm	/^f0106246:	5e                   	pop    %esi$/;"	l
f0106247	obj/kern/kernel.asm	/^f0106247:	5d                   	pop    %ebp$/;"	l
f0106248	obj/kern/kernel.asm	/^f0106248:	c3                   	ret    $/;"	l
f0106249	obj/kern/kernel.asm	/^f0106249 <strchr>:$/;"	l
f0106249	obj/kern/kernel.asm	/^f0106249:	55                   	push   %ebp$/;"	l
f010624a	obj/kern/kernel.asm	/^f010624a:	89 e5                	mov    %esp,%ebp$/;"	l
f010624c	obj/kern/kernel.asm	/^f010624c:	53                   	push   %ebx$/;"	l
f010624d	obj/kern/kernel.asm	/^f010624d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106250	obj/kern/kernel.asm	/^f0106250:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106253	obj/kern/kernel.asm	/^f0106253:	0f b6 18             	movzbl (%eax),%ebx$/;"	l
f0106256	obj/kern/kernel.asm	/^f0106256:	84 db                	test   %bl,%bl$/;"	l
f0106258	obj/kern/kernel.asm	/^f0106258:	74 1d                	je     f0106277 <strchr+0x2e>$/;"	l
f010625a	obj/kern/kernel.asm	/^f010625a:	89 d1                	mov    %edx,%ecx$/;"	l
f010625c	obj/kern/kernel.asm	/^f010625c:	38 d3                	cmp    %dl,%bl$/;"	l
f010625e	obj/kern/kernel.asm	/^f010625e:	75 06                	jne    f0106266 <strchr+0x1d>$/;"	l
f0106260	obj/kern/kernel.asm	/^f0106260:	eb 1a                	jmp    f010627c <strchr+0x33>$/;"	l
f0106262	obj/kern/kernel.asm	/^f0106262:	38 ca                	cmp    %cl,%dl$/;"	l
f0106264	obj/kern/kernel.asm	/^f0106264:	74 16                	je     f010627c <strchr+0x33>$/;"	l
f0106266	obj/kern/kernel.asm	/^f0106266:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106269	obj/kern/kernel.asm	/^f0106269:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f010626c	obj/kern/kernel.asm	/^f010626c:	84 d2                	test   %dl,%dl$/;"	l
f010626e	obj/kern/kernel.asm	/^f010626e:	75 f2                	jne    f0106262 <strchr+0x19>$/;"	l
f0106270	obj/kern/kernel.asm	/^f0106270:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106275	obj/kern/kernel.asm	/^f0106275:	eb 05                	jmp    f010627c <strchr+0x33>$/;"	l
f0106277	obj/kern/kernel.asm	/^f0106277:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010627c	obj/kern/kernel.asm	/^f010627c:	5b                   	pop    %ebx$/;"	l
f010627d	obj/kern/kernel.asm	/^f010627d:	5d                   	pop    %ebp$/;"	l
f010627e	obj/kern/kernel.asm	/^f010627e:	c3                   	ret    $/;"	l
f010627f	obj/kern/kernel.asm	/^f010627f <strfind>:$/;"	l
f010627f	obj/kern/kernel.asm	/^f010627f:	55                   	push   %ebp$/;"	l
f0106280	obj/kern/kernel.asm	/^f0106280:	89 e5                	mov    %esp,%ebp$/;"	l
f0106282	obj/kern/kernel.asm	/^f0106282:	53                   	push   %ebx$/;"	l
f0106283	obj/kern/kernel.asm	/^f0106283:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106286	obj/kern/kernel.asm	/^f0106286:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106289	obj/kern/kernel.asm	/^f0106289:	0f b6 18             	movzbl (%eax),%ebx$/;"	l
f010628c	obj/kern/kernel.asm	/^f010628c:	84 db                	test   %bl,%bl$/;"	l
f010628e	obj/kern/kernel.asm	/^f010628e:	74 16                	je     f01062a6 <strfind+0x27>$/;"	l
f0106290	obj/kern/kernel.asm	/^f0106290:	89 d1                	mov    %edx,%ecx$/;"	l
f0106292	obj/kern/kernel.asm	/^f0106292:	38 d3                	cmp    %dl,%bl$/;"	l
f0106294	obj/kern/kernel.asm	/^f0106294:	75 06                	jne    f010629c <strfind+0x1d>$/;"	l
f0106296	obj/kern/kernel.asm	/^f0106296:	eb 0e                	jmp    f01062a6 <strfind+0x27>$/;"	l
f0106298	obj/kern/kernel.asm	/^f0106298:	38 ca                	cmp    %cl,%dl$/;"	l
f010629a	obj/kern/kernel.asm	/^f010629a:	74 0a                	je     f01062a6 <strfind+0x27>$/;"	l
f010629c	obj/kern/kernel.asm	/^f010629c:	83 c0 01             	add    $0x1,%eax$/;"	l
f010629f	obj/kern/kernel.asm	/^f010629f:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01062a2	obj/kern/kernel.asm	/^f01062a2:	84 d2                	test   %dl,%dl$/;"	l
f01062a4	obj/kern/kernel.asm	/^f01062a4:	75 f2                	jne    f0106298 <strfind+0x19>$/;"	l
f01062a6	obj/kern/kernel.asm	/^f01062a6:	5b                   	pop    %ebx$/;"	l
f01062a7	obj/kern/kernel.asm	/^f01062a7:	5d                   	pop    %ebp$/;"	l
f01062a8	obj/kern/kernel.asm	/^f01062a8:	c3                   	ret    $/;"	l
f01062a9	obj/kern/kernel.asm	/^f01062a9 <memset>:$/;"	l
f01062a9	obj/kern/kernel.asm	/^f01062a9:	55                   	push   %ebp$/;"	l
f01062aa	obj/kern/kernel.asm	/^f01062aa:	89 e5                	mov    %esp,%ebp$/;"	l
f01062ac	obj/kern/kernel.asm	/^f01062ac:	57                   	push   %edi$/;"	l
f01062ad	obj/kern/kernel.asm	/^f01062ad:	56                   	push   %esi$/;"	l
f01062ae	obj/kern/kernel.asm	/^f01062ae:	53                   	push   %ebx$/;"	l
f01062af	obj/kern/kernel.asm	/^f01062af:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01062b2	obj/kern/kernel.asm	/^f01062b2:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01062b5	obj/kern/kernel.asm	/^f01062b5:	85 c9                	test   %ecx,%ecx$/;"	l
f01062b7	obj/kern/kernel.asm	/^f01062b7:	74 36                	je     f01062ef <memset+0x46>$/;"	l
f01062b9	obj/kern/kernel.asm	/^f01062b9:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f01062bf	obj/kern/kernel.asm	/^f01062bf:	75 28                	jne    f01062e9 <memset+0x40>$/;"	l
f01062c1	obj/kern/kernel.asm	/^f01062c1:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01062c4	obj/kern/kernel.asm	/^f01062c4:	75 23                	jne    f01062e9 <memset+0x40>$/;"	l
f01062c6	obj/kern/kernel.asm	/^f01062c6:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f01062ca	obj/kern/kernel.asm	/^f01062ca:	89 d3                	mov    %edx,%ebx$/;"	l
f01062cc	obj/kern/kernel.asm	/^f01062cc:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f01062cf	obj/kern/kernel.asm	/^f01062cf:	89 d6                	mov    %edx,%esi$/;"	l
f01062d1	obj/kern/kernel.asm	/^f01062d1:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f01062d4	obj/kern/kernel.asm	/^f01062d4:	89 d0                	mov    %edx,%eax$/;"	l
f01062d6	obj/kern/kernel.asm	/^f01062d6:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f01062d9	obj/kern/kernel.asm	/^f01062d9:	09 f0                	or     %esi,%eax$/;"	l
f01062db	obj/kern/kernel.asm	/^f01062db:	09 c2                	or     %eax,%edx$/;"	l
f01062dd	obj/kern/kernel.asm	/^f01062dd:	89 d0                	mov    %edx,%eax$/;"	l
f01062df	obj/kern/kernel.asm	/^f01062df:	09 d8                	or     %ebx,%eax$/;"	l
f01062e1	obj/kern/kernel.asm	/^f01062e1:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01062e4	obj/kern/kernel.asm	/^f01062e4:	fc                   	cld    $/;"	l
f01062e5	obj/kern/kernel.asm	/^f01062e5:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f01062e7	obj/kern/kernel.asm	/^f01062e7:	eb 06                	jmp    f01062ef <memset+0x46>$/;"	l
f01062e9	obj/kern/kernel.asm	/^f01062e9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01062ec	obj/kern/kernel.asm	/^f01062ec:	fc                   	cld    $/;"	l
f01062ed	obj/kern/kernel.asm	/^f01062ed:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f01062ef	obj/kern/kernel.asm	/^f01062ef:	89 f8                	mov    %edi,%eax$/;"	l
f01062f1	obj/kern/kernel.asm	/^f01062f1:	5b                   	pop    %ebx$/;"	l
f01062f2	obj/kern/kernel.asm	/^f01062f2:	5e                   	pop    %esi$/;"	l
f01062f3	obj/kern/kernel.asm	/^f01062f3:	5f                   	pop    %edi$/;"	l
f01062f4	obj/kern/kernel.asm	/^f01062f4:	5d                   	pop    %ebp$/;"	l
f01062f5	obj/kern/kernel.asm	/^f01062f5:	c3                   	ret    $/;"	l
f01062f6	obj/kern/kernel.asm	/^f01062f6 <memmove>:$/;"	l
f01062f6	obj/kern/kernel.asm	/^f01062f6:	55                   	push   %ebp$/;"	l
f01062f7	obj/kern/kernel.asm	/^f01062f7:	89 e5                	mov    %esp,%ebp$/;"	l
f01062f9	obj/kern/kernel.asm	/^f01062f9:	57                   	push   %edi$/;"	l
f01062fa	obj/kern/kernel.asm	/^f01062fa:	56                   	push   %esi$/;"	l
f01062fb	obj/kern/kernel.asm	/^f01062fb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01062fe	obj/kern/kernel.asm	/^f01062fe:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0106301	obj/kern/kernel.asm	/^f0106301:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0106304	obj/kern/kernel.asm	/^f0106304:	39 c6                	cmp    %eax,%esi$/;"	l
f0106306	obj/kern/kernel.asm	/^f0106306:	73 35                	jae    f010633d <memmove+0x47>$/;"	l
f0106308	obj/kern/kernel.asm	/^f0106308:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f010630b	obj/kern/kernel.asm	/^f010630b:	39 d0                	cmp    %edx,%eax$/;"	l
f010630d	obj/kern/kernel.asm	/^f010630d:	73 2e                	jae    f010633d <memmove+0x47>$/;"	l
f010630f	obj/kern/kernel.asm	/^f010630f:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f0106312	obj/kern/kernel.asm	/^f0106312:	89 d6                	mov    %edx,%esi$/;"	l
f0106314	obj/kern/kernel.asm	/^f0106314:	09 fe                	or     %edi,%esi$/;"	l
f0106316	obj/kern/kernel.asm	/^f0106316:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f010631c	obj/kern/kernel.asm	/^f010631c:	75 13                	jne    f0106331 <memmove+0x3b>$/;"	l
f010631e	obj/kern/kernel.asm	/^f010631e:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0106321	obj/kern/kernel.asm	/^f0106321:	75 0e                	jne    f0106331 <memmove+0x3b>$/;"	l
f0106323	obj/kern/kernel.asm	/^f0106323:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0106326	obj/kern/kernel.asm	/^f0106326:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0106329	obj/kern/kernel.asm	/^f0106329:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010632c	obj/kern/kernel.asm	/^f010632c:	fd                   	std    $/;"	l
f010632d	obj/kern/kernel.asm	/^f010632d:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010632f	obj/kern/kernel.asm	/^f010632f:	eb 09                	jmp    f010633a <memmove+0x44>$/;"	l
f0106331	obj/kern/kernel.asm	/^f0106331:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0106334	obj/kern/kernel.asm	/^f0106334:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0106337	obj/kern/kernel.asm	/^f0106337:	fd                   	std    $/;"	l
f0106338	obj/kern/kernel.asm	/^f0106338:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f010633a	obj/kern/kernel.asm	/^f010633a:	fc                   	cld    $/;"	l
f010633b	obj/kern/kernel.asm	/^f010633b:	eb 1d                	jmp    f010635a <memmove+0x64>$/;"	l
f010633d	obj/kern/kernel.asm	/^f010633d:	89 f2                	mov    %esi,%edx$/;"	l
f010633f	obj/kern/kernel.asm	/^f010633f:	09 c2                	or     %eax,%edx$/;"	l
f0106341	obj/kern/kernel.asm	/^f0106341:	f6 c2 03             	test   $0x3,%dl$/;"	l
f0106344	obj/kern/kernel.asm	/^f0106344:	75 0f                	jne    f0106355 <memmove+0x5f>$/;"	l
f0106346	obj/kern/kernel.asm	/^f0106346:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0106349	obj/kern/kernel.asm	/^f0106349:	75 0a                	jne    f0106355 <memmove+0x5f>$/;"	l
f010634b	obj/kern/kernel.asm	/^f010634b:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010634e	obj/kern/kernel.asm	/^f010634e:	89 c7                	mov    %eax,%edi$/;"	l
f0106350	obj/kern/kernel.asm	/^f0106350:	fc                   	cld    $/;"	l
f0106351	obj/kern/kernel.asm	/^f0106351:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0106353	obj/kern/kernel.asm	/^f0106353:	eb 05                	jmp    f010635a <memmove+0x64>$/;"	l
f0106355	obj/kern/kernel.asm	/^f0106355:	89 c7                	mov    %eax,%edi$/;"	l
f0106357	obj/kern/kernel.asm	/^f0106357:	fc                   	cld    $/;"	l
f0106358	obj/kern/kernel.asm	/^f0106358:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f010635a	obj/kern/kernel.asm	/^f010635a:	5e                   	pop    %esi$/;"	l
f010635b	obj/kern/kernel.asm	/^f010635b:	5f                   	pop    %edi$/;"	l
f010635c	obj/kern/kernel.asm	/^f010635c:	5d                   	pop    %ebp$/;"	l
f010635d	obj/kern/kernel.asm	/^f010635d:	c3                   	ret    $/;"	l
f010635e	obj/kern/kernel.asm	/^f010635e <memcpy>:$/;"	l
f010635e	obj/kern/kernel.asm	/^f010635e:	55                   	push   %ebp$/;"	l
f010635f	obj/kern/kernel.asm	/^f010635f:	89 e5                	mov    %esp,%ebp$/;"	l
f0106361	obj/kern/kernel.asm	/^f0106361:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106364	obj/kern/kernel.asm	/^f0106364:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106367	obj/kern/kernel.asm	/^f0106367:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010636b	obj/kern/kernel.asm	/^f010636b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010636e	obj/kern/kernel.asm	/^f010636e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106372	obj/kern/kernel.asm	/^f0106372:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106375	obj/kern/kernel.asm	/^f0106375:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106378	obj/kern/kernel.asm	/^f0106378:	e8 79 ff ff ff       	call   f01062f6 <memmove>$/;"	l
f010637d	obj/kern/kernel.asm	/^f010637d:	c9                   	leave  $/;"	l
f010637e	obj/kern/kernel.asm	/^f010637e:	c3                   	ret    $/;"	l
f010637f	obj/kern/kernel.asm	/^f010637f <memcmp>:$/;"	l
f010637f	obj/kern/kernel.asm	/^f010637f:	55                   	push   %ebp$/;"	l
f0106380	obj/kern/kernel.asm	/^f0106380:	89 e5                	mov    %esp,%ebp$/;"	l
f0106382	obj/kern/kernel.asm	/^f0106382:	57                   	push   %edi$/;"	l
f0106383	obj/kern/kernel.asm	/^f0106383:	56                   	push   %esi$/;"	l
f0106384	obj/kern/kernel.asm	/^f0106384:	53                   	push   %ebx$/;"	l
f0106385	obj/kern/kernel.asm	/^f0106385:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106388	obj/kern/kernel.asm	/^f0106388:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010638b	obj/kern/kernel.asm	/^f010638b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010638e	obj/kern/kernel.asm	/^f010638e:	8d 78 ff             	lea    -0x1(%eax),%edi$/;"	l
f0106391	obj/kern/kernel.asm	/^f0106391:	85 c0                	test   %eax,%eax$/;"	l
f0106393	obj/kern/kernel.asm	/^f0106393:	74 36                	je     f01063cb <memcmp+0x4c>$/;"	l
f0106395	obj/kern/kernel.asm	/^f0106395:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0106398	obj/kern/kernel.asm	/^f0106398:	0f b6 0e             	movzbl (%esi),%ecx$/;"	l
f010639b	obj/kern/kernel.asm	/^f010639b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01063a0	obj/kern/kernel.asm	/^f01063a0:	38 c8                	cmp    %cl,%al$/;"	l
f01063a2	obj/kern/kernel.asm	/^f01063a2:	74 1c                	je     f01063c0 <memcmp+0x41>$/;"	l
f01063a4	obj/kern/kernel.asm	/^f01063a4:	eb 10                	jmp    f01063b6 <memcmp+0x37>$/;"	l
f01063a6	obj/kern/kernel.asm	/^f01063a6:	0f b6 44 13 01       	movzbl 0x1(%ebx,%edx,1),%eax$/;"	l
f01063ab	obj/kern/kernel.asm	/^f01063ab:	83 c2 01             	add    $0x1,%edx$/;"	l
f01063ae	obj/kern/kernel.asm	/^f01063ae:	0f b6 0c 16          	movzbl (%esi,%edx,1),%ecx$/;"	l
f01063b2	obj/kern/kernel.asm	/^f01063b2:	38 c8                	cmp    %cl,%al$/;"	l
f01063b4	obj/kern/kernel.asm	/^f01063b4:	74 0a                	je     f01063c0 <memcmp+0x41>$/;"	l
f01063b6	obj/kern/kernel.asm	/^f01063b6:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01063b9	obj/kern/kernel.asm	/^f01063b9:	0f b6 c9             	movzbl %cl,%ecx$/;"	l
f01063bc	obj/kern/kernel.asm	/^f01063bc:	29 c8                	sub    %ecx,%eax$/;"	l
f01063be	obj/kern/kernel.asm	/^f01063be:	eb 10                	jmp    f01063d0 <memcmp+0x51>$/;"	l
f01063c0	obj/kern/kernel.asm	/^f01063c0:	39 fa                	cmp    %edi,%edx$/;"	l
f01063c2	obj/kern/kernel.asm	/^f01063c2:	75 e2                	jne    f01063a6 <memcmp+0x27>$/;"	l
f01063c4	obj/kern/kernel.asm	/^f01063c4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01063c9	obj/kern/kernel.asm	/^f01063c9:	eb 05                	jmp    f01063d0 <memcmp+0x51>$/;"	l
f01063cb	obj/kern/kernel.asm	/^f01063cb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01063d0	obj/kern/kernel.asm	/^f01063d0:	5b                   	pop    %ebx$/;"	l
f01063d1	obj/kern/kernel.asm	/^f01063d1:	5e                   	pop    %esi$/;"	l
f01063d2	obj/kern/kernel.asm	/^f01063d2:	5f                   	pop    %edi$/;"	l
f01063d3	obj/kern/kernel.asm	/^f01063d3:	5d                   	pop    %ebp$/;"	l
f01063d4	obj/kern/kernel.asm	/^f01063d4:	c3                   	ret    $/;"	l
f01063d5	obj/kern/kernel.asm	/^f01063d5 <memfind>:$/;"	l
f01063d5	obj/kern/kernel.asm	/^f01063d5:	55                   	push   %ebp$/;"	l
f01063d6	obj/kern/kernel.asm	/^f01063d6:	89 e5                	mov    %esp,%ebp$/;"	l
f01063d8	obj/kern/kernel.asm	/^f01063d8:	53                   	push   %ebx$/;"	l
f01063d9	obj/kern/kernel.asm	/^f01063d9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01063dc	obj/kern/kernel.asm	/^f01063dc:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01063df	obj/kern/kernel.asm	/^f01063df:	89 c2                	mov    %eax,%edx$/;"	l
f01063e1	obj/kern/kernel.asm	/^f01063e1:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f01063e4	obj/kern/kernel.asm	/^f01063e4:	39 d0                	cmp    %edx,%eax$/;"	l
f01063e6	obj/kern/kernel.asm	/^f01063e6:	73 13                	jae    f01063fb <memfind+0x26>$/;"	l
f01063e8	obj/kern/kernel.asm	/^f01063e8:	89 d9                	mov    %ebx,%ecx$/;"	l
f01063ea	obj/kern/kernel.asm	/^f01063ea:	38 18                	cmp    %bl,(%eax)$/;"	l
f01063ec	obj/kern/kernel.asm	/^f01063ec:	75 06                	jne    f01063f4 <memfind+0x1f>$/;"	l
f01063ee	obj/kern/kernel.asm	/^f01063ee:	eb 0b                	jmp    f01063fb <memfind+0x26>$/;"	l
f01063f0	obj/kern/kernel.asm	/^f01063f0:	38 08                	cmp    %cl,(%eax)$/;"	l
f01063f2	obj/kern/kernel.asm	/^f01063f2:	74 07                	je     f01063fb <memfind+0x26>$/;"	l
f01063f4	obj/kern/kernel.asm	/^f01063f4:	83 c0 01             	add    $0x1,%eax$/;"	l
f01063f7	obj/kern/kernel.asm	/^f01063f7:	39 d0                	cmp    %edx,%eax$/;"	l
f01063f9	obj/kern/kernel.asm	/^f01063f9:	75 f5                	jne    f01063f0 <memfind+0x1b>$/;"	l
f01063fb	obj/kern/kernel.asm	/^f01063fb:	5b                   	pop    %ebx$/;"	l
f01063fc	obj/kern/kernel.asm	/^f01063fc:	5d                   	pop    %ebp$/;"	l
f01063fd	obj/kern/kernel.asm	/^f01063fd:	c3                   	ret    $/;"	l
f01063fe	obj/kern/kernel.asm	/^f01063fe <strtol>:$/;"	l
f01063fe	obj/kern/kernel.asm	/^f01063fe:	55                   	push   %ebp$/;"	l
f01063ff	obj/kern/kernel.asm	/^f01063ff:	89 e5                	mov    %esp,%ebp$/;"	l
f0106401	obj/kern/kernel.asm	/^f0106401:	57                   	push   %edi$/;"	l
f0106402	obj/kern/kernel.asm	/^f0106402:	56                   	push   %esi$/;"	l
f0106403	obj/kern/kernel.asm	/^f0106403:	53                   	push   %ebx$/;"	l
f0106404	obj/kern/kernel.asm	/^f0106404:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106407	obj/kern/kernel.asm	/^f0106407:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010640a	obj/kern/kernel.asm	/^f010640a:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f010640d	obj/kern/kernel.asm	/^f010640d:	80 f9 09             	cmp    $0x9,%cl$/;"	l
f0106410	obj/kern/kernel.asm	/^f0106410:	74 05                	je     f0106417 <strtol+0x19>$/;"	l
f0106412	obj/kern/kernel.asm	/^f0106412:	80 f9 20             	cmp    $0x20,%cl$/;"	l
f0106415	obj/kern/kernel.asm	/^f0106415:	75 10                	jne    f0106427 <strtol+0x29>$/;"	l
f0106417	obj/kern/kernel.asm	/^f0106417:	83 c2 01             	add    $0x1,%edx$/;"	l
f010641a	obj/kern/kernel.asm	/^f010641a:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f010641d	obj/kern/kernel.asm	/^f010641d:	80 f9 09             	cmp    $0x9,%cl$/;"	l
f0106420	obj/kern/kernel.asm	/^f0106420:	74 f5                	je     f0106417 <strtol+0x19>$/;"	l
f0106422	obj/kern/kernel.asm	/^f0106422:	80 f9 20             	cmp    $0x20,%cl$/;"	l
f0106425	obj/kern/kernel.asm	/^f0106425:	74 f0                	je     f0106417 <strtol+0x19>$/;"	l
f0106427	obj/kern/kernel.asm	/^f0106427:	80 f9 2b             	cmp    $0x2b,%cl$/;"	l
f010642a	obj/kern/kernel.asm	/^f010642a:	75 0a                	jne    f0106436 <strtol+0x38>$/;"	l
f010642c	obj/kern/kernel.asm	/^f010642c:	83 c2 01             	add    $0x1,%edx$/;"	l
f010642f	obj/kern/kernel.asm	/^f010642f:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0106434	obj/kern/kernel.asm	/^f0106434:	eb 11                	jmp    f0106447 <strtol+0x49>$/;"	l
f0106436	obj/kern/kernel.asm	/^f0106436:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010643b	obj/kern/kernel.asm	/^f010643b:	80 f9 2d             	cmp    $0x2d,%cl$/;"	l
f010643e	obj/kern/kernel.asm	/^f010643e:	75 07                	jne    f0106447 <strtol+0x49>$/;"	l
f0106440	obj/kern/kernel.asm	/^f0106440:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106443	obj/kern/kernel.asm	/^f0106443:	66 bf 01 00          	mov    $0x1,%di$/;"	l
f0106447	obj/kern/kernel.asm	/^f0106447:	a9 ef ff ff ff       	test   $0xffffffef,%eax$/;"	l
f010644c	obj/kern/kernel.asm	/^f010644c:	75 15                	jne    f0106463 <strtol+0x65>$/;"	l
f010644e	obj/kern/kernel.asm	/^f010644e:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f0106451	obj/kern/kernel.asm	/^f0106451:	75 10                	jne    f0106463 <strtol+0x65>$/;"	l
f0106453	obj/kern/kernel.asm	/^f0106453:	80 7a 01 78          	cmpb   $0x78,0x1(%edx)$/;"	l
f0106457	obj/kern/kernel.asm	/^f0106457:	75 0a                	jne    f0106463 <strtol+0x65>$/;"	l
f0106459	obj/kern/kernel.asm	/^f0106459:	83 c2 02             	add    $0x2,%edx$/;"	l
f010645c	obj/kern/kernel.asm	/^f010645c:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0106461	obj/kern/kernel.asm	/^f0106461:	eb 10                	jmp    f0106473 <strtol+0x75>$/;"	l
f0106463	obj/kern/kernel.asm	/^f0106463:	85 c0                	test   %eax,%eax$/;"	l
f0106465	obj/kern/kernel.asm	/^f0106465:	75 0c                	jne    f0106473 <strtol+0x75>$/;"	l
f0106467	obj/kern/kernel.asm	/^f0106467:	b0 0a                	mov    $0xa,%al$/;"	l
f0106469	obj/kern/kernel.asm	/^f0106469:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f010646c	obj/kern/kernel.asm	/^f010646c:	75 05                	jne    f0106473 <strtol+0x75>$/;"	l
f010646e	obj/kern/kernel.asm	/^f010646e:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106471	obj/kern/kernel.asm	/^f0106471:	b0 08                	mov    $0x8,%al$/;"	l
f0106473	obj/kern/kernel.asm	/^f0106473:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0106478	obj/kern/kernel.asm	/^f0106478:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
f010647b	obj/kern/kernel.asm	/^f010647b:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f010647e	obj/kern/kernel.asm	/^f010647e:	8d 71 d0             	lea    -0x30(%ecx),%esi$/;"	l
f0106481	obj/kern/kernel.asm	/^f0106481:	89 f0                	mov    %esi,%eax$/;"	l
f0106483	obj/kern/kernel.asm	/^f0106483:	3c 09                	cmp    $0x9,%al$/;"	l
f0106485	obj/kern/kernel.asm	/^f0106485:	77 08                	ja     f010648f <strtol+0x91>$/;"	l
f0106487	obj/kern/kernel.asm	/^f0106487:	0f be c9             	movsbl %cl,%ecx$/;"	l
f010648a	obj/kern/kernel.asm	/^f010648a:	83 e9 30             	sub    $0x30,%ecx$/;"	l
f010648d	obj/kern/kernel.asm	/^f010648d:	eb 20                	jmp    f01064af <strtol+0xb1>$/;"	l
f010648f	obj/kern/kernel.asm	/^f010648f:	8d 71 9f             	lea    -0x61(%ecx),%esi$/;"	l
f0106492	obj/kern/kernel.asm	/^f0106492:	89 f0                	mov    %esi,%eax$/;"	l
f0106494	obj/kern/kernel.asm	/^f0106494:	3c 19                	cmp    $0x19,%al$/;"	l
f0106496	obj/kern/kernel.asm	/^f0106496:	77 08                	ja     f01064a0 <strtol+0xa2>$/;"	l
f0106498	obj/kern/kernel.asm	/^f0106498:	0f be c9             	movsbl %cl,%ecx$/;"	l
f010649b	obj/kern/kernel.asm	/^f010649b:	83 e9 57             	sub    $0x57,%ecx$/;"	l
f010649e	obj/kern/kernel.asm	/^f010649e:	eb 0f                	jmp    f01064af <strtol+0xb1>$/;"	l
f01064a0	obj/kern/kernel.asm	/^f01064a0:	8d 71 bf             	lea    -0x41(%ecx),%esi$/;"	l
f01064a3	obj/kern/kernel.asm	/^f01064a3:	89 f0                	mov    %esi,%eax$/;"	l
f01064a5	obj/kern/kernel.asm	/^f01064a5:	3c 19                	cmp    $0x19,%al$/;"	l
f01064a7	obj/kern/kernel.asm	/^f01064a7:	77 16                	ja     f01064bf <strtol+0xc1>$/;"	l
f01064a9	obj/kern/kernel.asm	/^f01064a9:	0f be c9             	movsbl %cl,%ecx$/;"	l
f01064ac	obj/kern/kernel.asm	/^f01064ac:	83 e9 37             	sub    $0x37,%ecx$/;"	l
f01064af	obj/kern/kernel.asm	/^f01064af:	3b 4d 10             	cmp    0x10(%ebp),%ecx$/;"	l
f01064b2	obj/kern/kernel.asm	/^f01064b2:	7d 0f                	jge    f01064c3 <strtol+0xc5>$/;"	l
f01064b4	obj/kern/kernel.asm	/^f01064b4:	83 c2 01             	add    $0x1,%edx$/;"	l
f01064b7	obj/kern/kernel.asm	/^f01064b7:	0f af 5d 10          	imul   0x10(%ebp),%ebx$/;"	l
f01064bb	obj/kern/kernel.asm	/^f01064bb:	01 cb                	add    %ecx,%ebx$/;"	l
f01064bd	obj/kern/kernel.asm	/^f01064bd:	eb bc                	jmp    f010647b <strtol+0x7d>$/;"	l
f01064bf	obj/kern/kernel.asm	/^f01064bf:	89 d8                	mov    %ebx,%eax$/;"	l
f01064c1	obj/kern/kernel.asm	/^f01064c1:	eb 02                	jmp    f01064c5 <strtol+0xc7>$/;"	l
f01064c3	obj/kern/kernel.asm	/^f01064c3:	89 d8                	mov    %ebx,%eax$/;"	l
f01064c5	obj/kern/kernel.asm	/^f01064c5:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f01064c9	obj/kern/kernel.asm	/^f01064c9:	74 05                	je     f01064d0 <strtol+0xd2>$/;"	l
f01064cb	obj/kern/kernel.asm	/^f01064cb:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01064ce	obj/kern/kernel.asm	/^f01064ce:	89 16                	mov    %edx,(%esi)$/;"	l
f01064d0	obj/kern/kernel.asm	/^f01064d0:	f7 d8                	neg    %eax$/;"	l
f01064d2	obj/kern/kernel.asm	/^f01064d2:	85 ff                	test   %edi,%edi$/;"	l
f01064d4	obj/kern/kernel.asm	/^f01064d4:	0f 44 c3             	cmove  %ebx,%eax$/;"	l
f01064d7	obj/kern/kernel.asm	/^f01064d7:	5b                   	pop    %ebx$/;"	l
f01064d8	obj/kern/kernel.asm	/^f01064d8:	5e                   	pop    %esi$/;"	l
f01064d9	obj/kern/kernel.asm	/^f01064d9:	5f                   	pop    %edi$/;"	l
f01064da	obj/kern/kernel.asm	/^f01064da:	5d                   	pop    %ebp$/;"	l
f01064db	obj/kern/kernel.asm	/^f01064db:	c3                   	ret    $/;"	l
f01064dc	obj/kern/kernel.asm	/^f01064dc <mpentry_start>:$/;"	l
f01064dc	obj/kern/kernel.asm	/^f01064dc:	fa                   	cli    $/;"	l
f01064dd	obj/kern/kernel.asm	/^f01064dd:	31 c0                	xor    %eax,%eax$/;"	l
f01064df	obj/kern/kernel.asm	/^f01064df:	8e d8                	mov    %eax,%ds$/;"	l
f01064e1	obj/kern/kernel.asm	/^f01064e1:	8e c0                	mov    %eax,%es$/;"	l
f01064e3	obj/kern/kernel.asm	/^f01064e3:	8e d0                	mov    %eax,%ss$/;"	l
f01064e5	obj/kern/kernel.asm	/^f01064e5:	0f 01 16             	lgdtl  (%esi)$/;"	l
f01064e8	obj/kern/kernel.asm	/^f01064e8:	74 70                	je     f010655a <mpentry_end+0x4>$/;"	l
f01064ea	obj/kern/kernel.asm	/^f01064ea:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f01064ed	obj/kern/kernel.asm	/^f01064ed:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f01064f1	obj/kern/kernel.asm	/^f01064f1:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f01064f4	obj/kern/kernel.asm	/^f01064f4:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f01064fa	obj/kern/kernel.asm	/^f01064fa:	08 00                	or     %al,(%eax)$/;"	l
f01064fc	obj/kern/kernel.asm	/^f01064fc <start32>:$/;"	l
f01064fc	obj/kern/kernel.asm	/^f01064fc:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0106500	obj/kern/kernel.asm	/^f0106500:	8e d8                	mov    %eax,%ds$/;"	l
f0106502	obj/kern/kernel.asm	/^f0106502:	8e c0                	mov    %eax,%es$/;"	l
f0106504	obj/kern/kernel.asm	/^f0106504:	8e d0                	mov    %eax,%ss$/;"	l
f0106506	obj/kern/kernel.asm	/^f0106506:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f010650a	obj/kern/kernel.asm	/^f010650a:	8e e0                	mov    %eax,%fs$/;"	l
f010650c	obj/kern/kernel.asm	/^f010650c:	8e e8                	mov    %eax,%gs$/;"	l
f010650e	obj/kern/kernel.asm	/^f010650e:	b8 00 f0 11 00       	mov    $0x11f000,%eax$/;"	l
f0106513	obj/kern/kernel.asm	/^f0106513:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0106516	obj/kern/kernel.asm	/^f0106516:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0106519	obj/kern/kernel.asm	/^f0106519:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f010651e	obj/kern/kernel.asm	/^f010651e:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0106521	obj/kern/kernel.asm	/^f0106521:	8b 25 84 5e 20 f0    	mov    0xf0205e84,%esp$/;"	l
f0106527	obj/kern/kernel.asm	/^f0106527:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f010652c	obj/kern/kernel.asm	/^f010652c:	b8 0c 02 10 f0       	mov    $0xf010020c,%eax$/;"	l
f0106531	obj/kern/kernel.asm	/^f0106531:	ff d0                	call   *%eax$/;"	l
f0106533	obj/kern/kernel.asm	/^f0106533 <spin>:$/;"	l
f0106533	obj/kern/kernel.asm	/^f0106533:	eb fe                	jmp    f0106533 <spin>$/;"	l
f0106535	obj/kern/kernel.asm	/^f0106535:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106538	obj/kern/kernel.asm	/^f0106538 <gdt>:$/;"	l
f0106540	obj/kern/kernel.asm	/^f0106540:	ff                   	(bad)  $/;"	l
f0106541	obj/kern/kernel.asm	/^f0106541:	ff 00                	incl   (%eax)$/;"	l
f0106543	obj/kern/kernel.asm	/^f0106543:	00 00                	add    %al,(%eax)$/;"	l
f0106545	obj/kern/kernel.asm	/^f0106545:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f010654c	obj/kern/kernel.asm	/^f010654c:	00 92 cf 00 17 00    	add    %dl,0x1700cf(%edx)$/;"	l
f0106550	obj/kern/kernel.asm	/^f0106550 <gdtdesc>:$/;"	l
f0106550	obj/kern/kernel.asm	/^f0106550:	17                   	pop    %ss$/;"	l
f0106551	obj/kern/kernel.asm	/^f0106551:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f0106556	obj/kern/kernel.asm	/^f0106556 <mpentry_end>:$/;"	l
f0106556	obj/kern/kernel.asm	/^f0106556:	90                   	nop$/;"	l
f0106557	obj/kern/kernel.asm	/^f0106557:	66 90                	xchg   %ax,%ax$/;"	l
f0106559	obj/kern/kernel.asm	/^f0106559:	66 90                	xchg   %ax,%ax$/;"	l
f010655b	obj/kern/kernel.asm	/^f010655b:	66 90                	xchg   %ax,%ax$/;"	l
f010655d	obj/kern/kernel.asm	/^f010655d:	66 90                	xchg   %ax,%ax$/;"	l
f010655f	obj/kern/kernel.asm	/^f010655f:	90                   	nop$/;"	l
f0106560	obj/kern/kernel.asm	/^f0106560 <mpsearch1>:$/;"	l
f0106560	obj/kern/kernel.asm	/^f0106560:	55                   	push   %ebp$/;"	l
f0106561	obj/kern/kernel.asm	/^f0106561:	89 e5                	mov    %esp,%ebp$/;"	l
f0106563	obj/kern/kernel.asm	/^f0106563:	56                   	push   %esi$/;"	l
f0106564	obj/kern/kernel.asm	/^f0106564:	53                   	push   %ebx$/;"	l
f0106565	obj/kern/kernel.asm	/^f0106565:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106568	obj/kern/kernel.asm	/^f0106568:	8b 0d 88 5e 20 f0    	mov    0xf0205e88,%ecx$/;"	l
f010656e	obj/kern/kernel.asm	/^f010656e:	89 c3                	mov    %eax,%ebx$/;"	l
f0106570	obj/kern/kernel.asm	/^f0106570:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0106573	obj/kern/kernel.asm	/^f0106573:	39 cb                	cmp    %ecx,%ebx$/;"	l
f0106575	obj/kern/kernel.asm	/^f0106575:	72 20                	jb     f0106597 <mpsearch1+0x37>$/;"	l
f0106577	obj/kern/kernel.asm	/^f0106577:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010657b	obj/kern/kernel.asm	/^f010657b:	c7 44 24 08 84 70 10 	movl   $0xf0107084,0x8(%esp)$/;"	l
f0106582	obj/kern/kernel.asm	/^f0106582:	f0 $/;"	l
f0106583	obj/kern/kernel.asm	/^f0106583:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f010658a	obj/kern/kernel.asm	/^f010658a:	00 $/;"	l
f010658b	obj/kern/kernel.asm	/^f010658b:	c7 04 24 3d 8c 10 f0 	movl   $0xf0108c3d,(%esp)$/;"	l
f0106592	obj/kern/kernel.asm	/^f0106592:	e8 a9 9a ff ff       	call   f0100040 <_panic>$/;"	l
f0106597	obj/kern/kernel.asm	/^f0106597:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f010659d	obj/kern/kernel.asm	/^f010659d:	01 d0                	add    %edx,%eax$/;"	l
f010659f	obj/kern/kernel.asm	/^f010659f:	89 c2                	mov    %eax,%edx$/;"	l
f01065a1	obj/kern/kernel.asm	/^f01065a1:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01065a4	obj/kern/kernel.asm	/^f01065a4:	39 d1                	cmp    %edx,%ecx$/;"	l
f01065a6	obj/kern/kernel.asm	/^f01065a6:	77 20                	ja     f01065c8 <mpsearch1+0x68>$/;"	l
f01065a8	obj/kern/kernel.asm	/^f01065a8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01065ac	obj/kern/kernel.asm	/^f01065ac:	c7 44 24 08 84 70 10 	movl   $0xf0107084,0x8(%esp)$/;"	l
f01065b3	obj/kern/kernel.asm	/^f01065b3:	f0 $/;"	l
f01065b4	obj/kern/kernel.asm	/^f01065b4:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f01065bb	obj/kern/kernel.asm	/^f01065bb:	00 $/;"	l
f01065bc	obj/kern/kernel.asm	/^f01065bc:	c7 04 24 3d 8c 10 f0 	movl   $0xf0108c3d,(%esp)$/;"	l
f01065c3	obj/kern/kernel.asm	/^f01065c3:	e8 78 9a ff ff       	call   f0100040 <_panic>$/;"	l
f01065c8	obj/kern/kernel.asm	/^f01065c8:	8d b0 00 00 00 f0    	lea    -0x10000000(%eax),%esi$/;"	l
f01065ce	obj/kern/kernel.asm	/^f01065ce:	39 f3                	cmp    %esi,%ebx$/;"	l
f01065d0	obj/kern/kernel.asm	/^f01065d0:	73 40                	jae    f0106612 <mpsearch1+0xb2>$/;"	l
f01065d2	obj/kern/kernel.asm	/^f01065d2:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f01065d9	obj/kern/kernel.asm	/^f01065d9:	00 $/;"	l
f01065da	obj/kern/kernel.asm	/^f01065da:	c7 44 24 04 4d 8c 10 	movl   $0xf0108c4d,0x4(%esp)$/;"	l
f01065e1	obj/kern/kernel.asm	/^f01065e1:	f0 $/;"	l
f01065e2	obj/kern/kernel.asm	/^f01065e2:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01065e5	obj/kern/kernel.asm	/^f01065e5:	e8 95 fd ff ff       	call   f010637f <memcmp>$/;"	l
f01065ea	obj/kern/kernel.asm	/^f01065ea:	85 c0                	test   %eax,%eax$/;"	l
f01065ec	obj/kern/kernel.asm	/^f01065ec:	75 17                	jne    f0106605 <mpsearch1+0xa5>$/;"	l
f01065ee	obj/kern/kernel.asm	/^f01065ee:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01065f3	obj/kern/kernel.asm	/^f01065f3:	0f b6 0c 03          	movzbl (%ebx,%eax,1),%ecx$/;"	l
f01065f7	obj/kern/kernel.asm	/^f01065f7:	01 ca                	add    %ecx,%edx$/;"	l
f01065f9	obj/kern/kernel.asm	/^f01065f9:	83 c0 01             	add    $0x1,%eax$/;"	l
f01065fc	obj/kern/kernel.asm	/^f01065fc:	83 f8 10             	cmp    $0x10,%eax$/;"	l
f01065ff	obj/kern/kernel.asm	/^f01065ff:	75 f2                	jne    f01065f3 <mpsearch1+0x93>$/;"	l
f0106601	obj/kern/kernel.asm	/^f0106601:	84 d2                	test   %dl,%dl$/;"	l
f0106603	obj/kern/kernel.asm	/^f0106603:	74 14                	je     f0106619 <mpsearch1+0xb9>$/;"	l
f0106605	obj/kern/kernel.asm	/^f0106605:	83 c3 10             	add    $0x10,%ebx$/;"	l
f0106608	obj/kern/kernel.asm	/^f0106608:	39 f3                	cmp    %esi,%ebx$/;"	l
f010660a	obj/kern/kernel.asm	/^f010660a:	72 c6                	jb     f01065d2 <mpsearch1+0x72>$/;"	l
f010660c	obj/kern/kernel.asm	/^f010660c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106610	obj/kern/kernel.asm	/^f0106610:	eb 0b                	jmp    f010661d <mpsearch1+0xbd>$/;"	l
f0106612	obj/kern/kernel.asm	/^f0106612:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106617	obj/kern/kernel.asm	/^f0106617:	eb 09                	jmp    f0106622 <mpsearch1+0xc2>$/;"	l
f0106619	obj/kern/kernel.asm	/^f0106619:	89 d8                	mov    %ebx,%eax$/;"	l
f010661b	obj/kern/kernel.asm	/^f010661b:	eb 05                	jmp    f0106622 <mpsearch1+0xc2>$/;"	l
f010661d	obj/kern/kernel.asm	/^f010661d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106622	obj/kern/kernel.asm	/^f0106622:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106625	obj/kern/kernel.asm	/^f0106625:	5b                   	pop    %ebx$/;"	l
f0106626	obj/kern/kernel.asm	/^f0106626:	5e                   	pop    %esi$/;"	l
f0106627	obj/kern/kernel.asm	/^f0106627:	5d                   	pop    %ebp$/;"	l
f0106628	obj/kern/kernel.asm	/^f0106628:	c3                   	ret    $/;"	l
f0106629	obj/kern/kernel.asm	/^f0106629 <mp_init>:$/;"	l
f0106629	obj/kern/kernel.asm	/^f0106629:	55                   	push   %ebp$/;"	l
f010662a	obj/kern/kernel.asm	/^f010662a:	89 e5                	mov    %esp,%ebp$/;"	l
f010662c	obj/kern/kernel.asm	/^f010662c:	57                   	push   %edi$/;"	l
f010662d	obj/kern/kernel.asm	/^f010662d:	56                   	push   %esi$/;"	l
f010662e	obj/kern/kernel.asm	/^f010662e:	53                   	push   %ebx$/;"	l
f010662f	obj/kern/kernel.asm	/^f010662f:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0106632	obj/kern/kernel.asm	/^f0106632:	c7 05 c0 63 20 f0 20 	movl   $0xf0206020,0xf02063c0$/;"	l
f0106639	obj/kern/kernel.asm	/^f0106639:	60 20 f0 $/;"	l
f010663c	obj/kern/kernel.asm	/^f010663c:	83 3d 88 5e 20 f0 00 	cmpl   $0x0,0xf0205e88$/;"	l
f0106643	obj/kern/kernel.asm	/^f0106643:	75 24                	jne    f0106669 <mp_init+0x40>$/;"	l
f0106645	obj/kern/kernel.asm	/^f0106645:	c7 44 24 0c 00 04 00 	movl   $0x400,0xc(%esp)$/;"	l
f010664c	obj/kern/kernel.asm	/^f010664c:	00 $/;"	l
f010664d	obj/kern/kernel.asm	/^f010664d:	c7 44 24 08 84 70 10 	movl   $0xf0107084,0x8(%esp)$/;"	l
f0106654	obj/kern/kernel.asm	/^f0106654:	f0 $/;"	l
f0106655	obj/kern/kernel.asm	/^f0106655:	c7 44 24 04 6f 00 00 	movl   $0x6f,0x4(%esp)$/;"	l
f010665c	obj/kern/kernel.asm	/^f010665c:	00 $/;"	l
f010665d	obj/kern/kernel.asm	/^f010665d:	c7 04 24 3d 8c 10 f0 	movl   $0xf0108c3d,(%esp)$/;"	l
f0106664	obj/kern/kernel.asm	/^f0106664:	e8 d7 99 ff ff       	call   f0100040 <_panic>$/;"	l
f0106669	obj/kern/kernel.asm	/^f0106669:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f0106670	obj/kern/kernel.asm	/^f0106670:	85 c0                	test   %eax,%eax$/;"	l
f0106672	obj/kern/kernel.asm	/^f0106672:	74 16                	je     f010668a <mp_init+0x61>$/;"	l
f0106674	obj/kern/kernel.asm	/^f0106674:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0106677	obj/kern/kernel.asm	/^f0106677:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f010667c	obj/kern/kernel.asm	/^f010667c:	e8 df fe ff ff       	call   f0106560 <mpsearch1>$/;"	l
f0106681	obj/kern/kernel.asm	/^f0106681:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106684	obj/kern/kernel.asm	/^f0106684:	85 c0                	test   %eax,%eax$/;"	l
f0106686	obj/kern/kernel.asm	/^f0106686:	75 3c                	jne    f01066c4 <mp_init+0x9b>$/;"	l
f0106688	obj/kern/kernel.asm	/^f0106688:	eb 20                	jmp    f01066aa <mp_init+0x81>$/;"	l
f010668a	obj/kern/kernel.asm	/^f010668a:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f0106691	obj/kern/kernel.asm	/^f0106691:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0106694	obj/kern/kernel.asm	/^f0106694:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f0106699	obj/kern/kernel.asm	/^f0106699:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f010669e	obj/kern/kernel.asm	/^f010669e:	e8 bd fe ff ff       	call   f0106560 <mpsearch1>$/;"	l
f01066a3	obj/kern/kernel.asm	/^f01066a3:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01066a6	obj/kern/kernel.asm	/^f01066a6:	85 c0                	test   %eax,%eax$/;"	l
f01066a8	obj/kern/kernel.asm	/^f01066a8:	75 1a                	jne    f01066c4 <mp_init+0x9b>$/;"	l
f01066aa	obj/kern/kernel.asm	/^f01066aa:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f01066af	obj/kern/kernel.asm	/^f01066af:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f01066b4	obj/kern/kernel.asm	/^f01066b4:	e8 a7 fe ff ff       	call   f0106560 <mpsearch1>$/;"	l
f01066b9	obj/kern/kernel.asm	/^f01066b9:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01066bc	obj/kern/kernel.asm	/^f01066bc:	85 c0                	test   %eax,%eax$/;"	l
f01066be	obj/kern/kernel.asm	/^f01066be:	0f 84 5f 02 00 00    	je     f0106923 <mp_init+0x2fa>$/;"	l
f01066c4	obj/kern/kernel.asm	/^f01066c4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01066c7	obj/kern/kernel.asm	/^f01066c7:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f01066ca	obj/kern/kernel.asm	/^f01066ca:	85 f6                	test   %esi,%esi$/;"	l
f01066cc	obj/kern/kernel.asm	/^f01066cc:	74 06                	je     f01066d4 <mp_init+0xab>$/;"	l
f01066ce	obj/kern/kernel.asm	/^f01066ce:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f01066d2	obj/kern/kernel.asm	/^f01066d2:	74 11                	je     f01066e5 <mp_init+0xbc>$/;"	l
f01066d4	obj/kern/kernel.asm	/^f01066d4:	c7 04 24 b0 8a 10 f0 	movl   $0xf0108ab0,(%esp)$/;"	l
f01066db	obj/kern/kernel.asm	/^f01066db:	e8 2e d8 ff ff       	call   f0103f0e <cprintf>$/;"	l
f01066e0	obj/kern/kernel.asm	/^f01066e0:	e9 3e 02 00 00       	jmp    f0106923 <mp_init+0x2fa>$/;"	l
f01066e5	obj/kern/kernel.asm	/^f01066e5:	89 f0                	mov    %esi,%eax$/;"	l
f01066e7	obj/kern/kernel.asm	/^f01066e7:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01066ea	obj/kern/kernel.asm	/^f01066ea:	3b 05 88 5e 20 f0    	cmp    0xf0205e88,%eax$/;"	l
f01066f0	obj/kern/kernel.asm	/^f01066f0:	72 20                	jb     f0106712 <mp_init+0xe9>$/;"	l
f01066f2	obj/kern/kernel.asm	/^f01066f2:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f01066f6	obj/kern/kernel.asm	/^f01066f6:	c7 44 24 08 84 70 10 	movl   $0xf0107084,0x8(%esp)$/;"	l
f01066fd	obj/kern/kernel.asm	/^f01066fd:	f0 $/;"	l
f01066fe	obj/kern/kernel.asm	/^f01066fe:	c7 44 24 04 90 00 00 	movl   $0x90,0x4(%esp)$/;"	l
f0106705	obj/kern/kernel.asm	/^f0106705:	00 $/;"	l
f0106706	obj/kern/kernel.asm	/^f0106706:	c7 04 24 3d 8c 10 f0 	movl   $0xf0108c3d,(%esp)$/;"	l
f010670d	obj/kern/kernel.asm	/^f010670d:	e8 2e 99 ff ff       	call   f0100040 <_panic>$/;"	l
f0106712	obj/kern/kernel.asm	/^f0106712:	8d 9e 00 00 00 f0    	lea    -0x10000000(%esi),%ebx$/;"	l
f0106718	obj/kern/kernel.asm	/^f0106718:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f010671f	obj/kern/kernel.asm	/^f010671f:	00 $/;"	l
f0106720	obj/kern/kernel.asm	/^f0106720:	c7 44 24 04 52 8c 10 	movl   $0xf0108c52,0x4(%esp)$/;"	l
f0106727	obj/kern/kernel.asm	/^f0106727:	f0 $/;"	l
f0106728	obj/kern/kernel.asm	/^f0106728:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010672b	obj/kern/kernel.asm	/^f010672b:	e8 4f fc ff ff       	call   f010637f <memcmp>$/;"	l
f0106730	obj/kern/kernel.asm	/^f0106730:	85 c0                	test   %eax,%eax$/;"	l
f0106732	obj/kern/kernel.asm	/^f0106732:	74 11                	je     f0106745 <mp_init+0x11c>$/;"	l
f0106734	obj/kern/kernel.asm	/^f0106734:	c7 04 24 e0 8a 10 f0 	movl   $0xf0108ae0,(%esp)$/;"	l
f010673b	obj/kern/kernel.asm	/^f010673b:	e8 ce d7 ff ff       	call   f0103f0e <cprintf>$/;"	l
f0106740	obj/kern/kernel.asm	/^f0106740:	e9 de 01 00 00       	jmp    f0106923 <mp_init+0x2fa>$/;"	l
f0106745	obj/kern/kernel.asm	/^f0106745:	0f b7 43 04          	movzwl 0x4(%ebx),%eax$/;"	l
f0106749	obj/kern/kernel.asm	/^f0106749:	66 89 45 e2          	mov    %ax,-0x1e(%ebp)$/;"	l
f010674d	obj/kern/kernel.asm	/^f010674d:	0f b7 f8             	movzwl %ax,%edi$/;"	l
f0106750	obj/kern/kernel.asm	/^f0106750:	85 ff                	test   %edi,%edi$/;"	l
f0106752	obj/kern/kernel.asm	/^f0106752:	7e 30                	jle    f0106784 <mp_init+0x15b>$/;"	l
f0106754	obj/kern/kernel.asm	/^f0106754:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106759	obj/kern/kernel.asm	/^f0106759:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010675e	obj/kern/kernel.asm	/^f010675e:	0f b6 8c 30 00 00 00 	movzbl -0x10000000(%eax,%esi,1),%ecx$/;"	l
f0106765	obj/kern/kernel.asm	/^f0106765:	f0 $/;"	l
f0106766	obj/kern/kernel.asm	/^f0106766:	01 ca                	add    %ecx,%edx$/;"	l
f0106768	obj/kern/kernel.asm	/^f0106768:	83 c0 01             	add    $0x1,%eax$/;"	l
f010676b	obj/kern/kernel.asm	/^f010676b:	39 c7                	cmp    %eax,%edi$/;"	l
f010676d	obj/kern/kernel.asm	/^f010676d:	7f ef                	jg     f010675e <mp_init+0x135>$/;"	l
f010676f	obj/kern/kernel.asm	/^f010676f:	84 d2                	test   %dl,%dl$/;"	l
f0106771	obj/kern/kernel.asm	/^f0106771:	74 11                	je     f0106784 <mp_init+0x15b>$/;"	l
f0106773	obj/kern/kernel.asm	/^f0106773:	c7 04 24 14 8b 10 f0 	movl   $0xf0108b14,(%esp)$/;"	l
f010677a	obj/kern/kernel.asm	/^f010677a:	e8 8f d7 ff ff       	call   f0103f0e <cprintf>$/;"	l
f010677f	obj/kern/kernel.asm	/^f010677f:	e9 9f 01 00 00       	jmp    f0106923 <mp_init+0x2fa>$/;"	l
f0106784	obj/kern/kernel.asm	/^f0106784:	0f b6 43 06          	movzbl 0x6(%ebx),%eax$/;"	l
f0106788	obj/kern/kernel.asm	/^f0106788:	3c 04                	cmp    $0x4,%al$/;"	l
f010678a	obj/kern/kernel.asm	/^f010678a:	74 1e                	je     f01067aa <mp_init+0x181>$/;"	l
f010678c	obj/kern/kernel.asm	/^f010678c:	3c 01                	cmp    $0x1,%al$/;"	l
f010678e	obj/kern/kernel.asm	/^f010678e:	66 90                	xchg   %ax,%ax$/;"	l
f0106790	obj/kern/kernel.asm	/^f0106790:	74 18                	je     f01067aa <mp_init+0x181>$/;"	l
f0106792	obj/kern/kernel.asm	/^f0106792:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106795	obj/kern/kernel.asm	/^f0106795:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106799	obj/kern/kernel.asm	/^f0106799:	c7 04 24 38 8b 10 f0 	movl   $0xf0108b38,(%esp)$/;"	l
f01067a0	obj/kern/kernel.asm	/^f01067a0:	e8 69 d7 ff ff       	call   f0103f0e <cprintf>$/;"	l
f01067a5	obj/kern/kernel.asm	/^f01067a5:	e9 79 01 00 00       	jmp    f0106923 <mp_init+0x2fa>$/;"	l
f01067aa	obj/kern/kernel.asm	/^f01067aa:	0f b7 73 28          	movzwl 0x28(%ebx),%esi$/;"	l
f01067ae	obj/kern/kernel.asm	/^f01067ae:	0f b7 7d e2          	movzwl -0x1e(%ebp),%edi$/;"	l
f01067b2	obj/kern/kernel.asm	/^f01067b2:	01 df                	add    %ebx,%edi$/;"	l
f01067b4	obj/kern/kernel.asm	/^f01067b4:	85 f6                	test   %esi,%esi$/;"	l
f01067b6	obj/kern/kernel.asm	/^f01067b6:	7e 19                	jle    f01067d1 <mp_init+0x1a8>$/;"	l
f01067b8	obj/kern/kernel.asm	/^f01067b8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01067bd	obj/kern/kernel.asm	/^f01067bd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01067c2	obj/kern/kernel.asm	/^f01067c2:	0f b6 0c 07          	movzbl (%edi,%eax,1),%ecx$/;"	l
f01067c6	obj/kern/kernel.asm	/^f01067c6:	01 ca                	add    %ecx,%edx$/;"	l
f01067c8	obj/kern/kernel.asm	/^f01067c8:	83 c0 01             	add    $0x1,%eax$/;"	l
f01067cb	obj/kern/kernel.asm	/^f01067cb:	39 c6                	cmp    %eax,%esi$/;"	l
f01067cd	obj/kern/kernel.asm	/^f01067cd:	7f f3                	jg     f01067c2 <mp_init+0x199>$/;"	l
f01067cf	obj/kern/kernel.asm	/^f01067cf:	eb 05                	jmp    f01067d6 <mp_init+0x1ad>$/;"	l
f01067d1	obj/kern/kernel.asm	/^f01067d1:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01067d6	obj/kern/kernel.asm	/^f01067d6:	38 53 2a             	cmp    %dl,0x2a(%ebx)$/;"	l
f01067d9	obj/kern/kernel.asm	/^f01067d9:	74 11                	je     f01067ec <mp_init+0x1c3>$/;"	l
f01067db	obj/kern/kernel.asm	/^f01067db:	c7 04 24 58 8b 10 f0 	movl   $0xf0108b58,(%esp)$/;"	l
f01067e2	obj/kern/kernel.asm	/^f01067e2:	e8 27 d7 ff ff       	call   f0103f0e <cprintf>$/;"	l
f01067e7	obj/kern/kernel.asm	/^f01067e7:	e9 37 01 00 00       	jmp    f0106923 <mp_init+0x2fa>$/;"	l
f01067ec	obj/kern/kernel.asm	/^f01067ec:	85 db                	test   %ebx,%ebx$/;"	l
f01067ee	obj/kern/kernel.asm	/^f01067ee:	0f 84 2f 01 00 00    	je     f0106923 <mp_init+0x2fa>$/;"	l
f01067f4	obj/kern/kernel.asm	/^f01067f4:	c7 05 00 60 20 f0 01 	movl   $0x1,0xf0206000$/;"	l
f01067fb	obj/kern/kernel.asm	/^f01067fb:	00 00 00 $/;"	l
f01067fe	obj/kern/kernel.asm	/^f01067fe:	8b 43 24             	mov    0x24(%ebx),%eax$/;"	l
f0106801	obj/kern/kernel.asm	/^f0106801:	a3 00 70 24 f0       	mov    %eax,0xf0247000$/;"	l
f0106806	obj/kern/kernel.asm	/^f0106806:	8d 7b 2c             	lea    0x2c(%ebx),%edi$/;"	l
f0106809	obj/kern/kernel.asm	/^f0106809:	66 83 7b 22 00       	cmpw   $0x0,0x22(%ebx)$/;"	l
f010680e	obj/kern/kernel.asm	/^f010680e:	0f 84 94 00 00 00    	je     f01068a8 <mp_init+0x27f>$/;"	l
f0106814	obj/kern/kernel.asm	/^f0106814:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0106819	obj/kern/kernel.asm	/^f0106819:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f010681c	obj/kern/kernel.asm	/^f010681c:	84 c0                	test   %al,%al$/;"	l
f010681e	obj/kern/kernel.asm	/^f010681e:	74 06                	je     f0106826 <mp_init+0x1fd>$/;"	l
f0106820	obj/kern/kernel.asm	/^f0106820:	3c 04                	cmp    $0x4,%al$/;"	l
f0106822	obj/kern/kernel.asm	/^f0106822:	77 54                	ja     f0106878 <mp_init+0x24f>$/;"	l
f0106824	obj/kern/kernel.asm	/^f0106824:	eb 4d                	jmp    f0106873 <mp_init+0x24a>$/;"	l
f0106826	obj/kern/kernel.asm	/^f0106826:	f6 47 03 02          	testb  $0x2,0x3(%edi)$/;"	l
f010682a	obj/kern/kernel.asm	/^f010682a:	74 11                	je     f010683d <mp_init+0x214>$/;"	l
f010682c	obj/kern/kernel.asm	/^f010682c:	6b 05 c4 63 20 f0 74 	imul   $0x74,0xf02063c4,%eax$/;"	l
f0106833	obj/kern/kernel.asm	/^f0106833:	05 20 60 20 f0       	add    $0xf0206020,%eax$/;"	l
f0106838	obj/kern/kernel.asm	/^f0106838:	a3 c0 63 20 f0       	mov    %eax,0xf02063c0$/;"	l
f010683d	obj/kern/kernel.asm	/^f010683d:	a1 c4 63 20 f0       	mov    0xf02063c4,%eax$/;"	l
f0106842	obj/kern/kernel.asm	/^f0106842:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0106845	obj/kern/kernel.asm	/^f0106845:	7f 13                	jg     f010685a <mp_init+0x231>$/;"	l
f0106847	obj/kern/kernel.asm	/^f0106847:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f010684a	obj/kern/kernel.asm	/^f010684a:	88 82 20 60 20 f0    	mov    %al,-0xfdf9fe0(%edx)$/;"	l
f0106850	obj/kern/kernel.asm	/^f0106850:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106853	obj/kern/kernel.asm	/^f0106853:	a3 c4 63 20 f0       	mov    %eax,0xf02063c4$/;"	l
f0106858	obj/kern/kernel.asm	/^f0106858:	eb 14                	jmp    f010686e <mp_init+0x245>$/;"	l
f010685a	obj/kern/kernel.asm	/^f010685a:	0f b6 47 01          	movzbl 0x1(%edi),%eax$/;"	l
f010685e	obj/kern/kernel.asm	/^f010685e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106862	obj/kern/kernel.asm	/^f0106862:	c7 04 24 88 8b 10 f0 	movl   $0xf0108b88,(%esp)$/;"	l
f0106869	obj/kern/kernel.asm	/^f0106869:	e8 a0 d6 ff ff       	call   f0103f0e <cprintf>$/;"	l
f010686e	obj/kern/kernel.asm	/^f010686e:	83 c7 14             	add    $0x14,%edi$/;"	l
f0106871	obj/kern/kernel.asm	/^f0106871:	eb 26                	jmp    f0106899 <mp_init+0x270>$/;"	l
f0106873	obj/kern/kernel.asm	/^f0106873:	83 c7 08             	add    $0x8,%edi$/;"	l
f0106876	obj/kern/kernel.asm	/^f0106876:	eb 21                	jmp    f0106899 <mp_init+0x270>$/;"	l
f0106878	obj/kern/kernel.asm	/^f0106878:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010687b	obj/kern/kernel.asm	/^f010687b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010687f	obj/kern/kernel.asm	/^f010687f:	c7 04 24 b0 8b 10 f0 	movl   $0xf0108bb0,(%esp)$/;"	l
f0106886	obj/kern/kernel.asm	/^f0106886:	e8 83 d6 ff ff       	call   f0103f0e <cprintf>$/;"	l
f010688b	obj/kern/kernel.asm	/^f010688b:	c7 05 00 60 20 f0 00 	movl   $0x0,0xf0206000$/;"	l
f0106892	obj/kern/kernel.asm	/^f0106892:	00 00 00 $/;"	l
f0106895	obj/kern/kernel.asm	/^f0106895:	0f b7 73 22          	movzwl 0x22(%ebx),%esi$/;"	l
f0106899	obj/kern/kernel.asm	/^f0106899:	83 c6 01             	add    $0x1,%esi$/;"	l
f010689c	obj/kern/kernel.asm	/^f010689c:	0f b7 43 22          	movzwl 0x22(%ebx),%eax$/;"	l
f01068a0	obj/kern/kernel.asm	/^f01068a0:	39 f0                	cmp    %esi,%eax$/;"	l
f01068a2	obj/kern/kernel.asm	/^f01068a2:	0f 87 71 ff ff ff    	ja     f0106819 <mp_init+0x1f0>$/;"	l
f01068a8	obj/kern/kernel.asm	/^f01068a8:	a1 c0 63 20 f0       	mov    0xf02063c0,%eax$/;"	l
f01068ad	obj/kern/kernel.asm	/^f01068ad:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f01068b4	obj/kern/kernel.asm	/^f01068b4:	83 3d 00 60 20 f0 00 	cmpl   $0x0,0xf0206000$/;"	l
f01068bb	obj/kern/kernel.asm	/^f01068bb:	75 22                	jne    f01068df <mp_init+0x2b6>$/;"	l
f01068bd	obj/kern/kernel.asm	/^f01068bd:	c7 05 c4 63 20 f0 01 	movl   $0x1,0xf02063c4$/;"	l
f01068c4	obj/kern/kernel.asm	/^f01068c4:	00 00 00 $/;"	l
f01068c7	obj/kern/kernel.asm	/^f01068c7:	c7 05 00 70 24 f0 00 	movl   $0x0,0xf0247000$/;"	l
f01068ce	obj/kern/kernel.asm	/^f01068ce:	00 00 00 $/;"	l
f01068d1	obj/kern/kernel.asm	/^f01068d1:	c7 04 24 d0 8b 10 f0 	movl   $0xf0108bd0,(%esp)$/;"	l
f01068d8	obj/kern/kernel.asm	/^f01068d8:	e8 31 d6 ff ff       	call   f0103f0e <cprintf>$/;"	l
f01068dd	obj/kern/kernel.asm	/^f01068dd:	eb 44                	jmp    f0106923 <mp_init+0x2fa>$/;"	l
f01068df	obj/kern/kernel.asm	/^f01068df:	8b 15 c4 63 20 f0    	mov    0xf02063c4,%edx$/;"	l
f01068e5	obj/kern/kernel.asm	/^f01068e5:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01068e9	obj/kern/kernel.asm	/^f01068e9:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01068ec	obj/kern/kernel.asm	/^f01068ec:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01068f0	obj/kern/kernel.asm	/^f01068f0:	c7 04 24 57 8c 10 f0 	movl   $0xf0108c57,(%esp)$/;"	l
f01068f7	obj/kern/kernel.asm	/^f01068f7:	e8 12 d6 ff ff       	call   f0103f0e <cprintf>$/;"	l
f01068fc	obj/kern/kernel.asm	/^f01068fc:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01068ff	obj/kern/kernel.asm	/^f01068ff:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f0106903	obj/kern/kernel.asm	/^f0106903:	74 1e                	je     f0106923 <mp_init+0x2fa>$/;"	l
f0106905	obj/kern/kernel.asm	/^f0106905:	c7 04 24 fc 8b 10 f0 	movl   $0xf0108bfc,(%esp)$/;"	l
f010690c	obj/kern/kernel.asm	/^f010690c:	e8 fd d5 ff ff       	call   f0103f0e <cprintf>$/;"	l
f0106911	obj/kern/kernel.asm	/^f0106911:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f0106916	obj/kern/kernel.asm	/^f0106916:	b8 70 00 00 00       	mov    $0x70,%eax$/;"	l
f010691b	obj/kern/kernel.asm	/^f010691b:	ee                   	out    %al,(%dx)$/;"	l
f010691c	obj/kern/kernel.asm	/^f010691c:	b2 23                	mov    $0x23,%dl$/;"	l
f010691e	obj/kern/kernel.asm	/^f010691e:	ec                   	in     (%dx),%al$/;"	l
f010691f	obj/kern/kernel.asm	/^f010691f:	83 c8 01             	or     $0x1,%eax$/;"	l
f0106922	obj/kern/kernel.asm	/^f0106922:	ee                   	out    %al,(%dx)$/;"	l
f0106923	obj/kern/kernel.asm	/^f0106923:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0106926	obj/kern/kernel.asm	/^f0106926:	5b                   	pop    %ebx$/;"	l
f0106927	obj/kern/kernel.asm	/^f0106927:	5e                   	pop    %esi$/;"	l
f0106928	obj/kern/kernel.asm	/^f0106928:	5f                   	pop    %edi$/;"	l
f0106929	obj/kern/kernel.asm	/^f0106929:	5d                   	pop    %ebp$/;"	l
f010692a	obj/kern/kernel.asm	/^f010692a:	c3                   	ret    $/;"	l
f010692b	obj/kern/kernel.asm	/^f010692b:	90                   	nop$/;"	l
f010692c	obj/kern/kernel.asm	/^f010692c <lapicw>:$/;"	l
f010692c	obj/kern/kernel.asm	/^f010692c:	55                   	push   %ebp$/;"	l
f010692d	obj/kern/kernel.asm	/^f010692d:	89 e5                	mov    %esp,%ebp$/;"	l
f010692f	obj/kern/kernel.asm	/^f010692f:	8b 0d 04 70 24 f0    	mov    0xf0247004,%ecx$/;"	l
f0106935	obj/kern/kernel.asm	/^f0106935:	8d 04 81             	lea    (%ecx,%eax,4),%eax$/;"	l
f0106938	obj/kern/kernel.asm	/^f0106938:	89 10                	mov    %edx,(%eax)$/;"	l
f010693a	obj/kern/kernel.asm	/^f010693a:	a1 04 70 24 f0       	mov    0xf0247004,%eax$/;"	l
f010693f	obj/kern/kernel.asm	/^f010693f:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0106942	obj/kern/kernel.asm	/^f0106942:	5d                   	pop    %ebp$/;"	l
f0106943	obj/kern/kernel.asm	/^f0106943:	c3                   	ret    $/;"	l
f0106944	obj/kern/kernel.asm	/^f0106944 <cpunum>:$/;"	l
f0106944	obj/kern/kernel.asm	/^f0106944:	55                   	push   %ebp$/;"	l
f0106945	obj/kern/kernel.asm	/^f0106945:	89 e5                	mov    %esp,%ebp$/;"	l
f0106947	obj/kern/kernel.asm	/^f0106947:	a1 04 70 24 f0       	mov    0xf0247004,%eax$/;"	l
f010694c	obj/kern/kernel.asm	/^f010694c:	85 c0                	test   %eax,%eax$/;"	l
f010694e	obj/kern/kernel.asm	/^f010694e:	74 08                	je     f0106958 <cpunum+0x14>$/;"	l
f0106950	obj/kern/kernel.asm	/^f0106950:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0106953	obj/kern/kernel.asm	/^f0106953:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0106956	obj/kern/kernel.asm	/^f0106956:	eb 05                	jmp    f010695d <cpunum+0x19>$/;"	l
f0106958	obj/kern/kernel.asm	/^f0106958:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010695d	obj/kern/kernel.asm	/^f010695d:	5d                   	pop    %ebp$/;"	l
f010695e	obj/kern/kernel.asm	/^f010695e:	c3                   	ret    $/;"	l
f010695f	obj/kern/kernel.asm	/^f010695f <lapic_init>:$/;"	l
f010695f	obj/kern/kernel.asm	/^f010695f:	a1 00 70 24 f0       	mov    0xf0247000,%eax$/;"	l
f0106964	obj/kern/kernel.asm	/^f0106964:	85 c0                	test   %eax,%eax$/;"	l
f0106966	obj/kern/kernel.asm	/^f0106966:	0f 84 23 01 00 00    	je     f0106a8f <lapic_init+0x130>$/;"	l
f010696c	obj/kern/kernel.asm	/^f010696c:	55                   	push   %ebp$/;"	l
f010696d	obj/kern/kernel.asm	/^f010696d:	89 e5                	mov    %esp,%ebp$/;"	l
f010696f	obj/kern/kernel.asm	/^f010696f:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0106972	obj/kern/kernel.asm	/^f0106972:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0106979	obj/kern/kernel.asm	/^f0106979:	00 $/;"	l
f010697a	obj/kern/kernel.asm	/^f010697a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010697d	obj/kern/kernel.asm	/^f010697d:	e8 db aa ff ff       	call   f010145d <mmio_map_region>$/;"	l
f0106982	obj/kern/kernel.asm	/^f0106982:	a3 04 70 24 f0       	mov    %eax,0xf0247004$/;"	l
f0106987	obj/kern/kernel.asm	/^f0106987:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f010698c	obj/kern/kernel.asm	/^f010698c:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f0106991	obj/kern/kernel.asm	/^f0106991:	e8 96 ff ff ff       	call   f010692c <lapicw>$/;"	l
f0106996	obj/kern/kernel.asm	/^f0106996:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f010699b	obj/kern/kernel.asm	/^f010699b:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f01069a0	obj/kern/kernel.asm	/^f01069a0:	e8 87 ff ff ff       	call   f010692c <lapicw>$/;"	l
f01069a5	obj/kern/kernel.asm	/^f01069a5:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f01069aa	obj/kern/kernel.asm	/^f01069aa:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f01069af	obj/kern/kernel.asm	/^f01069af:	e8 78 ff ff ff       	call   f010692c <lapicw>$/;"	l
f01069b4	obj/kern/kernel.asm	/^f01069b4:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f01069b9	obj/kern/kernel.asm	/^f01069b9:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f01069be	obj/kern/kernel.asm	/^f01069be:	e8 69 ff ff ff       	call   f010692c <lapicw>$/;"	l
f01069c3	obj/kern/kernel.asm	/^f01069c3:	e8 7c ff ff ff       	call   f0106944 <cpunum>$/;"	l
f01069c8	obj/kern/kernel.asm	/^f01069c8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01069cb	obj/kern/kernel.asm	/^f01069cb:	05 20 60 20 f0       	add    $0xf0206020,%eax$/;"	l
f01069d0	obj/kern/kernel.asm	/^f01069d0:	39 05 c0 63 20 f0    	cmp    %eax,0xf02063c0$/;"	l
f01069d6	obj/kern/kernel.asm	/^f01069d6:	74 0f                	je     f01069e7 <lapic_init+0x88>$/;"	l
f01069d8	obj/kern/kernel.asm	/^f01069d8:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f01069dd	obj/kern/kernel.asm	/^f01069dd:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f01069e2	obj/kern/kernel.asm	/^f01069e2:	e8 45 ff ff ff       	call   f010692c <lapicw>$/;"	l
f01069e7	obj/kern/kernel.asm	/^f01069e7:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f01069ec	obj/kern/kernel.asm	/^f01069ec:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f01069f1	obj/kern/kernel.asm	/^f01069f1:	e8 36 ff ff ff       	call   f010692c <lapicw>$/;"	l
f01069f6	obj/kern/kernel.asm	/^f01069f6:	a1 04 70 24 f0       	mov    0xf0247004,%eax$/;"	l
f01069fb	obj/kern/kernel.asm	/^f01069fb:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f01069fe	obj/kern/kernel.asm	/^f01069fe:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0106a01	obj/kern/kernel.asm	/^f0106a01:	3c 03                	cmp    $0x3,%al$/;"	l
f0106a03	obj/kern/kernel.asm	/^f0106a03:	76 0f                	jbe    f0106a14 <lapic_init+0xb5>$/;"	l
f0106a05	obj/kern/kernel.asm	/^f0106a05:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106a0a	obj/kern/kernel.asm	/^f0106a0a:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f0106a0f	obj/kern/kernel.asm	/^f0106a0f:	e8 18 ff ff ff       	call   f010692c <lapicw>$/;"	l
f0106a14	obj/kern/kernel.asm	/^f0106a14:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f0106a19	obj/kern/kernel.asm	/^f0106a19:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f0106a1e	obj/kern/kernel.asm	/^f0106a1e:	e8 09 ff ff ff       	call   f010692c <lapicw>$/;"	l
f0106a23	obj/kern/kernel.asm	/^f0106a23:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106a28	obj/kern/kernel.asm	/^f0106a28:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0106a2d	obj/kern/kernel.asm	/^f0106a2d:	e8 fa fe ff ff       	call   f010692c <lapicw>$/;"	l
f0106a32	obj/kern/kernel.asm	/^f0106a32:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106a37	obj/kern/kernel.asm	/^f0106a37:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0106a3c	obj/kern/kernel.asm	/^f0106a3c:	e8 eb fe ff ff       	call   f010692c <lapicw>$/;"	l
f0106a41	obj/kern/kernel.asm	/^f0106a41:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106a46	obj/kern/kernel.asm	/^f0106a46:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0106a4b	obj/kern/kernel.asm	/^f0106a4b:	e8 dc fe ff ff       	call   f010692c <lapicw>$/;"	l
f0106a50	obj/kern/kernel.asm	/^f0106a50:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106a55	obj/kern/kernel.asm	/^f0106a55:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106a5a	obj/kern/kernel.asm	/^f0106a5a:	e8 cd fe ff ff       	call   f010692c <lapicw>$/;"	l
f0106a5f	obj/kern/kernel.asm	/^f0106a5f:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f0106a64	obj/kern/kernel.asm	/^f0106a64:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106a69	obj/kern/kernel.asm	/^f0106a69:	e8 be fe ff ff       	call   f010692c <lapicw>$/;"	l
f0106a6e	obj/kern/kernel.asm	/^f0106a6e:	8b 15 04 70 24 f0    	mov    0xf0247004,%edx$/;"	l
f0106a74	obj/kern/kernel.asm	/^f0106a74:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0106a7a	obj/kern/kernel.asm	/^f0106a7a:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0106a7d	obj/kern/kernel.asm	/^f0106a7d:	75 f5                	jne    f0106a74 <lapic_init+0x115>$/;"	l
f0106a7f	obj/kern/kernel.asm	/^f0106a7f:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106a84	obj/kern/kernel.asm	/^f0106a84:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0106a89	obj/kern/kernel.asm	/^f0106a89:	e8 9e fe ff ff       	call   f010692c <lapicw>$/;"	l
f0106a8e	obj/kern/kernel.asm	/^f0106a8e:	c9                   	leave  $/;"	l
f0106a8f	obj/kern/kernel.asm	/^f0106a8f:	f3 c3                	repz ret $/;"	l
f0106a91	obj/kern/kernel.asm	/^f0106a91 <lapic_eoi>:$/;"	l
f0106a91	obj/kern/kernel.asm	/^f0106a91:	83 3d 04 70 24 f0 00 	cmpl   $0x0,0xf0247004$/;"	l
f0106a98	obj/kern/kernel.asm	/^f0106a98:	74 13                	je     f0106aad <lapic_eoi+0x1c>$/;"	l
f0106a9a	obj/kern/kernel.asm	/^f0106a9a:	55                   	push   %ebp$/;"	l
f0106a9b	obj/kern/kernel.asm	/^f0106a9b:	89 e5                	mov    %esp,%ebp$/;"	l
f0106a9d	obj/kern/kernel.asm	/^f0106a9d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106aa2	obj/kern/kernel.asm	/^f0106aa2:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0106aa7	obj/kern/kernel.asm	/^f0106aa7:	e8 80 fe ff ff       	call   f010692c <lapicw>$/;"	l
f0106aac	obj/kern/kernel.asm	/^f0106aac:	5d                   	pop    %ebp$/;"	l
f0106aad	obj/kern/kernel.asm	/^f0106aad:	f3 c3                	repz ret $/;"	l
f0106aaf	obj/kern/kernel.asm	/^f0106aaf <lapic_startap>:$/;"	l
f0106aaf	obj/kern/kernel.asm	/^f0106aaf:	55                   	push   %ebp$/;"	l
f0106ab0	obj/kern/kernel.asm	/^f0106ab0:	89 e5                	mov    %esp,%ebp$/;"	l
f0106ab2	obj/kern/kernel.asm	/^f0106ab2:	56                   	push   %esi$/;"	l
f0106ab3	obj/kern/kernel.asm	/^f0106ab3:	53                   	push   %ebx$/;"	l
f0106ab4	obj/kern/kernel.asm	/^f0106ab4:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106ab7	obj/kern/kernel.asm	/^f0106ab7:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106aba	obj/kern/kernel.asm	/^f0106aba:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0106abd	obj/kern/kernel.asm	/^f0106abd:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0106ac2	obj/kern/kernel.asm	/^f0106ac2:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0106ac7	obj/kern/kernel.asm	/^f0106ac7:	ee                   	out    %al,(%dx)$/;"	l
f0106ac8	obj/kern/kernel.asm	/^f0106ac8:	b2 71                	mov    $0x71,%dl$/;"	l
f0106aca	obj/kern/kernel.asm	/^f0106aca:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0106acf	obj/kern/kernel.asm	/^f0106acf:	ee                   	out    %al,(%dx)$/;"	l
f0106ad0	obj/kern/kernel.asm	/^f0106ad0:	83 3d 88 5e 20 f0 00 	cmpl   $0x0,0xf0205e88$/;"	l
f0106ad7	obj/kern/kernel.asm	/^f0106ad7:	75 24                	jne    f0106afd <lapic_startap+0x4e>$/;"	l
f0106ad9	obj/kern/kernel.asm	/^f0106ad9:	c7 44 24 0c 67 04 00 	movl   $0x467,0xc(%esp)$/;"	l
f0106ae0	obj/kern/kernel.asm	/^f0106ae0:	00 $/;"	l
f0106ae1	obj/kern/kernel.asm	/^f0106ae1:	c7 44 24 08 84 70 10 	movl   $0xf0107084,0x8(%esp)$/;"	l
f0106ae8	obj/kern/kernel.asm	/^f0106ae8:	f0 $/;"	l
f0106ae9	obj/kern/kernel.asm	/^f0106ae9:	c7 44 24 04 98 00 00 	movl   $0x98,0x4(%esp)$/;"	l
f0106af0	obj/kern/kernel.asm	/^f0106af0:	00 $/;"	l
f0106af1	obj/kern/kernel.asm	/^f0106af1:	c7 04 24 74 8c 10 f0 	movl   $0xf0108c74,(%esp)$/;"	l
f0106af8	obj/kern/kernel.asm	/^f0106af8:	e8 43 95 ff ff       	call   f0100040 <_panic>$/;"	l
f0106afd	obj/kern/kernel.asm	/^f0106afd:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f0106b04	obj/kern/kernel.asm	/^f0106b04:	00 00 $/;"	l
f0106b06	obj/kern/kernel.asm	/^f0106b06:	89 f0                	mov    %esi,%eax$/;"	l
f0106b08	obj/kern/kernel.asm	/^f0106b08:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f0106b0b	obj/kern/kernel.asm	/^f0106b0b:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f0106b11	obj/kern/kernel.asm	/^f0106b11:	c1 e3 18             	shl    $0x18,%ebx$/;"	l
f0106b14	obj/kern/kernel.asm	/^f0106b14:	89 da                	mov    %ebx,%edx$/;"	l
f0106b16	obj/kern/kernel.asm	/^f0106b16:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106b1b	obj/kern/kernel.asm	/^f0106b1b:	e8 0c fe ff ff       	call   f010692c <lapicw>$/;"	l
f0106b20	obj/kern/kernel.asm	/^f0106b20:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f0106b25	obj/kern/kernel.asm	/^f0106b25:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106b2a	obj/kern/kernel.asm	/^f0106b2a:	e8 fd fd ff ff       	call   f010692c <lapicw>$/;"	l
f0106b2f	obj/kern/kernel.asm	/^f0106b2f:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f0106b34	obj/kern/kernel.asm	/^f0106b34:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106b39	obj/kern/kernel.asm	/^f0106b39:	e8 ee fd ff ff       	call   f010692c <lapicw>$/;"	l
f0106b3e	obj/kern/kernel.asm	/^f0106b3e:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f0106b41	obj/kern/kernel.asm	/^f0106b41:	81 ce 00 06 00 00    	or     $0x600,%esi$/;"	l
f0106b47	obj/kern/kernel.asm	/^f0106b47:	89 da                	mov    %ebx,%edx$/;"	l
f0106b49	obj/kern/kernel.asm	/^f0106b49:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106b4e	obj/kern/kernel.asm	/^f0106b4e:	e8 d9 fd ff ff       	call   f010692c <lapicw>$/;"	l
f0106b53	obj/kern/kernel.asm	/^f0106b53:	89 f2                	mov    %esi,%edx$/;"	l
f0106b55	obj/kern/kernel.asm	/^f0106b55:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106b5a	obj/kern/kernel.asm	/^f0106b5a:	e8 cd fd ff ff       	call   f010692c <lapicw>$/;"	l
f0106b5f	obj/kern/kernel.asm	/^f0106b5f:	89 da                	mov    %ebx,%edx$/;"	l
f0106b61	obj/kern/kernel.asm	/^f0106b61:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106b66	obj/kern/kernel.asm	/^f0106b66:	e8 c1 fd ff ff       	call   f010692c <lapicw>$/;"	l
f0106b6b	obj/kern/kernel.asm	/^f0106b6b:	89 f2                	mov    %esi,%edx$/;"	l
f0106b6d	obj/kern/kernel.asm	/^f0106b6d:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106b72	obj/kern/kernel.asm	/^f0106b72:	e8 b5 fd ff ff       	call   f010692c <lapicw>$/;"	l
f0106b77	obj/kern/kernel.asm	/^f0106b77:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106b7a	obj/kern/kernel.asm	/^f0106b7a:	5b                   	pop    %ebx$/;"	l
f0106b7b	obj/kern/kernel.asm	/^f0106b7b:	5e                   	pop    %esi$/;"	l
f0106b7c	obj/kern/kernel.asm	/^f0106b7c:	5d                   	pop    %ebp$/;"	l
f0106b7d	obj/kern/kernel.asm	/^f0106b7d:	c3                   	ret    $/;"	l
f0106b7e	obj/kern/kernel.asm	/^f0106b7e <lapic_ipi>:$/;"	l
f0106b7e	obj/kern/kernel.asm	/^f0106b7e:	55                   	push   %ebp$/;"	l
f0106b7f	obj/kern/kernel.asm	/^f0106b7f:	89 e5                	mov    %esp,%ebp$/;"	l
f0106b81	obj/kern/kernel.asm	/^f0106b81:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106b84	obj/kern/kernel.asm	/^f0106b84:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f0106b8a	obj/kern/kernel.asm	/^f0106b8a:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106b8f	obj/kern/kernel.asm	/^f0106b8f:	e8 98 fd ff ff       	call   f010692c <lapicw>$/;"	l
f0106b94	obj/kern/kernel.asm	/^f0106b94:	8b 15 04 70 24 f0    	mov    0xf0247004,%edx$/;"	l
f0106b9a	obj/kern/kernel.asm	/^f0106b9a:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0106ba0	obj/kern/kernel.asm	/^f0106ba0:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0106ba3	obj/kern/kernel.asm	/^f0106ba3:	75 f5                	jne    f0106b9a <lapic_ipi+0x1c>$/;"	l
f0106ba5	obj/kern/kernel.asm	/^f0106ba5:	5d                   	pop    %ebp$/;"	l
f0106ba6	obj/kern/kernel.asm	/^f0106ba6:	c3                   	ret    $/;"	l
f0106ba7	obj/kern/kernel.asm	/^f0106ba7:	90                   	nop$/;"	l
f0106ba8	obj/kern/kernel.asm	/^f0106ba8 <__spin_initlock>:$/;"	l
f0106ba8	obj/kern/kernel.asm	/^f0106ba8:	55                   	push   %ebp$/;"	l
f0106ba9	obj/kern/kernel.asm	/^f0106ba9:	89 e5                	mov    %esp,%ebp$/;"	l
f0106bab	obj/kern/kernel.asm	/^f0106bab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106bae	obj/kern/kernel.asm	/^f0106bae:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0106bb4	obj/kern/kernel.asm	/^f0106bb4:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106bb7	obj/kern/kernel.asm	/^f0106bb7:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f0106bba	obj/kern/kernel.asm	/^f0106bba:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f0106bc1	obj/kern/kernel.asm	/^f0106bc1:	5d                   	pop    %ebp$/;"	l
f0106bc2	obj/kern/kernel.asm	/^f0106bc2:	c3                   	ret    $/;"	l
f0106bc3	obj/kern/kernel.asm	/^f0106bc3 <spin_lock>:$/;"	l
f0106bc3	obj/kern/kernel.asm	/^f0106bc3:	55                   	push   %ebp$/;"	l
f0106bc4	obj/kern/kernel.asm	/^f0106bc4:	89 e5                	mov    %esp,%ebp$/;"	l
f0106bc6	obj/kern/kernel.asm	/^f0106bc6:	56                   	push   %esi$/;"	l
f0106bc7	obj/kern/kernel.asm	/^f0106bc7:	53                   	push   %ebx$/;"	l
f0106bc8	obj/kern/kernel.asm	/^f0106bc8:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0106bcb	obj/kern/kernel.asm	/^f0106bcb:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106bce	obj/kern/kernel.asm	/^f0106bce:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f0106bd1	obj/kern/kernel.asm	/^f0106bd1:	74 14                	je     f0106be7 <spin_lock+0x24>$/;"	l
f0106bd3	obj/kern/kernel.asm	/^f0106bd3:	8b 73 08             	mov    0x8(%ebx),%esi$/;"	l
f0106bd6	obj/kern/kernel.asm	/^f0106bd6:	e8 69 fd ff ff       	call   f0106944 <cpunum>$/;"	l
f0106bdb	obj/kern/kernel.asm	/^f0106bdb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106bde	obj/kern/kernel.asm	/^f0106bde:	05 20 60 20 f0       	add    $0xf0206020,%eax$/;"	l
f0106be3	obj/kern/kernel.asm	/^f0106be3:	39 c6                	cmp    %eax,%esi$/;"	l
f0106be5	obj/kern/kernel.asm	/^f0106be5:	74 15                	je     f0106bfc <spin_lock+0x39>$/;"	l
f0106be7	obj/kern/kernel.asm	/^f0106be7:	89 da                	mov    %ebx,%edx$/;"	l
f0106be9	obj/kern/kernel.asm	/^f0106be9:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106bee	obj/kern/kernel.asm	/^f0106bee:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f0106bf1	obj/kern/kernel.asm	/^f0106bf1:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
f0106bf6	obj/kern/kernel.asm	/^f0106bf6:	85 c0                	test   %eax,%eax$/;"	l
f0106bf8	obj/kern/kernel.asm	/^f0106bf8:	75 2e                	jne    f0106c28 <spin_lock+0x65>$/;"	l
f0106bfa	obj/kern/kernel.asm	/^f0106bfa:	eb 37                	jmp    f0106c33 <spin_lock+0x70>$/;"	l
f0106bfc	obj/kern/kernel.asm	/^f0106bfc:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0106bff	obj/kern/kernel.asm	/^f0106bff:	e8 40 fd ff ff       	call   f0106944 <cpunum>$/;"	l
f0106c04	obj/kern/kernel.asm	/^f0106c04:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
f0106c08	obj/kern/kernel.asm	/^f0106c08:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106c0c	obj/kern/kernel.asm	/^f0106c0c:	c7 44 24 08 84 8c 10 	movl   $0xf0108c84,0x8(%esp)$/;"	l
f0106c13	obj/kern/kernel.asm	/^f0106c13:	f0 $/;"	l
f0106c14	obj/kern/kernel.asm	/^f0106c14:	c7 44 24 04 41 00 00 	movl   $0x41,0x4(%esp)$/;"	l
f0106c1b	obj/kern/kernel.asm	/^f0106c1b:	00 $/;"	l
f0106c1c	obj/kern/kernel.asm	/^f0106c1c:	c7 04 24 e8 8c 10 f0 	movl   $0xf0108ce8,(%esp)$/;"	l
f0106c23	obj/kern/kernel.asm	/^f0106c23:	e8 18 94 ff ff       	call   f0100040 <_panic>$/;"	l
f0106c28	obj/kern/kernel.asm	/^f0106c28:	f3 90                	pause  $/;"	l
f0106c2a	obj/kern/kernel.asm	/^f0106c2a:	89 c8                	mov    %ecx,%eax$/;"	l
f0106c2c	obj/kern/kernel.asm	/^f0106c2c:	f0 87 02             	lock xchg %eax,(%edx)$/;"	l
f0106c2f	obj/kern/kernel.asm	/^f0106c2f:	85 c0                	test   %eax,%eax$/;"	l
f0106c31	obj/kern/kernel.asm	/^f0106c31:	75 f5                	jne    f0106c28 <spin_lock+0x65>$/;"	l
f0106c33	obj/kern/kernel.asm	/^f0106c33:	e8 0c fd ff ff       	call   f0106944 <cpunum>$/;"	l
f0106c38	obj/kern/kernel.asm	/^f0106c38:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106c3b	obj/kern/kernel.asm	/^f0106c3b:	05 20 60 20 f0       	add    $0xf0206020,%eax$/;"	l
f0106c40	obj/kern/kernel.asm	/^f0106c40:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f0106c43	obj/kern/kernel.asm	/^f0106c43:	8d 4b 0c             	lea    0xc(%ebx),%ecx$/;"	l
f0106c46	obj/kern/kernel.asm	/^f0106c46:	89 e8                	mov    %ebp,%eax$/;"	l
f0106c48	obj/kern/kernel.asm	/^f0106c48:	3d ff ff 7f ef       	cmp    $0xef7fffff,%eax$/;"	l
f0106c4d	obj/kern/kernel.asm	/^f0106c4d:	77 34                	ja     f0106c83 <spin_lock+0xc0>$/;"	l
f0106c4f	obj/kern/kernel.asm	/^f0106c4f:	eb 2b                	jmp    f0106c7c <spin_lock+0xb9>$/;"	l
f0106c51	obj/kern/kernel.asm	/^f0106c51:	81 fa ff ff 7f ef    	cmp    $0xef7fffff,%edx$/;"	l
f0106c57	obj/kern/kernel.asm	/^f0106c57:	76 12                	jbe    f0106c6b <spin_lock+0xa8>$/;"	l
f0106c59	obj/kern/kernel.asm	/^f0106c59:	8b 5a 04             	mov    0x4(%edx),%ebx$/;"	l
f0106c5c	obj/kern/kernel.asm	/^f0106c5c:	89 1c 81             	mov    %ebx,(%ecx,%eax,4)$/;"	l
f0106c5f	obj/kern/kernel.asm	/^f0106c5f:	8b 12                	mov    (%edx),%edx$/;"	l
f0106c61	obj/kern/kernel.asm	/^f0106c61:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106c64	obj/kern/kernel.asm	/^f0106c64:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0106c67	obj/kern/kernel.asm	/^f0106c67:	75 e8                	jne    f0106c51 <spin_lock+0x8e>$/;"	l
f0106c69	obj/kern/kernel.asm	/^f0106c69:	eb 27                	jmp    f0106c92 <spin_lock+0xcf>$/;"	l
f0106c6b	obj/kern/kernel.asm	/^f0106c6b:	c7 04 81 00 00 00 00 	movl   $0x0,(%ecx,%eax,4)$/;"	l
f0106c72	obj/kern/kernel.asm	/^f0106c72:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106c75	obj/kern/kernel.asm	/^f0106c75:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0106c78	obj/kern/kernel.asm	/^f0106c78:	7e f1                	jle    f0106c6b <spin_lock+0xa8>$/;"	l
f0106c7a	obj/kern/kernel.asm	/^f0106c7a:	eb 16                	jmp    f0106c92 <spin_lock+0xcf>$/;"	l
f0106c7c	obj/kern/kernel.asm	/^f0106c7c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106c81	obj/kern/kernel.asm	/^f0106c81:	eb e8                	jmp    f0106c6b <spin_lock+0xa8>$/;"	l
f0106c83	obj/kern/kernel.asm	/^f0106c83:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0106c86	obj/kern/kernel.asm	/^f0106c86:	89 53 0c             	mov    %edx,0xc(%ebx)$/;"	l
f0106c89	obj/kern/kernel.asm	/^f0106c89:	8b 10                	mov    (%eax),%edx$/;"	l
f0106c8b	obj/kern/kernel.asm	/^f0106c8b:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106c90	obj/kern/kernel.asm	/^f0106c90:	eb bf                	jmp    f0106c51 <spin_lock+0x8e>$/;"	l
f0106c92	obj/kern/kernel.asm	/^f0106c92:	83 c4 20             	add    $0x20,%esp$/;"	l
f0106c95	obj/kern/kernel.asm	/^f0106c95:	5b                   	pop    %ebx$/;"	l
f0106c96	obj/kern/kernel.asm	/^f0106c96:	5e                   	pop    %esi$/;"	l
f0106c97	obj/kern/kernel.asm	/^f0106c97:	5d                   	pop    %ebp$/;"	l
f0106c98	obj/kern/kernel.asm	/^f0106c98:	c3                   	ret    $/;"	l
f0106c99	obj/kern/kernel.asm	/^f0106c99 <spin_unlock>:$/;"	l
f0106c99	obj/kern/kernel.asm	/^f0106c99:	55                   	push   %ebp$/;"	l
f0106c9a	obj/kern/kernel.asm	/^f0106c9a:	89 e5                	mov    %esp,%ebp$/;"	l
f0106c9c	obj/kern/kernel.asm	/^f0106c9c:	57                   	push   %edi$/;"	l
f0106c9d	obj/kern/kernel.asm	/^f0106c9d:	56                   	push   %esi$/;"	l
f0106c9e	obj/kern/kernel.asm	/^f0106c9e:	53                   	push   %ebx$/;"	l
f0106c9f	obj/kern/kernel.asm	/^f0106c9f:	83 ec 6c             	sub    $0x6c,%esp$/;"	l
f0106ca2	obj/kern/kernel.asm	/^f0106ca2:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106ca5	obj/kern/kernel.asm	/^f0106ca5:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f0106ca8	obj/kern/kernel.asm	/^f0106ca8:	74 18                	je     f0106cc2 <spin_unlock+0x29>$/;"	l
f0106caa	obj/kern/kernel.asm	/^f0106caa:	8b 73 08             	mov    0x8(%ebx),%esi$/;"	l
f0106cad	obj/kern/kernel.asm	/^f0106cad:	e8 92 fc ff ff       	call   f0106944 <cpunum>$/;"	l
f0106cb2	obj/kern/kernel.asm	/^f0106cb2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106cb5	obj/kern/kernel.asm	/^f0106cb5:	05 20 60 20 f0       	add    $0xf0206020,%eax$/;"	l
f0106cba	obj/kern/kernel.asm	/^f0106cba:	39 c6                	cmp    %eax,%esi$/;"	l
f0106cbc	obj/kern/kernel.asm	/^f0106cbc:	0f 84 d4 00 00 00    	je     f0106d96 <spin_unlock+0xfd>$/;"	l
f0106cc2	obj/kern/kernel.asm	/^f0106cc2:	c7 44 24 08 28 00 00 	movl   $0x28,0x8(%esp)$/;"	l
f0106cc9	obj/kern/kernel.asm	/^f0106cc9:	00 $/;"	l
f0106cca	obj/kern/kernel.asm	/^f0106cca:	8d 43 0c             	lea    0xc(%ebx),%eax$/;"	l
f0106ccd	obj/kern/kernel.asm	/^f0106ccd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106cd1	obj/kern/kernel.asm	/^f0106cd1:	8d 45 c0             	lea    -0x40(%ebp),%eax$/;"	l
f0106cd4	obj/kern/kernel.asm	/^f0106cd4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106cd7	obj/kern/kernel.asm	/^f0106cd7:	e8 1a f6 ff ff       	call   f01062f6 <memmove>$/;"	l
f0106cdc	obj/kern/kernel.asm	/^f0106cdc:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0106cdf	obj/kern/kernel.asm	/^f0106cdf:	0f b6 30             	movzbl (%eax),%esi$/;"	l
f0106ce2	obj/kern/kernel.asm	/^f0106ce2:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0106ce5	obj/kern/kernel.asm	/^f0106ce5:	e8 5a fc ff ff       	call   f0106944 <cpunum>$/;"	l
f0106cea	obj/kern/kernel.asm	/^f0106cea:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0106cee	obj/kern/kernel.asm	/^f0106cee:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0106cf2	obj/kern/kernel.asm	/^f0106cf2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106cf6	obj/kern/kernel.asm	/^f0106cf6:	c7 04 24 b0 8c 10 f0 	movl   $0xf0108cb0,(%esp)$/;"	l
f0106cfd	obj/kern/kernel.asm	/^f0106cfd:	e8 0c d2 ff ff       	call   f0103f0e <cprintf>$/;"	l
f0106d02	obj/kern/kernel.asm	/^f0106d02:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f0106d05	obj/kern/kernel.asm	/^f0106d05:	85 c0                	test   %eax,%eax$/;"	l
f0106d07	obj/kern/kernel.asm	/^f0106d07:	74 71                	je     f0106d7a <spin_unlock+0xe1>$/;"	l
f0106d09	obj/kern/kernel.asm	/^f0106d09:	8d 5d c0             	lea    -0x40(%ebp),%ebx$/;"	l
f0106d0c	obj/kern/kernel.asm	/^f0106d0c:	8d 7d e4             	lea    -0x1c(%ebp),%edi$/;"	l
f0106d0f	obj/kern/kernel.asm	/^f0106d0f:	8d 75 a8             	lea    -0x58(%ebp),%esi$/;"	l
f0106d12	obj/kern/kernel.asm	/^f0106d12:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0106d16	obj/kern/kernel.asm	/^f0106d16:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106d19	obj/kern/kernel.asm	/^f0106d19:	e8 5f ea ff ff       	call   f010577d <debuginfo_eip>$/;"	l
f0106d1e	obj/kern/kernel.asm	/^f0106d1e:	85 c0                	test   %eax,%eax$/;"	l
f0106d20	obj/kern/kernel.asm	/^f0106d20:	78 39                	js     f0106d5b <spin_unlock+0xc2>$/;"	l
f0106d22	obj/kern/kernel.asm	/^f0106d22:	8b 03                	mov    (%ebx),%eax$/;"	l
f0106d24	obj/kern/kernel.asm	/^f0106d24:	89 c2                	mov    %eax,%edx$/;"	l
f0106d26	obj/kern/kernel.asm	/^f0106d26:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f0106d29	obj/kern/kernel.asm	/^f0106d29:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f0106d2d	obj/kern/kernel.asm	/^f0106d2d:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
f0106d30	obj/kern/kernel.asm	/^f0106d30:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0106d34	obj/kern/kernel.asm	/^f0106d34:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
f0106d37	obj/kern/kernel.asm	/^f0106d37:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f0106d3b	obj/kern/kernel.asm	/^f0106d3b:	8b 55 ac             	mov    -0x54(%ebp),%edx$/;"	l
f0106d3e	obj/kern/kernel.asm	/^f0106d3e:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0106d42	obj/kern/kernel.asm	/^f0106d42:	8b 55 a8             	mov    -0x58(%ebp),%edx$/;"	l
f0106d45	obj/kern/kernel.asm	/^f0106d45:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0106d49	obj/kern/kernel.asm	/^f0106d49:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106d4d	obj/kern/kernel.asm	/^f0106d4d:	c7 04 24 f8 8c 10 f0 	movl   $0xf0108cf8,(%esp)$/;"	l
f0106d54	obj/kern/kernel.asm	/^f0106d54:	e8 b5 d1 ff ff       	call   f0103f0e <cprintf>$/;"	l
f0106d59	obj/kern/kernel.asm	/^f0106d59:	eb 12                	jmp    f0106d6d <spin_unlock+0xd4>$/;"	l
f0106d5b	obj/kern/kernel.asm	/^f0106d5b:	8b 03                	mov    (%ebx),%eax$/;"	l
f0106d5d	obj/kern/kernel.asm	/^f0106d5d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106d61	obj/kern/kernel.asm	/^f0106d61:	c7 04 24 0f 8d 10 f0 	movl   $0xf0108d0f,(%esp)$/;"	l
f0106d68	obj/kern/kernel.asm	/^f0106d68:	e8 a1 d1 ff ff       	call   f0103f0e <cprintf>$/;"	l
f0106d6d	obj/kern/kernel.asm	/^f0106d6d:	39 fb                	cmp    %edi,%ebx$/;"	l
f0106d6f	obj/kern/kernel.asm	/^f0106d6f:	74 09                	je     f0106d7a <spin_unlock+0xe1>$/;"	l
f0106d71	obj/kern/kernel.asm	/^f0106d71:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0106d74	obj/kern/kernel.asm	/^f0106d74:	8b 03                	mov    (%ebx),%eax$/;"	l
f0106d76	obj/kern/kernel.asm	/^f0106d76:	85 c0                	test   %eax,%eax$/;"	l
f0106d78	obj/kern/kernel.asm	/^f0106d78:	75 98                	jne    f0106d12 <spin_unlock+0x79>$/;"	l
f0106d7a	obj/kern/kernel.asm	/^f0106d7a:	c7 44 24 08 17 8d 10 	movl   $0xf0108d17,0x8(%esp)$/;"	l
f0106d81	obj/kern/kernel.asm	/^f0106d81:	f0 $/;"	l
f0106d82	obj/kern/kernel.asm	/^f0106d82:	c7 44 24 04 67 00 00 	movl   $0x67,0x4(%esp)$/;"	l
f0106d89	obj/kern/kernel.asm	/^f0106d89:	00 $/;"	l
f0106d8a	obj/kern/kernel.asm	/^f0106d8a:	c7 04 24 e8 8c 10 f0 	movl   $0xf0108ce8,(%esp)$/;"	l
f0106d91	obj/kern/kernel.asm	/^f0106d91:	e8 aa 92 ff ff       	call   f0100040 <_panic>$/;"	l
f0106d96	obj/kern/kernel.asm	/^f0106d96:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)$/;"	l
f0106d9d	obj/kern/kernel.asm	/^f0106d9d:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)$/;"	l
f0106da4	obj/kern/kernel.asm	/^f0106da4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106da9	obj/kern/kernel.asm	/^f0106da9:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f0106dac	obj/kern/kernel.asm	/^f0106dac:	83 c4 6c             	add    $0x6c,%esp$/;"	l
f0106daf	obj/kern/kernel.asm	/^f0106daf:	5b                   	pop    %ebx$/;"	l
f0106db0	obj/kern/kernel.asm	/^f0106db0:	5e                   	pop    %esi$/;"	l
f0106db1	obj/kern/kernel.asm	/^f0106db1:	5f                   	pop    %edi$/;"	l
f0106db2	obj/kern/kernel.asm	/^f0106db2:	5d                   	pop    %ebp$/;"	l
f0106db3	obj/kern/kernel.asm	/^f0106db3:	c3                   	ret    $/;"	l
f0106db4	obj/kern/kernel.asm	/^f0106db4:	66 90                	xchg   %ax,%ax$/;"	l
f0106db6	obj/kern/kernel.asm	/^f0106db6:	66 90                	xchg   %ax,%ax$/;"	l
f0106db8	obj/kern/kernel.asm	/^f0106db8:	66 90                	xchg   %ax,%ax$/;"	l
f0106dba	obj/kern/kernel.asm	/^f0106dba:	66 90                	xchg   %ax,%ax$/;"	l
f0106dbc	obj/kern/kernel.asm	/^f0106dbc:	66 90                	xchg   %ax,%ax$/;"	l
f0106dbe	obj/kern/kernel.asm	/^f0106dbe:	66 90                	xchg   %ax,%ax$/;"	l
f0106dc0	obj/kern/kernel.asm	/^f0106dc0 <__udivdi3>:$/;"	l
f0106dc0	obj/kern/kernel.asm	/^f0106dc0:	55                   	push   %ebp$/;"	l
f0106dc1	obj/kern/kernel.asm	/^f0106dc1:	57                   	push   %edi$/;"	l
f0106dc2	obj/kern/kernel.asm	/^f0106dc2:	56                   	push   %esi$/;"	l
f0106dc3	obj/kern/kernel.asm	/^f0106dc3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106dc6	obj/kern/kernel.asm	/^f0106dc6:	8b 44 24 28          	mov    0x28(%esp),%eax$/;"	l
f0106dca	obj/kern/kernel.asm	/^f0106dca:	8b 7c 24 1c          	mov    0x1c(%esp),%edi$/;"	l
f0106dce	obj/kern/kernel.asm	/^f0106dce:	8b 6c 24 20          	mov    0x20(%esp),%ebp$/;"	l
f0106dd2	obj/kern/kernel.asm	/^f0106dd2:	8b 4c 24 24          	mov    0x24(%esp),%ecx$/;"	l
f0106dd6	obj/kern/kernel.asm	/^f0106dd6:	85 c0                	test   %eax,%eax$/;"	l
f0106dd8	obj/kern/kernel.asm	/^f0106dd8:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106ddc	obj/kern/kernel.asm	/^f0106ddc:	89 ea                	mov    %ebp,%edx$/;"	l
f0106dde	obj/kern/kernel.asm	/^f0106dde:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0106de1	obj/kern/kernel.asm	/^f0106de1:	75 2d                	jne    f0106e10 <__udivdi3+0x50>$/;"	l
f0106de3	obj/kern/kernel.asm	/^f0106de3:	39 e9                	cmp    %ebp,%ecx$/;"	l
f0106de5	obj/kern/kernel.asm	/^f0106de5:	77 61                	ja     f0106e48 <__udivdi3+0x88>$/;"	l
f0106de7	obj/kern/kernel.asm	/^f0106de7:	85 c9                	test   %ecx,%ecx$/;"	l
f0106de9	obj/kern/kernel.asm	/^f0106de9:	89 ce                	mov    %ecx,%esi$/;"	l
f0106deb	obj/kern/kernel.asm	/^f0106deb:	75 0b                	jne    f0106df8 <__udivdi3+0x38>$/;"	l
f0106ded	obj/kern/kernel.asm	/^f0106ded:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106df2	obj/kern/kernel.asm	/^f0106df2:	31 d2                	xor    %edx,%edx$/;"	l
f0106df4	obj/kern/kernel.asm	/^f0106df4:	f7 f1                	div    %ecx$/;"	l
f0106df6	obj/kern/kernel.asm	/^f0106df6:	89 c6                	mov    %eax,%esi$/;"	l
f0106df8	obj/kern/kernel.asm	/^f0106df8:	31 d2                	xor    %edx,%edx$/;"	l
f0106dfa	obj/kern/kernel.asm	/^f0106dfa:	89 e8                	mov    %ebp,%eax$/;"	l
f0106dfc	obj/kern/kernel.asm	/^f0106dfc:	f7 f6                	div    %esi$/;"	l
f0106dfe	obj/kern/kernel.asm	/^f0106dfe:	89 c5                	mov    %eax,%ebp$/;"	l
f0106e00	obj/kern/kernel.asm	/^f0106e00:	89 f8                	mov    %edi,%eax$/;"	l
f0106e02	obj/kern/kernel.asm	/^f0106e02:	f7 f6                	div    %esi$/;"	l
f0106e04	obj/kern/kernel.asm	/^f0106e04:	89 ea                	mov    %ebp,%edx$/;"	l
f0106e06	obj/kern/kernel.asm	/^f0106e06:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0106e09	obj/kern/kernel.asm	/^f0106e09:	5e                   	pop    %esi$/;"	l
f0106e0a	obj/kern/kernel.asm	/^f0106e0a:	5f                   	pop    %edi$/;"	l
f0106e0b	obj/kern/kernel.asm	/^f0106e0b:	5d                   	pop    %ebp$/;"	l
f0106e0c	obj/kern/kernel.asm	/^f0106e0c:	c3                   	ret    $/;"	l
f0106e0d	obj/kern/kernel.asm	/^f0106e0d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106e10	obj/kern/kernel.asm	/^f0106e10:	39 e8                	cmp    %ebp,%eax$/;"	l
f0106e12	obj/kern/kernel.asm	/^f0106e12:	77 24                	ja     f0106e38 <__udivdi3+0x78>$/;"	l
f0106e14	obj/kern/kernel.asm	/^f0106e14:	0f bd e8             	bsr    %eax,%ebp$/;"	l
f0106e17	obj/kern/kernel.asm	/^f0106e17:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f0106e1a	obj/kern/kernel.asm	/^f0106e1a:	75 3c                	jne    f0106e58 <__udivdi3+0x98>$/;"	l
f0106e1c	obj/kern/kernel.asm	/^f0106e1c:	8b 74 24 04          	mov    0x4(%esp),%esi$/;"	l
f0106e20	obj/kern/kernel.asm	/^f0106e20:	39 34 24             	cmp    %esi,(%esp)$/;"	l
f0106e23	obj/kern/kernel.asm	/^f0106e23:	0f 86 9f 00 00 00    	jbe    f0106ec8 <__udivdi3+0x108>$/;"	l
f0106e29	obj/kern/kernel.asm	/^f0106e29:	39 d0                	cmp    %edx,%eax$/;"	l
f0106e2b	obj/kern/kernel.asm	/^f0106e2b:	0f 82 97 00 00 00    	jb     f0106ec8 <__udivdi3+0x108>$/;"	l
f0106e31	obj/kern/kernel.asm	/^f0106e31:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106e38	obj/kern/kernel.asm	/^f0106e38:	31 d2                	xor    %edx,%edx$/;"	l
f0106e3a	obj/kern/kernel.asm	/^f0106e3a:	31 c0                	xor    %eax,%eax$/;"	l
f0106e3c	obj/kern/kernel.asm	/^f0106e3c:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0106e3f	obj/kern/kernel.asm	/^f0106e3f:	5e                   	pop    %esi$/;"	l
f0106e40	obj/kern/kernel.asm	/^f0106e40:	5f                   	pop    %edi$/;"	l
f0106e41	obj/kern/kernel.asm	/^f0106e41:	5d                   	pop    %ebp$/;"	l
f0106e42	obj/kern/kernel.asm	/^f0106e42:	c3                   	ret    $/;"	l
f0106e43	obj/kern/kernel.asm	/^f0106e43:	90                   	nop$/;"	l
f0106e44	obj/kern/kernel.asm	/^f0106e44:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106e48	obj/kern/kernel.asm	/^f0106e48:	89 f8                	mov    %edi,%eax$/;"	l
f0106e4a	obj/kern/kernel.asm	/^f0106e4a:	f7 f1                	div    %ecx$/;"	l
f0106e4c	obj/kern/kernel.asm	/^f0106e4c:	31 d2                	xor    %edx,%edx$/;"	l
f0106e4e	obj/kern/kernel.asm	/^f0106e4e:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0106e51	obj/kern/kernel.asm	/^f0106e51:	5e                   	pop    %esi$/;"	l
f0106e52	obj/kern/kernel.asm	/^f0106e52:	5f                   	pop    %edi$/;"	l
f0106e53	obj/kern/kernel.asm	/^f0106e53:	5d                   	pop    %ebp$/;"	l
f0106e54	obj/kern/kernel.asm	/^f0106e54:	c3                   	ret    $/;"	l
f0106e55	obj/kern/kernel.asm	/^f0106e55:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106e58	obj/kern/kernel.asm	/^f0106e58:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106e5a	obj/kern/kernel.asm	/^f0106e5a:	8b 3c 24             	mov    (%esp),%edi$/;"	l
f0106e5d	obj/kern/kernel.asm	/^f0106e5d:	d3 e0                	shl    %cl,%eax$/;"	d
f0106e5f	obj/kern/kernel.asm	/^f0106e5f:	89 c6                	mov    %eax,%esi$/;"	l
f0106e61	obj/kern/kernel.asm	/^f0106e61:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0106e66	obj/kern/kernel.asm	/^f0106e66:	29 e8                	sub    %ebp,%eax$/;"	l
f0106e68	obj/kern/kernel.asm	/^f0106e68:	89 c1                	mov    %eax,%ecx$/;"	l
f0106e6a	obj/kern/kernel.asm	/^f0106e6a:	d3 ef                	shr    %cl,%edi$/;"	d
f0106e6c	obj/kern/kernel.asm	/^f0106e6c:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106e6e	obj/kern/kernel.asm	/^f0106e6e:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0106e72	obj/kern/kernel.asm	/^f0106e72:	8b 3c 24             	mov    (%esp),%edi$/;"	l
f0106e75	obj/kern/kernel.asm	/^f0106e75:	09 74 24 08          	or     %esi,0x8(%esp)$/;"	l
f0106e79	obj/kern/kernel.asm	/^f0106e79:	89 d6                	mov    %edx,%esi$/;"	l
f0106e7b	obj/kern/kernel.asm	/^f0106e7b:	d3 e7                	shl    %cl,%edi$/;"	d
f0106e7d	obj/kern/kernel.asm	/^f0106e7d:	89 c1                	mov    %eax,%ecx$/;"	l
f0106e7f	obj/kern/kernel.asm	/^f0106e7f:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0106e82	obj/kern/kernel.asm	/^f0106e82:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0106e86	obj/kern/kernel.asm	/^f0106e86:	d3 ee                	shr    %cl,%esi$/;"	d
f0106e88	obj/kern/kernel.asm	/^f0106e88:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106e8a	obj/kern/kernel.asm	/^f0106e8a:	d3 e2                	shl    %cl,%edx$/;"	d
f0106e8c	obj/kern/kernel.asm	/^f0106e8c:	89 c1                	mov    %eax,%ecx$/;"	l
f0106e8e	obj/kern/kernel.asm	/^f0106e8e:	d3 ef                	shr    %cl,%edi$/;"	d
f0106e90	obj/kern/kernel.asm	/^f0106e90:	09 d7                	or     %edx,%edi$/;"	l
f0106e92	obj/kern/kernel.asm	/^f0106e92:	89 f2                	mov    %esi,%edx$/;"	l
f0106e94	obj/kern/kernel.asm	/^f0106e94:	89 f8                	mov    %edi,%eax$/;"	l
f0106e96	obj/kern/kernel.asm	/^f0106e96:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f0106e9a	obj/kern/kernel.asm	/^f0106e9a:	89 d6                	mov    %edx,%esi$/;"	l
f0106e9c	obj/kern/kernel.asm	/^f0106e9c:	89 c7                	mov    %eax,%edi$/;"	l
f0106e9e	obj/kern/kernel.asm	/^f0106e9e:	f7 24 24             	mull   (%esp)$/;"	l
f0106ea1	obj/kern/kernel.asm	/^f0106ea1:	39 d6                	cmp    %edx,%esi$/;"	l
f0106ea3	obj/kern/kernel.asm	/^f0106ea3:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0106ea6	obj/kern/kernel.asm	/^f0106ea6:	72 30                	jb     f0106ed8 <__udivdi3+0x118>$/;"	l
f0106ea8	obj/kern/kernel.asm	/^f0106ea8:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f0106eac	obj/kern/kernel.asm	/^f0106eac:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106eae	obj/kern/kernel.asm	/^f0106eae:	d3 e2                	shl    %cl,%edx$/;"	d
f0106eb0	obj/kern/kernel.asm	/^f0106eb0:	39 c2                	cmp    %eax,%edx$/;"	l
f0106eb2	obj/kern/kernel.asm	/^f0106eb2:	73 05                	jae    f0106eb9 <__udivdi3+0xf9>$/;"	l
f0106eb4	obj/kern/kernel.asm	/^f0106eb4:	3b 34 24             	cmp    (%esp),%esi$/;"	l
f0106eb7	obj/kern/kernel.asm	/^f0106eb7:	74 1f                	je     f0106ed8 <__udivdi3+0x118>$/;"	l
f0106eb9	obj/kern/kernel.asm	/^f0106eb9:	89 f8                	mov    %edi,%eax$/;"	l
f0106ebb	obj/kern/kernel.asm	/^f0106ebb:	31 d2                	xor    %edx,%edx$/;"	l
f0106ebd	obj/kern/kernel.asm	/^f0106ebd:	e9 7a ff ff ff       	jmp    f0106e3c <__udivdi3+0x7c>$/;"	l
f0106ec2	obj/kern/kernel.asm	/^f0106ec2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0106ec8	obj/kern/kernel.asm	/^f0106ec8:	31 d2                	xor    %edx,%edx$/;"	l
f0106eca	obj/kern/kernel.asm	/^f0106eca:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106ecf	obj/kern/kernel.asm	/^f0106ecf:	e9 68 ff ff ff       	jmp    f0106e3c <__udivdi3+0x7c>$/;"	l
f0106ed4	obj/kern/kernel.asm	/^f0106ed4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106ed8	obj/kern/kernel.asm	/^f0106ed8:	8d 47 ff             	lea    -0x1(%edi),%eax$/;"	l
f0106edb	obj/kern/kernel.asm	/^f0106edb:	31 d2                	xor    %edx,%edx$/;"	l
f0106edd	obj/kern/kernel.asm	/^f0106edd:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0106ee0	obj/kern/kernel.asm	/^f0106ee0:	5e                   	pop    %esi$/;"	l
f0106ee1	obj/kern/kernel.asm	/^f0106ee1:	5f                   	pop    %edi$/;"	l
f0106ee2	obj/kern/kernel.asm	/^f0106ee2:	5d                   	pop    %ebp$/;"	l
f0106ee3	obj/kern/kernel.asm	/^f0106ee3:	c3                   	ret    $/;"	l
f0106ee4	obj/kern/kernel.asm	/^f0106ee4:	66 90                	xchg   %ax,%ax$/;"	l
f0106ee6	obj/kern/kernel.asm	/^f0106ee6:	66 90                	xchg   %ax,%ax$/;"	l
f0106ee8	obj/kern/kernel.asm	/^f0106ee8:	66 90                	xchg   %ax,%ax$/;"	l
f0106eea	obj/kern/kernel.asm	/^f0106eea:	66 90                	xchg   %ax,%ax$/;"	l
f0106eec	obj/kern/kernel.asm	/^f0106eec:	66 90                	xchg   %ax,%ax$/;"	l
f0106eee	obj/kern/kernel.asm	/^f0106eee:	66 90                	xchg   %ax,%ax$/;"	l
f0106ef0	obj/kern/kernel.asm	/^f0106ef0 <__umoddi3>:$/;"	l
f0106ef0	obj/kern/kernel.asm	/^f0106ef0:	55                   	push   %ebp$/;"	l
f0106ef1	obj/kern/kernel.asm	/^f0106ef1:	57                   	push   %edi$/;"	l
f0106ef2	obj/kern/kernel.asm	/^f0106ef2:	56                   	push   %esi$/;"	l
f0106ef3	obj/kern/kernel.asm	/^f0106ef3:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0106ef6	obj/kern/kernel.asm	/^f0106ef6:	8b 44 24 28          	mov    0x28(%esp),%eax$/;"	l
f0106efa	obj/kern/kernel.asm	/^f0106efa:	8b 4c 24 24          	mov    0x24(%esp),%ecx$/;"	l
f0106efe	obj/kern/kernel.asm	/^f0106efe:	8b 74 24 2c          	mov    0x2c(%esp),%esi$/;"	l
f0106f02	obj/kern/kernel.asm	/^f0106f02:	89 c7                	mov    %eax,%edi$/;"	l
f0106f04	obj/kern/kernel.asm	/^f0106f04:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106f08	obj/kern/kernel.asm	/^f0106f08:	8b 44 24 30          	mov    0x30(%esp),%eax$/;"	l
f0106f0c	obj/kern/kernel.asm	/^f0106f0c:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
f0106f10	obj/kern/kernel.asm	/^f0106f10:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0106f13	obj/kern/kernel.asm	/^f0106f13:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0106f17	obj/kern/kernel.asm	/^f0106f17:	85 c0                	test   %eax,%eax$/;"	l
f0106f19	obj/kern/kernel.asm	/^f0106f19:	89 c2                	mov    %eax,%edx$/;"	l
f0106f1b	obj/kern/kernel.asm	/^f0106f1b:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0106f1f	obj/kern/kernel.asm	/^f0106f1f:	75 17                	jne    f0106f38 <__umoddi3+0x48>$/;"	l
f0106f21	obj/kern/kernel.asm	/^f0106f21:	39 fe                	cmp    %edi,%esi$/;"	l
f0106f23	obj/kern/kernel.asm	/^f0106f23:	76 4b                	jbe    f0106f70 <__umoddi3+0x80>$/;"	l
f0106f25	obj/kern/kernel.asm	/^f0106f25:	89 c8                	mov    %ecx,%eax$/;"	l
f0106f27	obj/kern/kernel.asm	/^f0106f27:	89 fa                	mov    %edi,%edx$/;"	l
f0106f29	obj/kern/kernel.asm	/^f0106f29:	f7 f6                	div    %esi$/;"	l
f0106f2b	obj/kern/kernel.asm	/^f0106f2b:	89 d0                	mov    %edx,%eax$/;"	l
f0106f2d	obj/kern/kernel.asm	/^f0106f2d:	31 d2                	xor    %edx,%edx$/;"	l
f0106f2f	obj/kern/kernel.asm	/^f0106f2f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0106f32	obj/kern/kernel.asm	/^f0106f32:	5e                   	pop    %esi$/;"	l
f0106f33	obj/kern/kernel.asm	/^f0106f33:	5f                   	pop    %edi$/;"	l
f0106f34	obj/kern/kernel.asm	/^f0106f34:	5d                   	pop    %ebp$/;"	l
f0106f35	obj/kern/kernel.asm	/^f0106f35:	c3                   	ret    $/;"	l
f0106f36	obj/kern/kernel.asm	/^f0106f36:	66 90                	xchg   %ax,%ax$/;"	l
f0106f38	obj/kern/kernel.asm	/^f0106f38:	39 f8                	cmp    %edi,%eax$/;"	l
f0106f3a	obj/kern/kernel.asm	/^f0106f3a:	77 54                	ja     f0106f90 <__umoddi3+0xa0>$/;"	l
f0106f3c	obj/kern/kernel.asm	/^f0106f3c:	0f bd e8             	bsr    %eax,%ebp$/;"	l
f0106f3f	obj/kern/kernel.asm	/^f0106f3f:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f0106f42	obj/kern/kernel.asm	/^f0106f42:	75 5c                	jne    f0106fa0 <__umoddi3+0xb0>$/;"	l
f0106f44	obj/kern/kernel.asm	/^f0106f44:	8b 7c 24 08          	mov    0x8(%esp),%edi$/;"	l
f0106f48	obj/kern/kernel.asm	/^f0106f48:	39 3c 24             	cmp    %edi,(%esp)$/;"	l
f0106f4b	obj/kern/kernel.asm	/^f0106f4b:	0f 87 e7 00 00 00    	ja     f0107038 <__umoddi3+0x148>$/;"	l
f0106f51	obj/kern/kernel.asm	/^f0106f51:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0106f55	obj/kern/kernel.asm	/^f0106f55:	29 f1                	sub    %esi,%ecx$/;"	l
f0106f57	obj/kern/kernel.asm	/^f0106f57:	19 c7                	sbb    %eax,%edi$/;"	l
f0106f59	obj/kern/kernel.asm	/^f0106f59:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0106f5d	obj/kern/kernel.asm	/^f0106f5d:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0106f61	obj/kern/kernel.asm	/^f0106f61:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0106f65	obj/kern/kernel.asm	/^f0106f65:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f0106f69	obj/kern/kernel.asm	/^f0106f69:	83 c4 14             	add    $0x14,%esp$/;"	l
f0106f6c	obj/kern/kernel.asm	/^f0106f6c:	5e                   	pop    %esi$/;"	l
f0106f6d	obj/kern/kernel.asm	/^f0106f6d:	5f                   	pop    %edi$/;"	l
f0106f6e	obj/kern/kernel.asm	/^f0106f6e:	5d                   	pop    %ebp$/;"	l
f0106f6f	obj/kern/kernel.asm	/^f0106f6f:	c3                   	ret    $/;"	l
f0106f70	obj/kern/kernel.asm	/^f0106f70:	85 f6                	test   %esi,%esi$/;"	l
f0106f72	obj/kern/kernel.asm	/^f0106f72:	89 f5                	mov    %esi,%ebp$/;"	l
f0106f74	obj/kern/kernel.asm	/^f0106f74:	75 0b                	jne    f0106f81 <__umoddi3+0x91>$/;"	l
f0106f76	obj/kern/kernel.asm	/^f0106f76:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106f7b	obj/kern/kernel.asm	/^f0106f7b:	31 d2                	xor    %edx,%edx$/;"	l
f0106f7d	obj/kern/kernel.asm	/^f0106f7d:	f7 f6                	div    %esi$/;"	l
f0106f7f	obj/kern/kernel.asm	/^f0106f7f:	89 c5                	mov    %eax,%ebp$/;"	l
f0106f81	obj/kern/kernel.asm	/^f0106f81:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
f0106f85	obj/kern/kernel.asm	/^f0106f85:	31 d2                	xor    %edx,%edx$/;"	l
f0106f87	obj/kern/kernel.asm	/^f0106f87:	f7 f5                	div    %ebp$/;"	l
f0106f89	obj/kern/kernel.asm	/^f0106f89:	89 c8                	mov    %ecx,%eax$/;"	l
f0106f8b	obj/kern/kernel.asm	/^f0106f8b:	f7 f5                	div    %ebp$/;"	l
f0106f8d	obj/kern/kernel.asm	/^f0106f8d:	eb 9c                	jmp    f0106f2b <__umoddi3+0x3b>$/;"	l
f0106f8f	obj/kern/kernel.asm	/^f0106f8f:	90                   	nop$/;"	l
f0106f90	obj/kern/kernel.asm	/^f0106f90:	89 c8                	mov    %ecx,%eax$/;"	l
f0106f92	obj/kern/kernel.asm	/^f0106f92:	89 fa                	mov    %edi,%edx$/;"	l
f0106f94	obj/kern/kernel.asm	/^f0106f94:	83 c4 14             	add    $0x14,%esp$/;"	l
f0106f97	obj/kern/kernel.asm	/^f0106f97:	5e                   	pop    %esi$/;"	l
f0106f98	obj/kern/kernel.asm	/^f0106f98:	5f                   	pop    %edi$/;"	l
f0106f99	obj/kern/kernel.asm	/^f0106f99:	5d                   	pop    %ebp$/;"	l
f0106f9a	obj/kern/kernel.asm	/^f0106f9a:	c3                   	ret    $/;"	l
f0106f9b	obj/kern/kernel.asm	/^f0106f9b:	90                   	nop$/;"	l
f0106f9c	obj/kern/kernel.asm	/^f0106f9c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106fa0	obj/kern/kernel.asm	/^f0106fa0:	8b 04 24             	mov    (%esp),%eax$/;"	l
f0106fa3	obj/kern/kernel.asm	/^f0106fa3:	be 20 00 00 00       	mov    $0x20,%esi$/;"	l
f0106fa8	obj/kern/kernel.asm	/^f0106fa8:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106faa	obj/kern/kernel.asm	/^f0106faa:	29 ee                	sub    %ebp,%esi$/;"	l
f0106fac	obj/kern/kernel.asm	/^f0106fac:	d3 e2                	shl    %cl,%edx$/;"	d
f0106fae	obj/kern/kernel.asm	/^f0106fae:	89 f1                	mov    %esi,%ecx$/;"	l
f0106fb0	obj/kern/kernel.asm	/^f0106fb0:	d3 e8                	shr    %cl,%eax$/;"	d
f0106fb2	obj/kern/kernel.asm	/^f0106fb2:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106fb4	obj/kern/kernel.asm	/^f0106fb4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106fb8	obj/kern/kernel.asm	/^f0106fb8:	8b 04 24             	mov    (%esp),%eax$/;"	l
f0106fbb	obj/kern/kernel.asm	/^f0106fbb:	09 54 24 04          	or     %edx,0x4(%esp)$/;"	l
f0106fbf	obj/kern/kernel.asm	/^f0106fbf:	89 fa                	mov    %edi,%edx$/;"	l
f0106fc1	obj/kern/kernel.asm	/^f0106fc1:	d3 e0                	shl    %cl,%eax$/;"	d
f0106fc3	obj/kern/kernel.asm	/^f0106fc3:	89 f1                	mov    %esi,%ecx$/;"	l
f0106fc5	obj/kern/kernel.asm	/^f0106fc5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0106fc9	obj/kern/kernel.asm	/^f0106fc9:	8b 44 24 10          	mov    0x10(%esp),%eax$/;"	l
f0106fcd	obj/kern/kernel.asm	/^f0106fcd:	d3 ea                	shr    %cl,%edx$/;"	d
f0106fcf	obj/kern/kernel.asm	/^f0106fcf:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106fd1	obj/kern/kernel.asm	/^f0106fd1:	d3 e7                	shl    %cl,%edi$/;"	d
f0106fd3	obj/kern/kernel.asm	/^f0106fd3:	89 f1                	mov    %esi,%ecx$/;"	l
f0106fd5	obj/kern/kernel.asm	/^f0106fd5:	d3 e8                	shr    %cl,%eax$/;"	d
f0106fd7	obj/kern/kernel.asm	/^f0106fd7:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106fd9	obj/kern/kernel.asm	/^f0106fd9:	09 f8                	or     %edi,%eax$/;"	l
f0106fdb	obj/kern/kernel.asm	/^f0106fdb:	8b 7c 24 10          	mov    0x10(%esp),%edi$/;"	l
f0106fdf	obj/kern/kernel.asm	/^f0106fdf:	f7 74 24 04          	divl   0x4(%esp)$/;"	l
f0106fe3	obj/kern/kernel.asm	/^f0106fe3:	d3 e7                	shl    %cl,%edi$/;"	d
f0106fe5	obj/kern/kernel.asm	/^f0106fe5:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0106fe9	obj/kern/kernel.asm	/^f0106fe9:	89 d7                	mov    %edx,%edi$/;"	l
f0106feb	obj/kern/kernel.asm	/^f0106feb:	f7 64 24 08          	mull   0x8(%esp)$/;"	l
f0106fef	obj/kern/kernel.asm	/^f0106fef:	39 d7                	cmp    %edx,%edi$/;"	l
f0106ff1	obj/kern/kernel.asm	/^f0106ff1:	89 c1                	mov    %eax,%ecx$/;"	l
f0106ff3	obj/kern/kernel.asm	/^f0106ff3:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0106ff6	obj/kern/kernel.asm	/^f0106ff6:	72 2c                	jb     f0107024 <__umoddi3+0x134>$/;"	l
f0106ff8	obj/kern/kernel.asm	/^f0106ff8:	39 44 24 0c          	cmp    %eax,0xc(%esp)$/;"	l
f0106ffc	obj/kern/kernel.asm	/^f0106ffc:	72 22                	jb     f0107020 <__umoddi3+0x130>$/;"	l
f0106ffe	obj/kern/kernel.asm	/^f0106ffe:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
f0107002	obj/kern/kernel.asm	/^f0107002:	29 c8                	sub    %ecx,%eax$/;"	l
f0107004	obj/kern/kernel.asm	/^f0107004:	19 d7                	sbb    %edx,%edi$/;"	l
f0107006	obj/kern/kernel.asm	/^f0107006:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107008	obj/kern/kernel.asm	/^f0107008:	89 fa                	mov    %edi,%edx$/;"	l
f010700a	obj/kern/kernel.asm	/^f010700a:	d3 e8                	shr    %cl,%eax$/;"	d
f010700c	obj/kern/kernel.asm	/^f010700c:	89 f1                	mov    %esi,%ecx$/;"	l
f010700e	obj/kern/kernel.asm	/^f010700e:	d3 e2                	shl    %cl,%edx$/;"	d
f0107010	obj/kern/kernel.asm	/^f0107010:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107012	obj/kern/kernel.asm	/^f0107012:	d3 ef                	shr    %cl,%edi$/;"	d
f0107014	obj/kern/kernel.asm	/^f0107014:	09 d0                	or     %edx,%eax$/;"	l
f0107016	obj/kern/kernel.asm	/^f0107016:	89 fa                	mov    %edi,%edx$/;"	l
f0107018	obj/kern/kernel.asm	/^f0107018:	83 c4 14             	add    $0x14,%esp$/;"	l
f010701b	obj/kern/kernel.asm	/^f010701b:	5e                   	pop    %esi$/;"	l
f010701c	obj/kern/kernel.asm	/^f010701c:	5f                   	pop    %edi$/;"	l
f010701d	obj/kern/kernel.asm	/^f010701d:	5d                   	pop    %ebp$/;"	l
f010701e	obj/kern/kernel.asm	/^f010701e:	c3                   	ret    $/;"	l
f010701f	obj/kern/kernel.asm	/^f010701f:	90                   	nop$/;"	l
f0107020	obj/kern/kernel.asm	/^f0107020:	39 d7                	cmp    %edx,%edi$/;"	l
f0107022	obj/kern/kernel.asm	/^f0107022:	75 da                	jne    f0106ffe <__umoddi3+0x10e>$/;"	l
f0107024	obj/kern/kernel.asm	/^f0107024:	8b 14 24             	mov    (%esp),%edx$/;"	l
f0107027	obj/kern/kernel.asm	/^f0107027:	89 c1                	mov    %eax,%ecx$/;"	l
f0107029	obj/kern/kernel.asm	/^f0107029:	2b 4c 24 08          	sub    0x8(%esp),%ecx$/;"	l
f010702d	obj/kern/kernel.asm	/^f010702d:	1b 54 24 04          	sbb    0x4(%esp),%edx$/;"	l
f0107031	obj/kern/kernel.asm	/^f0107031:	eb cb                	jmp    f0106ffe <__umoddi3+0x10e>$/;"	l
f0107033	obj/kern/kernel.asm	/^f0107033:	90                   	nop$/;"	l
f0107034	obj/kern/kernel.asm	/^f0107034:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107038	obj/kern/kernel.asm	/^f0107038:	3b 44 24 0c          	cmp    0xc(%esp),%eax$/;"	l
f010703c	obj/kern/kernel.asm	/^f010703c:	0f 82 0f ff ff ff    	jb     f0106f51 <__umoddi3+0x61>$/;"	l
f0107042	obj/kern/kernel.asm	/^f0107042:	e9 1a ff ff ff       	jmp    f0106f61 <__umoddi3+0x71>$/;"	l
f_direct	inc/fs.h	/^	uint32_t f_direct[NDIRECT];	\/\/ direct blocks$/;"	m	struct:File
f_indirect	inc/fs.h	/^	uint32_t f_indirect;		\/\/ indirect block$/;"	m	struct:File
f_name	inc/fs.h	/^	char f_name[MAXNAMELEN];	\/\/ filename$/;"	m	struct:File
f_pad	inc/fs.h	/^	uint8_t f_pad[256 - MAXNAMELEN - 8 - 4*NDIRECT - 4];$/;"	m	struct:File
f_size	inc/fs.h	/^	off_t f_size;			\/\/ file size in bytes$/;"	m	struct:File
f_type	inc/fs.h	/^	uint32_t f_type;		\/\/ file type$/;"	m	struct:File
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon4
fault_va	obj/kern/kernel.asm	/^	fault_va = rcr2();$/;"	d
fd	lib/fprintf.c	/^	int fd;		\/\/ file descriptor$/;"	m	struct:printbuf	file:
fd	obj/fs/fs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/fs/fs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/badsegment.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/badsegment.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/breakpoint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/breakpoint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/cat.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/cat.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/divzero.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/divzero.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/dumbfork.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/dumbfork.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echo.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echo.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/evilhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/evilhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/fairness.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/fairness.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultalloc.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultalloc.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultallocbad.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultallocbad.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultbadhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultbadhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultdie.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultdie.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultevilhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultevilhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultnostack.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultnostack.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultread.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultread.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultreadkernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultreadkernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultregs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultregs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwrite.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwrite.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwritekernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwritekernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/forktree.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/forktree.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/hello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/hello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/icode.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^	fd = r;$/;"	d
fd	obj/user/idle.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/idle.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/init.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^	fd = r;$/;"	d
fd	obj/user/ls.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/ls.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/lsfd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/lsfd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/num.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/num.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpong.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpong.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpongs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpongs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primes.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primes.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = pfd[0];$/;"	d
fd	obj/user/primespipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sh.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^	fd = r;$/;"	d
fd	obj/user/softint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/softint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = r;$/;"	d
fd	obj/user/spin.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spin.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/stresssched.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/stresssched.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testbss.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testbss.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfdsharing.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfdsharing.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfile.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfile.asm	/^	fd = (struct Fd*) (0xD0000000 + r*PGSIZE);$/;"	d
fd	obj/user/testfile.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testkbd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testkbd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = r;$/;"	d
fd	obj/user/testshell.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testshell.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testshell.asm	/^	fd = r;$/;"	d
fd	obj/user/yield.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/yield.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd2data	lib/fd.c	/^fd2data(struct Fd *fd)$/;"	f
fd2num	lib/fd.c	/^fd2num(struct Fd *fd)$/;"	f
fd_alloc	lib/fd.c	/^fd_alloc(struct Fd **fd_store)$/;"	f
fd_close	lib/fd.c	/^fd_close(struct Fd *fd, bool must_exist)$/;"	f
fd_dev_id	inc/fd.h	/^	int fd_dev_id;$/;"	m	struct:Fd
fd_file	inc/fd.h	/^		struct FdFile fd_file;$/;"	m	union:Fd::__anon2	typeref:struct:Fd::__anon2::FdFile
fd_lookup	lib/fd.c	/^fd_lookup(int fdnum, struct Fd **fd_store)$/;"	f
fd_offset	inc/fd.h	/^	off_t fd_offset;$/;"	m	struct:Fd
fd_omode	inc/fd.h	/^	int fd_omode;$/;"	m	struct:Fd
fdcopy	obj/user/testfile.asm	/^	fdcopy = *FVA;$/;"	d
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:
file_block_walk	fs/fs.c	/^file_block_walk(struct File *f, uint32_t filebno, uint32_t **ppdiskbno, bool alloc)$/;"	f	file:
file_get_block	fs/fs.c	/^file_get_block(struct File *f, uint32_t filebno, char **blk)$/;"	f
file_open	fs/fs.c	/^file_open(const char *path, struct File **pf)$/;"	f
file_read	fs/fs.c	/^file_read(struct File *f, void *buf, size_t count, off_t offset)$/;"	f
fileid	obj/fs/fs.asm	/^	fileid = r;$/;"	d
fileno	gradelib.py	/^    def fileno(self):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
finishdir	fs/fsformat.c	/^finishdir(struct Dir *d)$/;"	f
finishdisk	fs/fsformat.c	/^finishdisk(void)$/;"	f
finishfile	fs/fsformat.c	/^finishfile(struct File *f, uint32_t start, uint32_t len)$/;"	f
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flag	user/ls.c	/^int flag[256];$/;"	v
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:
flush	inc/fs.h	/^	} flush;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_flush
fork	lib/fork.c	/^fork(void)$/;"	f
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
fprintf	lib/fprintf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f
fs_init	fs/fs.c	/^fs_init(void)$/;"	f
fsenv	obj/fs/fs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/badsegment.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/breakpoint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/cat.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/divzero.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/dumbfork.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echo.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/evilhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/fairness.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultalloc.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultallocbad.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultbadhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultdie.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultevilhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultnostack.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultread.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultreadkernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultregs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwrite.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwritekernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/forktree.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/hello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/icode.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/idle.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/init.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/ls.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/lsfd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/num.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpong.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpongs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primes.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primespipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sh.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/softint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spawnhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spin.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/stresssched.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testbss.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfdsharing.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^	fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testkbd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpteshare.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testshell.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/yield.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fshandler	fs/serv.c	/^typedef int (*fshandler)(envid_t envid, union Fsipc *req);$/;"	t	file:
fsipc	lib/file.c	/^fsipc(unsigned type, void *dstva)$/;"	f	file:
fsipcbuf	lib/file.c	/^union Fsipc fsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Fsipc
fsreq	fs/serv.c	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	v	typeref:union:Fsipc
fstat	lib/fd.c	/^fstat(int fdnum, struct Stat *stat)$/;"	f
ftruncate	lib/fd.c	/^ftruncate(int fdnum, off_t newsize)$/;"	f
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
gen_primes	grade-lab5	/^def gen_primes(n):$/;"	f
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
gettoken	user/sh.c	/^gettoken(char *s, char **p1)$/;"	f
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f
handlers	fs/serv.c	/^fshandler handlers[] = {$/;"	v
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i	obj/user/sh.asm	/^	i = 0;$/;"	d
i	obj/user/testkbd.asm	/^	i = 0;$/;"	d
i	obj/user/testpipe.asm	/^		i = readn(p[0], buf, sizeof buf-1);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
i386_init	init.s	/^i386_init:$/;"	l
i386_init	kern/init.c	/^i386_init(void)$/;"	f
id	inc/fd.h	/^	int id;$/;"	m	struct:FdFile
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
ide_probe_disk1	fs/ide.c	/^ide_probe_disk1(void)$/;"	f
ide_read	fs/ide.c	/^ide_read(uint32_t secno, void *dst, size_t nsecs)$/;"	f
ide_set_disk	fs/ide.c	/^ide_set_disk(int d)$/;"	f
ide_wait_ready	fs/ide.c	/^ide_wait_ready(bool check_error)$/;"	f	file:
ide_write	fs/ide.c	/^ide_write(uint32_t secno, const void *src, size_t nsecs)$/;"	f
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idx	lib/fprintf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:
inb	inc/x86.h	/^inb(int port)$/;"	f
init_stack	lib/spawn.c	/^init_stack(envid_t child, const char **argv, uintptr_t *init_esp)$/;"	f	file:
inl	inc/x86.h	/^inl(int port)$/;"	f
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/fs/fs.asm	/^int $/;"	l
int	obj/fs/fs.asm	/^int$/;"	l
int	obj/kern/kernel.asm	/^int $/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int $/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int $/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int $/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int $/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/cat.asm	/^int $/;"	l
int	obj/user/cat.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int $/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int $/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/echo.asm	/^int $/;"	l
int	obj/user/echo.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int $/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int $/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int $/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int $/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int $/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int $/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int $/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int $/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int $/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int $/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int $/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int $/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int $/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int $/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int $/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/icode.asm	/^int $/;"	l
int	obj/user/icode.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int $/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/init.asm	/^int $/;"	l
int	obj/user/init.asm	/^int$/;"	l
int	obj/user/ls.asm	/^int $/;"	l
int	obj/user/ls.asm	/^int$/;"	l
int	obj/user/lsfd.asm	/^int $/;"	l
int	obj/user/lsfd.asm	/^int$/;"	l
int	obj/user/num.asm	/^int $/;"	l
int	obj/user/num.asm	/^int bol = 1;$/;"	l
int	obj/user/num.asm	/^int line = 0;$/;"	l
int	obj/user/num.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int $/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int $/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int $/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/primespipe.asm	/^int $/;"	l
int	obj/user/primespipe.asm	/^int$/;"	l
int	obj/user/sh.asm	/^int $/;"	l
int	obj/user/sh.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int $/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spawnhello.asm	/^int $/;"	l
int	obj/user/spawnhello.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int $/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int $/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int $/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/testfdsharing.asm	/^int $/;"	l
int	obj/user/testfdsharing.asm	/^int$/;"	l
int	obj/user/testfile.asm	/^int $/;"	l
int	obj/user/testfile.asm	/^int$/;"	l
int	obj/user/testkbd.asm	/^int $/;"	l
int	obj/user/testkbd.asm	/^int$/;"	l
int	obj/user/testpipe.asm	/^int $/;"	l
int	obj/user/testpipe.asm	/^int$/;"	l
int	obj/user/testpiperace.asm	/^int $/;"	l
int	obj/user/testpiperace.asm	/^int$/;"	l
int	obj/user/testpiperace2.asm	/^int $/;"	l
int	obj/user/testpiperace2.asm	/^int$/;"	l
int	obj/user/testpteshare.asm	/^int $/;"	l
int	obj/user/testpteshare.asm	/^int$/;"	l
int	obj/user/testshell.asm	/^int $/;"	l
int	obj/user/testshell.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int $/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/fs/fs.asm	/^int32_t$/;"	l
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/user/badsegment.asm	/^int32_t$/;"	l
int32_t	obj/user/breakpoint.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello2.asm	/^int32_t$/;"	l
int32_t	obj/user/cat.asm	/^int32_t$/;"	l
int32_t	obj/user/divzero.asm	/^int32_t$/;"	l
int32_t	obj/user/dumbfork.asm	/^int32_t$/;"	l
int32_t	obj/user/echo.asm	/^int32_t$/;"	l
int32_t	obj/user/evilhello.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/faultalloc.asm	/^int32_t$/;"	l
int32_t	obj/user/faultallocbad.asm	/^int32_t$/;"	l
int32_t	obj/user/faultbadhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultdie.asm	/^int32_t$/;"	l
int32_t	obj/user/faultevilhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultnostack.asm	/^int32_t$/;"	l
int32_t	obj/user/faultread.asm	/^int32_t$/;"	l
int32_t	obj/user/faultreadkernel.asm	/^int32_t$/;"	l
int32_t	obj/user/faultregs.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwrite.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwritekernel.asm	/^int32_t$/;"	l
int32_t	obj/user/forktree.asm	/^int32_t$/;"	l
int32_t	obj/user/hello.asm	/^int32_t$/;"	l
int32_t	obj/user/icode.asm	/^int32_t$/;"	l
int32_t	obj/user/idle.asm	/^int32_t$/;"	l
int32_t	obj/user/init.asm	/^int32_t$/;"	l
int32_t	obj/user/ls.asm	/^int32_t$/;"	l
int32_t	obj/user/lsfd.asm	/^int32_t$/;"	l
int32_t	obj/user/num.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/primespipe.asm	/^int32_t$/;"	l
int32_t	obj/user/sh.asm	/^int32_t$/;"	l
int32_t	obj/user/softint.asm	/^int32_t$/;"	l
int32_t	obj/user/spawnhello.asm	/^int32_t$/;"	l
int32_t	obj/user/spin.asm	/^int32_t$/;"	l
int32_t	obj/user/stresssched.asm	/^int32_t$/;"	l
int32_t	obj/user/testbss.asm	/^int32_t$/;"	l
int32_t	obj/user/testfdsharing.asm	/^int32_t$/;"	l
int32_t	obj/user/testfile.asm	/^int32_t$/;"	l
int32_t	obj/user/testkbd.asm	/^int32_t$/;"	l
int32_t	obj/user/testpipe.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace2.asm	/^int32_t$/;"	l
int32_t	obj/user/testpteshare.asm	/^int32_t$/;"	l
int32_t	obj/user/testshell.asm	/^int32_t$/;"	l
int32_t	obj/user/yield.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
interactive	obj/user/sh.asm	/^			interactive = 1;$/;"	d
interactive	obj/user/sh.asm	/^		interactive = iscons(0);$/;"	d
interactive	obj/user/sh.asm	/^	interactive = '?';$/;"	d
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
iscons	lib/console.c	/^iscons(int fdnum)$/;"	f
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
kid	obj/user/testpiperace.asm	/^	kid = &envs[ENVX(pid)];$/;"	d
kid	obj/user/testpiperace2.asm	/^	kid = &envs[ENVX(r)];$/;"	d
kill	gradelib.py	/^    def kill(self):$/;"	m	class:GDBClient
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v
lapic	obj/kern/kernel.asm	/^	lapic = mmio_map_region(lapicaddr, 4096);$/;"	d
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:
lapicaddr	obj/kern/kernel.asm	/^		lapicaddr = 0;$/;"	d
lapicaddr	obj/kern/kernel.asm	/^	lapicaddr = conf->lapicaddr;$/;"	d
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/fs/fs.asm	/^		lflag = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/cat.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echo.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/icode.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/init.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/ls.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/lsfd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/num.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primespipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sh.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spawnhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfdsharing.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfile.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testkbd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpteshare.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testshell.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
line	user/num.c	/^int line = 0;$/;"	v
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary, size_t size)$/;"	f	file:
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock
long	obj/fs/fs.asm	/^long$/;"	l
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/cat.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/echo.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/icode.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/init.asm	/^long$/;"	l
long	obj/user/ls.asm	/^long$/;"	l
long	obj/user/lsfd.asm	/^long$/;"	l
long	obj/user/num.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/primespipe.asm	/^long$/;"	l
long	obj/user/sh.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spawnhello.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/testfdsharing.asm	/^long$/;"	l
long	obj/user/testfile.asm	/^long$/;"	l
long	obj/user/testkbd.asm	/^long$/;"	l
long	obj/user/testpipe.asm	/^long$/;"	l
long	obj/user/testpiperace.asm	/^long$/;"	l
long	obj/user/testpiperace2.asm	/^long$/;"	l
long	obj/user/testpteshare.asm	/^long$/;"	l
long	obj/user/testshell.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
ls	user/ls.c	/^ls(const char *path, const char *prefix)$/;"	f
ls1	user/ls.c	/^ls1(const char *prefix, bool isdir, off_t size, const char *name)$/;"	f
lsdir	user/ls.c	/^lsdir(const char *path, const char *prefix)$/;"	f
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
m	obj/fs/fs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/fs/fs.asm	/^		m = n - tot;$/;"	d
m	obj/fs/fs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/badsegment.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/badsegment.asm	/^		m = n - tot;$/;"	d
m	obj/user/badsegment.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/breakpoint.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/breakpoint.asm	/^		m = n - tot;$/;"	d
m	obj/user/breakpoint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/buggyhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello2.asm	/^		m = n - tot;$/;"	d
m	obj/user/buggyhello2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/cat.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/cat.asm	/^		m = n - tot;$/;"	d
m	obj/user/cat.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/divzero.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/divzero.asm	/^		m = n - tot;$/;"	d
m	obj/user/divzero.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/dumbfork.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/dumbfork.asm	/^		m = n - tot;$/;"	d
m	obj/user/dumbfork.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echo.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echo.asm	/^		m = n - tot;$/;"	d
m	obj/user/echo.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/evilhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/evilhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/evilhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/fairness.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/fairness.asm	/^		m = n - tot;$/;"	d
m	obj/user/fairness.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultalloc.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultalloc.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultalloc.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultallocbad.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultallocbad.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultallocbad.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultbadhandler.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultdie.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultdie.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultdie.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultevilhandler.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultnostack.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultnostack.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultnostack.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultread.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultread.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultread.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultreadkernel.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultregs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultregs.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultregs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwrite.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwrite.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultwrite.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwritekernel.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/forktree.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/forktree.asm	/^		m = n - tot;$/;"	d
m	obj/user/forktree.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/hello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/hello.asm	/^		m = n - tot;$/;"	d
m	obj/user/hello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/icode.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/icode.asm	/^		m = n - tot;$/;"	d
m	obj/user/icode.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/idle.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/idle.asm	/^		m = n - tot;$/;"	d
m	obj/user/idle.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/init.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/init.asm	/^		m = n - tot;$/;"	d
m	obj/user/init.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/ls.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/ls.asm	/^		m = n - tot;$/;"	d
m	obj/user/ls.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/lsfd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/lsfd.asm	/^		m = n - tot;$/;"	d
m	obj/user/lsfd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/num.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/num.asm	/^		m = n - tot;$/;"	d
m	obj/user/num.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpong.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpong.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpong.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpongs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpongs.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpongs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primes.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primes.asm	/^		m = n - tot;$/;"	d
m	obj/user/primes.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primespipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primespipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/primespipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sh.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sh.asm	/^		m = n - tot;$/;"	d
m	obj/user/sh.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/softint.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/softint.asm	/^		m = n - tot;$/;"	d
m	obj/user/softint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spawnhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spawnhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/spawnhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spin.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spin.asm	/^		m = n - tot;$/;"	d
m	obj/user/spin.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/stresssched.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/stresssched.asm	/^		m = n - tot;$/;"	d
m	obj/user/stresssched.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testbss.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testbss.asm	/^		m = n - tot;$/;"	d
m	obj/user/testbss.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfdsharing.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfile.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfile.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfile.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testkbd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testkbd.asm	/^		m = n - tot;$/;"	d
m	obj/user/testkbd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpteshare.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpteshare.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpteshare.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testshell.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testshell.asm	/^		m = n - tot;$/;"	d
m	obj/user/testshell.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/yield.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/yield.asm	/^		m = n - tot;$/;"	d
m	obj/user/yield.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
main	fs/fsformat.c	/^main(int argc, char **argv)$/;"	f
make	gradelib.py	/^def make(*target):$/;"	f
map_segment	lib/spawn.c	/^map_segment(envid_t child, uintptr_t va, size_t memsz,$/;"	f	file:
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
matchtest	grade-lab5	/^def matchtest(parent, name, *args, **kw):$/;"	f
max	obj/user/testpiperace.asm	/^	max = 200;$/;"	d
max_priority	obj/kern/kernel.asm	/^			max_priority = envs[now_env].env_priority;$/;"	d
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mm1	obj/kern/kernel.asm	/^	mm1 = (uintptr_t) mmio_map_region(0, 4097);$/;"	d
mm2	obj/kern/kernel.asm	/^	mm2 = (uintptr_t) mmio_map_region(0, 4096);$/;"	d
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_continue	kern/monitor.c	/^mon_continue(int argc,char **argv,struct Trapframe *tf)$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_si	kern/monitor.c	/^mon_si(int argc,char **argv,struct Trapframe *tf)$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f
mp_main	kern/init.c	/^mp_main(void)$/;"	f
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:
msg	user/testfile.c	/^const char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v
msg	user/testpipe.c	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	v
msg	user/testptelibrary.c	/^const char *msg = "hello, world\\n";$/;"	v
msg	user/testpteshare.c	/^const char *msg = "hello, world\\n";$/;"	v
msg1	user/init.c	/^	char msg1[5000];$/;"	m	struct:__anon1	file:
msg2	user/init.c	/^	char msg2[1000];$/;"	m	struct:__anon1	file:
msg2	user/testptelibrary.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
msg2	user/testpteshare.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
n	fs/fsformat.c	/^	int n;$/;"	m	struct:Dir	file:
n	obj/fs/fs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
n	obj/user/badsegment.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/breakpoint.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/buggyhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/buggyhello2.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/cat.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/divzero.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/dumbfork.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echo.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/evilhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/fairness.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultalloc.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultallocbad.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultbadhandler.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultdie.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultevilhandler.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultnostack.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultread.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultreadkernel.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultregs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultwrite.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultwritekernel.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/forktree.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/hello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/icode.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/idle.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/init.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/ls.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/lsfd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/num.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/pingpong.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/pingpongs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/primes.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/primespipe.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/sh.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/softint.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spawnhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spin.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/stresssched.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testbss.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testfdsharing.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testfile.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testkbd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpipe.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace2.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpteshare.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testshell.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/yield.asm	/^		n = thisenv->env_runs;$/;"	d
n1	obj/user/testshell.asm	/^		n1 = read(rfd, &c1, 1);$/;"	d
n2	obj/user/testshell.asm	/^		n2 = read(kfd, &c2, 1);$/;"	d
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
nblock	obj/fs/fs.asm	/^	nblock = dir->f_size \/ BLKSIZE;$/;"	d
nblocks	fs/fsformat.c	/^uint32_t nblocks;$/;"	v
nc	obj/user/sh.asm	/^		nc = _gettoken(s, &np1, &np2);$/;"	d
nc	obj/user/sh.asm	/^	nc = _gettoken(np2, &np1, &np2);$/;"	d
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
newfd	obj/fs/fs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/badsegment.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/breakpoint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/cat.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/divzero.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/dumbfork.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echo.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/evilhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/fairness.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultalloc.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultallocbad.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultbadhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultdie.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultevilhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultnostack.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultread.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultreadkernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultregs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwrite.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwritekernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/forktree.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/hello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/icode.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/idle.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/init.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/ls.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/lsfd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/num.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpong.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpongs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primes.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primespipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sh.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/softint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spawnhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spin.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/stresssched.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testbss.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfdsharing.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfile.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testkbd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpteshare.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testshell.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/yield.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^    nextfree = ROUNDUP(nextfree + n, PGSIZE);$/;"	d
nflag	obj/user/echo.asm	/^		nflag = 1;$/;"	d
nflag	obj/user/echo.asm	/^	nflag = 0;$/;"	d
nloff	obj/user/testshell.asm	/^			nloff = off+1;$/;"	d
nloff	obj/user/testshell.asm	/^	nloff = 0;$/;"	d
nn	obj/fs/fs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/badsegment.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/breakpoint.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/buggyhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/buggyhello2.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/cat.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/divzero.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/dumbfork.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/echo.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/evilhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/fairness.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultalloc.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultallocbad.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultbadhandler.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultdie.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultevilhandler.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultnostack.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultread.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultreadkernel.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultregs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultwrite.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultwritekernel.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/forktree.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/hello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/icode.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/idle.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/init.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/ls.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/lsfd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/num.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/pingpong.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/pingpongs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/primes.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/primespipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/sh.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/softint.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spawnhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spin.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/stresssched.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testbss.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfdsharing.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfile.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testkbd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace2.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpteshare.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testshell.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/yield.asm	/^		nn = thisenv->env_runs;$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
now_env	obj/kern/kernel.asm	/^		now_env = (ENVX(curenv ->env_id) + 1) % NENV;$/;"	d
now_env	obj/kern/kernel.asm	/^		now_env = (ENVX(curenv->env_id) +1) % NENV;$/;"	d
now_env	obj/kern/kernel.asm	/^		now_env = 0 ;$/;"	d
now_env	obj/kern/kernel.asm	/^	    now_env = 0;$/;"	d
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^		npages = (EXTPHYSMEM \/ PGSIZE) + npages_extmem;$/;"	d
npages	obj/kern/kernel.asm	/^		npages = npages_basemem;$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = (nvram_read(NVRAM_BASELO) * 1024) \/ PGSIZE;$/;"	d
npages_extmem	obj/kern/kernel.asm	/^	npages_extmem = (nvram_read(NVRAM_EXTLO) * 1024) \/ PGSIZE;$/;"	d
num	obj/fs/fs.asm	/^				num = -(long long) num;$/;"	d
num	obj/fs/fs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/fs/fs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/fs/fs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/cat.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/cat.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echo.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echo.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/icode.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/icode.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/init.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/init.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/ls.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/ls.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/lsfd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/lsfd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/num.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/num.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primespipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primespipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sh.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sh.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spawnhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spawnhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfdsharing.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfile.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfile.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testkbd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testkbd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpteshare.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpteshare.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testshell.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testshell.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	user/num.c	/^num(int f, const char *s)$/;"	f
number	obj/fs/fs.asm	/^		number:$/;"	l
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/cat.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/echo.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/icode.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/init.asm	/^		number:$/;"	l
number	obj/user/ls.asm	/^		number:$/;"	l
number	obj/user/lsfd.asm	/^		number:$/;"	l
number	obj/user/num.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/primespipe.asm	/^		number:$/;"	l
number	obj/user/sh.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spawnhello.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/testfdsharing.asm	/^		number:$/;"	l
number	obj/user/testfile.asm	/^		number:$/;"	l
number	obj/user/testkbd.asm	/^		number:$/;"	l
number	obj/user/testpipe.asm	/^		number:$/;"	l
number	obj/user/testpiperace.asm	/^		number:$/;"	l
number	obj/user/testpiperace2.asm	/^		number:$/;"	l
number	obj/user/testpteshare.asm	/^		number:$/;"	l
number	obj/user/testshell.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
nva	obj/fs/fs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/badsegment.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/breakpoint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/cat.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/divzero.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/dumbfork.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echo.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/evilhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/fairness.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultalloc.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultallocbad.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultbadhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultdie.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultevilhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultnostack.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultread.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultreadkernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultregs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwrite.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwritekernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/forktree.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/hello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/icode.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/idle.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/init.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/ls.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/lsfd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/num.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpong.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpongs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primes.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primespipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/sh.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/softint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spawnhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spin.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/stresssched.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testbss.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfdsharing.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfile.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testkbd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpteshare.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testshell.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/yield.asm	/^	nva = fd2data(newfd);$/;"	d
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
o	obj/fs/fs.asm	/^	o = &opentab[fileid % MAXOPEN];$/;"	d
o_fd	fs/serv.c	/^	struct Fd *o_fd;	\/\/ Fd page$/;"	m	struct:OpenFile	typeref:struct:OpenFile::Fd	file:
o_file	fs/serv.c	/^	struct File *o_file;	\/\/ mapped descriptor for open file$/;"	m	struct:OpenFile	typeref:struct:OpenFile::File	file:
o_fileid	fs/serv.c	/^	uint32_t o_fileid;	\/\/ file id$/;"	m	struct:OpenFile	file:
o_mode	fs/serv.c	/^	int o_mode;		\/\/ open mode$/;"	m	struct:OpenFile	file:
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:
off_t	fs/fsformat.c	/^typedef uint32_t off_t;$/;"	t	file:
off_t	fs/fsformat.c	20;"	d	file:
off_t	fs/fsformat.c	6;"	d	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	71;"	d
open	inc/fs.h	/^	} open;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_open
open	lib/file.c	/^open(const char *path, int mode)$/;"	f
opencons	lib/console.c	/^opencons(void)$/;"	f
opendisk	fs/fsformat.c	/^opendisk(const char *name)$/;"	f
openfile_alloc	fs/serv.c	/^openfile_alloc(struct OpenFile **o)$/;"	f
openfile_lookup	fs/serv.c	/^openfile_lookup(envid_t envid, uint32_t fileid, struct OpenFile **po)$/;"	f
opentab	fs/serv.c	/^struct OpenFile opentab[MAXOPEN] = {$/;"	v	typeref:struct:OpenFile
os	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
ova	obj/fs/fs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/badsegment.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/breakpoint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/cat.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/divzero.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/dumbfork.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echo.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/evilhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/fairness.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultalloc.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultallocbad.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultbadhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultdie.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultevilhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultnostack.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultread.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultreadkernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultregs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwrite.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwritekernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/forktree.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/hello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/icode.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/idle.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/init.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/ls.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/lsfd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/num.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpong.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpongs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primes.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primespipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/sh.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/softint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spawnhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spin.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/stresssched.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testbss.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfdsharing.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfile.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testkbd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpteshare.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testshell.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/yield.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/fs/fs.asm	/^				p = "(null)";$/;"	d
p	obj/fs/fs.asm	/^		p = path;$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^		p = page_alloc(0);$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/badsegment.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/badsegment.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/breakpoint.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^				p = "(null)";$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/dumbfork.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^				p = "(null)";$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/fairness.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultalloc.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultallocbad.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultbadhandler.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultdie.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultevilhandler.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultnostack.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultread.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultreadkernel.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultregs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwrite.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwritekernel.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/hello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^				p = "(null)";$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/init.asm	/^				p = "(null)";$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^				p = "(null)";$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^				p = "(null)";$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/num.asm	/^				p = "(null)";$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpongs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/primespipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^				p = "(null)";$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/stresssched.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testbss.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^				p = "(null)";$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^				p = "(null)";$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_buf	lib/pipe.c	/^	uint8_t p_buf[PIPEBUFSIZ];	\/\/ data buffer$/;"	m	struct:Pipe	file:
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_rpos	lib/pipe.c	/^	off_t p_rpos;		\/\/ read position$/;"	m	struct:Pipe	file:
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
p_wpos	lib/pipe.c	/^	off_t p_wpos;		\/\/ write position$/;"	m	struct:Pipe	file:
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = ROUNDDOWN(pa, PGSIZE);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
padc	obj/fs/fs.asm	/^			padc = '-';$/;"	d
padc	obj/fs/fs.asm	/^			padc = '0';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/cat.asm	/^			padc = '-';$/;"	d
padc	obj/user/cat.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/echo.asm	/^			padc = '-';$/;"	d
padc	obj/user/echo.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/icode.asm	/^			padc = '-';$/;"	d
padc	obj/user/icode.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/init.asm	/^			padc = '-';$/;"	d
padc	obj/user/init.asm	/^			padc = '0';$/;"	d
padc	obj/user/ls.asm	/^			padc = '-';$/;"	d
padc	obj/user/ls.asm	/^			padc = '0';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '-';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '0';$/;"	d
padc	obj/user/num.asm	/^			padc = '-';$/;"	d
padc	obj/user/num.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/sh.asm	/^			padc = '-';$/;"	d
padc	obj/user/sh.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '0';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '-';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '0';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '-';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^		    page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^        page_free_list = page_free_list->pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^    page_free_list = NULL;$/;"	d
page_free_list	obj/kern/kernel.asm	/^    page_free_list = pp;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
pageref	lib/pageref.c	/^pageref(void *v)$/;"	f
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pages	obj/kern/kernel.asm	/^    pages = (struct PageInfo *) boot_alloc(npages * sizeof(struct PageInfo));$/;"	d
panic	fs/fsformat.c	/^panic(const char *fmt, ...)$/;"	f
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
path	obj/fs/fs.asm	/^		path = skip_slash(path);$/;"	d
path	obj/fs/fs.asm	/^	path = skip_slash(path);$/;"	d
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
perm	obj/fs/fs.asm	/^		perm = 0;$/;"	d
perm	obj/user/icode.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/init.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/sh.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/spawnhello.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testpteshare.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testshell.asm	/^		perm = PTE_P | PTE_U;$/;"	d
pg	obj/fs/fs.asm	/^		pg = NULL;$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/kern/kernel.asm	/^	ph = (struct Proghdr *)((uint8_t *)ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/user/icode.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/init.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/sh.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/spawnhello.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testpteshare.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testshell.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:
physaddr_t	fs/fsformat.c	/^typedef uint32_t physaddr_t;$/;"	t	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
physaddr_t	obj/kern/kernel.asm	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	l
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
pid	obj/user/testpiperace.asm	/^	pid = r;$/;"	d
pipe	lib/pipe.c	/^pipe(int pfd[2])$/;"	f
pipe_child	obj/user/sh.asm	/^				pipe_child = r;$/;"	d
pipe_child	obj/user/sh.asm	/^	pipe_child = 0;$/;"	d
pipeisclosed	lib/pipe.c	/^pipeisclosed(int fdnum)$/;"	f
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp	obj/kern/kernel.asm	/^		pp = page_lookup(curenv->env_pgdir,srcva,&pte);$/;"	d
pp	obj/kern/kernel.asm	/^	pp = page_alloc(ALLOC_ZERO);$/;"	d
pp	obj/kern/kernel.asm	/^	pp = page_lookup(srcenv->env_pgdir,srcva,&pte);$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/fs/fs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/fs/fs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/fs/fs.asm	/^		precision = -1;$/;"	d
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/cat.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/cat.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/cat.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/echo.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echo.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echo.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/icode.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/icode.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/icode.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/init.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/init.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/init.asm	/^		precision = -1;$/;"	d
precision	obj/user/ls.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/ls.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/ls.asm	/^		precision = -1;$/;"	d
precision	obj/user/lsfd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/lsfd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/lsfd.asm	/^		precision = -1;$/;"	d
precision	obj/user/num.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/num.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/num.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/primespipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primespipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primespipe.asm	/^		precision = -1;$/;"	d
precision	obj/user/sh.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sh.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sh.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spawnhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spawnhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spawnhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfdsharing.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfdsharing.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfdsharing.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfile.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfile.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfile.asm	/^		precision = -1;$/;"	d
precision	obj/user/testkbd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testkbd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testkbd.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpipe.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpiperace.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpiperace2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace2.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpteshare.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpteshare.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpteshare.asm	/^		precision = -1;$/;"	d
precision	obj/user/testshell.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testshell.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testshell.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
primeproc	user/primes.c	/^primeproc(void)$/;"	f
primeproc	user/primespipe.c	/^primeproc(int fd)$/;"	f
print_function	gradelib.py	/^from __future__ import print_function$/;"	i
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printbuf	lib/fprintf.c	/^struct printbuf {$/;"	s	file:
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printf	lib/fprintf.c	/^printf(const char *fmt, ...)$/;"	f
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/fs/fs.asm	/^		process_precision:$/;"	l
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/cat.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echo.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/icode.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/init.asm	/^		process_precision:$/;"	l
process_precision	obj/user/ls.asm	/^		process_precision:$/;"	l
process_precision	obj/user/lsfd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/num.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primespipe.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sh.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spawnhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfdsharing.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfile.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testkbd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpipe.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpiperace.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpiperace2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpteshare.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testshell.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte	obj/fs/fs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/kern/kernel.asm	/^		pte = pgdir_walk(env->env_pgdir, (void *)va_now, false);$/;"	d
pte	obj/kern/kernel.asm	/^        pte = pgdir_walk(pgdir, (void *)va_now, true);$/;"	d
pte	obj/user/badsegment.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/breakpoint.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/cat.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/divzero.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/dumbfork.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/echo.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/evilhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/fairness.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultalloc.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultallocbad.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultbadhandler.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultdie.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultevilhandler.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultnostack.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultread.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultreadkernel.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultregs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwrite.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwritekernel.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/forktree.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/hello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/icode.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/idle.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/init.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/ls.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/lsfd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/num.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpong.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpongs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/primes.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/primespipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/sh.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/softint.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spawnhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spin.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/stresssched.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testbss.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfdsharing.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfile.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testkbd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpteshare.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testshell.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/yield.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptr	obj/fs/fs.asm	/^		ptr = &f->f_direct[filebno];$/;"	d
ptr	obj/fs/fs.asm	/^		ptr = (uint32_t*)diskaddr(f->f_indirect) + filebno - NDIRECT;$/;"	d
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/fprintf.c	/^putch(int ch, void *thunk)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
quote	gradelib.py	/^    from pipes import quote$/;"	i
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab5	/^r = Runner(save("jos.out"),$/;"	v
r	obj/fs/fs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/fs/fs.asm	/^			r = -E_INVAL;$/;"	d
r	obj/fs/fs.asm	/^			r = 0;$/;"	d
r	obj/fs/fs.asm	/^			r = handlers[req](whom, fsreq);$/;"	d
r	obj/fs/fs.asm	/^			r = serve_open(whom, (struct Fsreq_open*)fsreq, &pg, &perm);$/;"	d
r	obj/fs/fs.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/fs/fs.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/fs/fs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/fs/fs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
r	obj/kern/kernel.asm	/^			r = page_insert(dstenv->env_pgdir,pp,dstenv->env_ipc_dstva,perm);$/;"	d
r	obj/kern/kernel.asm	/^			r = sys_cgetc();$/;"	d
r	obj/kern/kernel.asm	/^			r = sys_env_destroy((envid_t)a1);$/;"	d
r	obj/kern/kernel.asm	/^			r = sys_env_set_pgfault_upcall((envid_t)a1,(void *)a2);$/;"	d
r	obj/kern/kernel.asm	/^			r = sys_env_set_priority((envid_t)a1,(int)a2);$/;"	d
r	obj/kern/kernel.asm	/^			r = sys_env_set_status((envid_t)a1,(int)a2);$/;"	d
r	obj/kern/kernel.asm	/^			r = sys_env_set_trapframe((envid_t)a1,(struct Trapframe *)a2);$/;"	d
r	obj/kern/kernel.asm	/^			r = sys_exofork();$/;"	d
r	obj/kern/kernel.asm	/^			r = sys_getenvid();$/;"	d
r	obj/kern/kernel.asm	/^			r = sys_ipc_recv((void *)a1);$/;"	d
r	obj/kern/kernel.asm	/^			r = sys_ipc_try_send((envid_t)a1,(uint32_t)a2,(void *)a3,(unsigned)a4);$/;"	d
r	obj/kern/kernel.asm	/^			r = sys_page_alloc((envid_t)a1,(void *)a2,(int)a3);$/;"	d
r	obj/kern/kernel.asm	/^			r = sys_page_map((envid_t)a1,(void *)a2,(envid_t)a3,(void *)a4,(int)a5);$/;"	d
r	obj/kern/kernel.asm	/^			r = sys_page_unmap((envid_t)a1,(void *)a2);$/;"	d
r	obj/kern/kernel.asm	/^			r = syscall(tf->tf_regs.reg_eax,tf->tf_regs.reg_edx,tf->tf_regs.reg_ecx,tf->tf_regs.reg_ebx,$/;"	d
r	obj/user/badsegment.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/badsegment.asm	/^			r = 0;$/;"	d
r	obj/user/badsegment.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/badsegment.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/badsegment.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/badsegment.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/breakpoint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/breakpoint.asm	/^			r = 0;$/;"	d
r	obj/user/breakpoint.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/breakpoint.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/breakpoint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/breakpoint.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/buggyhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/buggyhello.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/buggyhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello2.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/buggyhello2.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/buggyhello2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello2.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/cat.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/cat.asm	/^			r = 0;$/;"	d
r	obj/user/cat.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/cat.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/cat.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/cat.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/divzero.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/divzero.asm	/^			r = 0;$/;"	d
r	obj/user/divzero.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/divzero.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/divzero.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/divzero.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/dumbfork.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/dumbfork.asm	/^			r = 0;$/;"	d
r	obj/user/dumbfork.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/dumbfork.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/dumbfork.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/dumbfork.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/echo.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echo.asm	/^			r = 0;$/;"	d
r	obj/user/echo.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/echo.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/echo.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echo.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/evilhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/evilhello.asm	/^			r = 0;$/;"	d
r	obj/user/evilhello.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/evilhello.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/evilhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/evilhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/fairness.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/fairness.asm	/^			r = 0;$/;"	d
r	obj/user/fairness.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/fairness.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/fairness.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/fairness.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultalloc.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultalloc.asm	/^			r = 0;$/;"	d
r	obj/user/faultalloc.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/faultalloc.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultalloc.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultalloc.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = 0;$/;"	d
r	obj/user/faultallocbad.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/faultallocbad.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultallocbad.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultallocbad.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultbadhandler.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/faultbadhandler.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultdie.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultdie.asm	/^			r = 0;$/;"	d
r	obj/user/faultdie.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/faultdie.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultdie.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultdie.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultevilhandler.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/faultevilhandler.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultnostack.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultnostack.asm	/^			r = 0;$/;"	d
r	obj/user/faultnostack.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/faultnostack.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultnostack.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultnostack.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultread.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultread.asm	/^			r = 0;$/;"	d
r	obj/user/faultread.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/faultread.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultread.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultread.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultreadkernel.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/faultreadkernel.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultregs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultregs.asm	/^			r = 0;$/;"	d
r	obj/user/faultregs.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/faultregs.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultregs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultregs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultwrite.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwrite.asm	/^			r = 0;$/;"	d
r	obj/user/faultwrite.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/faultwrite.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultwrite.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwrite.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultwritekernel.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/faultwritekernel.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/forktree.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/forktree.asm	/^			r = 0;$/;"	d
r	obj/user/forktree.asm	/^			r = sys_page_map(0, addr, 0, addr, PTE_COW | PTE_P | PTE_U);$/;"	d
r	obj/user/forktree.asm	/^			r = sys_page_map(0, addr, envid, addr, PTE_COW | PTE_P | PTE_U);$/;"	d
r	obj/user/forktree.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/forktree.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/forktree.asm	/^	        r = sys_page_map(0, addr, envid, addr, PTE_P | PTE_U);$/;"	d
r	obj/user/forktree.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/forktree.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/forktree.asm	/^	r = sys_env_set_pgfault_upcall(childpid, _pgfault_upcall);\/\/set childenv pgfault_handler$/;"	d
r	obj/user/forktree.asm	/^	r = sys_env_set_status(childpid,ENV_RUNNABLE);$/;"	d
r	obj/user/forktree.asm	/^	r = sys_page_alloc(0,(void *)PFTEMP,PTE_W | PTE_U | PTE_P);$/;"	d
r	obj/user/forktree.asm	/^	r = sys_page_alloc(childpid,(void *)(UXSTACKTOP -PGSIZE),PTE_U|PTE_W|PTE_P);\/\/alloc User exception stack$/;"	d
r	obj/user/forktree.asm	/^	r = sys_page_map(0, PFTEMP, 0, addr, PTE_W | PTE_U | PTE_P);                                                       $/;"	d
r	obj/user/hello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/hello.asm	/^			r = 0;$/;"	d
r	obj/user/hello.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/hello.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/hello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/hello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/icode.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/icode.asm	/^			r = 0;$/;"	d
r	obj/user/icode.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/icode.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/icode.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/icode.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/idle.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/idle.asm	/^			r = 0;$/;"	d
r	obj/user/idle.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/idle.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/idle.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/idle.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/init.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/init.asm	/^			r = 0;$/;"	d
r	obj/user/init.asm	/^		r = spawnl("\/sh", "sh", (char*)0);$/;"	d
r	obj/user/init.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/init.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/init.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/init.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/ls.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/ls.asm	/^			r = 0;$/;"	d
r	obj/user/ls.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/ls.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/ls.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/ls.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/lsfd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/lsfd.asm	/^			r = 0;$/;"	d
r	obj/user/lsfd.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/lsfd.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/lsfd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/lsfd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/num.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/num.asm	/^			r = 0;$/;"	d
r	obj/user/num.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/num.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/num.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/num.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpong.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpong.asm	/^			r = 0;$/;"	d
r	obj/user/pingpong.asm	/^			r = sys_page_map(0, addr, 0, addr, PTE_COW | PTE_P | PTE_U);$/;"	d
r	obj/user/pingpong.asm	/^			r = sys_page_map(0, addr, envid, addr, PTE_COW | PTE_P | PTE_U);$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/pingpong.asm	/^	        r = sys_page_map(0, addr, envid, addr, PTE_P | PTE_U);$/;"	d
r	obj/user/pingpong.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpong.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpong.asm	/^	r = sys_env_set_pgfault_upcall(childpid, _pgfault_upcall);\/\/set childenv pgfault_handler$/;"	d
r	obj/user/pingpong.asm	/^	r = sys_env_set_status(childpid,ENV_RUNNABLE);$/;"	d
r	obj/user/pingpong.asm	/^	r = sys_page_alloc(0,(void *)PFTEMP,PTE_W | PTE_U | PTE_P);$/;"	d
r	obj/user/pingpong.asm	/^	r = sys_page_alloc(childpid,(void *)(UXSTACKTOP -PGSIZE),PTE_U|PTE_W|PTE_P);\/\/alloc User exception stack$/;"	d
r	obj/user/pingpong.asm	/^	r = sys_page_map(0, PFTEMP, 0, addr, PTE_W | PTE_U | PTE_P);                                                       $/;"	d
r	obj/user/pingpongs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpongs.asm	/^			r = 0;$/;"	d
r	obj/user/pingpongs.asm	/^			r = sys_page_map(0, addr, 0, addr, PTE_COW | PTE_P | PTE_U);$/;"	d
r	obj/user/pingpongs.asm	/^			r = sys_page_map(0, addr, envid, addr, PTE_COW | PTE_P | PTE_U);$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/pingpongs.asm	/^	        r = sys_page_map(0, addr, envid, addr, PTE_P | PTE_U);$/;"	d
r	obj/user/pingpongs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpongs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpongs.asm	/^	r = sys_env_set_pgfault_upcall(childpid, _pgfault_upcall);\/\/set childenv pgfault_handler$/;"	d
r	obj/user/pingpongs.asm	/^	r = sys_env_set_status(childpid,ENV_RUNNABLE);$/;"	d
r	obj/user/pingpongs.asm	/^	r = sys_page_alloc(0,(void *)PFTEMP,PTE_W | PTE_U | PTE_P);$/;"	d
r	obj/user/pingpongs.asm	/^	r = sys_page_alloc(childpid,(void *)(UXSTACKTOP -PGSIZE),PTE_U|PTE_W|PTE_P);\/\/alloc User exception stack$/;"	d
r	obj/user/pingpongs.asm	/^	r = sys_page_map(0, PFTEMP, 0, addr, PTE_W | PTE_U | PTE_P);                                                       $/;"	d
r	obj/user/primes.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primes.asm	/^			r = 0;$/;"	d
r	obj/user/primes.asm	/^			r = sys_page_map(0, addr, 0, addr, PTE_COW | PTE_P | PTE_U);$/;"	d
r	obj/user/primes.asm	/^			r = sys_page_map(0, addr, envid, addr, PTE_COW | PTE_P | PTE_U);$/;"	d
r	obj/user/primes.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/primes.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/primes.asm	/^	        r = sys_page_map(0, addr, envid, addr, PTE_P | PTE_U);$/;"	d
r	obj/user/primes.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primes.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/primes.asm	/^	r = sys_env_set_pgfault_upcall(childpid, _pgfault_upcall);\/\/set childenv pgfault_handler$/;"	d
r	obj/user/primes.asm	/^	r = sys_env_set_status(childpid,ENV_RUNNABLE);$/;"	d
r	obj/user/primes.asm	/^	r = sys_page_alloc(0,(void *)PFTEMP,PTE_W | PTE_U | PTE_P);$/;"	d
r	obj/user/primes.asm	/^	r = sys_page_alloc(childpid,(void *)(UXSTACKTOP -PGSIZE),PTE_U|PTE_W|PTE_P);\/\/alloc User exception stack$/;"	d
r	obj/user/primes.asm	/^	r = sys_page_map(0, PFTEMP, 0, addr, PTE_W | PTE_U | PTE_P);                                                       $/;"	d
r	obj/user/primespipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primespipe.asm	/^			r = 0;$/;"	d
r	obj/user/primespipe.asm	/^			r = sys_page_map(0, addr, 0, addr, PTE_COW | PTE_P | PTE_U);$/;"	d
r	obj/user/primespipe.asm	/^			r = sys_page_map(0, addr, envid, addr, PTE_COW | PTE_P | PTE_U);$/;"	d
r	obj/user/primespipe.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/primespipe.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/primespipe.asm	/^	        r = sys_page_map(0, addr, envid, addr, PTE_P | PTE_U);$/;"	d
r	obj/user/primespipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primespipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/primespipe.asm	/^	r = sys_env_set_pgfault_upcall(childpid, _pgfault_upcall);\/\/set childenv pgfault_handler$/;"	d
r	obj/user/primespipe.asm	/^	r = sys_env_set_status(childpid,ENV_RUNNABLE);$/;"	d
r	obj/user/primespipe.asm	/^	r = sys_page_alloc(0,(void *)PFTEMP,PTE_W | PTE_U | PTE_P);$/;"	d
r	obj/user/primespipe.asm	/^	r = sys_page_alloc(childpid,(void *)(UXSTACKTOP -PGSIZE),PTE_U|PTE_W|PTE_P);\/\/alloc User exception stack$/;"	d
r	obj/user/primespipe.asm	/^	r = sys_page_map(0, PFTEMP, 0, addr, PTE_W | PTE_U | PTE_P);                                                       $/;"	d
r	obj/user/sh.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sh.asm	/^			r = 0;$/;"	d
r	obj/user/sh.asm	/^			r = sys_page_map(0, addr, 0, addr, PTE_COW | PTE_P | PTE_U);$/;"	d
r	obj/user/sh.asm	/^			r = sys_page_map(0, addr, envid, addr, PTE_COW | PTE_P | PTE_U);$/;"	d
r	obj/user/sh.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/sh.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/sh.asm	/^	        r = sys_page_map(0, addr, envid, addr, PTE_P | PTE_U);$/;"	d
r	obj/user/sh.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sh.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/sh.asm	/^	r = sys_env_set_pgfault_upcall(childpid, _pgfault_upcall);\/\/set childenv pgfault_handler$/;"	d
r	obj/user/sh.asm	/^	r = sys_env_set_status(childpid,ENV_RUNNABLE);$/;"	d
r	obj/user/sh.asm	/^	r = sys_page_alloc(0,(void *)PFTEMP,PTE_W | PTE_U | PTE_P);$/;"	d
r	obj/user/sh.asm	/^	r = sys_page_alloc(childpid,(void *)(UXSTACKTOP -PGSIZE),PTE_U|PTE_W|PTE_P);\/\/alloc User exception stack$/;"	d
r	obj/user/sh.asm	/^	r = sys_page_map(0, PFTEMP, 0, addr, PTE_W | PTE_U | PTE_P);                                                       $/;"	d
r	obj/user/softint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/softint.asm	/^			r = 0;$/;"	d
r	obj/user/softint.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/softint.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/softint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/softint.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spawnhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spawnhello.asm	/^			r = 0;$/;"	d
r	obj/user/spawnhello.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/spawnhello.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/spawnhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spawnhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spin.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spin.asm	/^			r = 0;$/;"	d
r	obj/user/spin.asm	/^			r = sys_page_map(0, addr, 0, addr, PTE_COW | PTE_P | PTE_U);$/;"	d
r	obj/user/spin.asm	/^			r = sys_page_map(0, addr, envid, addr, PTE_COW | PTE_P | PTE_U);$/;"	d
r	obj/user/spin.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/spin.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/spin.asm	/^	        r = sys_page_map(0, addr, envid, addr, PTE_P | PTE_U);$/;"	d
r	obj/user/spin.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spin.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spin.asm	/^	r = sys_env_set_pgfault_upcall(childpid, _pgfault_upcall);\/\/set childenv pgfault_handler$/;"	d
r	obj/user/spin.asm	/^	r = sys_env_set_status(childpid,ENV_RUNNABLE);$/;"	d
r	obj/user/spin.asm	/^	r = sys_page_alloc(0,(void *)PFTEMP,PTE_W | PTE_U | PTE_P);$/;"	d
r	obj/user/spin.asm	/^	r = sys_page_alloc(childpid,(void *)(UXSTACKTOP -PGSIZE),PTE_U|PTE_W|PTE_P);\/\/alloc User exception stack$/;"	d
r	obj/user/spin.asm	/^	r = sys_page_map(0, PFTEMP, 0, addr, PTE_W | PTE_U | PTE_P);                                                       $/;"	d
r	obj/user/stresssched.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/stresssched.asm	/^			r = 0;$/;"	d
r	obj/user/stresssched.asm	/^			r = sys_page_map(0, addr, 0, addr, PTE_COW | PTE_P | PTE_U);$/;"	d
r	obj/user/stresssched.asm	/^			r = sys_page_map(0, addr, envid, addr, PTE_COW | PTE_P | PTE_U);$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/stresssched.asm	/^	        r = sys_page_map(0, addr, envid, addr, PTE_P | PTE_U);$/;"	d
r	obj/user/stresssched.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/stresssched.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/stresssched.asm	/^	r = sys_env_set_pgfault_upcall(childpid, _pgfault_upcall);\/\/set childenv pgfault_handler$/;"	d
r	obj/user/stresssched.asm	/^	r = sys_env_set_status(childpid,ENV_RUNNABLE);$/;"	d
r	obj/user/stresssched.asm	/^	r = sys_page_alloc(0,(void *)PFTEMP,PTE_W | PTE_U | PTE_P);$/;"	d
r	obj/user/stresssched.asm	/^	r = sys_page_alloc(childpid,(void *)(UXSTACKTOP -PGSIZE),PTE_U|PTE_W|PTE_P);\/\/alloc User exception stack$/;"	d
r	obj/user/stresssched.asm	/^	r = sys_page_map(0, PFTEMP, 0, addr, PTE_W | PTE_U | PTE_P);                                                       $/;"	d
r	obj/user/testbss.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testbss.asm	/^			r = 0;$/;"	d
r	obj/user/testbss.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/testbss.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testbss.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testbss.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = 0;$/;"	d
r	obj/user/testfdsharing.asm	/^			r = sys_page_map(0, addr, 0, addr, PTE_COW | PTE_P | PTE_U);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = sys_page_map(0, addr, envid, addr, PTE_COW | PTE_P | PTE_U);$/;"	d
r	obj/user/testfdsharing.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/testfdsharing.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testfdsharing.asm	/^	        r = sys_page_map(0, addr, envid, addr, PTE_P | PTE_U);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = sys_env_set_pgfault_upcall(childpid, _pgfault_upcall);\/\/set childenv pgfault_handler$/;"	d
r	obj/user/testfdsharing.asm	/^	r = sys_env_set_status(childpid,ENV_RUNNABLE);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = sys_page_alloc(0,(void *)PFTEMP,PTE_W | PTE_U | PTE_P);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = sys_page_alloc(childpid,(void *)(UXSTACKTOP -PGSIZE),PTE_U|PTE_W|PTE_P);\/\/alloc User exception stack$/;"	d
r	obj/user/testfdsharing.asm	/^	r = sys_page_map(0, PFTEMP, 0, addr, PTE_W | PTE_U | PTE_P);                                                       $/;"	d
r	obj/user/testfile.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfile.asm	/^			r = 0;$/;"	d
r	obj/user/testfile.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/testfile.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testfile.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfile.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testkbd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testkbd.asm	/^			r = 0;$/;"	d
r	obj/user/testkbd.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/testkbd.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testkbd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testkbd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpipe.asm	/^			r = 0;$/;"	d
r	obj/user/testpipe.asm	/^			r = sys_page_map(0, addr, 0, addr, PTE_COW | PTE_P | PTE_U);$/;"	d
r	obj/user/testpipe.asm	/^			r = sys_page_map(0, addr, envid, addr, PTE_COW | PTE_P | PTE_U);$/;"	d
r	obj/user/testpipe.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/testpipe.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testpipe.asm	/^	        r = sys_page_map(0, addr, envid, addr, PTE_P | PTE_U);$/;"	d
r	obj/user/testpipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpipe.asm	/^	r = sys_env_set_pgfault_upcall(childpid, _pgfault_upcall);\/\/set childenv pgfault_handler$/;"	d
r	obj/user/testpipe.asm	/^	r = sys_env_set_status(childpid,ENV_RUNNABLE);$/;"	d
r	obj/user/testpipe.asm	/^	r = sys_page_alloc(0,(void *)PFTEMP,PTE_W | PTE_U | PTE_P);$/;"	d
r	obj/user/testpipe.asm	/^	r = sys_page_alloc(childpid,(void *)(UXSTACKTOP -PGSIZE),PTE_U|PTE_W|PTE_P);\/\/alloc User exception stack$/;"	d
r	obj/user/testpipe.asm	/^	r = sys_page_map(0, PFTEMP, 0, addr, PTE_W | PTE_U | PTE_P);                                                       $/;"	d
r	obj/user/testpiperace.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace.asm	/^			r = sys_page_map(0, addr, 0, addr, PTE_COW | PTE_P | PTE_U);$/;"	d
r	obj/user/testpiperace.asm	/^			r = sys_page_map(0, addr, envid, addr, PTE_COW | PTE_P | PTE_U);$/;"	d
r	obj/user/testpiperace.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/testpiperace.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testpiperace.asm	/^	        r = sys_page_map(0, addr, envid, addr, PTE_P | PTE_U);$/;"	d
r	obj/user/testpiperace.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace.asm	/^	r = sys_env_set_pgfault_upcall(childpid, _pgfault_upcall);\/\/set childenv pgfault_handler$/;"	d
r	obj/user/testpiperace.asm	/^	r = sys_env_set_status(childpid,ENV_RUNNABLE);$/;"	d
r	obj/user/testpiperace.asm	/^	r = sys_page_alloc(0,(void *)PFTEMP,PTE_W | PTE_U | PTE_P);$/;"	d
r	obj/user/testpiperace.asm	/^	r = sys_page_alloc(childpid,(void *)(UXSTACKTOP -PGSIZE),PTE_U|PTE_W|PTE_P);\/\/alloc User exception stack$/;"	d
r	obj/user/testpiperace.asm	/^	r = sys_page_map(0, PFTEMP, 0, addr, PTE_W | PTE_U | PTE_P);                                                       $/;"	d
r	obj/user/testpiperace2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace2.asm	/^			r = sys_page_map(0, addr, 0, addr, PTE_COW | PTE_P | PTE_U);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = sys_page_map(0, addr, envid, addr, PTE_COW | PTE_P | PTE_U);$/;"	d
r	obj/user/testpiperace2.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/testpiperace2.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testpiperace2.asm	/^	        r = sys_page_map(0, addr, envid, addr, PTE_P | PTE_U);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = sys_env_set_pgfault_upcall(childpid, _pgfault_upcall);\/\/set childenv pgfault_handler$/;"	d
r	obj/user/testpiperace2.asm	/^	r = sys_env_set_status(childpid,ENV_RUNNABLE);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = sys_page_alloc(0,(void *)PFTEMP,PTE_W | PTE_U | PTE_P);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = sys_page_alloc(childpid,(void *)(UXSTACKTOP -PGSIZE),PTE_U|PTE_W|PTE_P);\/\/alloc User exception stack$/;"	d
r	obj/user/testpiperace2.asm	/^	r = sys_page_map(0, PFTEMP, 0, addr, PTE_W | PTE_U | PTE_P);                                                       $/;"	d
r	obj/user/testpteshare.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpteshare.asm	/^			r = 0;$/;"	d
r	obj/user/testpteshare.asm	/^			r = sys_page_map(0, addr, 0, addr, PTE_COW | PTE_P | PTE_U);$/;"	d
r	obj/user/testpteshare.asm	/^			r = sys_page_map(0, addr, envid, addr, PTE_COW | PTE_P | PTE_U);$/;"	d
r	obj/user/testpteshare.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/testpteshare.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testpteshare.asm	/^	        r = sys_page_map(0, addr, envid, addr, PTE_P | PTE_U);$/;"	d
r	obj/user/testpteshare.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpteshare.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpteshare.asm	/^	r = sys_env_set_pgfault_upcall(childpid, _pgfault_upcall);\/\/set childenv pgfault_handler$/;"	d
r	obj/user/testpteshare.asm	/^	r = sys_env_set_status(childpid,ENV_RUNNABLE);$/;"	d
r	obj/user/testpteshare.asm	/^	r = sys_page_alloc(0,(void *)PFTEMP,PTE_W | PTE_U | PTE_P);$/;"	d
r	obj/user/testpteshare.asm	/^	r = sys_page_alloc(childpid,(void *)(UXSTACKTOP -PGSIZE),PTE_U|PTE_W|PTE_P);\/\/alloc User exception stack$/;"	d
r	obj/user/testpteshare.asm	/^	r = sys_page_map(0, PFTEMP, 0, addr, PTE_W | PTE_U | PTE_P);                                                       $/;"	d
r	obj/user/testshell.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testshell.asm	/^			r = 0;$/;"	d
r	obj/user/testshell.asm	/^			r = sys_page_map(0, addr, 0, addr, PTE_COW | PTE_P | PTE_U);$/;"	d
r	obj/user/testshell.asm	/^			r = sys_page_map(0, addr, envid, addr, PTE_COW | PTE_P | PTE_U);$/;"	d
r	obj/user/testshell.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/testshell.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testshell.asm	/^	        r = sys_page_map(0, addr, envid, addr, PTE_P | PTE_U);$/;"	d
r	obj/user/testshell.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testshell.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testshell.asm	/^	r = sys_env_set_pgfault_upcall(childpid, _pgfault_upcall);\/\/set childenv pgfault_handler$/;"	d
r	obj/user/testshell.asm	/^	r = sys_env_set_status(childpid,ENV_RUNNABLE);$/;"	d
r	obj/user/testshell.asm	/^	r = sys_page_alloc(0,(void *)PFTEMP,PTE_W | PTE_U | PTE_P);$/;"	d
r	obj/user/testshell.asm	/^	r = sys_page_alloc(childpid,(void *)(UXSTACKTOP -PGSIZE),PTE_U|PTE_W|PTE_P);\/\/alloc User exception stack$/;"	d
r	obj/user/testshell.asm	/^	r = sys_page_map(0, PFTEMP, 0, addr, PTE_W | PTE_U | PTE_P);                                                       $/;"	d
r	obj/user/yield.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/yield.asm	/^			r = 0;$/;"	d
r	obj/user/yield.asm	/^		r = sys_ipc_recv((void *)UTOP);$/;"	d
r	obj/user/yield.asm	/^		r = sys_ipc_recv(pg);$/;"	d
r	obj/user/yield.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/yield.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/fs/fs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/cat.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echo.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/icode.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/init.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/ls.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/lsfd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/num.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primespipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sh.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spawnhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfdsharing.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfile.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testkbd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpteshare.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testshell.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
re	grade-lab1	/^import re$/;"	i
re	grade-lab4	/^import re$/;"	i
re	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
read	inc/fs.h	/^	} read;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_read
read	lib/fd.c	/^read(int fdnum, void *buf, size_t n)$/;"	f
readRet	inc/fs.h	/^	} readRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_read
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readn	fs/fsformat.c	/^readn(int f, void *out, size_t n)$/;"	f
readn	lib/fd.c	/^readn(int fdnum, void *buf, size_t n)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
remove	inc/fs.h	/^	} remove;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_remove
req	obj/fs/fs.asm	/^		req = ipc_recv((int32_t *) &whom, fsreq, &perm);$/;"	d
req_buf	inc/fs.h	/^		char req_buf[PGSIZE - (sizeof(int) + sizeof(size_t))];$/;"	m	struct:Fsipc::Fsreq_write
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_flush
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_read
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_set_size
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_stat
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_write
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_read
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_write
req_omode	inc/fs.h	/^		int req_omode;$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_remove
req_size	inc/fs.h	/^		off_t req_size;$/;"	m	struct:Fsipc::Fsreq_set_size
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
result	lib/fprintf.c	/^	ssize_t result;	\/\/ accumulated results from write$/;"	m	struct:printbuf	file:
result	obj/kern/kernel.asm	/^    result = nextfree;$/;"	d
reswitch	obj/fs/fs.asm	/^	reswitch:$/;"	l
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/cat.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echo.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/icode.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/init.asm	/^	reswitch:$/;"	l
reswitch	obj/user/ls.asm	/^	reswitch:$/;"	l
reswitch	obj/user/lsfd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/num.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primespipe.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sh.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spawnhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfdsharing.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfile.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testkbd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpipe.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpiperace.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpiperace2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpteshare.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testshell.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/fs/fs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/fs/fs.asm	/^	ret = dst;$/;"	d
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/cat.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/cat.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/echo.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echo.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/icode.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/icode.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/init.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/init.asm	/^	ret = dst;$/;"	d
ret	obj/user/ls.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/ls.asm	/^	ret = dst;$/;"	d
ret	obj/user/lsfd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/lsfd.asm	/^	ret = dst;$/;"	d
ret	obj/user/num.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/num.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/primespipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primespipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/sh.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sh.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spawnhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spawnhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfdsharing.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfdsharing.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfile.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfile.asm	/^	ret = dst;$/;"	d
ret	obj/user/testkbd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testkbd.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace2.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpteshare.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpteshare.asm	/^	ret = dst;$/;"	d
ret	obj/user/testshell.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testshell.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
ret_buf	inc/fs.h	/^		char ret_buf[PGSIZE];$/;"	m	struct:Fsipc::Fsret_read
ret_isdir	inc/fs.h	/^		int ret_isdir;$/;"	m	struct:Fsipc::Fsret_stat
ret_name	inc/fs.h	/^		char ret_name[MAXNAMELEN];$/;"	m	struct:Fsipc::Fsret_stat
ret_size	inc/fs.h	/^		off_t ret_size;$/;"	m	struct:Fsipc::Fsret_stat
rfd	obj/user/testshell.asm	/^	rfd = pfds[0];$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon9	file:
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
runcmd	user/sh.c	/^runcmd(char* s)$/;"	f
runit	obj/user/sh.asm	/^runit:$/;"	l
s	obj/fs/fs.asm	/^	s = src;$/;"	d
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/cat.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/echo.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/icode.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/init.asm	/^	s = src;$/;"	d
s	obj/user/ls.asm	/^	s = src;$/;"	d
s	obj/user/lsfd.asm	/^	s = src;$/;"	d
s	obj/user/num.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/primespipe.asm	/^	s = src;$/;"	d
s	obj/user/sh.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spawnhello.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/testfdsharing.asm	/^	s = src;$/;"	d
s	obj/user/testfile.asm	/^	s = src;$/;"	d
s	obj/user/testkbd.asm	/^	s = src;$/;"	d
s	obj/user/testpipe.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace2.asm	/^	s = src;$/;"	d
s	obj/user/testpteshare.asm	/^	s = src;$/;"	d
s	obj/user/testshell.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
s_magic	inc/fs.h	/^	uint32_t s_magic;		\/\/ Magic number: FS_MAGIC$/;"	m	struct:Super
s_nblocks	inc/fs.h	/^	uint32_t s_nblocks;		\/\/ Total number of blocks on disk$/;"	m	struct:Super
s_root	inc/fs.h	/^	struct File s_root;		\/\/ Root directory node$/;"	m	struct:Super	typeref:struct:Super::File
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
seek	lib/fd.c	/^seek(int fdnum, off_t offset)$/;"	f
select	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
sep	obj/user/ls.asm	/^			sep = "";$/;"	d
sep	obj/user/ls.asm	/^			sep = "\/";$/;"	d
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
serve	fs/serv.c	/^serve(void)$/;"	f
serve_flush	fs/serv.c	/^serve_flush(envid_t envid, struct Fsreq_flush *req)$/;"	f
serve_init	fs/serv.c	/^serve_init(void)$/;"	f
serve_open	fs/serv.c	/^serve_open(envid_t envid, struct Fsreq_open *req,$/;"	f
serve_read	fs/serv.c	/^serve_read(envid_t envid, union Fsipc *ipc)$/;"	f
serve_stat	fs/serv.c	/^serve_stat(envid_t envid, union Fsipc *ipc)$/;"	f
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
set_size	inc/fs.h	/^	} set_size;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_set_size
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
sfork	lib/fork.c	/^sfork(void)$/;"	f
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
shutil	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/fs/fs.asm	/^size_t$/;"	l
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/cat.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/echo.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/icode.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/init.asm	/^size_t$/;"	l
size_t	obj/user/ls.asm	/^size_t$/;"	l
size_t	obj/user/lsfd.asm	/^size_t$/;"	l
size_t	obj/user/num.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/primespipe.asm	/^size_t$/;"	l
size_t	obj/user/sh.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spawnhello.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/testfdsharing.asm	/^size_t$/;"	l
size_t	obj/user/testfile.asm	/^size_t$/;"	l
size_t	obj/user/testkbd.asm	/^size_t$/;"	l
size_t	obj/user/testpipe.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace2.asm	/^size_t$/;"	l
size_t	obj/user/testpteshare.asm	/^size_t$/;"	l
size_t	obj/user/testshell.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
skip_slash	fs/fs.c	/^skip_slash(const char *p)$/;"	f	file:
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
socket	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
spawn	lib/spawn.c	/^spawn(const char *prog, const char **argv)$/;"	f
spawnl	lib/spawn.c	/^spawnl(const char *prog, const char *arg0, ...)$/;"	f
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	26;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
ssize_t	obj/fs/fs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/badsegment.asm	/^ssize_t$/;"	l
ssize_t	obj/user/breakpoint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/cat.asm	/^ssize_t$/;"	l
ssize_t	obj/user/divzero.asm	/^ssize_t$/;"	l
ssize_t	obj/user/dumbfork.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echo.asm	/^ssize_t$/;"	l
ssize_t	obj/user/evilhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/fairness.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultalloc.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultallocbad.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultbadhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultdie.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultevilhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultnostack.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultread.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultreadkernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultregs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwrite.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwritekernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/forktree.asm	/^ssize_t$/;"	l
ssize_t	obj/user/hello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/icode.asm	/^ssize_t$/;"	l
ssize_t	obj/user/idle.asm	/^ssize_t$/;"	l
ssize_t	obj/user/init.asm	/^ssize_t$/;"	l
ssize_t	obj/user/ls.asm	/^ssize_t$/;"	l
ssize_t	obj/user/lsfd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/num.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpong.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpongs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primes.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primespipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sh.asm	/^ssize_t$/;"	l
ssize_t	obj/user/softint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spawnhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spin.asm	/^ssize_t$/;"	l
ssize_t	obj/user/stresssched.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testbss.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfdsharing.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfile.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testkbd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpteshare.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testshell.asm	/^ssize_t$/;"	l
ssize_t	obj/user/yield.asm	/^ssize_t$/;"	l
st_dev	inc/fd.h	/^	struct Dev *st_dev;$/;"	m	struct:Stat	typeref:struct:Stat::Dev
st_isdir	inc/fd.h	/^	int st_isdir;$/;"	m	struct:Stat
st_name	inc/fd.h	/^	char st_name[MAXNAMELEN];$/;"	m	struct:Stat
st_size	inc/fd.h	/^	off_t st_size;$/;"	m	struct:Stat
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
startdir	fs/fsformat.c	/^startdir(struct File *f, struct Dir *dout)$/;"	f
stat	inc/fs.h	/^	} stat;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_stat
stat	lib/fd.c	/^stat(const char *path, struct Stat *stat)$/;"	f
statRet	inc/fs.h	/^	} statRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_stat
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static __inline uint8_t$/;"	l
static	obj/fs/fs.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static const char*$/;"	l
static	obj/fs/fs.asm	/^static int diskno = 1;$/;"	l
static	obj/fs/fs.asm	/^static int$/;"	l
static	obj/fs/fs.asm	/^static long long$/;"	l
static	obj/fs/fs.asm	/^static ssize_t$/;"	l
static	obj/fs/fs.asm	/^static unsigned long long$/;"	l
static	obj/fs/fs.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void boot_aps(void);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static int$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static ssize_t$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static int$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static ssize_t$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static int$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static int$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/cat.asm	/^static int$/;"	l
static	obj/user/cat.asm	/^static long long$/;"	l
static	obj/user/cat.asm	/^static ssize_t$/;"	l
static	obj/user/cat.asm	/^static unsigned long long$/;"	l
static	obj/user/cat.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static int$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static ssize_t$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static int$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static ssize_t$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/echo.asm	/^static int$/;"	l
static	obj/user/echo.asm	/^static long long$/;"	l
static	obj/user/echo.asm	/^static ssize_t$/;"	l
static	obj/user/echo.asm	/^static unsigned long long$/;"	l
static	obj/user/echo.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static int$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static ssize_t$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static int$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static ssize_t$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static int$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static ssize_t$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static int$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static ssize_t$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static int$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static int$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static ssize_t$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static int$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static int$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static ssize_t$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static int$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static ssize_t$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static int$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static int$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static ssize_t$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static int$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static ssize_t$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static int$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/forktree.asm	/^static int$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static ssize_t$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static int$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static ssize_t$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/icode.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/icode.asm	/^static int$/;"	l
static	obj/user/icode.asm	/^static long long$/;"	l
static	obj/user/icode.asm	/^static ssize_t$/;"	l
static	obj/user/icode.asm	/^static unsigned long long$/;"	l
static	obj/user/icode.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static int$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static ssize_t$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/init.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/init.asm	/^static int$/;"	l
static	obj/user/init.asm	/^static long long$/;"	l
static	obj/user/init.asm	/^static ssize_t$/;"	l
static	obj/user/init.asm	/^static unsigned long long$/;"	l
static	obj/user/init.asm	/^static void$/;"	l
static	obj/user/ls.asm	/^static int$/;"	l
static	obj/user/ls.asm	/^static long long$/;"	l
static	obj/user/ls.asm	/^static ssize_t$/;"	l
static	obj/user/ls.asm	/^static unsigned long long$/;"	l
static	obj/user/ls.asm	/^static void$/;"	l
static	obj/user/lsfd.asm	/^static int$/;"	l
static	obj/user/lsfd.asm	/^static long long$/;"	l
static	obj/user/lsfd.asm	/^static ssize_t$/;"	l
static	obj/user/lsfd.asm	/^static unsigned long long$/;"	l
static	obj/user/lsfd.asm	/^static void$/;"	l
static	obj/user/num.asm	/^static int$/;"	l
static	obj/user/num.asm	/^static long long$/;"	l
static	obj/user/num.asm	/^static ssize_t$/;"	l
static	obj/user/num.asm	/^static unsigned long long$/;"	l
static	obj/user/num.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpong.asm	/^static int$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static ssize_t$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpongs.asm	/^static int$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static ssize_t$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primes.asm	/^static int$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static ssize_t$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/primespipe.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primespipe.asm	/^static int$/;"	l
static	obj/user/primespipe.asm	/^static long long$/;"	l
static	obj/user/primespipe.asm	/^static ssize_t$/;"	l
static	obj/user/primespipe.asm	/^static unsigned long long$/;"	l
static	obj/user/primespipe.asm	/^static void$/;"	l
static	obj/user/sh.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sh.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/sh.asm	/^static int$/;"	l
static	obj/user/sh.asm	/^static long long$/;"	l
static	obj/user/sh.asm	/^static ssize_t$/;"	l
static	obj/user/sh.asm	/^static unsigned long long$/;"	l
static	obj/user/sh.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static int$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static ssize_t$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spawnhello.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spawnhello.asm	/^static int$/;"	l
static	obj/user/spawnhello.asm	/^static long long$/;"	l
static	obj/user/spawnhello.asm	/^static ssize_t$/;"	l
static	obj/user/spawnhello.asm	/^static unsigned long long$/;"	l
static	obj/user/spawnhello.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spin.asm	/^static int$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static ssize_t$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/stresssched.asm	/^static int$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static ssize_t$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static int$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static ssize_t$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline void$/;"	l
static	obj/user/testfdsharing.asm	/^static int$/;"	l
static	obj/user/testfdsharing.asm	/^static long long$/;"	l
static	obj/user/testfdsharing.asm	/^static ssize_t$/;"	l
static	obj/user/testfdsharing.asm	/^static unsigned long long$/;"	l
static	obj/user/testfdsharing.asm	/^static void$/;"	l
static	obj/user/testfile.asm	/^static int$/;"	l
static	obj/user/testfile.asm	/^static long long$/;"	l
static	obj/user/testfile.asm	/^static ssize_t$/;"	l
static	obj/user/testfile.asm	/^static unsigned long long$/;"	l
static	obj/user/testfile.asm	/^static void$/;"	l
static	obj/user/testkbd.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/testkbd.asm	/^static int$/;"	l
static	obj/user/testkbd.asm	/^static long long$/;"	l
static	obj/user/testkbd.asm	/^static ssize_t$/;"	l
static	obj/user/testkbd.asm	/^static unsigned long long$/;"	l
static	obj/user/testkbd.asm	/^static void$/;"	l
static	obj/user/testpipe.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpipe.asm	/^static int$/;"	l
static	obj/user/testpipe.asm	/^static long long$/;"	l
static	obj/user/testpipe.asm	/^static ssize_t$/;"	l
static	obj/user/testpipe.asm	/^static unsigned long long$/;"	l
static	obj/user/testpipe.asm	/^static void$/;"	l
static	obj/user/testpiperace.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace.asm	/^static int$/;"	l
static	obj/user/testpiperace.asm	/^static long long$/;"	l
static	obj/user/testpiperace.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace.asm	/^static void$/;"	l
static	obj/user/testpiperace2.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace2.asm	/^static int$/;"	l
static	obj/user/testpiperace2.asm	/^static long long$/;"	l
static	obj/user/testpiperace2.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace2.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace2.asm	/^static void$/;"	l
static	obj/user/testpteshare.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpteshare.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testpteshare.asm	/^static __inline void$/;"	l
static	obj/user/testpteshare.asm	/^static int$/;"	l
static	obj/user/testpteshare.asm	/^static long long$/;"	l
static	obj/user/testpteshare.asm	/^static ssize_t$/;"	l
static	obj/user/testpteshare.asm	/^static unsigned long long$/;"	l
static	obj/user/testpteshare.asm	/^static void$/;"	l
static	obj/user/testshell.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testshell.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testshell.asm	/^static __inline void$/;"	l
static	obj/user/testshell.asm	/^static int$/;"	l
static	obj/user/testshell.asm	/^static long long$/;"	l
static	obj/user/testshell.asm	/^static ssize_t$/;"	l
static	obj/user/testshell.asm	/^static unsigned long long$/;"	l
static	obj/user/testshell.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static int$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static ssize_t$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
string_size	obj/user/icode.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/init.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/sh.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/spawnhello.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testpteshare.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testshell.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/icode.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/init.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/sh.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/spawnhello.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testpteshare.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testshell.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
subprocess	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sum	user/init.c	/^sum(const char *s, int n)$/;"	f
super	fs/fs.h	/^struct Super *super;		\/\/ superblock$/;"	v	typeref:struct:Super
super	fs/fsformat.c	/^struct Super *super;$/;"	v	typeref:struct:Super
super	obj/fs/fs.asm	/^	super = diskaddr(1);$/;"	d
sys	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_priority	kern/syscall.c	/^sys_env_set_priority(envid_t envid,uint32_t priority)$/;"	f	file:
sys_env_set_priority	lib/syscall.c	/^sys_env_set_priority(envid_t envid,int priority)$/;"	f
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_env_set_trapframe	kern/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f	file:
sys_env_set_trapframe	lib/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
t	obj/user/sh.asm	/^		t = **p2;$/;"	d
t	obj/user/sh.asm	/^		t = *s;$/;"	d
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_backtrace	init.s	/^test_backtrace:$/;"	l
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
test_check_page	grade-lab2	/^def test_check_page():$/;"	f
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f
test_divzero	grade-lab3	/^def test_divzero():$/;"	f
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f
test_faultread	grade-lab3	/^def test_faultread():$/;"	f
test_faultread	grade-lab4	/^def test_faultread():$/;"	f
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f
test_fd_share	grade-lab5	/^def test_fd_share():$/;"	f
test_forktree	grade-lab4	/^def test_forktree():$/;"	f
test_fs	grade-lab5	/^def test_fs():$/;"	f
test_hello	grade-lab3	/^def test_hello():$/;"	f
test_icode	grade-lab5	/^def test_icode():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_jos	grade-lab2	/^def test_jos():$/;"	f
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f
test_primes	grade-lab4	/^def test_primes():$/;"	f
test_primespipe	grade-lab5	/^def test_primespipe():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
test_pte_share	grade-lab5	/^def test_pte_share():$/;"	f
test_softint	grade-lab3	/^def test_softint():$/;"	f
test_spawn	grade-lab5	/^def test_spawn():$/;"	f
test_spin	grade-lab4	/^def test_spin():$/;"	f
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f
test_testbss	grade-lab3	/^def test_testbss():$/;"	f
test_testshell	grade-lab5	/^def test_testshell():$/;"	f
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
thiscpu	kern/cpu.h	38;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/fs/fs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/fs/fs.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/badsegment.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/badsegment.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/cat.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/cat.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/echo.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/echo.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/forktree.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/icode.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/icode.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/init.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/init.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/ls.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/ls.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/lsfd.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/lsfd.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/num.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/num.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/pingpong.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/pingpongs.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/primes.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/primespipe.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primespipe.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primespipe.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/sh.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sh.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sh.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/spawnhello.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spawnhello.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/spin.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/stresssched.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/testfdsharing.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfdsharing.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfdsharing.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/testfile.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfile.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/testkbd.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testkbd.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/testpipe.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpipe.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpipe.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/testpiperace.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/testpiperace2.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace2.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace2.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/testpteshare.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpteshare.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpteshare.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/testshell.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testshell.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testshell.asm	/^	thisenv = 0;$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = 0;$/;"	d
time	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
top	obj/user/primespipe.asm	/^top:$/;"	l
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon4
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	fs/serv.c	/^umain(int argc, char **argv)$/;"	f
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/cat.c	/^umain(int argc, char **argv)$/;"	f
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echo.c	/^umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/icode.c	/^umain(int argc, char **argv)$/;"	f
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f
umain	user/init.c	/^umain(int argc, char **argv)$/;"	f
umain	user/initsh.c	/^umain(int argc, char **argv)$/;"	f
umain	user/ls.c	/^umain(int argc, char **argv)$/;"	f
umain	user/lsfd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/num.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primespipe.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sh.c	/^umain(int argc, char **argv)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawnhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawninit.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testfdsharing.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testfile.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testkbd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testmalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpipe.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpiperace.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpiperace2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpriority_default.c	/^void umain(int argc,char **argv)$/;"	f
umain	user/testpriority_high.c	/^void umain(int argc,char **argv)$/;"	f
umain	user/testpriority_low.c	/^void umain(int argc,char **argv)$/;"	f
umain	user/testpriority_middle.c	/^void umain(int argc,char **argv)$/;"	f
umain	user/testptelibrary.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpteshare.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testshell.c	/^umain(int argc, char **argv)$/;"	f
umain	user/writemotd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f
union	obj/fs/fs.asm	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	l
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
unsigned	obj/user/primespipe.asm	/^unsigned$/;"	l
usage	fs/fsformat.c	/^usage(void)$/;"	f
usage	user/ls.c	/^usage(void)$/;"	f
usage	user/lsfd.c	/^usage(void)$/;"	f
usage	user/sh.c	/^usage(void)$/;"	f
usefprint	obj/user/lsfd.asm	/^			usefprint = 1;$/;"	d
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = va_now;$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
utframe	obj/kern/kernel.asm	/^			utframe = (struct UTrapframe *)((void *)tf->tf_esp -sizeof(struct UTrapframe)-4);$/;"	d
utframe	obj/kern/kernel.asm	/^			utframe = (struct UTrapframe *)(UXSTACKTOP - sizeof(struct UTrapframe));$/;"	d
va	obj/fs/fs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/kern/kernel.asm	/^	va = (void *)ROUNDDOWN((uintptr_t)va,PGSIZE);\/\/ROUNDUP为字节向上对其$/;"	d
va	obj/user/badsegment.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/breakpoint.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/buggyhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/buggyhello2.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/cat.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/divzero.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/dumbfork.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/echo.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/evilhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/fairness.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultalloc.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultallocbad.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultbadhandler.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultdie.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultevilhandler.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultnostack.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultread.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultreadkernel.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultregs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultwrite.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultwritekernel.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/forktree.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/hello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/icode.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/idle.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/init.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/ls.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/lsfd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/num.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/pingpong.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/pingpongs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/primes.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/primespipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/sh.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/softint.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spawnhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spin.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/stresssched.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testbss.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfdsharing.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfile.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testkbd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace.asm	/^	va = 0;$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace2.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpteshare.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testshell.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/yield.asm	/^	va = fd2data(fd0);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:
vfprintf	lib/fprintf.c	/^vfprintf(int fd, const char *fmt, va_list ap)$/;"	f
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/fs/fs.asm	/^void *$/;"	l
void	obj/fs/fs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/fs/fs.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void RR_Priority_sched(void)$/;"	l
void	obj/kern/kernel.asm	/^void RR_sched(void)$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void sched_halt(void);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/cat.asm	/^void *$/;"	l
void	obj/user/cat.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/cat.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/echo.asm	/^void *$/;"	l
void	obj/user/echo.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echo.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/icode.asm	/^void *$/;"	l
void	obj/user/icode.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/icode.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/init.asm	/^void *$/;"	l
void	obj/user/init.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/init.asm	/^void$/;"	l
void	obj/user/ls.asm	/^void *$/;"	l
void	obj/user/ls.asm	/^void ls1(const char*, bool, off_t, const char*);$/;"	l
void	obj/user/ls.asm	/^void lsdir(const char*, const char*);$/;"	l
void	obj/user/ls.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/ls.asm	/^void$/;"	l
void	obj/user/lsfd.asm	/^void *$/;"	l
void	obj/user/lsfd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/lsfd.asm	/^void$/;"	l
void	obj/user/num.asm	/^void *$/;"	l
void	obj/user/num.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/num.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/primespipe.asm	/^void *$/;"	l
void	obj/user/primespipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primespipe.asm	/^void$/;"	l
void	obj/user/sh.asm	/^void *$/;"	l
void	obj/user/sh.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sh.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spawnhello.asm	/^void *$/;"	l
void	obj/user/spawnhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spawnhello.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/testfdsharing.asm	/^void *$/;"	l
void	obj/user/testfdsharing.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfdsharing.asm	/^void$/;"	l
void	obj/user/testfile.asm	/^void *$/;"	l
void	obj/user/testfile.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfile.asm	/^void$/;"	l
void	obj/user/testkbd.asm	/^void *$/;"	l
void	obj/user/testkbd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testkbd.asm	/^void$/;"	l
void	obj/user/testpipe.asm	/^void *$/;"	l
void	obj/user/testpipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpipe.asm	/^void$/;"	l
void	obj/user/testpiperace.asm	/^void *$/;"	l
void	obj/user/testpiperace.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace.asm	/^void$/;"	l
void	obj/user/testpiperace2.asm	/^void *$/;"	l
void	obj/user/testpiperace2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace2.asm	/^void$/;"	l
void	obj/user/testpteshare.asm	/^void *$/;"	l
void	obj/user/testpteshare.asm	/^void childofspawn(void);$/;"	l
void	obj/user/testpteshare.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpteshare.asm	/^void$/;"	l
void	obj/user/testshell.asm	/^void *$/;"	l
void	obj/user/testshell.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testshell.asm	/^void wrong(int, int, int);$/;"	l
void	obj/user/testshell.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
wait	gradelib.py	/^    def wait(self):$/;"	f
wait	lib/wait.c	/^wait(envid_t envid)$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
walk_path	fs/fs.c	/^walk_path(const char *path, struct File **pdir, struct File **pf, char *lastelem)$/;"	f	file:
want	obj/user/init.asm	/^	want = 0xf989e;$/;"	d
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
wfd	obj/user/primespipe.asm	/^	wfd = pfd[1];$/;"	d
wfd	obj/user/testshell.asm	/^	wfd = pfds[1];$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
width	obj/fs/fs.asm	/^				width = 0;$/;"	d
width	obj/fs/fs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/fs/fs.asm	/^		width = -1;$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/cat.asm	/^				width = 0;$/;"	d
width	obj/user/cat.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/cat.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/echo.asm	/^				width = 0;$/;"	d
width	obj/user/echo.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echo.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/icode.asm	/^				width = 0;$/;"	d
width	obj/user/icode.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/icode.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/init.asm	/^				width = 0;$/;"	d
width	obj/user/init.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/init.asm	/^		width = -1;$/;"	d
width	obj/user/ls.asm	/^				width = 0;$/;"	d
width	obj/user/ls.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/ls.asm	/^		width = -1;$/;"	d
width	obj/user/lsfd.asm	/^				width = 0;$/;"	d
width	obj/user/lsfd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/lsfd.asm	/^		width = -1;$/;"	d
width	obj/user/num.asm	/^				width = 0;$/;"	d
width	obj/user/num.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/num.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/primespipe.asm	/^				width = 0;$/;"	d
width	obj/user/primespipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primespipe.asm	/^		width = -1;$/;"	d
width	obj/user/sh.asm	/^				width = 0;$/;"	d
width	obj/user/sh.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sh.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spawnhello.asm	/^				width = 0;$/;"	d
width	obj/user/spawnhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spawnhello.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = 0;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^		width = -1;$/;"	d
width	obj/user/testfile.asm	/^				width = 0;$/;"	d
width	obj/user/testfile.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfile.asm	/^		width = -1;$/;"	d
width	obj/user/testkbd.asm	/^				width = 0;$/;"	d
width	obj/user/testkbd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testkbd.asm	/^		width = -1;$/;"	d
width	obj/user/testpipe.asm	/^				width = 0;$/;"	d
width	obj/user/testpipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpipe.asm	/^		width = -1;$/;"	d
width	obj/user/testpiperace.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace.asm	/^		width = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^		width = -1;$/;"	d
width	obj/user/testpteshare.asm	/^				width = 0;$/;"	d
width	obj/user/testpteshare.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpteshare.asm	/^		width = -1;$/;"	d
width	obj/user/testshell.asm	/^				width = 0;$/;"	d
width	obj/user/testshell.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testshell.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon9	file:
write	inc/fs.h	/^	} write;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_write
write	lib/fd.c	/^write(int fdnum, const void *buf, size_t n)$/;"	f
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
writebuf	lib/fprintf.c	/^writebuf(struct printbuf *b)$/;"	f	file:
writefile	fs/fsformat.c	/^writefile(struct Dir *dir, const char *name)$/;"	f
wrong	user/testshell.c	/^wrong(int rfd, int kfd, int off)$/;"	f
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:
xopen	user/testfile.c	/^xopen(const char *path, int mode)$/;"	f	file:
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
